let Ca,
  Rl,
  Sa,
  Sd,
  Co,
  Ed,
  Am,
  pL,
  hu,
  Fw,
  gL,
  fi,
  Dw,
  Os,
  zw,
  Pne = (async () => {
    (function () {
      const t = document.createElement("link").relList;
      if (t && t.supports && t.supports("modulepreload")) return;
      for (const n of document.querySelectorAll('link[rel="modulepreload"]'))
        r(n);
      new MutationObserver((n) => {
        for (const i of n)
          if (i.type === "childList")
            for (const a of i.addedNodes)
              a.tagName === "LINK" && a.rel === "modulepreload" && r(a);
      }).observe(document, { childList: !0, subtree: !0 });
      function e(n) {
        const i = {};
        return (
          n.integrity && (i.integrity = n.integrity),
          n.referrerPolicy && (i.referrerPolicy = n.referrerPolicy),
          n.crossOrigin === "use-credentials"
            ? (i.credentials = "include")
            : n.crossOrigin === "anonymous"
            ? (i.credentials = "omit")
            : (i.credentials = "same-origin"),
          i
        );
      }
      function r(n) {
        if (n.ep) return;
        n.ep = !0;
        const i = e(n);
        fetch(n.href, i);
      }
    })();
    const mL = "modulepreload",
      vL = function (t) {
        return "/" + t;
      },
      Hw = {},
      yL = function (t, e, r) {
        if (!e || e.length === 0) return t();
        const n = document.getElementsByTagName("link");
        return Promise.all(
          e.map((i) => {
            if (((i = vL(i)), i in Hw)) return;
            Hw[i] = !0;
            const a = i.endsWith(".css"),
              l = a ? '[rel="stylesheet"]' : "";
            if (r)
              for (let p = n.length - 1; p >= 0; p--) {
                const m = n[p];
                if (m.href === i && (!a || m.rel === "stylesheet")) return;
              }
            else if (document.querySelector(`link[href="${i}"]${l}`)) return;
            const u = document.createElement("link");
            if (
              ((u.rel = a ? "stylesheet" : mL),
              a || ((u.as = "script"), (u.crossOrigin = "")),
              (u.href = i),
              document.head.appendChild(u),
              a)
            )
              return new Promise((p, m) => {
                u.addEventListener("load", p),
                  u.addEventListener("error", () =>
                    m(new Error(`Unable to preload CSS for ${i}`))
                  );
              });
          })
        )
          .then(() => t())
          .catch((i) => {
            const a = new Event("vite:preloadError", { cancelable: !0 });
            if (((a.payload = i), window.dispatchEvent(a), !a.defaultPrevented))
              throw i;
          });
      };
    var So =
      typeof globalThis < "u"
        ? globalThis
        : typeof window < "u"
        ? window
        : typeof global < "u"
        ? global
        : typeof self < "u"
        ? self
        : {};
    function ns(t) {
      return t &&
        t.__esModule &&
        Object.prototype.hasOwnProperty.call(t, "default")
        ? t.default
        : t;
    }
    var Uw = { exports: {} };
    (function (t, e) {
      (function (r, n) {
        t.exports = n();
      })(So, function () {
        var r = "__v-click-outside",
          n = typeof window < "u",
          i = typeof navigator < "u",
          a =
            n &&
            ("ontouchstart" in window || (i && navigator.msMaxTouchPoints > 0))
              ? ["touchstart"]
              : ["click"],
          l = function (v) {
            var w = v.event,
              S = v.handler;
            (0, v.middleware)(w) && S(w);
          },
          u = function (v, w) {
            var S = (function (B) {
                var ae = typeof B == "function";
                if (!ae && typeof B != "object")
                  throw new Error(
                    "v-click-outside: Binding value must be a function or an object"
                  );
                return {
                  handler: ae ? B : B.handler,
                  middleware:
                    B.middleware ||
                    function (re) {
                      return re;
                    },
                  events: B.events || a,
                  isActive: B.isActive !== !1,
                  detectIframe: B.detectIframe !== !1,
                  capture: !!B.capture,
                };
              })(w.value),
              M = S.handler,
              D = S.middleware,
              z = S.detectIframe,
              V = S.capture;
            if (S.isActive) {
              if (
                ((v[r] = S.events.map(function (B) {
                  return {
                    event: B,
                    srcTarget: document.documentElement,
                    handler: function (ae) {
                      return (function (re) {
                        var K = re.el,
                          fe = re.event,
                          ye = re.handler,
                          pe = re.middleware,
                          _e =
                            fe.path || (fe.composedPath && fe.composedPath());
                        (_e ? _e.indexOf(K) < 0 : !K.contains(fe.target)) &&
                          l({ event: fe, handler: ye, middleware: pe });
                      })({ el: v, event: ae, handler: M, middleware: D });
                    },
                    capture: V,
                  };
                })),
                z)
              ) {
                var j = {
                  event: "blur",
                  srcTarget: window,
                  handler: function (B) {
                    return (function (ae) {
                      var re = ae.el,
                        K = ae.event,
                        fe = ae.handler,
                        ye = ae.middleware;
                      setTimeout(function () {
                        var pe = document.activeElement;
                        pe &&
                          pe.tagName === "IFRAME" &&
                          !re.contains(pe) &&
                          l({ event: K, handler: fe, middleware: ye });
                      }, 0);
                    })({ el: v, event: B, handler: M, middleware: D });
                  },
                  capture: V,
                };
                v[r] = [].concat(v[r], [j]);
              }
              v[r].forEach(function (B) {
                var ae = B.event,
                  re = B.srcTarget,
                  K = B.handler;
                return setTimeout(function () {
                  v[r] && re.addEventListener(ae, K, V);
                }, 0);
              });
            }
          },
          p = function (v) {
            (v[r] || []).forEach(function (w) {
              return w.srcTarget.removeEventListener(
                w.event,
                w.handler,
                w.capture
              );
            }),
              delete v[r];
          },
          m = n
            ? {
                beforeMount: u,
                updated: function (v, w) {
                  var S = w.value,
                    M = w.oldValue;
                  JSON.stringify(S) !== JSON.stringify(M) &&
                    (p(v), u(v, { value: S }));
                },
                unmounted: p,
              }
            : {};
        return {
          install: function (v) {
            v.directive("click-outside", m);
          },
          directive: m,
        };
      });
    })(Uw);
    var bL = Uw.exports;
    const xL = ns(bL);
    var Ww = {},
      Id = {};
    (Id.byteLength = _L), (Id.toByteArray = CL), (Id.fromByteArray = IL);
    for (
      var is = [],
        pi = [],
        wL = typeof Uint8Array < "u" ? Uint8Array : Array,
        Cm = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
        Nl = 0,
        kL = Cm.length;
      Nl < kL;
      ++Nl
    )
      (is[Nl] = Cm[Nl]), (pi[Cm.charCodeAt(Nl)] = Nl);
    (pi["-".charCodeAt(0)] = 62), (pi["_".charCodeAt(0)] = 63);
    function Xw(t) {
      var e = t.length;
      if (e % 4 > 0)
        throw new Error("Invalid string. Length must be a multiple of 4");
      var r = t.indexOf("=");
      r === -1 && (r = e);
      var n = r === e ? 0 : 4 - (r % 4);
      return [r, n];
    }
    function _L(t) {
      var e = Xw(t),
        r = e[0],
        n = e[1];
      return ((r + n) * 3) / 4 - n;
    }
    function AL(t, e, r) {
      return ((e + r) * 3) / 4 - r;
    }
    function CL(t) {
      var e,
        r = Xw(t),
        n = r[0],
        i = r[1],
        a = new wL(AL(t, n, i)),
        l = 0,
        u = i > 0 ? n - 4 : n,
        p;
      for (p = 0; p < u; p += 4)
        (e =
          (pi[t.charCodeAt(p)] << 18) |
          (pi[t.charCodeAt(p + 1)] << 12) |
          (pi[t.charCodeAt(p + 2)] << 6) |
          pi[t.charCodeAt(p + 3)]),
          (a[l++] = (e >> 16) & 255),
          (a[l++] = (e >> 8) & 255),
          (a[l++] = e & 255);
      return (
        i === 2 &&
          ((e = (pi[t.charCodeAt(p)] << 2) | (pi[t.charCodeAt(p + 1)] >> 4)),
          (a[l++] = e & 255)),
        i === 1 &&
          ((e =
            (pi[t.charCodeAt(p)] << 10) |
            (pi[t.charCodeAt(p + 1)] << 4) |
            (pi[t.charCodeAt(p + 2)] >> 2)),
          (a[l++] = (e >> 8) & 255),
          (a[l++] = e & 255)),
        a
      );
    }
    function SL(t) {
      return (
        is[(t >> 18) & 63] + is[(t >> 12) & 63] + is[(t >> 6) & 63] + is[t & 63]
      );
    }
    function EL(t, e, r) {
      for (var n, i = [], a = e; a < r; a += 3)
        (n =
          ((t[a] << 16) & 16711680) +
          ((t[a + 1] << 8) & 65280) +
          (t[a + 2] & 255)),
          i.push(SL(n));
      return i.join("");
    }
    function IL(t) {
      for (
        var e, r = t.length, n = r % 3, i = [], a = 16383, l = 0, u = r - n;
        l < u;
        l += a
      )
        i.push(EL(t, l, l + a > u ? u : l + a));
      return (
        n === 1
          ? ((e = t[r - 1]), i.push(is[e >> 2] + is[(e << 4) & 63] + "=="))
          : n === 2 &&
            ((e = (t[r - 2] << 8) + t[r - 1]),
            i.push(is[e >> 10] + is[(e >> 4) & 63] + is[(e << 2) & 63] + "=")),
        i.join("")
      );
    }
    var Sm = {};
    (Sm.read = function (t, e, r, n, i) {
      var a,
        l,
        u = i * 8 - n - 1,
        p = (1 << u) - 1,
        m = p >> 1,
        v = -7,
        w = r ? i - 1 : 0,
        S = r ? -1 : 1,
        M = t[e + w];
      for (
        w += S, a = M & ((1 << -v) - 1), M >>= -v, v += u;
        v > 0;
        a = a * 256 + t[e + w], w += S, v -= 8
      );
      for (
        l = a & ((1 << -v) - 1), a >>= -v, v += n;
        v > 0;
        l = l * 256 + t[e + w], w += S, v -= 8
      );
      if (a === 0) a = 1 - m;
      else {
        if (a === p) return l ? NaN : (M ? -1 : 1) * (1 / 0);
        (l = l + Math.pow(2, n)), (a = a - m);
      }
      return (M ? -1 : 1) * l * Math.pow(2, a - n);
    }),
      (Sm.write = function (t, e, r, n, i, a) {
        var l,
          u,
          p,
          m = a * 8 - i - 1,
          v = (1 << m) - 1,
          w = v >> 1,
          S = i === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
          M = n ? 0 : a - 1,
          D = n ? 1 : -1,
          z = e < 0 || (e === 0 && 1 / e < 0) ? 1 : 0;
        for (
          e = Math.abs(e),
            isNaN(e) || e === 1 / 0
              ? ((u = isNaN(e) ? 1 : 0), (l = v))
              : ((l = Math.floor(Math.log(e) / Math.LN2)),
                e * (p = Math.pow(2, -l)) < 1 && (l--, (p *= 2)),
                l + w >= 1 ? (e += S / p) : (e += S * Math.pow(2, 1 - w)),
                e * p >= 2 && (l++, (p /= 2)),
                l + w >= v
                  ? ((u = 0), (l = v))
                  : l + w >= 1
                  ? ((u = (e * p - 1) * Math.pow(2, i)), (l = l + w))
                  : ((u = e * Math.pow(2, w - 1) * Math.pow(2, i)), (l = 0)));
          i >= 8;
          t[r + M] = u & 255, M += D, u /= 256, i -= 8
        );
        for (
          l = (l << i) | u, m += i;
          m > 0;
          t[r + M] = l & 255, M += D, l /= 256, m -= 8
        );
        t[r + M - D] |= z * 128;
      }),
      (function (t) {
        var e = Id,
          r = Sm,
          n =
            typeof Symbol == "function" && typeof Symbol.for == "function"
              ? Symbol.for("nodejs.util.inspect.custom")
              : null;
        (t.Buffer = u), (t.SlowBuffer = B), (t.INSPECT_MAX_BYTES = 50);
        var i = 2147483647;
        (t.kMaxLength = i),
          (u.TYPED_ARRAY_SUPPORT = a()),
          !u.TYPED_ARRAY_SUPPORT &&
            typeof console < "u" &&
            typeof console.error == "function" &&
            console.error(
              "This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."
            );
        function a() {
          try {
            var I = new Uint8Array(1),
              R = {
                foo: function () {
                  return 42;
                },
              };
            return (
              Object.setPrototypeOf(R, Uint8Array.prototype),
              Object.setPrototypeOf(I, R),
              I.foo() === 42
            );
          } catch {
            return !1;
          }
        }
        Object.defineProperty(u.prototype, "parent", {
          enumerable: !0,
          get: function () {
            if (u.isBuffer(this)) return this.buffer;
          },
        }),
          Object.defineProperty(u.prototype, "offset", {
            enumerable: !0,
            get: function () {
              if (u.isBuffer(this)) return this.byteOffset;
            },
          });
        function l(I) {
          if (I > i)
            throw new RangeError(
              'The value "' + I + '" is invalid for option "size"'
            );
          var R = new Uint8Array(I);
          return Object.setPrototypeOf(R, u.prototype), R;
        }
        function u(I, R, q) {
          if (typeof I == "number") {
            if (typeof R == "string")
              throw new TypeError(
                'The "string" argument must be of type string. Received type number'
              );
            return w(I);
          }
          return p(I, R, q);
        }
        u.poolSize = 8192;
        function p(I, R, q) {
          if (typeof I == "string") return S(I, R);
          if (ArrayBuffer.isView(I)) return D(I);
          if (I == null)
            throw new TypeError(
              "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " +
                typeof I
            );
          if (
            W(I, ArrayBuffer) ||
            (I && W(I.buffer, ArrayBuffer)) ||
            (typeof SharedArrayBuffer < "u" &&
              (W(I, SharedArrayBuffer) ||
                (I && W(I.buffer, SharedArrayBuffer))))
          )
            return z(I, R, q);
          if (typeof I == "number")
            throw new TypeError(
              'The "value" argument must not be of type number. Received type number'
            );
          var ce = I.valueOf && I.valueOf();
          if (ce != null && ce !== I) return u.from(ce, R, q);
          var ne = V(I);
          if (ne) return ne;
          if (
            typeof Symbol < "u" &&
            Symbol.toPrimitive != null &&
            typeof I[Symbol.toPrimitive] == "function"
          )
            return u.from(I[Symbol.toPrimitive]("string"), R, q);
          throw new TypeError(
            "The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " +
              typeof I
          );
        }
        (u.from = function (I, R, q) {
          return p(I, R, q);
        }),
          Object.setPrototypeOf(u.prototype, Uint8Array.prototype),
          Object.setPrototypeOf(u, Uint8Array);
        function m(I) {
          if (typeof I != "number")
            throw new TypeError('"size" argument must be of type number');
          if (I < 0)
            throw new RangeError(
              'The value "' + I + '" is invalid for option "size"'
            );
        }
        function v(I, R, q) {
          return (
            m(I),
            I <= 0
              ? l(I)
              : R !== void 0
              ? typeof q == "string"
                ? l(I).fill(R, q)
                : l(I).fill(R)
              : l(I)
          );
        }
        u.alloc = function (I, R, q) {
          return v(I, R, q);
        };
        function w(I) {
          return m(I), l(I < 0 ? 0 : j(I) | 0);
        }
        (u.allocUnsafe = function (I) {
          return w(I);
        }),
          (u.allocUnsafeSlow = function (I) {
            return w(I);
          });
        function S(I, R) {
          if (
            ((typeof R != "string" || R === "") && (R = "utf8"),
            !u.isEncoding(R))
          )
            throw new TypeError("Unknown encoding: " + R);
          var q = ae(I, R) | 0,
            ce = l(q),
            ne = ce.write(I, R);
          return ne !== q && (ce = ce.slice(0, ne)), ce;
        }
        function M(I) {
          for (
            var R = I.length < 0 ? 0 : j(I.length) | 0, q = l(R), ce = 0;
            ce < R;
            ce += 1
          )
            q[ce] = I[ce] & 255;
          return q;
        }
        function D(I) {
          if (W(I, Uint8Array)) {
            var R = new Uint8Array(I);
            return z(R.buffer, R.byteOffset, R.byteLength);
          }
          return M(I);
        }
        function z(I, R, q) {
          if (R < 0 || I.byteLength < R)
            throw new RangeError('"offset" is outside of buffer bounds');
          if (I.byteLength < R + (q || 0))
            throw new RangeError('"length" is outside of buffer bounds');
          var ce;
          return (
            R === void 0 && q === void 0
              ? (ce = new Uint8Array(I))
              : q === void 0
              ? (ce = new Uint8Array(I, R))
              : (ce = new Uint8Array(I, R, q)),
            Object.setPrototypeOf(ce, u.prototype),
            ce
          );
        }
        function V(I) {
          if (u.isBuffer(I)) {
            var R = j(I.length) | 0,
              q = l(R);
            return q.length === 0 || I.copy(q, 0, 0, R), q;
          }
          if (I.length !== void 0)
            return typeof I.length != "number" || Q(I.length) ? l(0) : M(I);
          if (I.type === "Buffer" && Array.isArray(I.data)) return M(I.data);
        }
        function j(I) {
          if (I >= i)
            throw new RangeError(
              "Attempt to allocate Buffer larger than maximum size: 0x" +
                i.toString(16) +
                " bytes"
            );
          return I | 0;
        }
        function B(I) {
          return +I != I && (I = 0), u.alloc(+I);
        }
        (u.isBuffer = function (I) {
          return I != null && I._isBuffer === !0 && I !== u.prototype;
        }),
          (u.compare = function (I, R) {
            if (
              (W(I, Uint8Array) && (I = u.from(I, I.offset, I.byteLength)),
              W(R, Uint8Array) && (R = u.from(R, R.offset, R.byteLength)),
              !u.isBuffer(I) || !u.isBuffer(R))
            )
              throw new TypeError(
                'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
              );
            if (I === R) return 0;
            for (
              var q = I.length, ce = R.length, ne = 0, de = Math.min(q, ce);
              ne < de;
              ++ne
            )
              if (I[ne] !== R[ne]) {
                (q = I[ne]), (ce = R[ne]);
                break;
              }
            return q < ce ? -1 : ce < q ? 1 : 0;
          }),
          (u.isEncoding = function (I) {
            switch (String(I).toLowerCase()) {
              case "hex":
              case "utf8":
              case "utf-8":
              case "ascii":
              case "latin1":
              case "binary":
              case "base64":
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return !0;
              default:
                return !1;
            }
          }),
          (u.concat = function (I, R) {
            if (!Array.isArray(I))
              throw new TypeError(
                '"list" argument must be an Array of Buffers'
              );
            if (I.length === 0) return u.alloc(0);
            var q;
            if (R === void 0)
              for (R = 0, q = 0; q < I.length; ++q) R += I[q].length;
            var ce = u.allocUnsafe(R),
              ne = 0;
            for (q = 0; q < I.length; ++q) {
              var de = I[q];
              if (W(de, Uint8Array))
                ne + de.length > ce.length
                  ? u.from(de).copy(ce, ne)
                  : Uint8Array.prototype.set.call(ce, de, ne);
              else if (u.isBuffer(de)) de.copy(ce, ne);
              else
                throw new TypeError(
                  '"list" argument must be an Array of Buffers'
                );
              ne += de.length;
            }
            return ce;
          });
        function ae(I, R) {
          if (u.isBuffer(I)) return I.length;
          if (ArrayBuffer.isView(I) || W(I, ArrayBuffer)) return I.byteLength;
          if (typeof I != "string")
            throw new TypeError(
              'The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' +
                typeof I
            );
          var q = I.length,
            ce = arguments.length > 2 && arguments[2] === !0;
          if (!ce && q === 0) return 0;
          for (var ne = !1; ; )
            switch (R) {
              case "ascii":
              case "latin1":
              case "binary":
                return q;
              case "utf8":
              case "utf-8":
                return xe(I).length;
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return q * 2;
              case "hex":
                return q >>> 1;
              case "base64":
                return Ne(I).length;
              default:
                if (ne) return ce ? -1 : xe(I).length;
                (R = ("" + R).toLowerCase()), (ne = !0);
            }
        }
        u.byteLength = ae;
        function re(I, R, q) {
          var ce = !1;
          if (
            ((R === void 0 || R < 0) && (R = 0),
            R > this.length ||
              ((q === void 0 || q > this.length) && (q = this.length),
              q <= 0) ||
              ((q >>>= 0), (R >>>= 0), q <= R))
          )
            return "";
          for (I || (I = "utf8"); ; )
            switch (I) {
              case "hex":
                return le(this, R, q);
              case "utf8":
              case "utf-8":
                return P(this, R, q);
              case "ascii":
                return Y(this, R, q);
              case "latin1":
              case "binary":
                return ie(this, R, q);
              case "base64":
                return E(this, R, q);
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return J(this, R, q);
              default:
                if (ce) throw new TypeError("Unknown encoding: " + I);
                (I = (I + "").toLowerCase()), (ce = !0);
            }
        }
        u.prototype._isBuffer = !0;
        function K(I, R, q) {
          var ce = I[R];
          (I[R] = I[q]), (I[q] = ce);
        }
        (u.prototype.swap16 = function () {
          var I = this.length;
          if (I % 2 !== 0)
            throw new RangeError("Buffer size must be a multiple of 16-bits");
          for (var R = 0; R < I; R += 2) K(this, R, R + 1);
          return this;
        }),
          (u.prototype.swap32 = function () {
            var I = this.length;
            if (I % 4 !== 0)
              throw new RangeError("Buffer size must be a multiple of 32-bits");
            for (var R = 0; R < I; R += 4)
              K(this, R, R + 3), K(this, R + 1, R + 2);
            return this;
          }),
          (u.prototype.swap64 = function () {
            var I = this.length;
            if (I % 8 !== 0)
              throw new RangeError("Buffer size must be a multiple of 64-bits");
            for (var R = 0; R < I; R += 8)
              K(this, R, R + 7),
                K(this, R + 1, R + 6),
                K(this, R + 2, R + 5),
                K(this, R + 3, R + 4);
            return this;
          }),
          (u.prototype.toString = function () {
            var I = this.length;
            return I === 0
              ? ""
              : arguments.length === 0
              ? P(this, 0, I)
              : re.apply(this, arguments);
          }),
          (u.prototype.toLocaleString = u.prototype.toString),
          (u.prototype.equals = function (I) {
            if (!u.isBuffer(I))
              throw new TypeError("Argument must be a Buffer");
            return this === I ? !0 : u.compare(this, I) === 0;
          }),
          (u.prototype.inspect = function () {
            var I = "",
              R = t.INSPECT_MAX_BYTES;
            return (
              (I = this.toString("hex", 0, R)
                .replace(/(.{2})/g, "$1 ")
                .trim()),
              this.length > R && (I += " ... "),
              "<Buffer " + I + ">"
            );
          }),
          n && (u.prototype[n] = u.prototype.inspect),
          (u.prototype.compare = function (I, R, q, ce, ne) {
            if (
              (W(I, Uint8Array) && (I = u.from(I, I.offset, I.byteLength)),
              !u.isBuffer(I))
            )
              throw new TypeError(
                'The "target" argument must be one of type Buffer or Uint8Array. Received type ' +
                  typeof I
              );
            if (
              (R === void 0 && (R = 0),
              q === void 0 && (q = I ? I.length : 0),
              ce === void 0 && (ce = 0),
              ne === void 0 && (ne = this.length),
              R < 0 || q > I.length || ce < 0 || ne > this.length)
            )
              throw new RangeError("out of range index");
            if (ce >= ne && R >= q) return 0;
            if (ce >= ne) return -1;
            if (R >= q) return 1;
            if (((R >>>= 0), (q >>>= 0), (ce >>>= 0), (ne >>>= 0), this === I))
              return 0;
            for (
              var de = ne - ce,
                Te = q - R,
                Re = Math.min(de, Te),
                Ve = this.slice(ce, ne),
                Pe = I.slice(R, q),
                Be = 0;
              Be < Re;
              ++Be
            )
              if (Ve[Be] !== Pe[Be]) {
                (de = Ve[Be]), (Te = Pe[Be]);
                break;
              }
            return de < Te ? -1 : Te < de ? 1 : 0;
          });
        function fe(I, R, q, ce, ne) {
          if (I.length === 0) return -1;
          if (
            (typeof q == "string"
              ? ((ce = q), (q = 0))
              : q > 2147483647
              ? (q = 2147483647)
              : q < -2147483648 && (q = -2147483648),
            (q = +q),
            Q(q) && (q = ne ? 0 : I.length - 1),
            q < 0 && (q = I.length + q),
            q >= I.length)
          ) {
            if (ne) return -1;
            q = I.length - 1;
          } else if (q < 0)
            if (ne) q = 0;
            else return -1;
          if ((typeof R == "string" && (R = u.from(R, ce)), u.isBuffer(R)))
            return R.length === 0 ? -1 : ye(I, R, q, ce, ne);
          if (typeof R == "number")
            return (
              (R = R & 255),
              typeof Uint8Array.prototype.indexOf == "function"
                ? ne
                  ? Uint8Array.prototype.indexOf.call(I, R, q)
                  : Uint8Array.prototype.lastIndexOf.call(I, R, q)
                : ye(I, [R], q, ce, ne)
            );
          throw new TypeError("val must be string, number or Buffer");
        }
        function ye(I, R, q, ce, ne) {
          var de = 1,
            Te = I.length,
            Re = R.length;
          if (
            ce !== void 0 &&
            ((ce = String(ce).toLowerCase()),
            ce === "ucs2" ||
              ce === "ucs-2" ||
              ce === "utf16le" ||
              ce === "utf-16le")
          ) {
            if (I.length < 2 || R.length < 2) return -1;
            (de = 2), (Te /= 2), (Re /= 2), (q /= 2);
          }
          function Ve(st, Ur) {
            return de === 1 ? st[Ur] : st.readUInt16BE(Ur * de);
          }
          var Pe;
          if (ne) {
            var Be = -1;
            for (Pe = q; Pe < Te; Pe++)
              if (Ve(I, Pe) === Ve(R, Be === -1 ? 0 : Pe - Be)) {
                if ((Be === -1 && (Be = Pe), Pe - Be + 1 === Re))
                  return Be * de;
              } else Be !== -1 && (Pe -= Pe - Be), (Be = -1);
          } else
            for (q + Re > Te && (q = Te - Re), Pe = q; Pe >= 0; Pe--) {
              for (var Ze = !0, Je = 0; Je < Re; Je++)
                if (Ve(I, Pe + Je) !== Ve(R, Je)) {
                  Ze = !1;
                  break;
                }
              if (Ze) return Pe;
            }
          return -1;
        }
        (u.prototype.includes = function (I, R, q) {
          return this.indexOf(I, R, q) !== -1;
        }),
          (u.prototype.indexOf = function (I, R, q) {
            return fe(this, I, R, q, !0);
          }),
          (u.prototype.lastIndexOf = function (I, R, q) {
            return fe(this, I, R, q, !1);
          });
        function pe(I, R, q, ce) {
          q = Number(q) || 0;
          var ne = I.length - q;
          ce ? ((ce = Number(ce)), ce > ne && (ce = ne)) : (ce = ne);
          var de = R.length;
          ce > de / 2 && (ce = de / 2);
          for (var Te = 0; Te < ce; ++Te) {
            var Re = parseInt(R.substr(Te * 2, 2), 16);
            if (Q(Re)) return Te;
            I[q + Te] = Re;
          }
          return Te;
        }
        function _e(I, R, q, ce) {
          return oe(xe(R, I.length - q), I, q, ce);
        }
        function be(I, R, q, ce) {
          return oe(Se(R), I, q, ce);
        }
        function Ce(I, R, q, ce) {
          return oe(Ne(R), I, q, ce);
        }
        function ke(I, R, q, ce) {
          return oe(Ie(R, I.length - q), I, q, ce);
        }
        (u.prototype.write = function (I, R, q, ce) {
          if (R === void 0) (ce = "utf8"), (q = this.length), (R = 0);
          else if (q === void 0 && typeof R == "string")
            (ce = R), (q = this.length), (R = 0);
          else if (isFinite(R))
            (R = R >>> 0),
              isFinite(q)
                ? ((q = q >>> 0), ce === void 0 && (ce = "utf8"))
                : ((ce = q), (q = void 0));
          else
            throw new Error(
              "Buffer.write(string, encoding, offset[, length]) is no longer supported"
            );
          var ne = this.length - R;
          if (
            ((q === void 0 || q > ne) && (q = ne),
            (I.length > 0 && (q < 0 || R < 0)) || R > this.length)
          )
            throw new RangeError("Attempt to write outside buffer bounds");
          ce || (ce = "utf8");
          for (var de = !1; ; )
            switch (ce) {
              case "hex":
                return pe(this, I, R, q);
              case "utf8":
              case "utf-8":
                return _e(this, I, R, q);
              case "ascii":
              case "latin1":
              case "binary":
                return be(this, I, R, q);
              case "base64":
                return Ce(this, I, R, q);
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return ke(this, I, R, q);
              default:
                if (de) throw new TypeError("Unknown encoding: " + ce);
                (ce = ("" + ce).toLowerCase()), (de = !0);
            }
        }),
          (u.prototype.toJSON = function () {
            return {
              type: "Buffer",
              data: Array.prototype.slice.call(this._arr || this, 0),
            };
          });
        function E(I, R, q) {
          return R === 0 && q === I.length
            ? e.fromByteArray(I)
            : e.fromByteArray(I.slice(R, q));
        }
        function P(I, R, q) {
          q = Math.min(I.length, q);
          for (var ce = [], ne = R; ne < q; ) {
            var de = I[ne],
              Te = null,
              Re = de > 239 ? 4 : de > 223 ? 3 : de > 191 ? 2 : 1;
            if (ne + Re <= q) {
              var Ve, Pe, Be, Ze;
              switch (Re) {
                case 1:
                  de < 128 && (Te = de);
                  break;
                case 2:
                  (Ve = I[ne + 1]),
                    (Ve & 192) === 128 &&
                      ((Ze = ((de & 31) << 6) | (Ve & 63)),
                      Ze > 127 && (Te = Ze));
                  break;
                case 3:
                  (Ve = I[ne + 1]),
                    (Pe = I[ne + 2]),
                    (Ve & 192) === 128 &&
                      (Pe & 192) === 128 &&
                      ((Ze = ((de & 15) << 12) | ((Ve & 63) << 6) | (Pe & 63)),
                      Ze > 2047 && (Ze < 55296 || Ze > 57343) && (Te = Ze));
                  break;
                case 4:
                  (Ve = I[ne + 1]),
                    (Pe = I[ne + 2]),
                    (Be = I[ne + 3]),
                    (Ve & 192) === 128 &&
                      (Pe & 192) === 128 &&
                      (Be & 192) === 128 &&
                      ((Ze =
                        ((de & 15) << 18) |
                        ((Ve & 63) << 12) |
                        ((Pe & 63) << 6) |
                        (Be & 63)),
                      Ze > 65535 && Ze < 1114112 && (Te = Ze));
              }
            }
            Te === null
              ? ((Te = 65533), (Re = 1))
              : Te > 65535 &&
                ((Te -= 65536),
                ce.push(((Te >>> 10) & 1023) | 55296),
                (Te = 56320 | (Te & 1023))),
              ce.push(Te),
              (ne += Re);
          }
          return U(ce);
        }
        var L = 4096;
        function U(I) {
          var R = I.length;
          if (R <= L) return String.fromCharCode.apply(String, I);
          for (var q = "", ce = 0; ce < R; )
            q += String.fromCharCode.apply(String, I.slice(ce, (ce += L)));
          return q;
        }
        function Y(I, R, q) {
          var ce = "";
          q = Math.min(I.length, q);
          for (var ne = R; ne < q; ++ne) ce += String.fromCharCode(I[ne] & 127);
          return ce;
        }
        function ie(I, R, q) {
          var ce = "";
          q = Math.min(I.length, q);
          for (var ne = R; ne < q; ++ne) ce += String.fromCharCode(I[ne]);
          return ce;
        }
        function le(I, R, q) {
          var ce = I.length;
          (!R || R < 0) && (R = 0), (!q || q < 0 || q > ce) && (q = ce);
          for (var ne = "", de = R; de < q; ++de) ne += ge[I[de]];
          return ne;
        }
        function J(I, R, q) {
          for (
            var ce = I.slice(R, q), ne = "", de = 0;
            de < ce.length - 1;
            de += 2
          )
            ne += String.fromCharCode(ce[de] + ce[de + 1] * 256);
          return ne;
        }
        u.prototype.slice = function (I, R) {
          var q = this.length;
          (I = ~~I),
            (R = R === void 0 ? q : ~~R),
            I < 0 ? ((I += q), I < 0 && (I = 0)) : I > q && (I = q),
            R < 0 ? ((R += q), R < 0 && (R = 0)) : R > q && (R = q),
            R < I && (R = I);
          var ce = this.subarray(I, R);
          return Object.setPrototypeOf(ce, u.prototype), ce;
        };
        function T(I, R, q) {
          if (I % 1 !== 0 || I < 0) throw new RangeError("offset is not uint");
          if (I + R > q)
            throw new RangeError("Trying to access beyond buffer length");
        }
        (u.prototype.readUintLE = u.prototype.readUIntLE =
          function (I, R, q) {
            (I = I >>> 0), (R = R >>> 0), q || T(I, R, this.length);
            for (var ce = this[I], ne = 1, de = 0; ++de < R && (ne *= 256); )
              ce += this[I + de] * ne;
            return ce;
          }),
          (u.prototype.readUintBE = u.prototype.readUIntBE =
            function (I, R, q) {
              (I = I >>> 0), (R = R >>> 0), q || T(I, R, this.length);
              for (var ce = this[I + --R], ne = 1; R > 0 && (ne *= 256); )
                ce += this[I + --R] * ne;
              return ce;
            }),
          (u.prototype.readUint8 = u.prototype.readUInt8 =
            function (I, R) {
              return (I = I >>> 0), R || T(I, 1, this.length), this[I];
            }),
          (u.prototype.readUint16LE = u.prototype.readUInt16LE =
            function (I, R) {
              return (
                (I = I >>> 0),
                R || T(I, 2, this.length),
                this[I] | (this[I + 1] << 8)
              );
            }),
          (u.prototype.readUint16BE = u.prototype.readUInt16BE =
            function (I, R) {
              return (
                (I = I >>> 0),
                R || T(I, 2, this.length),
                (this[I] << 8) | this[I + 1]
              );
            }),
          (u.prototype.readUint32LE = u.prototype.readUInt32LE =
            function (I, R) {
              return (
                (I = I >>> 0),
                R || T(I, 4, this.length),
                (this[I] | (this[I + 1] << 8) | (this[I + 2] << 16)) +
                  this[I + 3] * 16777216
              );
            }),
          (u.prototype.readUint32BE = u.prototype.readUInt32BE =
            function (I, R) {
              return (
                (I = I >>> 0),
                R || T(I, 4, this.length),
                this[I] * 16777216 +
                  ((this[I + 1] << 16) | (this[I + 2] << 8) | this[I + 3])
              );
            }),
          (u.prototype.readIntLE = function (I, R, q) {
            (I = I >>> 0), (R = R >>> 0), q || T(I, R, this.length);
            for (var ce = this[I], ne = 1, de = 0; ++de < R && (ne *= 256); )
              ce += this[I + de] * ne;
            return (ne *= 128), ce >= ne && (ce -= Math.pow(2, 8 * R)), ce;
          }),
          (u.prototype.readIntBE = function (I, R, q) {
            (I = I >>> 0), (R = R >>> 0), q || T(I, R, this.length);
            for (
              var ce = R, ne = 1, de = this[I + --ce];
              ce > 0 && (ne *= 256);

            )
              de += this[I + --ce] * ne;
            return (ne *= 128), de >= ne && (de -= Math.pow(2, 8 * R)), de;
          }),
          (u.prototype.readInt8 = function (I, R) {
            return (
              (I = I >>> 0),
              R || T(I, 1, this.length),
              this[I] & 128 ? (255 - this[I] + 1) * -1 : this[I]
            );
          }),
          (u.prototype.readInt16LE = function (I, R) {
            (I = I >>> 0), R || T(I, 2, this.length);
            var q = this[I] | (this[I + 1] << 8);
            return q & 32768 ? q | 4294901760 : q;
          }),
          (u.prototype.readInt16BE = function (I, R) {
            (I = I >>> 0), R || T(I, 2, this.length);
            var q = this[I + 1] | (this[I] << 8);
            return q & 32768 ? q | 4294901760 : q;
          }),
          (u.prototype.readInt32LE = function (I, R) {
            return (
              (I = I >>> 0),
              R || T(I, 4, this.length),
              this[I] |
                (this[I + 1] << 8) |
                (this[I + 2] << 16) |
                (this[I + 3] << 24)
            );
          }),
          (u.prototype.readInt32BE = function (I, R) {
            return (
              (I = I >>> 0),
              R || T(I, 4, this.length),
              (this[I] << 24) |
                (this[I + 1] << 16) |
                (this[I + 2] << 8) |
                this[I + 3]
            );
          }),
          (u.prototype.readFloatLE = function (I, R) {
            return (
              (I = I >>> 0),
              R || T(I, 4, this.length),
              r.read(this, I, !0, 23, 4)
            );
          }),
          (u.prototype.readFloatBE = function (I, R) {
            return (
              (I = I >>> 0),
              R || T(I, 4, this.length),
              r.read(this, I, !1, 23, 4)
            );
          }),
          (u.prototype.readDoubleLE = function (I, R) {
            return (
              (I = I >>> 0),
              R || T(I, 8, this.length),
              r.read(this, I, !0, 52, 8)
            );
          }),
          (u.prototype.readDoubleBE = function (I, R) {
            return (
              (I = I >>> 0),
              R || T(I, 8, this.length),
              r.read(this, I, !1, 52, 8)
            );
          });
        function Z(I, R, q, ce, ne, de) {
          if (!u.isBuffer(I))
            throw new TypeError('"buffer" argument must be a Buffer instance');
          if (R > ne || R < de)
            throw new RangeError('"value" argument is out of bounds');
          if (q + ce > I.length) throw new RangeError("Index out of range");
        }
        (u.prototype.writeUintLE = u.prototype.writeUIntLE =
          function (I, R, q, ce) {
            if (((I = +I), (R = R >>> 0), (q = q >>> 0), !ce)) {
              var ne = Math.pow(2, 8 * q) - 1;
              Z(this, I, R, q, ne, 0);
            }
            var de = 1,
              Te = 0;
            for (this[R] = I & 255; ++Te < q && (de *= 256); )
              this[R + Te] = (I / de) & 255;
            return R + q;
          }),
          (u.prototype.writeUintBE = u.prototype.writeUIntBE =
            function (I, R, q, ce) {
              if (((I = +I), (R = R >>> 0), (q = q >>> 0), !ce)) {
                var ne = Math.pow(2, 8 * q) - 1;
                Z(this, I, R, q, ne, 0);
              }
              var de = q - 1,
                Te = 1;
              for (this[R + de] = I & 255; --de >= 0 && (Te *= 256); )
                this[R + de] = (I / Te) & 255;
              return R + q;
            }),
          (u.prototype.writeUint8 = u.prototype.writeUInt8 =
            function (I, R, q) {
              return (
                (I = +I),
                (R = R >>> 0),
                q || Z(this, I, R, 1, 255, 0),
                (this[R] = I & 255),
                R + 1
              );
            }),
          (u.prototype.writeUint16LE = u.prototype.writeUInt16LE =
            function (I, R, q) {
              return (
                (I = +I),
                (R = R >>> 0),
                q || Z(this, I, R, 2, 65535, 0),
                (this[R] = I & 255),
                (this[R + 1] = I >>> 8),
                R + 2
              );
            }),
          (u.prototype.writeUint16BE = u.prototype.writeUInt16BE =
            function (I, R, q) {
              return (
                (I = +I),
                (R = R >>> 0),
                q || Z(this, I, R, 2, 65535, 0),
                (this[R] = I >>> 8),
                (this[R + 1] = I & 255),
                R + 2
              );
            }),
          (u.prototype.writeUint32LE = u.prototype.writeUInt32LE =
            function (I, R, q) {
              return (
                (I = +I),
                (R = R >>> 0),
                q || Z(this, I, R, 4, 4294967295, 0),
                (this[R + 3] = I >>> 24),
                (this[R + 2] = I >>> 16),
                (this[R + 1] = I >>> 8),
                (this[R] = I & 255),
                R + 4
              );
            }),
          (u.prototype.writeUint32BE = u.prototype.writeUInt32BE =
            function (I, R, q) {
              return (
                (I = +I),
                (R = R >>> 0),
                q || Z(this, I, R, 4, 4294967295, 0),
                (this[R] = I >>> 24),
                (this[R + 1] = I >>> 16),
                (this[R + 2] = I >>> 8),
                (this[R + 3] = I & 255),
                R + 4
              );
            }),
          (u.prototype.writeIntLE = function (I, R, q, ce) {
            if (((I = +I), (R = R >>> 0), !ce)) {
              var ne = Math.pow(2, 8 * q - 1);
              Z(this, I, R, q, ne - 1, -ne);
            }
            var de = 0,
              Te = 1,
              Re = 0;
            for (this[R] = I & 255; ++de < q && (Te *= 256); )
              I < 0 && Re === 0 && this[R + de - 1] !== 0 && (Re = 1),
                (this[R + de] = (((I / Te) >> 0) - Re) & 255);
            return R + q;
          }),
          (u.prototype.writeIntBE = function (I, R, q, ce) {
            if (((I = +I), (R = R >>> 0), !ce)) {
              var ne = Math.pow(2, 8 * q - 1);
              Z(this, I, R, q, ne - 1, -ne);
            }
            var de = q - 1,
              Te = 1,
              Re = 0;
            for (this[R + de] = I & 255; --de >= 0 && (Te *= 256); )
              I < 0 && Re === 0 && this[R + de + 1] !== 0 && (Re = 1),
                (this[R + de] = (((I / Te) >> 0) - Re) & 255);
            return R + q;
          }),
          (u.prototype.writeInt8 = function (I, R, q) {
            return (
              (I = +I),
              (R = R >>> 0),
              q || Z(this, I, R, 1, 127, -128),
              I < 0 && (I = 255 + I + 1),
              (this[R] = I & 255),
              R + 1
            );
          }),
          (u.prototype.writeInt16LE = function (I, R, q) {
            return (
              (I = +I),
              (R = R >>> 0),
              q || Z(this, I, R, 2, 32767, -32768),
              (this[R] = I & 255),
              (this[R + 1] = I >>> 8),
              R + 2
            );
          }),
          (u.prototype.writeInt16BE = function (I, R, q) {
            return (
              (I = +I),
              (R = R >>> 0),
              q || Z(this, I, R, 2, 32767, -32768),
              (this[R] = I >>> 8),
              (this[R + 1] = I & 255),
              R + 2
            );
          }),
          (u.prototype.writeInt32LE = function (I, R, q) {
            return (
              (I = +I),
              (R = R >>> 0),
              q || Z(this, I, R, 4, 2147483647, -2147483648),
              (this[R] = I & 255),
              (this[R + 1] = I >>> 8),
              (this[R + 2] = I >>> 16),
              (this[R + 3] = I >>> 24),
              R + 4
            );
          }),
          (u.prototype.writeInt32BE = function (I, R, q) {
            return (
              (I = +I),
              (R = R >>> 0),
              q || Z(this, I, R, 4, 2147483647, -2147483648),
              I < 0 && (I = 4294967295 + I + 1),
              (this[R] = I >>> 24),
              (this[R + 1] = I >>> 16),
              (this[R + 2] = I >>> 8),
              (this[R + 3] = I & 255),
              R + 4
            );
          });
        function Oe(I, R, q, ce, ne, de) {
          if (q + ce > I.length) throw new RangeError("Index out of range");
          if (q < 0) throw new RangeError("Index out of range");
        }
        function Me(I, R, q, ce, ne) {
          return (
            (R = +R),
            (q = q >>> 0),
            ne || Oe(I, R, q, 4),
            r.write(I, R, q, ce, 23, 4),
            q + 4
          );
        }
        (u.prototype.writeFloatLE = function (I, R, q) {
          return Me(this, I, R, !0, q);
        }),
          (u.prototype.writeFloatBE = function (I, R, q) {
            return Me(this, I, R, !1, q);
          });
        function X(I, R, q, ce, ne) {
          return (
            (R = +R),
            (q = q >>> 0),
            ne || Oe(I, R, q, 8),
            r.write(I, R, q, ce, 52, 8),
            q + 8
          );
        }
        (u.prototype.writeDoubleLE = function (I, R, q) {
          return X(this, I, R, !0, q);
        }),
          (u.prototype.writeDoubleBE = function (I, R, q) {
            return X(this, I, R, !1, q);
          }),
          (u.prototype.copy = function (I, R, q, ce) {
            if (!u.isBuffer(I))
              throw new TypeError("argument should be a Buffer");
            if (
              (q || (q = 0),
              !ce && ce !== 0 && (ce = this.length),
              R >= I.length && (R = I.length),
              R || (R = 0),
              ce > 0 && ce < q && (ce = q),
              ce === q || I.length === 0 || this.length === 0)
            )
              return 0;
            if (R < 0) throw new RangeError("targetStart out of bounds");
            if (q < 0 || q >= this.length)
              throw new RangeError("Index out of range");
            if (ce < 0) throw new RangeError("sourceEnd out of bounds");
            ce > this.length && (ce = this.length),
              I.length - R < ce - q && (ce = I.length - R + q);
            var ne = ce - q;
            return (
              this === I && typeof Uint8Array.prototype.copyWithin == "function"
                ? this.copyWithin(R, q, ce)
                : Uint8Array.prototype.set.call(I, this.subarray(q, ce), R),
              ne
            );
          }),
          (u.prototype.fill = function (I, R, q, ce) {
            if (typeof I == "string") {
              if (
                (typeof R == "string"
                  ? ((ce = R), (R = 0), (q = this.length))
                  : typeof q == "string" && ((ce = q), (q = this.length)),
                ce !== void 0 && typeof ce != "string")
              )
                throw new TypeError("encoding must be a string");
              if (typeof ce == "string" && !u.isEncoding(ce))
                throw new TypeError("Unknown encoding: " + ce);
              if (I.length === 1) {
                var ne = I.charCodeAt(0);
                ((ce === "utf8" && ne < 128) || ce === "latin1") && (I = ne);
              }
            } else
              typeof I == "number"
                ? (I = I & 255)
                : typeof I == "boolean" && (I = Number(I));
            if (R < 0 || this.length < R || this.length < q)
              throw new RangeError("Out of range index");
            if (q <= R) return this;
            (R = R >>> 0),
              (q = q === void 0 ? this.length : q >>> 0),
              I || (I = 0);
            var de;
            if (typeof I == "number") for (de = R; de < q; ++de) this[de] = I;
            else {
              var Te = u.isBuffer(I) ? I : u.from(I, ce),
                Re = Te.length;
              if (Re === 0)
                throw new TypeError(
                  'The value "' + I + '" is invalid for argument "value"'
                );
              for (de = 0; de < q - R; ++de) this[de + R] = Te[de % Re];
            }
            return this;
          });
        var Ee = /[^+/0-9A-Za-z-_]/g;
        function me(I) {
          if (
            ((I = I.split("=")[0]),
            (I = I.trim().replace(Ee, "")),
            I.length < 2)
          )
            return "";
          for (; I.length % 4 !== 0; ) I = I + "=";
          return I;
        }
        function xe(I, R) {
          R = R || 1 / 0;
          for (
            var q, ce = I.length, ne = null, de = [], Te = 0;
            Te < ce;
            ++Te
          ) {
            if (((q = I.charCodeAt(Te)), q > 55295 && q < 57344)) {
              if (!ne) {
                if (q > 56319) {
                  (R -= 3) > -1 && de.push(239, 191, 189);
                  continue;
                } else if (Te + 1 === ce) {
                  (R -= 3) > -1 && de.push(239, 191, 189);
                  continue;
                }
                ne = q;
                continue;
              }
              if (q < 56320) {
                (R -= 3) > -1 && de.push(239, 191, 189), (ne = q);
                continue;
              }
              q = (((ne - 55296) << 10) | (q - 56320)) + 65536;
            } else ne && (R -= 3) > -1 && de.push(239, 191, 189);
            if (((ne = null), q < 128)) {
              if ((R -= 1) < 0) break;
              de.push(q);
            } else if (q < 2048) {
              if ((R -= 2) < 0) break;
              de.push((q >> 6) | 192, (q & 63) | 128);
            } else if (q < 65536) {
              if ((R -= 3) < 0) break;
              de.push((q >> 12) | 224, ((q >> 6) & 63) | 128, (q & 63) | 128);
            } else if (q < 1114112) {
              if ((R -= 4) < 0) break;
              de.push(
                (q >> 18) | 240,
                ((q >> 12) & 63) | 128,
                ((q >> 6) & 63) | 128,
                (q & 63) | 128
              );
            } else throw new Error("Invalid code point");
          }
          return de;
        }
        function Se(I) {
          for (var R = [], q = 0; q < I.length; ++q)
            R.push(I.charCodeAt(q) & 255);
          return R;
        }
        function Ie(I, R) {
          for (
            var q, ce, ne, de = [], Te = 0;
            Te < I.length && !((R -= 2) < 0);
            ++Te
          )
            (q = I.charCodeAt(Te)),
              (ce = q >> 8),
              (ne = q % 256),
              de.push(ne),
              de.push(ce);
          return de;
        }
        function Ne(I) {
          return e.toByteArray(me(I));
        }
        function oe(I, R, q, ce) {
          for (
            var ne = 0;
            ne < ce && !(ne + q >= R.length || ne >= I.length);
            ++ne
          )
            R[ne + q] = I[ne];
          return ne;
        }
        function W(I, R) {
          return (
            I instanceof R ||
            (I != null &&
              I.constructor != null &&
              I.constructor.name != null &&
              I.constructor.name === R.name)
          );
        }
        function Q(I) {
          return I !== I;
        }
        var ge = (function () {
          for (
            var I = "0123456789abcdef", R = new Array(256), q = 0;
            q < 16;
            ++q
          )
            for (var ce = q * 16, ne = 0; ne < 16; ++ne)
              R[ce + ne] = I[q] + I[ne];
          return R;
        })();
      })(Ww);
    var jw = { exports: {} },
      Kr = (jw.exports = {}),
      ss,
      as;
    function Em() {
      throw new Error("setTimeout has not been defined");
    }
    function Im() {
      throw new Error("clearTimeout has not been defined");
    }
    (function () {
      try {
        typeof setTimeout == "function" ? (ss = setTimeout) : (ss = Em);
      } catch {
        ss = Em;
      }
      try {
        typeof clearTimeout == "function" ? (as = clearTimeout) : (as = Im);
      } catch {
        as = Im;
      }
    })();
    function Gw(t) {
      if (ss === setTimeout) return setTimeout(t, 0);
      if ((ss === Em || !ss) && setTimeout)
        return (ss = setTimeout), setTimeout(t, 0);
      try {
        return ss(t, 0);
      } catch {
        try {
          return ss.call(null, t, 0);
        } catch {
          return ss.call(this, t, 0);
        }
      }
    }
    function TL(t) {
      if (as === clearTimeout) return clearTimeout(t);
      if ((as === Im || !as) && clearTimeout)
        return (as = clearTimeout), clearTimeout(t);
      try {
        return as(t);
      } catch {
        try {
          return as.call(null, t);
        } catch {
          return as.call(this, t);
        }
      }
    }
    var Ls = [],
      Bl = !1,
      Eo,
      Td = -1;
    function PL() {
      !Bl ||
        !Eo ||
        ((Bl = !1),
        Eo.length ? (Ls = Eo.concat(Ls)) : (Td = -1),
        Ls.length && Yw());
    }
    function Yw() {
      if (!Bl) {
        var t = Gw(PL);
        Bl = !0;
        for (var e = Ls.length; e; ) {
          for (Eo = Ls, Ls = []; ++Td < e; ) Eo && Eo[Td].run();
          (Td = -1), (e = Ls.length);
        }
        (Eo = null), (Bl = !1), TL(t);
      }
    }
    Kr.nextTick = function (t) {
      var e = new Array(arguments.length - 1);
      if (arguments.length > 1)
        for (var r = 1; r < arguments.length; r++) e[r - 1] = arguments[r];
      Ls.push(new Vw(t, e)), Ls.length === 1 && !Bl && Gw(Yw);
    };
    function Vw(t, e) {
      (this.fun = t), (this.array = e);
    }
    (Vw.prototype.run = function () {
      this.fun.apply(null, this.array);
    }),
      (Kr.title = "browser"),
      (Kr.browser = !0),
      (Kr.env = {}),
      (Kr.argv = []),
      (Kr.version = ""),
      (Kr.versions = {});
    function Ms() {}
    (Kr.on = Ms),
      (Kr.addListener = Ms),
      (Kr.once = Ms),
      (Kr.off = Ms),
      (Kr.removeListener = Ms),
      (Kr.removeAllListeners = Ms),
      (Kr.emit = Ms),
      (Kr.prependListener = Ms),
      (Kr.prependOnceListener = Ms),
      (Kr.listeners = function (t) {
        return [];
      }),
      (Kr.binding = function (t) {
        throw new Error("process.binding is not supported");
      }),
      (Kr.cwd = function () {
        return "/";
      }),
      (Kr.chdir = function (t) {
        throw new Error("process.chdir is not supported");
      }),
      (Kr.umask = function () {
        return 0;
      });
    var OL = jw.exports;
    const Rs = ns(OL);
    var LL = (function (t) {
        function e() {
          var n = this || self;
          return delete t.prototype.__magic__, n;
        }
        if (typeof globalThis == "object") return globalThis;
        if (this) return e();
        t.defineProperty(t.prototype, "__magic__", {
          configurable: !0,
          get: e,
        });
        var r = __magic__;
        return r;
      })(Object),
      qw = LL;
    const Ns =
      typeof qw < "u"
        ? qw
        : typeof self < "u"
        ? self
        : typeof window < "u"
        ? window
        : {};
    function Tm(t, e) {
      const r = Object.create(null),
        n = t.split(",");
      for (let i = 0; i < n.length; i++) r[n[i]] = !0;
      return e ? (i) => !!r[i.toLowerCase()] : (i) => !!r[i];
    }
    const Br = {},
      Fl = [],
      Ti = () => {},
      ML = () => !1,
      RL = /^on[^a-z]/,
      Pd = (t) => RL.test(t),
      Pm = (t) => t.startsWith("onUpdate:"),
      en = Object.assign,
      Om = (t, e) => {
        const r = t.indexOf(e);
        r > -1 && t.splice(r, 1);
      },
      NL = Object.prototype.hasOwnProperty,
      Ut = (t, e) => NL.call(t, e),
      ut = Array.isArray,
      Dl = (t) => Od(t) === "[object Map]",
      Kw = (t) => Od(t) === "[object Set]",
      kt = (t) => typeof t == "function",
      Gr = (t) => typeof t == "string",
      Lm = (t) => typeof t == "symbol",
      Pr = (t) => t !== null && typeof t == "object",
      $w = (t) => Pr(t) && kt(t.then) && kt(t.catch),
      Zw = Object.prototype.toString,
      Od = (t) => Zw.call(t),
      BL = (t) => Od(t).slice(8, -1),
      Qw = (t) => Od(t) === "[object Object]",
      Mm = (t) =>
        Gr(t) && t !== "NaN" && t[0] !== "-" && "" + parseInt(t, 10) === t,
      Ld = Tm(
        ",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"
      ),
      Md = (t) => {
        const e = Object.create(null);
        return (r) => e[r] || (e[r] = t(r));
      },
      FL = /-(\w)/g,
      os = Md((t) => t.replace(FL, (e, r) => (r ? r.toUpperCase() : ""))),
      DL = /\B([A-Z])/g,
      zl = Md((t) => t.replace(DL, "-$1").toLowerCase()),
      Rd = Md((t) => t.charAt(0).toUpperCase() + t.slice(1)),
      Rm = Md((t) => (t ? `on${Rd(t)}` : "")),
      du = (t, e) => !Object.is(t, e),
      Nm = (t, e) => {
        for (let r = 0; r < t.length; r++) t[r](e);
      },
      Nd = (t, e, r) => {
        Object.defineProperty(t, e, {
          configurable: !0,
          enumerable: !1,
          value: r,
        });
      },
      zL = (t) => {
        const e = parseFloat(t);
        return isNaN(e) ? t : e;
      },
      HL = (t) => {
        const e = Gr(t) ? Number(t) : NaN;
        return isNaN(e) ? t : e;
      };
    let Jw;
    const Bm = () =>
      Jw ||
      (Jw =
        typeof globalThis < "u"
          ? globalThis
          : typeof self < "u"
          ? self
          : typeof window < "u"
          ? window
          : typeof Ns < "u"
          ? Ns
          : {});
    function fu(t) {
      if (ut(t)) {
        const e = {};
        for (let r = 0; r < t.length; r++) {
          const n = t[r],
            i = Gr(n) ? jL(n) : fu(n);
          if (i) for (const a in i) e[a] = i[a];
        }
        return e;
      } else if (Gr(t) || Pr(t)) return t;
    }
    const UL = /;(?![^(]*\))/g,
      WL = /:([^]+)/,
      XL = /\/\*[^]*?\*\//g;
    function jL(t) {
      const e = {};
      return (
        t
          .replace(XL, "")
          .split(UL)
          .forEach((r) => {
            if (r) {
              const n = r.split(WL);
              n.length > 1 && (e[n[0].trim()] = n[1].trim());
            }
          }),
        e
      );
    }
    function ot(t) {
      let e = ""; 
      if (Gr(t)) e = t;
      else if (ut(t))
        for (let r = 0; r < t.length; r++) {
          const n = ot(t[r]);
          n && (e += n + " ");
        }
      else if (Pr(t)) for (const r in t) t[r] && (e += r + " ");
      return e.trim();
    }
    const GL =
        "itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",
      YL = Tm(GL);
    function e1(t) {
      return !!t || t === "";
    }
    const Bt = (t) =>
        Gr(t)
          ? t
          : t == null
          ? ""
          : ut(t) || (Pr(t) && (t.toString === Zw || !kt(t.toString)))
          ? JSON.stringify(t, t1, 2)
          : String(t),
      t1 = (t, e) =>
        e && e.__v_isRef
          ? t1(t, e.value)
          : Dl(e)
          ? {
              [`Map(${e.size})`]: [...e.entries()].reduce(
                (r, [n, i]) => ((r[`${n} =>`] = i), r),
                {}
              ),
            }
          : Kw(e)
          ? { [`Set(${e.size})`]: [...e.values()] }
          : Pr(e) && !ut(e) && !Qw(e)
          ? String(e)
          : e;
    let Pi;
    class r1 {
      constructor(e = !1) {
        (this.detached = e),
          (this._active = !0),
          (this.effects = []),
          (this.cleanups = []),
          (this.parent = Pi),
          !e &&
            Pi &&
            (this.index = (Pi.scopes || (Pi.scopes = [])).push(this) - 1);
      }
      get active() {
        return this._active;
      }
      run(e) {
        if (this._active) {
          const r = Pi;
          try {
            return (Pi = this), e();
          } finally {
            Pi = r;
          }
        }
      }
      on() {
        Pi = this;
      }
      off() {
        Pi = this.parent;
      }
      stop(e) {
        if (this._active) {
          let r, n;
          for (r = 0, n = this.effects.length; r < n; r++)
            this.effects[r].stop();
          for (r = 0, n = this.cleanups.length; r < n; r++) this.cleanups[r]();
          if (this.scopes)
            for (r = 0, n = this.scopes.length; r < n; r++)
              this.scopes[r].stop(!0);
          if (!this.detached && this.parent && !e) {
            const i = this.parent.scopes.pop();
            i &&
              i !== this &&
              ((this.parent.scopes[this.index] = i), (i.index = this.index));
          }
          (this.parent = void 0), (this._active = !1);
        }
      }
    }
    function n1(t) {
      return new r1(t);
    }
    function VL(t, e = Pi) {
      e && e.active && e.effects.push(t);
    }
    function qL() {
      return Pi;
    }
    const Fm = (t) => {
        const e = new Set(t);
        return (e.w = 0), (e.n = 0), e;
      },
      i1 = (t) => (t.w & Ea) > 0,
      s1 = (t) => (t.n & Ea) > 0,
      KL = ({ deps: t }) => {
        if (t.length) for (let e = 0; e < t.length; e++) t[e].w |= Ea;
      },
      $L = (t) => {
        const { deps: e } = t;
        if (e.length) {
          let r = 0;
          for (let n = 0; n < e.length; n++) {
            const i = e[n];
            i1(i) && !s1(i) ? i.delete(t) : (e[r++] = i),
              (i.w &= ~Ea),
              (i.n &= ~Ea);
          }
          e.length = r;
        }
      },
      Dm = new WeakMap();
    let pu = 0,
      Ea = 1;
    const zm = 30;
    let Oi;
    const Io = Symbol(""),
      Hm = Symbol("");
    class Um {
      constructor(e, r = null, n) {
        (this.fn = e),
          (this.scheduler = r),
          (this.active = !0),
          (this.deps = []),
          (this.parent = void 0),
          VL(this, n);
      }
      run() {
        if (!this.active) return this.fn();
        let e = Oi,
          r = Ia;
        for (; e; ) {
          if (e === this) return;
          e = e.parent;
        }
        try {
          return (
            (this.parent = Oi),
            (Oi = this),
            (Ia = !0),
            (Ea = 1 << ++pu),
            pu <= zm ? KL(this) : a1(this),
            this.fn()
          );
        } finally {
          pu <= zm && $L(this),
            (Ea = 1 << --pu),
            (Oi = this.parent),
            (Ia = r),
            (this.parent = void 0),
            this.deferStop && this.stop();
        }
      }
      stop() {
        Oi === this
          ? (this.deferStop = !0)
          : this.active &&
            (a1(this), this.onStop && this.onStop(), (this.active = !1));
      }
    }
    function a1(t) {
      const { deps: e } = t;
      if (e.length) {
        for (let r = 0; r < e.length; r++) e[r].delete(t);
        e.length = 0;
      }
    }
    let Ia = !0;
    const o1 = [];
    function Hl() {
      o1.push(Ia), (Ia = !1);
    }
    function Ul() {
      const t = o1.pop();
      Ia = t === void 0 ? !0 : t;
    }
    function Un(t, e, r) {
      if (Ia && Oi) {
        let n = Dm.get(t);
        n || Dm.set(t, (n = new Map()));
        let i = n.get(r);
        i || n.set(r, (i = Fm())), l1(i);
      }
    }
    function l1(t, e) {
      let r = !1;
      pu <= zm ? s1(t) || ((t.n |= Ea), (r = !i1(t))) : (r = !t.has(Oi)),
        r && (t.add(Oi), Oi.deps.push(t));
    }
    function Bs(t, e, r, n, i, a) {
      const l = Dm.get(t);
      if (!l) return;
      let u = [];
      if (e === "clear") u = [...l.values()];
      else if (r === "length" && ut(t)) {
        const p = Number(n);
        l.forEach((m, v) => {
          (v === "length" || v >= p) && u.push(m);
        });
      } else
        switch ((r !== void 0 && u.push(l.get(r)), e)) {
          case "add":
            ut(t)
              ? Mm(r) && u.push(l.get("length"))
              : (u.push(l.get(Io)), Dl(t) && u.push(l.get(Hm)));
            break;
          case "delete":
            ut(t) || (u.push(l.get(Io)), Dl(t) && u.push(l.get(Hm)));
            break;
          case "set":
            Dl(t) && u.push(l.get(Io));
            break;
        }
      if (u.length === 1) u[0] && Wm(u[0]);
      else {
        const p = [];
        for (const m of u) m && p.push(...m);
        Wm(Fm(p));
      }
    }
    function Wm(t, e) {
      const r = ut(t) ? t : [...t];
      for (const n of r) n.computed && c1(n);
      for (const n of r) n.computed || c1(n);
    }
    function c1(t, e) {
      (t !== Oi || t.allowRecurse) && (t.scheduler ? t.scheduler() : t.run());
    }
    const ZL = Tm("__proto__,__v_isRef,__isVue"),
      u1 = new Set(
        Object.getOwnPropertyNames(Symbol)
          .filter((t) => t !== "arguments" && t !== "caller")
          .map((t) => Symbol[t])
          .filter(Lm)
      ),
      QL = Xm(),
      JL = Xm(!1, !0),
      eM = Xm(!0),
      h1 = tM();
    function tM() {
      const t = {};
      return (
        ["includes", "indexOf", "lastIndexOf"].forEach((e) => {
          t[e] = function (...r) {
            const n = _t(this);
            for (let a = 0, l = this.length; a < l; a++) Un(n, "get", a + "");
            const i = n[e](...r);
            return i === -1 || i === !1 ? n[e](...r.map(_t)) : i;
          };
        }),
        ["push", "pop", "shift", "unshift", "splice"].forEach((e) => {
          t[e] = function (...r) {
            Hl();
            const n = _t(this)[e].apply(this, r);
            return Ul(), n;
          };
        }),
        t
      );
    }
    function rM(t) {
      const e = _t(this);
      return Un(e, "has", t), e.hasOwnProperty(t);
    }
    function Xm(t = !1, e = !1) {
      return function (r, n, i) {
        if (n === "__v_isReactive") return !t;
        if (n === "__v_isReadonly") return t;
        if (n === "__v_isShallow") return e;
        if (n === "__v_raw" && i === (t ? (e ? yM : x1) : e ? b1 : y1).get(r))
          return r;
        const a = ut(r);
        if (!t) {
          if (a && Ut(h1, n)) return Reflect.get(h1, n, i);
          if (n === "hasOwnProperty") return rM;
        }
        const l = Reflect.get(r, n, i);
        return (Lm(n) ? u1.has(n) : ZL(n)) || (t || Un(r, "get", n), e)
          ? l
          : mn(l)
          ? a && Mm(n)
            ? l
            : l.value
          : Pr(l)
          ? t
            ? k1(l)
            : gu(l)
          : l;
      };
    }
    const nM = d1(),
      iM = d1(!0);
    function d1(t = !1) {
      return function (e, r, n, i) {
        let a = e[r];
        if (Xl(a) && mn(a) && !mn(n)) return !1;
        if (
          !t &&
          (!Wd(n) && !Xl(n) && ((a = _t(a)), (n = _t(n))),
          !ut(e) && mn(a) && !mn(n))
        )
          return (a.value = n), !0;
        const l = ut(e) && Mm(r) ? Number(r) < e.length : Ut(e, r),
          u = Reflect.set(e, r, n, i);
        return (
          e === _t(i) &&
            (l ? du(n, a) && Bs(e, "set", r, n) : Bs(e, "add", r, n)),
          u
        );
      };
    }
    function sM(t, e) {
      const r = Ut(t, e);
      t[e];
      const n = Reflect.deleteProperty(t, e);
      return n && r && Bs(t, "delete", e, void 0), n;
    }
    function aM(t, e) {
      const r = Reflect.has(t, e);
      return (!Lm(e) || !u1.has(e)) && Un(t, "has", e), r;
    }
    function oM(t) {
      return Un(t, "iterate", ut(t) ? "length" : Io), Reflect.ownKeys(t);
    }
    const f1 = { get: QL, set: nM, deleteProperty: sM, has: aM, ownKeys: oM },
      lM = {
        get: eM,
        set(t, e) {
          return !0;
        },
        deleteProperty(t, e) {
          return !0;
        },
      },
      cM = en({}, f1, { get: JL, set: iM }),
      jm = (t) => t,
      Bd = (t) => Reflect.getPrototypeOf(t);
    function Fd(t, e, r = !1, n = !1) {
      t = t.__v_raw;
      const i = _t(t),
        a = _t(e);
      r || (e !== a && Un(i, "get", e), Un(i, "get", a));
      const { has: l } = Bd(i),
        u = n ? jm : r ? Vm : mu;
      if (l.call(i, e)) return u(t.get(e));
      if (l.call(i, a)) return u(t.get(a));
      t !== i && t.get(e);
    }
    function Dd(t, e = !1) {
      const r = this.__v_raw,
        n = _t(r),
        i = _t(t);
      return (
        e || (t !== i && Un(n, "has", t), Un(n, "has", i)),
        t === i ? r.has(t) : r.has(t) || r.has(i)
      );
    }
    function zd(t, e = !1) {
      return (
        (t = t.__v_raw),
        !e && Un(_t(t), "iterate", Io),
        Reflect.get(t, "size", t)
      );
    }
    function p1(t) {
      t = _t(t);
      const e = _t(this);
      return Bd(e).has.call(e, t) || (e.add(t), Bs(e, "add", t, t)), this;
    }
    function g1(t, e) {
      e = _t(e);
      const r = _t(this),
        { has: n, get: i } = Bd(r);
      let a = n.call(r, t);
      a || ((t = _t(t)), (a = n.call(r, t)));
      const l = i.call(r, t);
      return (
        r.set(t, e),
        a ? du(e, l) && Bs(r, "set", t, e) : Bs(r, "add", t, e),
        this
      );
    }
    function m1(t) {
      const e = _t(this),
        { has: r, get: n } = Bd(e);
      let i = r.call(e, t);
      i || ((t = _t(t)), (i = r.call(e, t))), n && n.call(e, t);
      const a = e.delete(t);
      return i && Bs(e, "delete", t, void 0), a;
    }
    function v1() {
      const t = _t(this),
        e = t.size !== 0,
        r = t.clear();
      return e && Bs(t, "clear", void 0, void 0), r;
    }
    function Hd(t, e) {
      return function (r, n) {
        const i = this,
          a = i.__v_raw,
          l = _t(a),
          u = e ? jm : t ? Vm : mu;
        return (
          !t && Un(l, "iterate", Io),
          a.forEach((p, m) => r.call(n, u(p), u(m), i))
        );
      };
    }
    function Ud(t, e, r) {
      return function (...n) {
        const i = this.__v_raw,
          a = _t(i),
          l = Dl(a),
          u = t === "entries" || (t === Symbol.iterator && l),
          p = t === "keys" && l,
          m = i[t](...n),
          v = r ? jm : e ? Vm : mu;
        return (
          !e && Un(a, "iterate", p ? Hm : Io),
          {
            next() {
              const { value: w, done: S } = m.next();
              return S
                ? { value: w, done: S }
                : { value: u ? [v(w[0]), v(w[1])] : v(w), done: S };
            },
            [Symbol.iterator]() {
              return this;
            },
          }
        );
      };
    }
    function Ta(t) {
      return function (...e) {
        return t === "delete" ? !1 : this;
      };
    }
    function uM() {
      const t = {
          get(i) {
            return Fd(this, i);
          },
          get size() {
            return zd(this);
          },
          has: Dd,
          add: p1,
          set: g1,
          delete: m1,
          clear: v1,
          forEach: Hd(!1, !1),
        },
        e = {
          get(i) {
            return Fd(this, i, !1, !0);
          },
          get size() {
            return zd(this);
          },
          has: Dd,
          add: p1,
          set: g1,
          delete: m1,
          clear: v1,
          forEach: Hd(!1, !0),
        },
        r = {
          get(i) {
            return Fd(this, i, !0);
          },
          get size() {
            return zd(this, !0);
          },
          has(i) {
            return Dd.call(this, i, !0);
          },
          add: Ta("add"),
          set: Ta("set"),
          delete: Ta("delete"),
          clear: Ta("clear"),
          forEach: Hd(!0, !1),
        },
        n = {
          get(i) {
            return Fd(this, i, !0, !0);
          },
          get size() {
            return zd(this, !0);
          },
          has(i) {
            return Dd.call(this, i, !0);
          },
          add: Ta("add"),
          set: Ta("set"),
          delete: Ta("delete"),
          clear: Ta("clear"),
          forEach: Hd(!0, !0),
        };
      return (
        ["keys", "values", "entries", Symbol.iterator].forEach((i) => {
          (t[i] = Ud(i, !1, !1)),
            (r[i] = Ud(i, !0, !1)),
            (e[i] = Ud(i, !1, !0)),
            (n[i] = Ud(i, !0, !0));
        }),
        [t, r, e, n]
      );
    }
    const [hM, dM, fM, pM] = uM();
    function Gm(t, e) {
      const r = e ? (t ? pM : fM) : t ? dM : hM;
      return (n, i, a) =>
        i === "__v_isReactive"
          ? !t
          : i === "__v_isReadonly"
          ? t
          : i === "__v_raw"
          ? n
          : Reflect.get(Ut(r, i) && i in n ? r : n, i, a);
    }
    const gM = { get: Gm(!1, !1) },
      mM = { get: Gm(!1, !0) },
      vM = { get: Gm(!0, !1) },
      y1 = new WeakMap(),
      b1 = new WeakMap(),
      x1 = new WeakMap(),
      yM = new WeakMap();
    function bM(t) {
      switch (t) {
        case "Object":
        case "Array":
          return 1;
        case "Map":
        case "Set":
        case "WeakMap":
        case "WeakSet":
          return 2;
        default:
          return 0;
      }
    }
    function xM(t) {
      return t.__v_skip || !Object.isExtensible(t) ? 0 : bM(BL(t));
    }
    function gu(t) {
      return Xl(t) ? t : Ym(t, !1, f1, gM, y1);
    }
    function w1(t) {
      return Ym(t, !1, cM, mM, b1);
    }
    function k1(t) {
      return Ym(t, !0, lM, vM, x1);
    }
    function Ym(t, e, r, n, i) {
      if (!Pr(t) || (t.__v_raw && !(e && t.__v_isReactive))) return t;
      const a = i.get(t);
      if (a) return a;
      const l = xM(t);
      if (l === 0) return t;
      const u = new Proxy(t, l === 2 ? n : r);
      return i.set(t, u), u;
    }
    function Wl(t) {
      return Xl(t) ? Wl(t.__v_raw) : !!(t && t.__v_isReactive);
    }
    function Xl(t) {
      return !!(t && t.__v_isReadonly);
    }
    function Wd(t) {
      return !!(t && t.__v_isShallow);
    }
    function _1(t) {
      return Wl(t) || Xl(t);
    }
    function _t(t) {
      const e = t && t.__v_raw;
      return e ? _t(e) : t;
    }
    function Pa(t) {
      return Nd(t, "__v_skip", !0), t;
    }
    const mu = (t) => (Pr(t) ? gu(t) : t),
      Vm = (t) => (Pr(t) ? k1(t) : t);
    function A1(t) {
      Ia && Oi && ((t = _t(t)), l1(t.dep || (t.dep = Fm())));
    }
    function C1(t, e) {
      t = _t(t);
      const r = t.dep;
      r && Wm(r);
    }
    function mn(t) {
      return !!(t && t.__v_isRef === !0);
    }
    function We(t) {
      return E1(t, !1);
    }
    function S1(t) {
      return E1(t, !0);
    }
    function E1(t, e) {
      return mn(t) ? t : new wM(t, e);
    }
    class wM {
      constructor(e, r) {
        (this.__v_isShallow = r),
          (this.dep = void 0),
          (this.__v_isRef = !0),
          (this._rawValue = r ? e : _t(e)),
          (this._value = r ? e : mu(e));
      }
      get value() {
        return A1(this), this._value;
      }
      set value(e) {
        const r = this.__v_isShallow || Wd(e) || Xl(e);
        (e = r ? e : _t(e)),
          du(e, this._rawValue) &&
            ((this._rawValue = e), (this._value = r ? e : mu(e)), C1(this));
      }
    }
    function Xe(t) {
      return mn(t) ? t.value : t;
    }
    const kM = {
      get: (t, e, r) => Xe(Reflect.get(t, e, r)),
      set: (t, e, r, n) => {
        const i = t[e];
        return mn(i) && !mn(r) ? ((i.value = r), !0) : Reflect.set(t, e, r, n);
      },
    };
    function I1(t) {
      return Wl(t) ? t : new Proxy(t, kM);
    }
    class _M {
      constructor(e, r, n, i) {
        (this._setter = r),
          (this.dep = void 0),
          (this.__v_isRef = !0),
          (this.__v_isReadonly = !1),
          (this._dirty = !0),
          (this.effect = new Um(e, () => {
            this._dirty || ((this._dirty = !0), C1(this));
          })),
          (this.effect.computed = this),
          (this.effect.active = this._cacheable = !i),
          (this.__v_isReadonly = n);
      }
      get value() {
        const e = _t(this);
        return (
          A1(e),
          (e._dirty || !e._cacheable) &&
            ((e._dirty = !1), (e._value = e.effect.run())),
          e._value
        );
      }
      set value(e) {
        this._setter(e);
      }
    }
    function AM(t, e, r = !1) {
      let n, i;
      const a = kt(t);
      return (
        a ? ((n = t), (i = Ti)) : ((n = t.get), (i = t.set)),
        new _M(n, i, a || !i, r)
      );
    }
    function Oa(t, e, r, n) {
      let i;
      try {
        i = n ? t(...n) : t();
      } catch (a) {
        Xd(a, e, r);
      }
      return i;
    }
    function gi(t, e, r, n) {
      if (kt(t)) {
        const a = Oa(t, e, r, n);
        return (
          a &&
            $w(a) &&
            a.catch((l) => {
              Xd(l, e, r);
            }),
          a
        );
      }
      const i = [];
      for (let a = 0; a < t.length; a++) i.push(gi(t[a], e, r, n));
      return i;
    }
    function Xd(t, e, r, n = !0) {
      const i = e ? e.vnode : null;
      if (e) {
        let a = e.parent;
        const l = e.proxy,
          u = r;
        for (; a; ) {
          const m = a.ec;
          if (m) {
            for (let v = 0; v < m.length; v++) if (m[v](t, l, u) === !1) return;
          }
          a = a.parent;
        }
        const p = e.appContext.config.errorHandler;
        if (p) {
          Oa(p, null, 10, [t, l, u]);
          return;
        }
      }
      CM(t, r, i, n);
    }
    function CM(t, e, r, n = !0) {
      console.error(t);
    }
    let vu = !1,
      qm = !1;
    const Cn = [];
    let ls = 0;
    const jl = [];
    let Fs = null,
      To = 0;
    const T1 = Promise.resolve();
    let Km = null;
    function Li(t) {
      const e = Km || T1;
      return t ? e.then(this ? t.bind(this) : t) : e;
    }
    function SM(t) {
      let e = ls + 1,
        r = Cn.length;
      for (; e < r; ) {
        const n = (e + r) >>> 1;
        yu(Cn[n]) < t ? (e = n + 1) : (r = n);
      }
      return e;
    }
    function $m(t) {
      (!Cn.length || !Cn.includes(t, vu && t.allowRecurse ? ls + 1 : ls)) &&
        (t.id == null ? Cn.push(t) : Cn.splice(SM(t.id), 0, t), P1());
    }
    function P1() {
      !vu && !qm && ((qm = !0), (Km = T1.then(M1)));
    }
    function EM(t) {
      const e = Cn.indexOf(t);
      e > ls && Cn.splice(e, 1);
    }
    function IM(t) {
      ut(t)
        ? jl.push(...t)
        : (!Fs || !Fs.includes(t, t.allowRecurse ? To + 1 : To)) && jl.push(t),
        P1();
    }
    function O1(t, e = vu ? ls + 1 : 0) {
      for (; e < Cn.length; e++) {
        const r = Cn[e];
        r && r.pre && (Cn.splice(e, 1), e--, r());
      }
    }
    function L1(t) {
      if (jl.length) {
        const e = [...new Set(jl)];
        if (((jl.length = 0), Fs)) {
          Fs.push(...e);
          return;
        }
        for (
          Fs = e, Fs.sort((r, n) => yu(r) - yu(n)), To = 0;
          To < Fs.length;
          To++
        )
          Fs[To]();
        (Fs = null), (To = 0);
      }
    }
    const yu = (t) => (t.id == null ? 1 / 0 : t.id),
      TM = (t, e) => {
        const r = yu(t) - yu(e);
        if (r === 0) {
          if (t.pre && !e.pre) return -1;
          if (e.pre && !t.pre) return 1;
        }
        return r;
      };
    function M1(t) {
      (qm = !1), (vu = !0), Cn.sort(TM);
      const e = Ti;
      try {
        for (ls = 0; ls < Cn.length; ls++) {
          const r = Cn[ls];
          r && r.active !== !1 && Oa(r, null, 14);
        }
      } finally {
        (ls = 0),
          (Cn.length = 0),
          L1(),
          (vu = !1),
          (Km = null),
          (Cn.length || jl.length) && M1();
      }
    }
    function PM(t, e, ...r) {
      if (t.isUnmounted) return;
      const n = t.vnode.props || Br;
      let i = r;
      const a = e.startsWith("update:"),
        l = a && e.slice(7);
      if (l && l in n) {
        const v = `${l === "modelValue" ? "model" : l}Modifiers`,
          { number: w, trim: S } = n[v] || Br;
        S && (i = r.map((M) => (Gr(M) ? M.trim() : M))), w && (i = r.map(zL));
      }
      let u,
        p = n[(u = Rm(e))] || n[(u = Rm(os(e)))];
      !p && a && (p = n[(u = Rm(zl(e)))]), p && gi(p, t, 6, i);
      const m = n[u + "Once"];
      if (m) {
        if (!t.emitted) t.emitted = {};
        else if (t.emitted[u]) return;
        (t.emitted[u] = !0), gi(m, t, 6, i);
      }
    }
    function R1(t, e, r = !1) {
      const n = e.emitsCache,
        i = n.get(t);
      if (i !== void 0) return i;
      const a = t.emits;
      let l = {},
        u = !1;
      if (!kt(t)) {
        const p = (m) => {
          const v = R1(m, e, !0);
          v && ((u = !0), en(l, v));
        };
        !r && e.mixins.length && e.mixins.forEach(p),
          t.extends && p(t.extends),
          t.mixins && t.mixins.forEach(p);
      }
      return !a && !u
        ? (Pr(t) && n.set(t, null), null)
        : (ut(a) ? a.forEach((p) => (l[p] = null)) : en(l, a),
          Pr(t) && n.set(t, l),
          l);
    }
    function jd(t, e) {
      return !t || !Pd(e)
        ? !1
        : ((e = e.slice(2).replace(/Once$/, "")),
          Ut(t, e[0].toLowerCase() + e.slice(1)) || Ut(t, zl(e)) || Ut(t, e));
    }
    let Sn = null,
      Gd = null;
    function Yd(t) {
      const e = Sn;
      return (Sn = t), (Gd = (t && t.type.__scopeId) || null), e;
    }
    function OM(t) {
      Gd = t;
    }
    function LM() {
      Gd = null;
    }
    function Ft(t, e = Sn, r) {
      if (!e || t._n) return t;
      const n = (...i) => {
        n._d && hk(-1);
        const a = Yd(e);
        let l;
        try {
          l = t(...i);
        } finally {
          Yd(a), n._d && hk(1);
        }
        return l;
      };
      return (n._n = !0), (n._c = !0), (n._d = !0), n;
    }
    function Zm(t) {
      const {
        type: e,
        vnode: r,
        proxy: n,
        withProxy: i,
        props: a,
        propsOptions: [l],
        slots: u,
        attrs: p,
        emit: m,
        render: v,
        renderCache: w,
        data: S,
        setupState: M,
        ctx: D,
        inheritAttrs: z,
      } = t;
      let V, j;
      const B = Yd(t);
      try {
        if (r.shapeFlag & 4) {
          const re = i || n;
          (V = cs(v.call(re, re, w, a, M, S, D))), (j = p);
        } else {
          const re = e;
          (V = cs(
            re.length > 1 ? re(a, { attrs: p, slots: u, emit: m }) : re(a, null)
          )),
            (j = e.props ? p : MM(p));
        }
      } catch (re) {
        (Au.length = 0), Xd(re, t, 1), (V = $e(vi));
      }
      let ae = V;
      if (j && z !== !1) {
        const re = Object.keys(j),
          { shapeFlag: K } = ae;
        re.length &&
          K & 7 &&
          (l && re.some(Pm) && (j = RM(j, l)), (ae = Us(ae, j)));
      }
      return (
        r.dirs &&
          ((ae = Us(ae)),
          (ae.dirs = ae.dirs ? ae.dirs.concat(r.dirs) : r.dirs)),
        r.transition && (ae.transition = r.transition),
        (V = ae),
        Yd(B),
        V
      );
    }
    const MM = (t) => {
        let e;
        for (const r in t)
          (r === "class" || r === "style" || Pd(r)) &&
            ((e || (e = {}))[r] = t[r]);
        return e;
      },
      RM = (t, e) => {
        const r = {};
        for (const n in t) (!Pm(n) || !(n.slice(9) in e)) && (r[n] = t[n]);
        return r;
      };
    function NM(t, e, r) {
      const { props: n, children: i, component: a } = t,
        { props: l, children: u, patchFlag: p } = e,
        m = a.emitsOptions;
      if (e.dirs || e.transition) return !0;
      if (r && p >= 0) {
        if (p & 1024) return !0;
        if (p & 16) return n ? N1(n, l, m) : !!l;
        if (p & 8) {
          const v = e.dynamicProps;
          for (let w = 0; w < v.length; w++) {
            const S = v[w];
            if (l[S] !== n[S] && !jd(m, S)) return !0;
          }
        }
      } else
        return (i || u) && (!u || !u.$stable)
          ? !0
          : n === l
          ? !1
          : n
          ? l
            ? N1(n, l, m)
            : !0
          : !!l;
      return !1;
    }
    function N1(t, e, r) {
      const n = Object.keys(e);
      if (n.length !== Object.keys(t).length) return !0;
      for (let i = 0; i < n.length; i++) {
        const a = n[i];
        if (e[a] !== t[a] && !jd(r, a)) return !0;
      }
      return !1;
    }
    function BM({ vnode: t, parent: e }, r) {
      for (; e && e.subTree === t; ) ((t = e.vnode).el = r), (e = e.parent);
    }
    const FM = (t) => t.__isSuspense;
    function DM(t, e) {
      e && e.pendingBranch
        ? ut(t)
          ? e.effects.push(...t)
          : e.effects.push(t)
        : IM(t);
    }
    function Wn(t, e) {
      return Qm(t, null, e);
    }
    const Vd = {};
    function Or(t, e, r) {
      return Qm(t, e, r);
    }
    function Qm(
      t,
      e,
      { immediate: r, deep: n, flush: i, onTrack: a, onTrigger: l } = Br
    ) {
      var u;
      const p = qL() === ((u = ln) == null ? void 0 : u.scope) ? ln : null;
      let m,
        v = !1,
        w = !1;
      if (
        (mn(t)
          ? ((m = () => t.value), (v = Wd(t)))
          : Wl(t)
          ? ((m = () => t), (n = !0))
          : ut(t)
          ? ((w = !0),
            (v = t.some((re) => Wl(re) || Wd(re))),
            (m = () =>
              t.map((re) => {
                if (mn(re)) return re.value;
                if (Wl(re)) return Gl(re);
                if (kt(re)) return Oa(re, p, 2);
              })))
          : kt(t)
          ? e
            ? (m = () => Oa(t, p, 2))
            : (m = () => {
                if (!(p && p.isUnmounted)) return S && S(), gi(t, p, 3, [M]);
              })
          : (m = Ti),
        e && n)
      ) {
        const re = m;
        m = () => Gl(re());
      }
      let S,
        M = (re) => {
          S = B.onStop = () => {
            Oa(re, p, 4);
          };
        },
        D;
      if (Eu)
        if (
          ((M = Ti),
          e ? r && gi(e, p, 3, [m(), w ? [] : void 0, M]) : m(),
          i === "sync")
        ) {
          const re = MR();
          D = re.__watcherHandles || (re.__watcherHandles = []);
        } else return Ti;
      let z = w ? new Array(t.length).fill(Vd) : Vd;
      const V = () => {
        if (B.active)
          if (e) {
            const re = B.run();
            (n || v || (w ? re.some((K, fe) => du(K, z[fe])) : du(re, z))) &&
              (S && S(),
              gi(e, p, 3, [
                re,
                z === Vd ? void 0 : w && z[0] === Vd ? [] : z,
                M,
              ]),
              (z = re));
          } else B.run();
      };
      V.allowRecurse = !!e;
      let j;
      i === "sync"
        ? (j = V)
        : i === "post"
        ? (j = () => Xn(V, p && p.suspense))
        : ((V.pre = !0), p && (V.id = p.uid), (j = () => $m(V)));
      const B = new Um(m, j);
      e
        ? r
          ? V()
          : (z = B.run())
        : i === "post"
        ? Xn(B.run.bind(B), p && p.suspense)
        : B.run();
      const ae = () => {
        B.stop(), p && p.scope && Om(p.scope.effects, B);
      };
      return D && D.push(ae), ae;
    }
    function zM(t, e, r) {
      const n = this.proxy,
        i = Gr(t) ? (t.includes(".") ? B1(n, t) : () => n[t]) : t.bind(n, n);
      let a;
      kt(e) ? (a = e) : ((a = e.handler), (r = e));
      const l = ln;
      Vl(this);
      const u = Qm(i, a.bind(n), r);
      return l ? Vl(l) : Ro(), u;
    }
    function B1(t, e) {
      const r = e.split(".");
      return () => {
        let n = t;
        for (let i = 0; i < r.length && n; i++) n = n[r[i]];
        return n;
      };
    }
    function Gl(t, e) {
      if (!Pr(t) || t.__v_skip || ((e = e || new Set()), e.has(t))) return t;
      if ((e.add(t), mn(t))) Gl(t.value, e);
      else if (ut(t)) for (let r = 0; r < t.length; r++) Gl(t[r], e);
      else if (Kw(t) || Dl(t))
        t.forEach((r) => {
          Gl(r, e);
        });
      else if (Qw(t)) for (const r in t) Gl(t[r], e);
      return t;
    }
    function Po(t, e, r, n) {
      const i = t.dirs,
        a = e && e.dirs;
      for (let l = 0; l < i.length; l++) {
        const u = i[l];
        a && (u.oldValue = a[l].value);
        let p = u.dir[n];
        p && (Hl(), gi(p, r, 8, [t.el, u, t, e]), Ul());
      }
    }
    function HM() {
      const t = {
        isMounted: !1,
        isLeaving: !1,
        isUnmounting: !1,
        leavingVNodes: new Map(),
      };
      return (
        sr(() => {
          t.isMounted = !0;
        }),
        W1(() => {
          t.isUnmounting = !0;
        }),
        t
      );
    }
    const mi = [Function, Array],
      F1 = {
        mode: String,
        appear: Boolean,
        persisted: Boolean,
        onBeforeEnter: mi,
        onEnter: mi,
        onAfterEnter: mi,
        onEnterCancelled: mi,
        onBeforeLeave: mi,
        onLeave: mi,
        onAfterLeave: mi,
        onLeaveCancelled: mi,
        onBeforeAppear: mi,
        onAppear: mi,
        onAfterAppear: mi,
        onAppearCancelled: mi,
      },
      UM = {
        name: "BaseTransition",
        props: F1,
        setup(t, { slots: e }) {
          const r = Su(),
            n = HM();
          let i;
          return () => {
            const a = e.default && H1(e.default(), !0);
            if (!a || !a.length) return;
            let l = a[0];
            if (a.length > 1) {
              for (const z of a)
                if (z.type !== vi) {
                  l = z;
                  break;
                }
            }
            const u = _t(t),
              { mode: p } = u;
            if (n.isLeaving) return ev(l);
            const m = z1(l);
            if (!m) return ev(l);
            const v = Jm(m, u, n, r);
            tv(m, v);
            const w = r.subTree,
              S = w && z1(w);
            let M = !1;
            const { getTransitionKey: D } = m.type;
            if (D) {
              const z = D();
              i === void 0 ? (i = z) : z !== i && ((i = z), (M = !0));
            }
            if (S && S.type !== vi && (!Mo(m, S) || M)) {
              const z = Jm(S, u, n, r);
              if ((tv(S, z), p === "out-in"))
                return (
                  (n.isLeaving = !0),
                  (z.afterLeave = () => {
                    (n.isLeaving = !1), r.update.active !== !1 && r.update();
                  }),
                  ev(l)
                );
              p === "in-out" &&
                m.type !== vi &&
                (z.delayLeave = (V, j, B) => {
                  const ae = D1(n, S);
                  (ae[String(S.key)] = S),
                    (V._leaveCb = () => {
                      j(), (V._leaveCb = void 0), delete v.delayedLeave;
                    }),
                    (v.delayedLeave = B);
                });
            }
            return l;
          };
        },
      },
      WM = UM;
    function D1(t, e) {
      const { leavingVNodes: r } = t;
      let n = r.get(e.type);
      return n || ((n = Object.create(null)), r.set(e.type, n)), n;
    }
    function Jm(t, e, r, n) {
      const {
          appear: i,
          mode: a,
          persisted: l = !1,
          onBeforeEnter: u,
          onEnter: p,
          onAfterEnter: m,
          onEnterCancelled: v,
          onBeforeLeave: w,
          onLeave: S,
          onAfterLeave: M,
          onLeaveCancelled: D,
          onBeforeAppear: z,
          onAppear: V,
          onAfterAppear: j,
          onAppearCancelled: B,
        } = e,
        ae = String(t.key),
        re = D1(r, t),
        K = (pe, _e) => {
          pe && gi(pe, n, 9, _e);
        },
        fe = (pe, _e) => {
          const be = _e[1];
          K(pe, _e),
            ut(pe)
              ? pe.every((Ce) => Ce.length <= 1) && be()
              : pe.length <= 1 && be();
        },
        ye = {
          mode: a,
          persisted: l,
          beforeEnter(pe) {
            let _e = u;
            if (!r.isMounted)
              if (i) _e = z || u;
              else return;
            pe._leaveCb && pe._leaveCb(!0);
            const be = re[ae];
            be && Mo(t, be) && be.el._leaveCb && be.el._leaveCb(), K(_e, [pe]);
          },
          enter(pe) {
            let _e = p,
              be = m,
              Ce = v;
            if (!r.isMounted)
              if (i) (_e = V || p), (be = j || m), (Ce = B || v);
              else return;
            let ke = !1;
            const E = (pe._enterCb = (P) => {
              ke ||
                ((ke = !0),
                P ? K(Ce, [pe]) : K(be, [pe]),
                ye.delayedLeave && ye.delayedLeave(),
                (pe._enterCb = void 0));
            });
            _e ? fe(_e, [pe, E]) : E();
          },
          leave(pe, _e) {
            const be = String(t.key);
            if ((pe._enterCb && pe._enterCb(!0), r.isUnmounting)) return _e();
            K(w, [pe]);
            let Ce = !1;
            const ke = (pe._leaveCb = (E) => {
              Ce ||
                ((Ce = !0),
                _e(),
                E ? K(D, [pe]) : K(M, [pe]),
                (pe._leaveCb = void 0),
                re[be] === t && delete re[be]);
            });
            (re[be] = t), S ? fe(S, [pe, ke]) : ke();
          },
          clone(pe) {
            return Jm(pe, e, r, n);
          },
        };
      return ye;
    }
    function ev(t) {
      if (qd(t)) return (t = Us(t)), (t.children = null), t;
    }
    function z1(t) {
      return qd(t) ? (t.children ? t.children[0] : void 0) : t;
    }
    function tv(t, e) {
      t.shapeFlag & 6 && t.component
        ? tv(t.component.subTree, e)
        : t.shapeFlag & 128
        ? ((t.ssContent.transition = e.clone(t.ssContent)),
          (t.ssFallback.transition = e.clone(t.ssFallback)))
        : (t.transition = e);
    }
    function H1(t, e = !1, r) {
      let n = [],
        i = 0;
      for (let a = 0; a < t.length; a++) {
        let l = t[a];
        const u =
          r == null ? l.key : String(r) + String(l.key != null ? l.key : a);
        l.type === dr
          ? (l.patchFlag & 128 && i++, (n = n.concat(H1(l.children, e, u))))
          : (e || l.type !== vi) && n.push(u != null ? Us(l, { key: u }) : l);
      }
      if (i > 1) for (let a = 0; a < n.length; a++) n[a].patchFlag = -2;
      return n;
    }
    function dt(t, e) {
      return kt(t) ? (() => en({ name: t.name }, e, { setup: t }))() : t;
    }
    const bu = (t) => !!t.type.__asyncLoader,
      qd = (t) => t.type.__isKeepAlive;
    function XM(t, e) {
      U1(t, "a", e);
    }
    function jM(t, e) {
      U1(t, "da", e);
    }
    function U1(t, e, r = ln) {
      const n =
        t.__wdc ||
        (t.__wdc = () => {
          let i = r;
          for (; i; ) {
            if (i.isDeactivated) return;
            i = i.parent;
          }
          return t();
        });
      if ((Kd(e, n, r), r)) {
        let i = r.parent;
        for (; i && i.parent; )
          qd(i.parent.vnode) && GM(n, e, r, i), (i = i.parent);
      }
    }
    function GM(t, e, r, n) {
      const i = Kd(e, t, n, !0);
      En(() => {
        Om(n[e], i);
      }, r);
    }
    function Kd(t, e, r = ln, n = !1) {
      if (r) {
        const i = r[t] || (r[t] = []),
          a =
            e.__weh ||
            (e.__weh = (...l) => {
              if (r.isUnmounted) return;
              Hl(), Vl(r);
              const u = gi(e, r, t, l);
              return Ro(), Ul(), u;
            });
        return n ? i.unshift(a) : i.push(a), a;
      }
    }
    const Ds =
        (t) =>
        (e, r = ln) =>
          (!Eu || t === "sp") && Kd(t, (...n) => e(...n), r),
      YM = Ds("bm"),
      sr = Ds("m"),
      VM = Ds("bu"),
      qM = Ds("u"),
      W1 = Ds("bum"),
      En = Ds("um"),
      KM = Ds("sp"),
      $M = Ds("rtg"),
      ZM = Ds("rtc");
    function QM(t, e = ln) {
      Kd("ec", t, e);
    }
    const rv = "components";
    function X1(t, e) {
      return G1(rv, t, !0, e) || t;
    }
    const j1 = Symbol.for("v-ndc");
    function zs(t) {
      return Gr(t) ? G1(rv, t, !1) || t : t || j1;
    }
    function G1(t, e, r = !0, n = !1) {
      const i = Sn || ln;
      if (i) {
        const a = i.type;
        if (t === rv) {
          const u = PR(a, !1);
          if (u && (u === e || u === os(e) || u === Rd(os(e)))) return a;
        }
        const l = Y1(i[t] || a[t], e) || Y1(i.appContext[t], e);
        return !l && n ? a : l;
      }
    }
    function Y1(t, e) {
      return t && (t[e] || t[os(e)] || t[Rd(os(e))]);
    }
    function Hs(t, e, r, n) {
      let i;
      const a = r && r[n];
      if (ut(t) || Gr(t)) {
        i = new Array(t.length);
        for (let l = 0, u = t.length; l < u; l++)
          i[l] = e(t[l], l, void 0, a && a[l]);
      } else if (typeof t == "number") {
        i = new Array(t);
        for (let l = 0; l < t; l++) i[l] = e(l + 1, l, void 0, a && a[l]);
      } else if (Pr(t))
        if (t[Symbol.iterator])
          i = Array.from(t, (l, u) => e(l, u, void 0, a && a[u]));
        else {
          const l = Object.keys(t);
          i = new Array(l.length);
          for (let u = 0, p = l.length; u < p; u++) {
            const m = l[u];
            i[u] = e(t[m], m, u, a && a[u]);
          }
        }
      else i = [];
      return r && (r[n] = i), i;
    }
    function Oo(t, e, r = {}, n, i) {
      if (Sn.isCE || (Sn.parent && bu(Sn.parent) && Sn.parent.isCE))
        return e !== "default" && (r.name = e), $e("slot", r, n && n());
      let a = t[e];
      a && a._c && (a._d = !1), je();
      const l = a && V1(a(r)),
        u = jt(
          dr,
          { key: r.key || (l && l.key) || `_${e}` },
          l || (n ? n() : []),
          l && t._ === 1 ? 64 : -2
        );
      return (
        !i && u.scopeId && (u.slotScopeIds = [u.scopeId + "-s"]),
        a && a._c && (a._d = !0),
        u
      );
    }
    function V1(t) {
      return t.some((e) =>
        ef(e) ? !(e.type === vi || (e.type === dr && !V1(e.children))) : !0
      )
        ? t
        : null;
    }
    const nv = (t) => (t ? (gk(t) ? vv(t) || t.proxy : nv(t.parent)) : null),
      xu = en(Object.create(null), {
        $: (t) => t,
        $el: (t) => t.vnode.el,
        $data: (t) => t.data,
        $props: (t) => t.props,
        $attrs: (t) => t.attrs,
        $slots: (t) => t.slots,
        $refs: (t) => t.refs,
        $parent: (t) => nv(t.parent),
        $root: (t) => nv(t.root),
        $emit: (t) => t.emit,
        $options: (t) => av(t),
        $forceUpdate: (t) => t.f || (t.f = () => $m(t.update)),
        $nextTick: (t) => t.n || (t.n = Li.bind(t.proxy)),
        $watch: (t) => zM.bind(t),
      }),
      iv = (t, e) => t !== Br && !t.__isScriptSetup && Ut(t, e),
      JM = {
        get({ _: t }, e) {
          const {
            ctx: r,
            setupState: n,
            data: i,
            props: a,
            accessCache: l,
            type: u,
            appContext: p,
          } = t;
          let m;
          if (e[0] !== "$") {
            const M = l[e];
            if (M !== void 0)
              switch (M) {
                case 1:
                  return n[e];
                case 2:
                  return i[e];
                case 4:
                  return r[e];
                case 3:
                  return a[e];
              }
            else {
              if (iv(n, e)) return (l[e] = 1), n[e];
              if (i !== Br && Ut(i, e)) return (l[e] = 2), i[e];
              if ((m = t.propsOptions[0]) && Ut(m, e)) return (l[e] = 3), a[e];
              if (r !== Br && Ut(r, e)) return (l[e] = 4), r[e];
              sv && (l[e] = 0);
            }
          }
          const v = xu[e];
          let w, S;
          if (v) return e === "$attrs" && Un(t, "get", e), v(t);
          if ((w = u.__cssModules) && (w = w[e])) return w;
          if (r !== Br && Ut(r, e)) return (l[e] = 4), r[e];
          if (((S = p.config.globalProperties), Ut(S, e))) return S[e];
        },
        set({ _: t }, e, r) {
          const { data: n, setupState: i, ctx: a } = t;
          return iv(i, e)
            ? ((i[e] = r), !0)
            : n !== Br && Ut(n, e)
            ? ((n[e] = r), !0)
            : Ut(t.props, e) || (e[0] === "$" && e.slice(1) in t)
            ? !1
            : ((a[e] = r), !0);
        },
        has(
          {
            _: {
              data: t,
              setupState: e,
              accessCache: r,
              ctx: n,
              appContext: i,
              propsOptions: a,
            },
          },
          l
        ) {
          let u;
          return (
            !!r[l] ||
            (t !== Br && Ut(t, l)) ||
            iv(e, l) ||
            ((u = a[0]) && Ut(u, l)) ||
            Ut(n, l) ||
            Ut(xu, l) ||
            Ut(i.config.globalProperties, l)
          );
        },
        defineProperty(t, e, r) {
          return (
            r.get != null
              ? (t._.accessCache[e] = 0)
              : Ut(r, "value") && this.set(t, e, r.value, null),
            Reflect.defineProperty(t, e, r)
          );
        },
      };
    function eR() {
      return tR().slots;
    }
    function tR() {
      const t = Su();
      return t.setupContext || (t.setupContext = bk(t));
    }
    function q1(t) {
      return ut(t) ? t.reduce((e, r) => ((e[r] = null), e), {}) : t;
    }
    let sv = !0;
    function rR(t) {
      const e = av(t),
        r = t.proxy,
        n = t.ctx;
      (sv = !1), e.beforeCreate && K1(e.beforeCreate, t, "bc");
      const {
        data: i,
        computed: a,
        methods: l,
        watch: u,
        provide: p,
        inject: m,
        created: v,
        beforeMount: w,
        mounted: S,
        beforeUpdate: M,
        updated: D,
        activated: z,
        deactivated: V,
        beforeDestroy: j,
        beforeUnmount: B,
        destroyed: ae,
        unmounted: re,
        render: K,
        renderTracked: fe,
        renderTriggered: ye,
        errorCaptured: pe,
        serverPrefetch: _e,
        expose: be,
        inheritAttrs: Ce,
        components: ke,
        directives: E,
        filters: P,
      } = e;
      if ((m && nR(m, n, null), l))
        for (const U in l) {
          const Y = l[U];
          kt(Y) && (n[U] = Y.bind(r));
        }
      if (i) {
        const U = i.call(r, r);
        Pr(U) && (t.data = gu(U));
      }
      if (((sv = !0), a))
        for (const U in a) {
          const Y = a[U],
            ie = kt(Y) ? Y.bind(r, r) : kt(Y.get) ? Y.get.bind(r, r) : Ti,
            le = !kt(Y) && kt(Y.set) ? Y.set.bind(r) : Ti,
            J = He({ get: ie, set: le });
          Object.defineProperty(n, U, {
            enumerable: !0,
            configurable: !0,
            get: () => J.value,
            set: (T) => (J.value = T),
          });
        }
      if (u) for (const U in u) $1(u[U], n, r, U);
      if (p) {
        const U = kt(p) ? p.call(r) : p;
        Reflect.ownKeys(U).forEach((Y) => {
          vn(Y, U[Y]);
        });
      }
      v && K1(v, t, "c");
      function L(U, Y) {
        ut(Y) ? Y.forEach((ie) => U(ie.bind(r))) : Y && U(Y.bind(r));
      }
      if (
        (L(YM, w),
        L(sr, S),
        L(VM, M),
        L(qM, D),
        L(XM, z),
        L(jM, V),
        L(QM, pe),
        L(ZM, fe),
        L($M, ye),
        L(W1, B),
        L(En, re),
        L(KM, _e),
        ut(be))
      )
        if (be.length) {
          const U = t.exposed || (t.exposed = {});
          be.forEach((Y) => {
            Object.defineProperty(U, Y, {
              get: () => r[Y],
              set: (ie) => (r[Y] = ie),
            });
          });
        } else t.exposed || (t.exposed = {});
      K && t.render === Ti && (t.render = K),
        Ce != null && (t.inheritAttrs = Ce),
        ke && (t.components = ke),
        E && (t.directives = E);
    }
    function nR(t, e, r = Ti) {
      ut(t) && (t = ov(t));
      for (const n in t) {
        const i = t[n];
        let a;
        Pr(i)
          ? "default" in i
            ? (a = Lr(i.from || n, i.default, !0))
            : (a = Lr(i.from || n))
          : (a = Lr(i)),
          mn(a)
            ? Object.defineProperty(e, n, {
                enumerable: !0,
                configurable: !0,
                get: () => a.value,
                set: (l) => (a.value = l),
              })
            : (e[n] = a);
      }
    }
    function K1(t, e, r) {
      gi(ut(t) ? t.map((n) => n.bind(e.proxy)) : t.bind(e.proxy), e, r);
    }
    function $1(t, e, r, n) {
      const i = n.includes(".") ? B1(r, n) : () => r[n];
      if (Gr(t)) {
        const a = e[t];
        kt(a) && Or(i, a);
      } else if (kt(t)) Or(i, t.bind(r));
      else if (Pr(t))
        if (ut(t)) t.forEach((a) => $1(a, e, r, n));
        else {
          const a = kt(t.handler) ? t.handler.bind(r) : e[t.handler];
          kt(a) && Or(i, a, t);
        }
    }
    function av(t) {
      const e = t.type,
        { mixins: r, extends: n } = e,
        {
          mixins: i,
          optionsCache: a,
          config: { optionMergeStrategies: l },
        } = t.appContext,
        u = a.get(e);
      let p;
      return (
        u
          ? (p = u)
          : !i.length && !r && !n
          ? (p = e)
          : ((p = {}),
            i.length && i.forEach((m) => $d(p, m, l, !0)),
            $d(p, e, l)),
        Pr(e) && a.set(e, p),
        p
      );
    }
    function $d(t, e, r, n = !1) {
      const { mixins: i, extends: a } = e;
      a && $d(t, a, r, !0), i && i.forEach((l) => $d(t, l, r, !0));
      for (const l in e)
        if (!(n && l === "expose")) {
          const u = iR[l] || (r && r[l]);
          t[l] = u ? u(t[l], e[l]) : e[l];
        }
      return t;
    }
    const iR = {
      data: Z1,
      props: Q1,
      emits: Q1,
      methods: wu,
      computed: wu,
      beforeCreate: Nn,
      created: Nn,
      beforeMount: Nn,
      mounted: Nn,
      beforeUpdate: Nn,
      updated: Nn,
      beforeDestroy: Nn,
      beforeUnmount: Nn,
      destroyed: Nn,
      unmounted: Nn,
      activated: Nn,
      deactivated: Nn,
      errorCaptured: Nn,
      serverPrefetch: Nn,
      components: wu,
      directives: wu,
      watch: aR,
      provide: Z1,
      inject: sR,
    };
    function Z1(t, e) {
      return e
        ? t
          ? function () {
              return en(
                kt(t) ? t.call(this, this) : t,
                kt(e) ? e.call(this, this) : e
              );
            }
          : e
        : t;
    }
    function sR(t, e) {
      return wu(ov(t), ov(e));
    }
    function ov(t) {
      if (ut(t)) {
        const e = {};
        for (let r = 0; r < t.length; r++) e[t[r]] = t[r];
        return e;
      }
      return t;
    }
    function Nn(t, e) {
      return t ? [...new Set([].concat(t, e))] : e;
    }
    function wu(t, e) {
      return t ? en(Object.create(null), t, e) : e;
    }
    function Q1(t, e) {
      return t
        ? ut(t) && ut(e)
          ? [...new Set([...t, ...e])]
          : en(Object.create(null), q1(t), q1(e ?? {}))
        : e;
    }
    function aR(t, e) {
      if (!t) return e;
      if (!e) return t;
      const r = en(Object.create(null), t);
      for (const n in e) r[n] = Nn(t[n], e[n]);
      return r;
    }
    function J1() {
      return {
        app: null,
        config: {
          isNativeTag: ML,
          performance: !1,
          globalProperties: {},
          optionMergeStrategies: {},
          errorHandler: void 0,
          warnHandler: void 0,
          compilerOptions: {},
        },
        mixins: [],
        components: {},
        directives: {},
        provides: Object.create(null),
        optionsCache: new WeakMap(),
        propsCache: new WeakMap(),
        emitsCache: new WeakMap(),
      };
    }
    let oR = 0;
    function lR(t, e) {
      return function (r, n = null) {
        kt(r) || (r = en({}, r)), n != null && !Pr(n) && (n = null);
        const i = J1(),
          a = new Set();
        let l = !1;
        const u = (i.app = {
          _uid: oR++,
          _component: r,
          _props: n,
          _container: null,
          _context: i,
          _instance: null,
          version: RR,
          get config() {
            return i.config;
          },
          set config(p) {},
          use(p, ...m) {
            return (
              a.has(p) ||
                (p && kt(p.install)
                  ? (a.add(p), p.install(u, ...m))
                  : kt(p) && (a.add(p), p(u, ...m))),
              u
            );
          },
          mixin(p) {
            return i.mixins.includes(p) || i.mixins.push(p), u;
          },
          component(p, m) {
            return m ? ((i.components[p] = m), u) : i.components[p];
          },
          directive(p, m) {
            return m ? ((i.directives[p] = m), u) : i.directives[p];
          },
          mount(p, m, v) {
            if (!l) {
              const w = $e(r, n);
              return (
                (w.appContext = i),
                m && e ? e(w, p) : t(w, p, v),
                (l = !0),
                (u._container = p),
                (p.__vue_app__ = u),
                vv(w.component) || w.component.proxy
              );
            }
          },
          unmount() {
            l && (t(null, u._container), delete u._container.__vue_app__);
          },
          provide(p, m) {
            return (i.provides[p] = m), u;
          },
          runWithContext(p) {
            Zd = u;
            try {
              return p();
            } finally {
              Zd = null;
            }
          },
        });
        return u;
      };
    }
    let Zd = null;
    function vn(t, e) {
      if (ln) {
        let r = ln.provides;
        const n = ln.parent && ln.parent.provides;
        n === r && (r = ln.provides = Object.create(n)), (r[t] = e);
      }
    }
    function Lr(t, e, r = !1) {
      const n = ln || Sn;
      if (n || Zd) {
        const i = n
          ? n.parent == null
            ? n.vnode.appContext && n.vnode.appContext.provides
            : n.parent.provides
          : Zd._context.provides;
        if (i && t in i) return i[t];
        if (arguments.length > 1) return r && kt(e) ? e.call(n && n.proxy) : e;
      }
    }
    function cR(t, e, r, n = !1) {
      const i = {},
        a = {};
      Nd(a, tf, 1), (t.propsDefaults = Object.create(null)), ek(t, e, i, a);
      for (const l in t.propsOptions[0]) l in i || (i[l] = void 0);
      r
        ? (t.props = n ? i : w1(i))
        : t.type.props
        ? (t.props = i)
        : (t.props = a),
        (t.attrs = a);
    }
    function uR(t, e, r, n) {
      const {
          props: i,
          attrs: a,
          vnode: { patchFlag: l },
        } = t,
        u = _t(i),
        [p] = t.propsOptions;
      let m = !1;
      if ((n || l > 0) && !(l & 16)) {
        if (l & 8) {
          const v = t.vnode.dynamicProps;
          for (let w = 0; w < v.length; w++) {
            let S = v[w];
            if (jd(t.emitsOptions, S)) continue;
            const M = e[S];
            if (p)
              if (Ut(a, S)) M !== a[S] && ((a[S] = M), (m = !0));
              else {
                const D = os(S);
                i[D] = lv(p, u, D, M, t, !1);
              }
            else M !== a[S] && ((a[S] = M), (m = !0));
          }
        }
      } else {
        ek(t, e, i, a) && (m = !0);
        let v;
        for (const w in u)
          (!e || (!Ut(e, w) && ((v = zl(w)) === w || !Ut(e, v)))) &&
            (p
              ? r &&
                (r[w] !== void 0 || r[v] !== void 0) &&
                (i[w] = lv(p, u, w, void 0, t, !0))
              : delete i[w]);
        if (a !== u)
          for (const w in a) (!e || !Ut(e, w)) && (delete a[w], (m = !0));
      }
      m && Bs(t, "set", "$attrs");
    }
    function ek(t, e, r, n) {
      const [i, a] = t.propsOptions;
      let l = !1,
        u;
      if (e)
        for (let p in e) {
          if (Ld(p)) continue;
          const m = e[p];
          let v;
          i && Ut(i, (v = os(p)))
            ? !a || !a.includes(v)
              ? (r[v] = m)
              : ((u || (u = {}))[v] = m)
            : jd(t.emitsOptions, p) ||
              ((!(p in n) || m !== n[p]) && ((n[p] = m), (l = !0)));
        }
      if (a) {
        const p = _t(r),
          m = u || Br;
        for (let v = 0; v < a.length; v++) {
          const w = a[v];
          r[w] = lv(i, p, w, m[w], t, !Ut(m, w));
        }
      }
      return l;
    }
    function lv(t, e, r, n, i, a) {
      const l = t[r];
      if (l != null) {
        const u = Ut(l, "default");
        if (u && n === void 0) {
          const p = l.default;
          if (l.type !== Function && !l.skipFactory && kt(p)) {
            const { propsDefaults: m } = i;
            r in m ? (n = m[r]) : (Vl(i), (n = m[r] = p.call(null, e)), Ro());
          } else n = p;
        }
        l[0] &&
          (a && !u ? (n = !1) : l[1] && (n === "" || n === zl(r)) && (n = !0));
      }
      return n;
    }
    function tk(t, e, r = !1) {
      const n = e.propsCache,
        i = n.get(t);
      if (i) return i;
      const a = t.props,
        l = {},
        u = [];
      let p = !1;
      if (!kt(t)) {
        const v = (w) => {
          p = !0;
          const [S, M] = tk(w, e, !0);
          en(l, S), M && u.push(...M);
        };
        !r && e.mixins.length && e.mixins.forEach(v),
          t.extends && v(t.extends),
          t.mixins && t.mixins.forEach(v);
      }
      if (!a && !p) return Pr(t) && n.set(t, Fl), Fl;
      if (ut(a))
        for (let v = 0; v < a.length; v++) {
          const w = os(a[v]);
          rk(w) && (l[w] = Br);
        }
      else if (a)
        for (const v in a) {
          const w = os(v);
          if (rk(w)) {
            const S = a[v],
              M = (l[w] = ut(S) || kt(S) ? { type: S } : en({}, S));
            if (M) {
              const D = sk(Boolean, M.type),
                z = sk(String, M.type);
              (M[0] = D > -1),
                (M[1] = z < 0 || D < z),
                (D > -1 || Ut(M, "default")) && u.push(w);
            }
          }
        }
      const m = [l, u];
      return Pr(t) && n.set(t, m), m;
    }
    function rk(t) {
      return t[0] !== "$";
    }
    function nk(t) {
      const e = t && t.toString().match(/^\s*(function|class) (\w+)/);
      return e ? e[2] : t === null ? "null" : "";
    }
    function ik(t, e) {
      return nk(t) === nk(e);
    }
    function sk(t, e) {
      return ut(e) ? e.findIndex((r) => ik(r, t)) : kt(e) && ik(e, t) ? 0 : -1;
    }
    const ak = (t) => t[0] === "_" || t === "$stable",
      cv = (t) => (ut(t) ? t.map(cs) : [cs(t)]),
      hR = (t, e, r) => {
        if (e._n) return e;
        const n = Ft((...i) => cv(e(...i)), r);
        return (n._c = !1), n;
      },
      ok = (t, e, r) => {
        const n = t._ctx;
        for (const i in t) {
          if (ak(i)) continue;
          const a = t[i];
          if (kt(a)) e[i] = hR(i, a, n);
          else if (a != null) {
            const l = cv(a);
            e[i] = () => l;
          }
        }
      },
      lk = (t, e) => {
        const r = cv(e);
        t.slots.default = () => r;
      },
      dR = (t, e) => {
        if (t.vnode.shapeFlag & 32) {
          const r = e._;
          r ? ((t.slots = _t(e)), Nd(e, "_", r)) : ok(e, (t.slots = {}));
        } else (t.slots = {}), e && lk(t, e);
        Nd(t.slots, tf, 1);
      },
      fR = (t, e, r) => {
        const { vnode: n, slots: i } = t;
        let a = !0,
          l = Br;
        if (n.shapeFlag & 32) {
          const u = e._;
          u
            ? r && u === 1
              ? (a = !1)
              : (en(i, e), !r && u === 1 && delete i._)
            : ((a = !e.$stable), ok(e, i)),
            (l = e);
        } else e && (lk(t, e), (l = { default: 1 }));
        if (a) for (const u in i) !ak(u) && !(u in l) && delete i[u];
      };
    function uv(t, e, r, n, i = !1) {
      if (ut(t)) {
        t.forEach((S, M) => uv(S, e && (ut(e) ? e[M] : e), r, n, i));
        return;
      }
      if (bu(n) && !i) return;
      const a = n.shapeFlag & 4 ? vv(n.component) || n.component.proxy : n.el,
        l = i ? null : a,
        { i: u, r: p } = t,
        m = e && e.r,
        v = u.refs === Br ? (u.refs = {}) : u.refs,
        w = u.setupState;
      if (
        (m != null &&
          m !== p &&
          (Gr(m)
            ? ((v[m] = null), Ut(w, m) && (w[m] = null))
            : mn(m) && (m.value = null)),
        kt(p))
      )
        Oa(p, u, 12, [l, v]);
      else {
        const S = Gr(p),
          M = mn(p);
        if (S || M) {
          const D = () => {
            if (t.f) {
              const z = S ? (Ut(w, p) ? w[p] : v[p]) : p.value;
              i
                ? ut(z) && Om(z, a)
                : ut(z)
                ? z.includes(a) || z.push(a)
                : S
                ? ((v[p] = [a]), Ut(w, p) && (w[p] = v[p]))
                : ((p.value = [a]), t.k && (v[t.k] = p.value));
            } else
              S
                ? ((v[p] = l), Ut(w, p) && (w[p] = l))
                : M && ((p.value = l), t.k && (v[t.k] = l));
          };
          l ? ((D.id = -1), Xn(D, r)) : D();
        }
      }
    }
    const Xn = DM;
    function pR(t) {
      return gR(t);
    }
    function gR(t, e) {
      const r = Bm();
      r.__VUE__ = !0;
      const {
          insert: n,
          remove: i,
          patchProp: a,
          createElement: l,
          createText: u,
          createComment: p,
          setText: m,
          setElementText: v,
          parentNode: w,
          nextSibling: S,
          setScopeId: M = Ti,
          insertStaticContent: D,
        } = t,
        z = (
          oe,
          W,
          Q,
          ge = null,
          I = null,
          R = null,
          q = !1,
          ce = null,
          ne = !!W.dynamicChildren
        ) => {
          if (oe === W) return;
          oe && !Mo(oe, W) && ((ge = me(oe)), Z(oe, I, R, !0), (oe = null)),
            W.patchFlag === -2 && ((ne = !1), (W.dynamicChildren = null));
          const { type: de, ref: Te, shapeFlag: Re } = W;
          switch (de) {
            case _u:
              V(oe, W, Q, ge);
              break;
            case vi:
              j(oe, W, Q, ge);
              break;
            case Jd:
              oe == null && B(W, Q, ge, q);
              break;
            case dr:
              ke(oe, W, Q, ge, I, R, q, ce, ne);
              break;
            default:
              Re & 1
                ? K(oe, W, Q, ge, I, R, q, ce, ne)
                : Re & 6
                ? E(oe, W, Q, ge, I, R, q, ce, ne)
                : (Re & 64 || Re & 128) &&
                  de.process(oe, W, Q, ge, I, R, q, ce, ne, Se);
          }
          Te != null && I && uv(Te, oe && oe.ref, R, W || oe, !W);
        },
        V = (oe, W, Q, ge) => {
          if (oe == null) n((W.el = u(W.children)), Q, ge);
          else {
            const I = (W.el = oe.el);
            W.children !== oe.children && m(I, W.children);
          }
        },
        j = (oe, W, Q, ge) => {
          oe == null ? n((W.el = p(W.children || "")), Q, ge) : (W.el = oe.el);
        },
        B = (oe, W, Q, ge) => {
          [oe.el, oe.anchor] = D(oe.children, W, Q, ge, oe.el, oe.anchor);
        },
        ae = ({ el: oe, anchor: W }, Q, ge) => {
          let I;
          for (; oe && oe !== W; ) (I = S(oe)), n(oe, Q, ge), (oe = I);
          n(W, Q, ge);
        },
        re = ({ el: oe, anchor: W }) => {
          let Q;
          for (; oe && oe !== W; ) (Q = S(oe)), i(oe), (oe = Q);
          i(W);
        },
        K = (oe, W, Q, ge, I, R, q, ce, ne) => {
          (q = q || W.type === "svg"),
            oe == null
              ? fe(W, Q, ge, I, R, q, ce, ne)
              : _e(oe, W, I, R, q, ce, ne);
        },
        fe = (oe, W, Q, ge, I, R, q, ce) => {
          let ne, de;
          const {
            type: Te,
            props: Re,
            shapeFlag: Ve,
            transition: Pe,
            dirs: Be,
          } = oe;
          if (
            ((ne = oe.el = l(oe.type, R, Re && Re.is, Re)),
            Ve & 8
              ? v(ne, oe.children)
              : Ve & 16 &&
                pe(
                  oe.children,
                  ne,
                  null,
                  ge,
                  I,
                  R && Te !== "foreignObject",
                  q,
                  ce
                ),
            Be && Po(oe, null, ge, "created"),
            ye(ne, oe, oe.scopeId, q, ge),
            Re)
          ) {
            for (const Je in Re)
              Je !== "value" &&
                !Ld(Je) &&
                a(ne, Je, null, Re[Je], R, oe.children, ge, I, Ee);
            "value" in Re && a(ne, "value", null, Re.value),
              (de = Re.onVnodeBeforeMount) && us(de, ge, oe);
          }
          Be && Po(oe, null, ge, "beforeMount");
          const Ze = (!I || (I && !I.pendingBranch)) && Pe && !Pe.persisted;
          Ze && Pe.beforeEnter(ne),
            n(ne, W, Q),
            ((de = Re && Re.onVnodeMounted) || Ze || Be) &&
              Xn(() => {
                de && us(de, ge, oe),
                  Ze && Pe.enter(ne),
                  Be && Po(oe, null, ge, "mounted");
              }, I);
        },
        ye = (oe, W, Q, ge, I) => {
          if ((Q && M(oe, Q), ge))
            for (let R = 0; R < ge.length; R++) M(oe, ge[R]);
          if (I) {
            let R = I.subTree;
            if (W === R) {
              const q = I.vnode;
              ye(oe, q, q.scopeId, q.slotScopeIds, I.parent);
            }
          }
        },
        pe = (oe, W, Q, ge, I, R, q, ce, ne = 0) => {
          for (let de = ne; de < oe.length; de++) {
            const Te = (oe[de] = ce ? La(oe[de]) : cs(oe[de]));
            z(null, Te, W, Q, ge, I, R, q, ce);
          }
        },
        _e = (oe, W, Q, ge, I, R, q) => {
          const ce = (W.el = oe.el);
          let { patchFlag: ne, dynamicChildren: de, dirs: Te } = W;
          ne |= oe.patchFlag & 16;
          const Re = oe.props || Br,
            Ve = W.props || Br;
          let Pe;
          Q && Lo(Q, !1),
            (Pe = Ve.onVnodeBeforeUpdate) && us(Pe, Q, W, oe),
            Te && Po(W, oe, Q, "beforeUpdate"),
            Q && Lo(Q, !0);
          const Be = I && W.type !== "foreignObject";
          if (
            (de
              ? be(oe.dynamicChildren, de, ce, Q, ge, Be, R)
              : q || ie(oe, W, ce, null, Q, ge, Be, R, !1),
            ne > 0)
          ) {
            if (ne & 16) Ce(ce, W, Re, Ve, Q, ge, I);
            else if (
              (ne & 2 &&
                Re.class !== Ve.class &&
                a(ce, "class", null, Ve.class, I),
              ne & 4 && a(ce, "style", Re.style, Ve.style, I),
              ne & 8)
            ) {
              const Ze = W.dynamicProps;
              for (let Je = 0; Je < Ze.length; Je++) {
                const st = Ze[Je],
                  Ur = Re[st],
                  Dt = Ve[st];
                (Dt !== Ur || st === "value") &&
                  a(ce, st, Ur, Dt, I, oe.children, Q, ge, Ee);
              }
            }
            ne & 1 && oe.children !== W.children && v(ce, W.children);
          } else !q && de == null && Ce(ce, W, Re, Ve, Q, ge, I);
          ((Pe = Ve.onVnodeUpdated) || Te) &&
            Xn(() => {
              Pe && us(Pe, Q, W, oe), Te && Po(W, oe, Q, "updated");
            }, ge);
        },
        be = (oe, W, Q, ge, I, R, q) => {
          for (let ce = 0; ce < W.length; ce++) {
            const ne = oe[ce],
              de = W[ce],
              Te =
                ne.el && (ne.type === dr || !Mo(ne, de) || ne.shapeFlag & 70)
                  ? w(ne.el)
                  : Q;
            z(ne, de, Te, null, ge, I, R, q, !0);
          }
        },
        Ce = (oe, W, Q, ge, I, R, q) => {
          if (Q !== ge) {
            if (Q !== Br)
              for (const ce in Q)
                !Ld(ce) &&
                  !(ce in ge) &&
                  a(oe, ce, Q[ce], null, q, W.children, I, R, Ee);
            for (const ce in ge) {
              if (Ld(ce)) continue;
              const ne = ge[ce],
                de = Q[ce];
              ne !== de &&
                ce !== "value" &&
                a(oe, ce, de, ne, q, W.children, I, R, Ee);
            }
            "value" in ge && a(oe, "value", Q.value, ge.value);
          }
        },
        ke = (oe, W, Q, ge, I, R, q, ce, ne) => {
          const de = (W.el = oe ? oe.el : u("")),
            Te = (W.anchor = oe ? oe.anchor : u(""));
          let { patchFlag: Re, dynamicChildren: Ve, slotScopeIds: Pe } = W;
          Pe && (ce = ce ? ce.concat(Pe) : Pe),
            oe == null
              ? (n(de, Q, ge),
                n(Te, Q, ge),
                pe(W.children, Q, Te, I, R, q, ce, ne))
              : Re > 0 && Re & 64 && Ve && oe.dynamicChildren
              ? (be(oe.dynamicChildren, Ve, Q, I, R, q, ce),
                (W.key != null || (I && W === I.subTree)) && hv(oe, W, !0))
              : ie(oe, W, Q, Te, I, R, q, ce, ne);
        },
        E = (oe, W, Q, ge, I, R, q, ce, ne) => {
          (W.slotScopeIds = ce),
            oe == null
              ? W.shapeFlag & 512
                ? I.ctx.activate(W, Q, ge, q, ne)
                : P(W, Q, ge, I, R, q, ne)
              : L(oe, W, ne);
        },
        P = (oe, W, Q, ge, I, R, q) => {
          const ce = (oe.component = SR(oe, ge, I));
          if ((qd(oe) && (ce.ctx.renderer = Se), ER(ce), ce.asyncDep)) {
            if ((I && I.registerDep(ce, U), !oe.el)) {
              const ne = (ce.subTree = $e(vi));
              j(null, ne, W, Q);
            }
            return;
          }
          U(ce, oe, W, Q, I, R, q);
        },
        L = (oe, W, Q) => {
          const ge = (W.component = oe.component);
          if (NM(oe, W, Q))
            if (ge.asyncDep && !ge.asyncResolved) {
              Y(ge, W, Q);
              return;
            } else (ge.next = W), EM(ge.update), ge.update();
          else (W.el = oe.el), (ge.vnode = W);
        },
        U = (oe, W, Q, ge, I, R, q) => {
          const ce = () => {
              if (oe.isMounted) {
                let { next: Te, bu: Re, u: Ve, parent: Pe, vnode: Be } = oe,
                  Ze = Te,
                  Je;
                Lo(oe, !1),
                  Te ? ((Te.el = Be.el), Y(oe, Te, q)) : (Te = Be),
                  Re && Nm(Re),
                  (Je = Te.props && Te.props.onVnodeBeforeUpdate) &&
                    us(Je, Pe, Te, Be),
                  Lo(oe, !0);
                const st = Zm(oe),
                  Ur = oe.subTree;
                (oe.subTree = st),
                  z(Ur, st, w(Ur.el), me(Ur), oe, I, R),
                  (Te.el = st.el),
                  Ze === null && BM(oe, st.el),
                  Ve && Xn(Ve, I),
                  (Je = Te.props && Te.props.onVnodeUpdated) &&
                    Xn(() => us(Je, Pe, Te, Be), I);
              } else {
                let Te;
                const { el: Re, props: Ve } = W,
                  { bm: Pe, m: Be, parent: Ze } = oe,
                  Je = bu(W);
                if (
                  (Lo(oe, !1),
                  Pe && Nm(Pe),
                  !Je && (Te = Ve && Ve.onVnodeBeforeMount) && us(Te, Ze, W),
                  Lo(oe, !0),
                  Re && Ne)
                ) {
                  const st = () => {
                    (oe.subTree = Zm(oe)), Ne(Re, oe.subTree, oe, I, null);
                  };
                  Je
                    ? W.type.__asyncLoader().then(() => !oe.isUnmounted && st())
                    : st();
                } else {
                  const st = (oe.subTree = Zm(oe));
                  z(null, st, Q, ge, oe, I, R), (W.el = st.el);
                }
                if ((Be && Xn(Be, I), !Je && (Te = Ve && Ve.onVnodeMounted))) {
                  const st = W;
                  Xn(() => us(Te, Ze, st), I);
                }
                (W.shapeFlag & 256 ||
                  (Ze && bu(Ze.vnode) && Ze.vnode.shapeFlag & 256)) &&
                  oe.a &&
                  Xn(oe.a, I),
                  (oe.isMounted = !0),
                  (W = Q = ge = null);
              }
            },
            ne = (oe.effect = new Um(ce, () => $m(de), oe.scope)),
            de = (oe.update = () => ne.run());
          (de.id = oe.uid), Lo(oe, !0), de();
        },
        Y = (oe, W, Q) => {
          W.component = oe;
          const ge = oe.vnode.props;
          (oe.vnode = W),
            (oe.next = null),
            uR(oe, W.props, ge, Q),
            fR(oe, W.children, Q),
            Hl(),
            O1(),
            Ul();
        },
        ie = (oe, W, Q, ge, I, R, q, ce, ne = !1) => {
          const de = oe && oe.children,
            Te = oe ? oe.shapeFlag : 0,
            Re = W.children,
            { patchFlag: Ve, shapeFlag: Pe } = W;
          if (Ve > 0) {
            if (Ve & 128) {
              J(de, Re, Q, ge, I, R, q, ce, ne);
              return;
            } else if (Ve & 256) {
              le(de, Re, Q, ge, I, R, q, ce, ne);
              return;
            }
          }
          Pe & 8
            ? (Te & 16 && Ee(de, I, R), Re !== de && v(Q, Re))
            : Te & 16
            ? Pe & 16
              ? J(de, Re, Q, ge, I, R, q, ce, ne)
              : Ee(de, I, R, !0)
            : (Te & 8 && v(Q, ""), Pe & 16 && pe(Re, Q, ge, I, R, q, ce, ne));
        },
        le = (oe, W, Q, ge, I, R, q, ce, ne) => {
          (oe = oe || Fl), (W = W || Fl);
          const de = oe.length,
            Te = W.length,
            Re = Math.min(de, Te);
          let Ve;
          for (Ve = 0; Ve < Re; Ve++) {
            const Pe = (W[Ve] = ne ? La(W[Ve]) : cs(W[Ve]));
            z(oe[Ve], Pe, Q, null, I, R, q, ce, ne);
          }
          de > Te
            ? Ee(oe, I, R, !0, !1, Re)
            : pe(W, Q, ge, I, R, q, ce, ne, Re);
        },
        J = (oe, W, Q, ge, I, R, q, ce, ne) => {
          let de = 0;
          const Te = W.length;
          let Re = oe.length - 1,
            Ve = Te - 1;
          for (; de <= Re && de <= Ve; ) {
            const Pe = oe[de],
              Be = (W[de] = ne ? La(W[de]) : cs(W[de]));
            if (Mo(Pe, Be)) z(Pe, Be, Q, null, I, R, q, ce, ne);
            else break;
            de++;
          }
          for (; de <= Re && de <= Ve; ) {
            const Pe = oe[Re],
              Be = (W[Ve] = ne ? La(W[Ve]) : cs(W[Ve]));
            if (Mo(Pe, Be)) z(Pe, Be, Q, null, I, R, q, ce, ne);
            else break;
            Re--, Ve--;
          }
          if (de > Re) {
            if (de <= Ve) {
              const Pe = Ve + 1,
                Be = Pe < Te ? W[Pe].el : ge;
              for (; de <= Ve; )
                z(
                  null,
                  (W[de] = ne ? La(W[de]) : cs(W[de])),
                  Q,
                  Be,
                  I,
                  R,
                  q,
                  ce,
                  ne
                ),
                  de++;
            }
          } else if (de > Ve) for (; de <= Re; ) Z(oe[de], I, R, !0), de++;
          else {
            const Pe = de,
              Be = de,
              Ze = new Map();
            for (de = Be; de <= Ve; de++) {
              const wt = (W[de] = ne ? La(W[de]) : cs(W[de]));
              wt.key != null && Ze.set(wt.key, de);
            }
            let Je,
              st = 0;
            const Ur = Ve - Be + 1;
            let Dt = !1,
              Qt = 0;
            const Mn = new Array(Ur);
            for (de = 0; de < Ur; de++) Mn[de] = 0;
            for (de = Pe; de <= Re; de++) {
              const wt = oe[de];
              if (st >= Ur) {
                Z(wt, I, R, !0);
                continue;
              }
              let sn;
              if (wt.key != null) sn = Ze.get(wt.key);
              else
                for (Je = Be; Je <= Ve; Je++)
                  if (Mn[Je - Be] === 0 && Mo(wt, W[Je])) {
                    sn = Je;
                    break;
                  }
              sn === void 0
                ? Z(wt, I, R, !0)
                : ((Mn[sn - Be] = de + 1),
                  sn >= Qt ? (Qt = sn) : (Dt = !0),
                  z(wt, W[sn], Q, null, I, R, q, ce, ne),
                  st++);
            }
            const Jt = Dt ? mR(Mn) : Fl;
            for (Je = Jt.length - 1, de = Ur - 1; de >= 0; de--) {
              const wt = Be + de,
                sn = W[wt],
                Zt = wt + 1 < Te ? W[wt + 1].el : ge;
              Mn[de] === 0
                ? z(null, sn, Q, Zt, I, R, q, ce, ne)
                : Dt && (Je < 0 || de !== Jt[Je] ? T(sn, Q, Zt, 2) : Je--);
            }
          }
        },
        T = (oe, W, Q, ge, I = null) => {
          const {
            el: R,
            type: q,
            transition: ce,
            children: ne,
            shapeFlag: de,
          } = oe;
          if (de & 6) {
            T(oe.component.subTree, W, Q, ge);
            return;
          }
          if (de & 128) {
            oe.suspense.move(W, Q, ge);
            return;
          }
          if (de & 64) {
            q.move(oe, W, Q, Se);
            return;
          }
          if (q === dr) {
            n(R, W, Q);
            for (let Te = 0; Te < ne.length; Te++) T(ne[Te], W, Q, ge);
            n(oe.anchor, W, Q);
            return;
          }
          if (q === Jd) {
            ae(oe, W, Q);
            return;
          }
          if (ge !== 2 && de & 1 && ce)
            if (ge === 0)
              ce.beforeEnter(R), n(R, W, Q), Xn(() => ce.enter(R), I);
            else {
              const { leave: Te, delayLeave: Re, afterLeave: Ve } = ce,
                Pe = () => n(R, W, Q),
                Be = () => {
                  Te(R, () => {
                    Pe(), Ve && Ve();
                  });
                };
              Re ? Re(R, Pe, Be) : Be();
            }
          else n(R, W, Q);
        },
        Z = (oe, W, Q, ge = !1, I = !1) => {
          const {
            type: R,
            props: q,
            ref: ce,
            children: ne,
            dynamicChildren: de,
            shapeFlag: Te,
            patchFlag: Re,
            dirs: Ve,
          } = oe;
          if ((ce != null && uv(ce, null, Q, oe, !0), Te & 256)) {
            W.ctx.deactivate(oe);
            return;
          }
          const Pe = Te & 1 && Ve,
            Be = !bu(oe);
          let Ze;
          if (
            (Be && (Ze = q && q.onVnodeBeforeUnmount) && us(Ze, W, oe), Te & 6)
          )
            X(oe.component, Q, ge);
          else {
            if (Te & 128) {
              oe.suspense.unmount(Q, ge);
              return;
            }
            Pe && Po(oe, null, W, "beforeUnmount"),
              Te & 64
                ? oe.type.remove(oe, W, Q, I, Se, ge)
                : de && (R !== dr || (Re > 0 && Re & 64))
                ? Ee(de, W, Q, !1, !0)
                : ((R === dr && Re & 384) || (!I && Te & 16)) && Ee(ne, W, Q),
              ge && Oe(oe);
          }
          ((Be && (Ze = q && q.onVnodeUnmounted)) || Pe) &&
            Xn(() => {
              Ze && us(Ze, W, oe), Pe && Po(oe, null, W, "unmounted");
            }, Q);
        },
        Oe = (oe) => {
          const { type: W, el: Q, anchor: ge, transition: I } = oe;
          if (W === dr) {
            Me(Q, ge);
            return;
          }
          if (W === Jd) {
            re(oe);
            return;
          }
          const R = () => {
            i(Q), I && !I.persisted && I.afterLeave && I.afterLeave();
          };
          if (oe.shapeFlag & 1 && I && !I.persisted) {
            const { leave: q, delayLeave: ce } = I,
              ne = () => q(Q, R);
            ce ? ce(oe.el, R, ne) : ne();
          } else R();
        },
        Me = (oe, W) => {
          let Q;
          for (; oe !== W; ) (Q = S(oe)), i(oe), (oe = Q);
          i(W);
        },
        X = (oe, W, Q) => {
          const { bum: ge, scope: I, update: R, subTree: q, um: ce } = oe;
          ge && Nm(ge),
            I.stop(),
            R && ((R.active = !1), Z(q, oe, W, Q)),
            ce && Xn(ce, W),
            Xn(() => {
              oe.isUnmounted = !0;
            }, W),
            W &&
              W.pendingBranch &&
              !W.isUnmounted &&
              oe.asyncDep &&
              !oe.asyncResolved &&
              oe.suspenseId === W.pendingId &&
              (W.deps--, W.deps === 0 && W.resolve());
        },
        Ee = (oe, W, Q, ge = !1, I = !1, R = 0) => {
          for (let q = R; q < oe.length; q++) Z(oe[q], W, Q, ge, I);
        },
        me = (oe) =>
          oe.shapeFlag & 6
            ? me(oe.component.subTree)
            : oe.shapeFlag & 128
            ? oe.suspense.next()
            : S(oe.anchor || oe.el),
        xe = (oe, W, Q) => {
          oe == null
            ? W._vnode && Z(W._vnode, null, null, !0)
            : z(W._vnode || null, oe, W, null, null, null, Q),
            O1(),
            L1(),
            (W._vnode = oe);
        },
        Se = {
          p: z,
          um: Z,
          m: T,
          r: Oe,
          mt: P,
          mc: pe,
          pc: ie,
          pbc: be,
          n: me,
          o: t,
        };
      let Ie, Ne;
      return (
        e && ([Ie, Ne] = e(Se)),
        { render: xe, hydrate: Ie, createApp: lR(xe, Ie) }
      );
    }
    function Lo({ effect: t, update: e }, r) {
      t.allowRecurse = e.allowRecurse = r;
    }
    function hv(t, e, r = !1) {
      const n = t.children,
        i = e.children;
      if (ut(n) && ut(i))
        for (let a = 0; a < n.length; a++) {
          const l = n[a];
          let u = i[a];
          u.shapeFlag & 1 &&
            !u.dynamicChildren &&
            ((u.patchFlag <= 0 || u.patchFlag === 32) &&
              ((u = i[a] = La(i[a])), (u.el = l.el)),
            r || hv(l, u)),
            u.type === _u && (u.el = l.el);
        }
    }
    function mR(t) {
      const e = t.slice(),
        r = [0];
      let n, i, a, l, u;
      const p = t.length;
      for (n = 0; n < p; n++) {
        const m = t[n];
        if (m !== 0) {
          if (((i = r[r.length - 1]), t[i] < m)) {
            (e[n] = i), r.push(n);
            continue;
          }
          for (a = 0, l = r.length - 1; a < l; )
            (u = (a + l) >> 1), t[r[u]] < m ? (a = u + 1) : (l = u);
          m < t[r[a]] && (a > 0 && (e[n] = r[a - 1]), (r[a] = n));
        }
      }
      for (a = r.length, l = r[a - 1]; a-- > 0; ) (r[a] = l), (l = e[l]);
      return r;
    }
    const vR = (t) => t.__isTeleport,
      ku = (t) => t && (t.disabled || t.disabled === ""),
      ck = (t) => typeof SVGElement < "u" && t instanceof SVGElement,
      dv = (t, e) => {
        const r = t && t.to;
        return Gr(r) ? (e ? e(r) : null) : r;
      },
      yR = {
        __isTeleport: !0,
        process(t, e, r, n, i, a, l, u, p, m) {
          const {
              mc: v,
              pc: w,
              pbc: S,
              o: {
                insert: M,
                querySelector: D,
                createText: z,
                createComment: V,
              },
            } = m,
            j = ku(e.props);
          let { shapeFlag: B, children: ae, dynamicChildren: re } = e;
          if (t == null) {
            const K = (e.el = z("")),
              fe = (e.anchor = z(""));
            M(K, r, n), M(fe, r, n);
            const ye = (e.target = dv(e.props, D)),
              pe = (e.targetAnchor = z(""));
            ye && (M(pe, ye), (l = l || ck(ye)));
            const _e = (be, Ce) => {
              B & 16 && v(ae, be, Ce, i, a, l, u, p);
            };
            j ? _e(r, fe) : ye && _e(ye, pe);
          } else {
            e.el = t.el;
            const K = (e.anchor = t.anchor),
              fe = (e.target = t.target),
              ye = (e.targetAnchor = t.targetAnchor),
              pe = ku(t.props),
              _e = pe ? r : fe,
              be = pe ? K : ye;
            if (
              ((l = l || ck(fe)),
              re
                ? (S(t.dynamicChildren, re, _e, i, a, l, u), hv(t, e, !0))
                : p || w(t, e, _e, be, i, a, l, u, !1),
              j)
            )
              pe || Qd(e, r, K, m, 1);
            else if ((e.props && e.props.to) !== (t.props && t.props.to)) {
              const Ce = (e.target = dv(e.props, D));
              Ce && Qd(e, Ce, null, m, 0);
            } else pe && Qd(e, fe, ye, m, 1);
          }
          uk(e);
        },
        remove(t, e, r, n, { um: i, o: { remove: a } }, l) {
          const {
            shapeFlag: u,
            children: p,
            anchor: m,
            targetAnchor: v,
            target: w,
            props: S,
          } = t;
          if ((w && a(v), (l || !ku(S)) && (a(m), u & 16)))
            for (let M = 0; M < p.length; M++) {
              const D = p[M];
              i(D, e, r, !0, !!D.dynamicChildren);
            }
        },
        move: Qd,
        hydrate: bR,
      };
    function Qd(t, e, r, { o: { insert: n }, m: i }, a = 2) {
      a === 0 && n(t.targetAnchor, e, r);
      const { el: l, anchor: u, shapeFlag: p, children: m, props: v } = t,
        w = a === 2;
      if ((w && n(l, e, r), (!w || ku(v)) && p & 16))
        for (let S = 0; S < m.length; S++) i(m[S], e, r, 2);
      w && n(u, e, r);
    }
    function bR(
      t,
      e,
      r,
      n,
      i,
      a,
      { o: { nextSibling: l, parentNode: u, querySelector: p } },
      m
    ) {
      const v = (e.target = dv(e.props, p));
      if (v) {
        const w = v._lpa || v.firstChild;
        if (e.shapeFlag & 16)
          if (ku(e.props))
            (e.anchor = m(l(t), e, u(t), r, n, i, a)), (e.targetAnchor = w);
          else {
            e.anchor = l(t);
            let S = w;
            for (; S; )
              if (
                ((S = l(S)),
                S && S.nodeType === 8 && S.data === "teleport anchor")
              ) {
                (e.targetAnchor = S),
                  (v._lpa = e.targetAnchor && l(e.targetAnchor));
                break;
              }
            m(w, e, v, r, n, i, a);
          }
        uk(e);
      }
      return e.anchor && l(e.anchor);
    }
    const fv = yR;
    function uk(t) {
      const e = t.ctx;
      if (e && e.ut) {
        let r = t.children[0].el;
        for (; r !== t.targetAnchor; )
          r.nodeType === 1 && r.setAttribute("data-v-owner", e.uid),
            (r = r.nextSibling);
        e.ut();
      }
    }
    const dr = Symbol.for("v-fgt"),
      _u = Symbol.for("v-txt"),
      vi = Symbol.for("v-cmt"),
      Jd = Symbol.for("v-stc"),
      Au = [];
    let Mi = null;
    function je(t = !1) {
      Au.push((Mi = t ? null : []));
    }
    function xR() {
      Au.pop(), (Mi = Au[Au.length - 1] || null);
    }
    let Cu = 1;
    function hk(t) {
      Cu += t;
    }
    function dk(t) {
      return (
        (t.dynamicChildren = Cu > 0 ? Mi || Fl : null),
        xR(),
        Cu > 0 && Mi && Mi.push(t),
        t
      );
    }
    function et(t, e, r, n, i, a) {
      return dk(ve(t, e, r, n, i, a, !0));
    }
    function jt(t, e, r, n, i) {
      return dk($e(t, e, r, n, i, !0));
    }
    function ef(t) {
      return t ? t.__v_isVNode === !0 : !1;
    }
    function Mo(t, e) {
      return t.type === e.type && t.key === e.key;
    }
    const tf = "__vInternal",
      fk = ({ key: t }) => t ?? null,
      rf = ({ ref: t, ref_key: e, ref_for: r }) => (
        typeof t == "number" && (t = "" + t),
        t != null
          ? Gr(t) || mn(t) || kt(t)
            ? { i: Sn, r: t, k: e, f: !!r }
            : t
          : null
      );
    function ve(
      t,
      e = null,
      r = null,
      n = 0,
      i = null,
      a = t === dr ? 0 : 1,
      l = !1,
      u = !1
    ) {
      const p = {
        __v_isVNode: !0,
        __v_skip: !0,
        type: t,
        props: e,
        key: e && fk(e),
        ref: e && rf(e),
        scopeId: Gd,
        slotScopeIds: null,
        children: r,
        component: null,
        suspense: null,
        ssContent: null,
        ssFallback: null,
        dirs: null,
        transition: null,
        el: null,
        anchor: null,
        target: null,
        targetAnchor: null,
        staticCount: 0,
        shapeFlag: a,
        patchFlag: n,
        dynamicProps: i,
        dynamicChildren: null,
        appContext: null,
        ctx: Sn,
      };
      return (
        u
          ? (gv(p, r), a & 128 && t.normalize(p))
          : r && (p.shapeFlag |= Gr(r) ? 8 : 16),
        Cu > 0 &&
          !l &&
          Mi &&
          (p.patchFlag > 0 || a & 6) &&
          p.patchFlag !== 32 &&
          Mi.push(p),
        p
      );
    }
    const $e = wR;
    function wR(t, e = null, r = null, n = 0, i = null, a = !1) {
      if (((!t || t === j1) && (t = vi), ef(t))) {
        const u = Us(t, e, !0);
        return (
          r && gv(u, r),
          Cu > 0 &&
            !a &&
            Mi &&
            (u.shapeFlag & 6 ? (Mi[Mi.indexOf(t)] = u) : Mi.push(u)),
          (u.patchFlag |= -2),
          u
        );
      }
      if ((OR(t) && (t = t.__vccOpts), e)) {
        e = kR(e);
        let { class: u, style: p } = e;
        u && !Gr(u) && (e.class = ot(u)),
          Pr(p) && (_1(p) && !ut(p) && (p = en({}, p)), (e.style = fu(p)));
      }
      const l = Gr(t)
        ? 1
        : FM(t)
        ? 128
        : vR(t)
        ? 64
        : Pr(t)
        ? 4
        : kt(t)
        ? 2
        : 0;
      return ve(t, e, r, n, i, l, a, !0);
    }
    function kR(t) {
      return t ? (_1(t) || tf in t ? en({}, t) : t) : null;
    }
    function Us(t, e, r = !1) {
      const { props: n, ref: i, patchFlag: a, children: l } = t,
        u = e ? _R(n || {}, e) : n;
      return {
        __v_isVNode: !0,
        __v_skip: !0,
        type: t.type,
        props: u,
        key: u && fk(u),
        ref:
          e && e.ref
            ? r && i
              ? ut(i)
                ? i.concat(rf(e))
                : [i, rf(e)]
              : rf(e)
            : i,
        scopeId: t.scopeId,
        slotScopeIds: t.slotScopeIds,
        children: l,
        target: t.target,
        targetAnchor: t.targetAnchor,
        staticCount: t.staticCount,
        shapeFlag: t.shapeFlag,
        patchFlag: e && t.type !== dr ? (a === -1 ? 16 : a | 16) : a,
        dynamicProps: t.dynamicProps,
        dynamicChildren: t.dynamicChildren,
        appContext: t.appContext,
        dirs: t.dirs,
        transition: t.transition,
        component: t.component,
        suspense: t.suspense,
        ssContent: t.ssContent && Us(t.ssContent),
        ssFallback: t.ssFallback && Us(t.ssFallback),
        el: t.el,
        anchor: t.anchor,
        ctx: t.ctx,
        ce: t.ce,
      };
    }
    function Ws(t = " ", e = 0) {
      return $e(_u, null, t, e);
    }
    function pv(t, e) {
      const r = $e(Jd, null, t);
      return (r.staticCount = e), r;
    }
    function Yr(t = "", e = !1) {
      return e ? (je(), jt(vi, null, t)) : $e(vi, null, t);
    }
    function cs(t) {
      return t == null || typeof t == "boolean"
        ? $e(vi)
        : ut(t)
        ? $e(dr, null, t.slice())
        : typeof t == "object"
        ? La(t)
        : $e(_u, null, String(t));
    }
    function La(t) {
      return (t.el === null && t.patchFlag !== -1) || t.memo ? t : Us(t);
    }
    function gv(t, e) {
      let r = 0;
      const { shapeFlag: n } = t;
      if (e == null) e = null;
      else if (ut(e)) r = 16;
      else if (typeof e == "object")
        if (n & 65) {
          const i = e.default;
          i && (i._c && (i._d = !1), gv(t, i()), i._c && (i._d = !0));
          return;
        } else {
          r = 32;
          const i = e._;
          !i && !(tf in e)
            ? (e._ctx = Sn)
            : i === 3 &&
              Sn &&
              (Sn.slots._ === 1
                ? (e._ = 1)
                : ((e._ = 2), (t.patchFlag |= 1024)));
        }
      else
        kt(e)
          ? ((e = { default: e, _ctx: Sn }), (r = 32))
          : ((e = String(e)), n & 64 ? ((r = 16), (e = [Ws(e)])) : (r = 8));
      (t.children = e), (t.shapeFlag |= r);
    }
    function _R(...t) {
      const e = {};
      for (let r = 0; r < t.length; r++) {
        const n = t[r];
        for (const i in n)
          if (i === "class")
            e.class !== n.class && (e.class = ot([e.class, n.class]));
          else if (i === "style") e.style = fu([e.style, n.style]);
          else if (Pd(i)) {
            const a = e[i],
              l = n[i];
            l &&
              a !== l &&
              !(ut(a) && a.includes(l)) &&
              (e[i] = a ? [].concat(a, l) : l);
          } else i !== "" && (e[i] = n[i]);
      }
      return e;
    }
    function us(t, e, r, n = null) {
      gi(t, e, 7, [r, n]);
    }
    const AR = J1();
    let CR = 0;
    function SR(t, e, r) {
      const n = t.type,
        i = (e ? e.appContext : t.appContext) || AR,
        a = {
          uid: CR++,
          vnode: t,
          type: n,
          parent: e,
          appContext: i,
          root: null,
          next: null,
          subTree: null,
          effect: null,
          update: null,
          scope: new r1(!0),
          render: null,
          proxy: null,
          exposed: null,
          exposeProxy: null,
          withProxy: null,
          provides: e ? e.provides : Object.create(i.provides),
          accessCache: null,
          renderCache: [],
          components: null,
          directives: null,
          propsOptions: tk(n, i),
          emitsOptions: R1(n, i),
          emit: null,
          emitted: null,
          propsDefaults: Br,
          inheritAttrs: n.inheritAttrs,
          ctx: Br,
          data: Br,
          props: Br,
          attrs: Br,
          slots: Br,
          refs: Br,
          setupState: Br,
          setupContext: null,
          attrsProxy: null,
          slotsProxy: null,
          suspense: r,
          suspenseId: r ? r.pendingId : 0,
          asyncDep: null,
          asyncResolved: !1,
          isMounted: !1,
          isUnmounted: !1,
          isDeactivated: !1,
          bc: null,
          c: null,
          bm: null,
          m: null,
          bu: null,
          u: null,
          um: null,
          bum: null,
          da: null,
          a: null,
          rtg: null,
          rtc: null,
          ec: null,
          sp: null,
        };
      return (
        (a.ctx = { _: a }),
        (a.root = e ? e.root : a),
        (a.emit = PM.bind(null, a)),
        t.ce && t.ce(a),
        a
      );
    }
    let ln = null;
    const Su = () => ln || Sn;
    let mv,
      Yl,
      pk = "__VUE_INSTANCE_SETTERS__";
    (Yl = Bm()[pk]) || (Yl = Bm()[pk] = []),
      Yl.push((t) => (ln = t)),
      (mv = (t) => {
        Yl.length > 1 ? Yl.forEach((e) => e(t)) : Yl[0](t);
      });
    const Vl = (t) => {
        mv(t), t.scope.on();
      },
      Ro = () => {
        ln && ln.scope.off(), mv(null);
      };
    function gk(t) {
      return t.vnode.shapeFlag & 4;
    }
    let Eu = !1;
    function ER(t, e = !1) {
      Eu = e;
      const { props: r, children: n } = t.vnode,
        i = gk(t);
      cR(t, r, i, e), dR(t, n);
      const a = i ? IR(t, e) : void 0;
      return (Eu = !1), a;
    }
    function IR(t, e) {
      const r = t.type;
      (t.accessCache = Object.create(null)),
        (t.proxy = Pa(new Proxy(t.ctx, JM)));
      const { setup: n } = r;
      if (n) {
        const i = (t.setupContext = n.length > 1 ? bk(t) : null);
        Vl(t), Hl();
        const a = Oa(n, t, 0, [t.props, i]);
        if ((Ul(), Ro(), $w(a))) {
          if ((a.then(Ro, Ro), e))
            return a
              .then((l) => {
                mk(t, l, e);
              })
              .catch((l) => {
                Xd(l, t, 0);
              });
          t.asyncDep = a;
        } else mk(t, a, e);
      } else yk(t, e);
    }
    function mk(t, e, r) {
      kt(e)
        ? t.type.__ssrInlineRender
          ? (t.ssrRender = e)
          : (t.render = e)
        : Pr(e) && (t.setupState = I1(e)),
        yk(t, r);
    }
    let vk;
    function yk(t, e, r) {
      const n = t.type;
      if (!t.render) {
        if (!e && vk && !n.render) {
          const i = n.template || av(t).template;
          if (i) {
            const { isCustomElement: a, compilerOptions: l } =
                t.appContext.config,
              { delimiters: u, compilerOptions: p } = n,
              m = en(en({ isCustomElement: a, delimiters: u }, l), p);
            n.render = vk(i, m);
          }
        }
        t.render = n.render || Ti;
      }
      Vl(t), Hl(), rR(t), Ul(), Ro();
    }
    function TR(t) {
      return (
        t.attrsProxy ||
        (t.attrsProxy = new Proxy(t.attrs, {
          get(e, r) {
            return Un(t, "get", "$attrs"), e[r];
          },
        }))
      );
    }
    function bk(t) {
      const e = (r) => {
        t.exposed = r || {};
      };
      return {
        get attrs() {
          return TR(t);
        },
        slots: t.slots,
        emit: t.emit,
        expose: e,
      };
    }
    function vv(t) {
      if (t.exposed)
        return (
          t.exposeProxy ||
          (t.exposeProxy = new Proxy(I1(Pa(t.exposed)), {
            get(e, r) {
              if (r in e) return e[r];
              if (r in xu) return xu[r](t);
            },
            has(e, r) {
              return r in e || r in xu;
            },
          }))
        );
    }
    function PR(t, e = !0) {
      return kt(t) ? t.displayName || t.name : t.name || (e && t.__name);
    }
    function OR(t) {
      return kt(t) && "__vccOpts" in t;
    }
    const He = (t, e) => AM(t, e, Eu);
    function Vr(t, e, r) {
      const n = arguments.length;
      return n === 2
        ? Pr(e) && !ut(e)
          ? ef(e)
            ? $e(t, null, [e])
            : $e(t, e)
          : $e(t, null, e)
        : (n > 3
            ? (r = Array.prototype.slice.call(arguments, 2))
            : n === 3 && ef(r) && (r = [r]),
          $e(t, e, r));
    }
    const LR = Symbol.for("v-scx"),
      MR = () => Lr(LR),
      RR = "3.3.4",
      NR = "http://www.w3.org/2000/svg",
      No = typeof document < "u" ? document : null,
      xk = No && No.createElement("template"),
      BR = {
        insert: (t, e, r) => {
          e.insertBefore(t, r || null);
        },
        remove: (t) => {
          const e = t.parentNode;
          e && e.removeChild(t);
        },
        createElement: (t, e, r, n) => {
          const i = e
            ? No.createElementNS(NR, t)
            : No.createElement(t, r ? { is: r } : void 0);
          return (
            t === "select" &&
              n &&
              n.multiple != null &&
              i.setAttribute("multiple", n.multiple),
            i
          );
        },
        createText: (t) => No.createTextNode(t),
        createComment: (t) => No.createComment(t),
        setText: (t, e) => {
          t.nodeValue = e;
        },
        setElementText: (t, e) => {
          t.textContent = e;
        },
        parentNode: (t) => t.parentNode,
        nextSibling: (t) => t.nextSibling,
        querySelector: (t) => No.querySelector(t),
        setScopeId(t, e) {
          t.setAttribute(e, "");
        },
        insertStaticContent(t, e, r, n, i, a) {
          const l = r ? r.previousSibling : e.lastChild;
          if (i && (i === a || i.nextSibling))
            for (
              ;
              e.insertBefore(i.cloneNode(!0), r),
                !(i === a || !(i = i.nextSibling));

            );
          else {
            xk.innerHTML = n ? `<svg>${t}</svg>` : t;
            const u = xk.content;
            if (n) {
              const p = u.firstChild;
              for (; p.firstChild; ) u.appendChild(p.firstChild);
              u.removeChild(p);
            }
            e.insertBefore(u, r);
          }
          return [
            l ? l.nextSibling : e.firstChild,
            r ? r.previousSibling : e.lastChild,
          ];
        },
      };
    function FR(t, e, r) {
      const n = t._vtc;
      n && (e = (e ? [e, ...n] : [...n]).join(" ")),
        e == null
          ? t.removeAttribute("class")
          : r
          ? t.setAttribute("class", e)
          : (t.className = e);
    }
    function DR(t, e, r) {
      const n = t.style,
        i = Gr(r);
      if (r && !i) {
        if (e && !Gr(e)) for (const a in e) r[a] == null && yv(n, a, "");
        for (const a in r) yv(n, a, r[a]);
      } else {
        const a = n.display;
        i ? e !== r && (n.cssText = r) : e && t.removeAttribute("style"),
          "_vod" in t && (n.display = a);
      }
    }
    const wk = /\s*!important$/;
    function yv(t, e, r) {
      if (ut(r)) r.forEach((n) => yv(t, e, n));
      else if ((r == null && (r = ""), e.startsWith("--"))) t.setProperty(e, r);
      else {
        const n = zR(t, e);
        wk.test(r)
          ? t.setProperty(zl(n), r.replace(wk, ""), "important")
          : (t[n] = r);
      }
    }
    const kk = ["Webkit", "Moz", "ms"],
      bv = {};
    function zR(t, e) {
      const r = bv[e];
      if (r) return r;
      let n = os(e);
      if (n !== "filter" && n in t) return (bv[e] = n);
      n = Rd(n);
      for (let i = 0; i < kk.length; i++) {
        const a = kk[i] + n;
        if (a in t) return (bv[e] = a);
      }
      return e;
    }
    const _k = "http://www.w3.org/1999/xlink";
    function HR(t, e, r, n, i) {
      if (n && e.startsWith("xlink:"))
        r == null
          ? t.removeAttributeNS(_k, e.slice(6, e.length))
          : t.setAttributeNS(_k, e, r);
      else {
        const a = YL(e);
        r == null || (a && !e1(r))
          ? t.removeAttribute(e)
          : t.setAttribute(e, a ? "" : r);
      }
    }
    function UR(t, e, r, n, i, a, l) {
      if (e === "innerHTML" || e === "textContent") {
        n && l(n, i, a), (t[e] = r ?? "");
        return;
      }
      const u = t.tagName;
      if (e === "value" && u !== "PROGRESS" && !u.includes("-")) {
        t._value = r;
        const m = u === "OPTION" ? t.getAttribute("value") : t.value,
          v = r ?? "";
        m !== v && (t.value = v), r == null && t.removeAttribute(e);
        return;
      }
      let p = !1;
      if (r === "" || r == null) {
        const m = typeof t[e];
        m === "boolean"
          ? (r = e1(r))
          : r == null && m === "string"
          ? ((r = ""), (p = !0))
          : m === "number" && ((r = 0), (p = !0));
      }
      try {
        t[e] = r;
      } catch {}
      p && t.removeAttribute(e);
    }
    function WR(t, e, r, n) {
      t.addEventListener(e, r, n);
    }
    function XR(t, e, r, n) {
      t.removeEventListener(e, r, n);
    }
    function jR(t, e, r, n, i = null) {
      const a = t._vei || (t._vei = {}),
        l = a[e];
      if (n && l) l.value = n;
      else {
        const [u, p] = GR(e);
        if (n) {
          const m = (a[e] = qR(n, i));
          WR(t, u, m, p);
        } else l && (XR(t, u, l, p), (a[e] = void 0));
      }
    }
    const Ak = /(?:Once|Passive|Capture)$/;
    function GR(t) {
      let e;
      if (Ak.test(t)) {
        e = {};
        let r;
        for (; (r = t.match(Ak)); )
          (t = t.slice(0, t.length - r[0].length)),
            (e[r[0].toLowerCase()] = !0);
      }
      return [t[2] === ":" ? t.slice(3) : zl(t.slice(2)), e];
    }
    let xv = 0;
    const YR = Promise.resolve(),
      VR = () => xv || (YR.then(() => (xv = 0)), (xv = Date.now()));
    function qR(t, e) {
      const r = (n) => {
        if (!n._vts) n._vts = Date.now();
        else if (n._vts <= r.attached) return;
        gi(KR(n, r.value), e, 5, [n]);
      };
      return (r.value = t), (r.attached = VR()), r;
    }
    function KR(t, e) {
      if (ut(e)) {
        const r = t.stopImmediatePropagation;
        return (
          (t.stopImmediatePropagation = () => {
            r.call(t), (t._stopped = !0);
          }),
          e.map((n) => (i) => !i._stopped && n && n(i))
        );
      } else return e;
    }
    const Ck = /^on[a-z]/,
      $R = (t, e, r, n, i = !1, a, l, u, p) => {
        e === "class"
          ? FR(t, n, i)
          : e === "style"
          ? DR(t, r, n)
          : Pd(e)
          ? Pm(e) || jR(t, e, r, n, l)
          : (
              e[0] === "."
                ? ((e = e.slice(1)), !0)
                : e[0] === "^"
                ? ((e = e.slice(1)), !1)
                : ZR(t, e, n, i)
            )
          ? UR(t, e, n, a, l, u, p)
          : (e === "true-value"
              ? (t._trueValue = n)
              : e === "false-value" && (t._falseValue = n),
            HR(t, e, n, i));
      };
    function ZR(t, e, r, n) {
      return n
        ? !!(
            e === "innerHTML" ||
            e === "textContent" ||
            (e in t && Ck.test(e) && kt(r))
          )
        : e === "spellcheck" ||
          e === "draggable" ||
          e === "translate" ||
          e === "form" ||
          (e === "list" && t.tagName === "INPUT") ||
          (e === "type" && t.tagName === "TEXTAREA") ||
          (Ck.test(e) && Gr(r))
        ? !1
        : e in t;
    }
    const Ma = "transition",
      Iu = "animation",
      nf = (t, { slots: e }) => Vr(WM, QR(t), e);
    nf.displayName = "Transition";
    const Sk = {
      name: String,
      type: String,
      css: { type: Boolean, default: !0 },
      duration: [String, Number, Object],
      enterFromClass: String,
      enterActiveClass: String,
      enterToClass: String,
      appearFromClass: String,
      appearActiveClass: String,
      appearToClass: String,
      leaveFromClass: String,
      leaveActiveClass: String,
      leaveToClass: String,
    };
    nf.props = en({}, F1, Sk);
    const Bo = (t, e = []) => {
        ut(t) ? t.forEach((r) => r(...e)) : t && t(...e);
      },
      Ek = (t) =>
        t ? (ut(t) ? t.some((e) => e.length > 1) : t.length > 1) : !1;
    function QR(t) {
      const e = {};
      for (const ke in t) ke in Sk || (e[ke] = t[ke]);
      if (t.css === !1) return e;
      const {
          name: r = "v",
          type: n,
          duration: i,
          enterFromClass: a = `${r}-enter-from`,
          enterActiveClass: l = `${r}-enter-active`,
          enterToClass: u = `${r}-enter-to`,
          appearFromClass: p = a,
          appearActiveClass: m = l,
          appearToClass: v = u,
          leaveFromClass: w = `${r}-leave-from`,
          leaveActiveClass: S = `${r}-leave-active`,
          leaveToClass: M = `${r}-leave-to`,
        } = t,
        D = JR(i),
        z = D && D[0],
        V = D && D[1],
        {
          onBeforeEnter: j,
          onEnter: B,
          onEnterCancelled: ae,
          onLeave: re,
          onLeaveCancelled: K,
          onBeforeAppear: fe = j,
          onAppear: ye = B,
          onAppearCancelled: pe = ae,
        } = e,
        _e = (ke, E, P) => {
          Fo(ke, E ? v : u), Fo(ke, E ? m : l), P && P();
        },
        be = (ke, E) => {
          (ke._isLeaving = !1), Fo(ke, w), Fo(ke, M), Fo(ke, S), E && E();
        },
        Ce = (ke) => (E, P) => {
          const L = ke ? ye : B,
            U = () => _e(E, ke, P);
          Bo(L, [E, U]),
            Ik(() => {
              Fo(E, ke ? p : a), Ra(E, ke ? v : u), Ek(L) || Tk(E, n, z, U);
            });
        };
      return en(e, {
        onBeforeEnter(ke) {
          Bo(j, [ke]), Ra(ke, a), Ra(ke, l);
        },
        onBeforeAppear(ke) {
          Bo(fe, [ke]), Ra(ke, p), Ra(ke, m);
        },
        onEnter: Ce(!1),
        onAppear: Ce(!0),
        onLeave(ke, E) {
          ke._isLeaving = !0;
          const P = () => be(ke, E);
          Ra(ke, w),
            r3(),
            Ra(ke, S),
            Ik(() => {
              ke._isLeaving &&
                (Fo(ke, w), Ra(ke, M), Ek(re) || Tk(ke, n, V, P));
            }),
            Bo(re, [ke, P]);
        },
        onEnterCancelled(ke) {
          _e(ke, !1), Bo(ae, [ke]);
        },
        onAppearCancelled(ke) {
          _e(ke, !0), Bo(pe, [ke]);
        },
        onLeaveCancelled(ke) {
          be(ke), Bo(K, [ke]);
        },
      });
    }
    function JR(t) {
      if (t == null) return null;
      if (Pr(t)) return [wv(t.enter), wv(t.leave)];
      {
        const e = wv(t);
        return [e, e];
      }
    }
    function wv(t) {
      return HL(t);
    }
    function Ra(t, e) {
      e.split(/\s+/).forEach((r) => r && t.classList.add(r)),
        (t._vtc || (t._vtc = new Set())).add(e);
    }
    function Fo(t, e) {
      e.split(/\s+/).forEach((n) => n && t.classList.remove(n));
      const { _vtc: r } = t;
      r && (r.delete(e), r.size || (t._vtc = void 0));
    }
    function Ik(t) {
      requestAnimationFrame(() => {
        requestAnimationFrame(t);
      });
    }
    let e3 = 0;
    function Tk(t, e, r, n) {
      const i = (t._endId = ++e3),
        a = () => {
          i === t._endId && n();
        };
      if (r) return setTimeout(a, r);
      const { type: l, timeout: u, propCount: p } = t3(t, e);
      if (!l) return n();
      const m = l + "end";
      let v = 0;
      const w = () => {
          t.removeEventListener(m, S), a();
        },
        S = (M) => {
          M.target === t && ++v >= p && w();
        };
      setTimeout(() => {
        v < p && w();
      }, u + 1),
        t.addEventListener(m, S);
    }
    function t3(t, e) {
      const r = window.getComputedStyle(t),
        n = (D) => (r[D] || "").split(", "),
        i = n(`${Ma}Delay`),
        a = n(`${Ma}Duration`),
        l = Pk(i, a),
        u = n(`${Iu}Delay`),
        p = n(`${Iu}Duration`),
        m = Pk(u, p);
      let v = null,
        w = 0,
        S = 0;
      e === Ma
        ? l > 0 && ((v = Ma), (w = l), (S = a.length))
        : e === Iu
        ? m > 0 && ((v = Iu), (w = m), (S = p.length))
        : ((w = Math.max(l, m)),
          (v = w > 0 ? (l > m ? Ma : Iu) : null),
          (S = v ? (v === Ma ? a.length : p.length) : 0));
      const M =
        v === Ma &&
        /\b(transform|all)(,|$)/.test(n(`${Ma}Property`).toString());
      return { type: v, timeout: w, propCount: S, hasTransform: M };
    }
    function Pk(t, e) {
      for (; t.length < e.length; ) t = t.concat(t);
      return Math.max(...e.map((r, n) => Ok(r) + Ok(t[n])));
    }
    function Ok(t) {
      return Number(t.slice(0, -1).replace(",", ".")) * 1e3;
    }
    function r3() {
      return document.body.offsetHeight;
    }
    const n3 = ["ctrl", "shift", "alt", "meta"],
      i3 = {
        stop: (t) => t.stopPropagation(),
        prevent: (t) => t.preventDefault(),
        self: (t) => t.target !== t.currentTarget,
        ctrl: (t) => !t.ctrlKey,
        shift: (t) => !t.shiftKey,
        alt: (t) => !t.altKey,
        meta: (t) => !t.metaKey,
        left: (t) => "button" in t && t.button !== 0,
        middle: (t) => "button" in t && t.button !== 1,
        right: (t) => "button" in t && t.button !== 2,
        exact: (t, e) => n3.some((r) => t[`${r}Key`] && !e.includes(r)),
      },
      s3 =
        (t, e) =>
        (r, ...n) => {
          for (let i = 0; i < e.length; i++) {
            const a = i3[e[i]];
            if (a && a(r, e)) return;
          }
          return t(r, ...n);
        },
      a3 = en({ patchProp: $R }, BR);
    let Lk;
    function o3() {
      return Lk || (Lk = pR(a3));
    }
    const l3 = (...t) => {
      const e = o3().createApp(...t),
        { mount: r } = e;
      return (
        (e.mount = (n) => {
          const i = c3(n);
          if (!i) return;
          const a = e._component;
          !kt(a) && !a.render && !a.template && (a.template = i.innerHTML),
            (i.innerHTML = "");
          const l = r(i, !1, i instanceof SVGElement);
          return (
            i instanceof Element &&
              (i.removeAttribute("v-cloak"), i.setAttribute("data-v-app", "")),
            l
          );
        }),
        e
      );
    };
    function c3(t) {
      return Gr(t) ? document.querySelector(t) : t;
    }
    var u3 = !1;
    const h3 = Symbol();
    var Mk;
    (function (t) {
      (t.direct = "direct"),
        (t.patchObject = "patch object"),
        (t.patchFunction = "patch function");
    })(Mk || (Mk = {}));
    function d3() {
      const t = n1(!0),
        e = t.run(() => We({}));
      let r = [],
        n = [];
      const i = Pa({
        install(a) {
          (i._a = a),
            a.provide(h3, i),
            (a.config.globalProperties.$pinia = i),
            n.forEach((l) => r.push(l)),
            (n = []);
        },
        use(a) {
          return !this._a && !u3 ? n.push(a) : r.push(a), this;
        },
        _p: r,
        _a: null,
        _e: t,
        _s: new Map(),
        state: e,
      });
      return i;
    }
    const kv = typeof window < "u",
      f3 = typeof Symbol == "function" && typeof Symbol.toStringTag == "symbol",
      Na = (t) => (f3 ? Symbol(t) : t),
      p3 = (t, e, r) => g3({ l: t, k: e, s: r }),
      g3 = (t) =>
        JSON.stringify(t)
          .replace(/\u2028/g, "\\u2028")
          .replace(/\u2029/g, "\\u2029")
          .replace(/\u0027/g, "\\u0027"),
      cn = (t) => typeof t == "number" && isFinite(t),
      m3 = (t) => Cv(t) === "[object Date]",
      sf = (t) => Cv(t) === "[object RegExp]",
      af = (t) => Wt(t) && Object.keys(t).length === 0;
    function v3(t, e) {
      typeof console < "u" &&
        (console.warn("[intlify] " + t), e && console.warn(e.stack));
    }
    const yn = Object.assign;
    let Rk;
    const _v = () =>
      Rk ||
      (Rk =
        typeof globalThis < "u"
          ? globalThis
          : typeof self < "u"
          ? self
          : typeof window < "u"
          ? window
          : typeof Ns < "u"
          ? Ns
          : {});
    function Nk(t) {
      return t
        .replace(/</g, "&lt;")
        .replace(/>/g, "&gt;")
        .replace(/"/g, "&quot;")
        .replace(/'/g, "&apos;");
    }
    const y3 = Object.prototype.hasOwnProperty;
    function Av(t, e) {
      return y3.call(t, e);
    }
    const tn = Array.isArray,
      bn = (t) => typeof t == "function",
      rt = (t) => typeof t == "string",
      $r = (t) => typeof t == "boolean",
      Ar = (t) => t !== null && typeof t == "object",
      Bk = Object.prototype.toString,
      Cv = (t) => Bk.call(t),
      Wt = (t) => Cv(t) === "[object Object]",
      b3 = (t) =>
        t == null
          ? ""
          : tn(t) || (Wt(t) && t.toString === Bk)
          ? JSON.stringify(t, null, 2)
          : String(t),
      Gt = {
        EXPECTED_TOKEN: 1,
        INVALID_TOKEN_IN_PLACEHOLDER: 2,
        UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER: 3,
        UNKNOWN_ESCAPE_SEQUENCE: 4,
        INVALID_UNICODE_ESCAPE_SEQUENCE: 5,
        UNBALANCED_CLOSING_BRACE: 6,
        UNTERMINATED_CLOSING_BRACE: 7,
        EMPTY_PLACEHOLDER: 8,
        NOT_ALLOW_NEST_PLACEHOLDER: 9,
        INVALID_LINKED_FORMAT: 10,
        MUST_HAVE_MESSAGES_IN_PLURAL: 11,
        UNEXPECTED_EMPTY_LINKED_MODIFIER: 12,
        UNEXPECTED_EMPTY_LINKED_KEY: 13,
        UNEXPECTED_LEXICAL_ANALYSIS: 14,
        __EXTEND_POINT__: 15,
      };
    function of(t, e, r = {}) {
      const { domain: n, messages: i, args: a } = r,
        l = t,
        u = new SyntaxError(String(l));
      return (u.code = t), e && (u.location = e), (u.domain = n), u;
    }
    function x3(t) {
      throw t;
    }
    function w3(t, e, r) {
      return { line: t, column: e, offset: r };
    }
    function Sv(t, e, r) {
      const n = { start: t, end: e };
      return r != null && (n.source = r), n;
    }
    const Xs = " ",
      k3 = "\r",
      Bn = `
`,
      _3 = String.fromCharCode(8232),
      A3 = String.fromCharCode(8233);
    function C3(t) {
      const e = t;
      let r = 0,
        n = 1,
        i = 1,
        a = 0;
      const l = (ye) => e[ye] === k3 && e[ye + 1] === Bn,
        u = (ye) => e[ye] === Bn,
        p = (ye) => e[ye] === A3,
        m = (ye) => e[ye] === _3,
        v = (ye) => l(ye) || u(ye) || p(ye) || m(ye),
        w = () => r,
        S = () => n,
        M = () => i,
        D = () => a,
        z = (ye) => (l(ye) || p(ye) || m(ye) ? Bn : e[ye]),
        V = () => z(r),
        j = () => z(r + a);
      function B() {
        return (a = 0), v(r) && (n++, (i = 0)), l(r) && r++, r++, i++, e[r];
      }
      function ae() {
        return l(r + a) && a++, a++, e[r + a];
      }
      function re() {
        (r = 0), (n = 1), (i = 1), (a = 0);
      }
      function K(ye = 0) {
        a = ye;
      }
      function fe() {
        const ye = r + a;
        for (; ye !== r; ) B();
        a = 0;
      }
      return {
        index: w,
        line: S,
        column: M,
        peekOffset: D,
        charAt: z,
        currentChar: V,
        currentPeek: j,
        next: B,
        peek: ae,
        reset: re,
        resetPeek: K,
        skipToPeek: fe,
      };
    }
    const Ba = void 0,
      Fk = "'",
      S3 = "tokenizer";
    function E3(t, e = {}) {
      const r = e.location !== !1,
        n = C3(t),
        i = () => n.index(),
        a = () => w3(n.line(), n.column(), n.index()),
        l = a(),
        u = i(),
        p = {
          currentType: 14,
          offset: u,
          startLoc: l,
          endLoc: l,
          lastType: 14,
          lastOffset: u,
          lastStartLoc: l,
          lastEndLoc: l,
          braceNest: 0,
          inLinked: !1,
          text: "",
        },
        m = () => p,
        { onError: v } = e;
      function w(W, Q, ge, ...I) {
        const R = m();
        if (((Q.column += ge), (Q.offset += ge), v)) {
          const q = Sv(R.startLoc, Q),
            ce = of(W, q, { domain: S3, args: I });
          v(ce);
        }
      }
      function S(W, Q, ge) {
        (W.endLoc = a()), (W.currentType = Q);
        const I = { type: Q };
        return (
          r && (I.loc = Sv(W.startLoc, W.endLoc)),
          ge != null && (I.value = ge),
          I
        );
      }
      const M = (W) => S(W, 14);
      function D(W, Q) {
        return W.currentChar() === Q
          ? (W.next(), Q)
          : (w(Gt.EXPECTED_TOKEN, a(), 0, Q), "");
      }
      function z(W) {
        let Q = "";
        for (; W.currentPeek() === Xs || W.currentPeek() === Bn; )
          (Q += W.currentPeek()), W.peek();
        return Q;
      }
      function V(W) {
        const Q = z(W);
        return W.skipToPeek(), Q;
      }
      function j(W) {
        if (W === Ba) return !1;
        const Q = W.charCodeAt(0);
        return (Q >= 97 && Q <= 122) || (Q >= 65 && Q <= 90) || Q === 95;
      }
      function B(W) {
        if (W === Ba) return !1;
        const Q = W.charCodeAt(0);
        return Q >= 48 && Q <= 57;
      }
      function ae(W, Q) {
        const { currentType: ge } = Q;
        if (ge !== 2) return !1;
        z(W);
        const I = j(W.currentPeek());
        return W.resetPeek(), I;
      }
      function re(W, Q) {
        const { currentType: ge } = Q;
        if (ge !== 2) return !1;
        z(W);
        const I = W.currentPeek() === "-" ? W.peek() : W.currentPeek(),
          R = B(I);
        return W.resetPeek(), R;
      }
      function K(W, Q) {
        const { currentType: ge } = Q;
        if (ge !== 2) return !1;
        z(W);
        const I = W.currentPeek() === Fk;
        return W.resetPeek(), I;
      }
      function fe(W, Q) {
        const { currentType: ge } = Q;
        if (ge !== 8) return !1;
        z(W);
        const I = W.currentPeek() === ".";
        return W.resetPeek(), I;
      }
      function ye(W, Q) {
        const { currentType: ge } = Q;
        if (ge !== 9) return !1;
        z(W);
        const I = j(W.currentPeek());
        return W.resetPeek(), I;
      }
      function pe(W, Q) {
        const { currentType: ge } = Q;
        if (!(ge === 8 || ge === 12)) return !1;
        z(W);
        const I = W.currentPeek() === ":";
        return W.resetPeek(), I;
      }
      function _e(W, Q) {
        const { currentType: ge } = Q;
        if (ge !== 10) return !1;
        const I = () => {
            const q = W.currentPeek();
            return q === "{"
              ? j(W.peek())
              : q === "@" ||
                q === "%" ||
                q === "|" ||
                q === ":" ||
                q === "." ||
                q === Xs ||
                !q
              ? !1
              : q === Bn
              ? (W.peek(), I())
              : j(q);
          },
          R = I();
        return W.resetPeek(), R;
      }
      function be(W) {
        z(W);
        const Q = W.currentPeek() === "|";
        return W.resetPeek(), Q;
      }
      function Ce(W) {
        const Q = z(W),
          ge = W.currentPeek() === "%" && W.peek() === "{";
        return W.resetPeek(), { isModulo: ge, hasSpace: Q.length > 0 };
      }
      function ke(W, Q = !0) {
        const ge = (R = !1, q = "", ce = !1) => {
            const ne = W.currentPeek();
            return ne === "{"
              ? q === "%"
                ? !1
                : R
              : ne === "@" || !ne
              ? q === "%"
                ? !0
                : R
              : ne === "%"
              ? (W.peek(), ge(R, "%", !0))
              : ne === "|"
              ? q === "%" || ce
                ? !0
                : !(q === Xs || q === Bn)
              : ne === Xs
              ? (W.peek(), ge(!0, Xs, ce))
              : ne === Bn
              ? (W.peek(), ge(!0, Bn, ce))
              : !0;
          },
          I = ge();
        return Q && W.resetPeek(), I;
      }
      function E(W, Q) {
        const ge = W.currentChar();
        return ge === Ba ? Ba : Q(ge) ? (W.next(), ge) : null;
      }
      function P(W) {
        return E(W, (Q) => {
          const ge = Q.charCodeAt(0);
          return (
            (ge >= 97 && ge <= 122) ||
            (ge >= 65 && ge <= 90) ||
            (ge >= 48 && ge <= 57) ||
            ge === 95 ||
            ge === 36
          );
        });
      }
      function L(W) {
        return E(W, (Q) => {
          const ge = Q.charCodeAt(0);
          return ge >= 48 && ge <= 57;
        });
      }
      function U(W) {
        return E(W, (Q) => {
          const ge = Q.charCodeAt(0);
          return (
            (ge >= 48 && ge <= 57) ||
            (ge >= 65 && ge <= 70) ||
            (ge >= 97 && ge <= 102)
          );
        });
      }
      function Y(W) {
        let Q = "",
          ge = "";
        for (; (Q = L(W)); ) ge += Q;
        return ge;
      }
      function ie(W) {
        V(W);
        const Q = W.currentChar();
        return Q !== "%" && w(Gt.EXPECTED_TOKEN, a(), 0, Q), W.next(), "%";
      }
      function le(W) {
        let Q = "";
        for (;;) {
          const ge = W.currentChar();
          if (ge === "{" || ge === "}" || ge === "@" || ge === "|" || !ge)
            break;
          if (ge === "%")
            if (ke(W)) (Q += ge), W.next();
            else break;
          else if (ge === Xs || ge === Bn)
            if (ke(W)) (Q += ge), W.next();
            else {
              if (be(W)) break;
              (Q += ge), W.next();
            }
          else (Q += ge), W.next();
        }
        return Q;
      }
      function J(W) {
        V(W);
        let Q = "",
          ge = "";
        for (; (Q = P(W)); ) ge += Q;
        return (
          W.currentChar() === Ba && w(Gt.UNTERMINATED_CLOSING_BRACE, a(), 0), ge
        );
      }
      function T(W) {
        V(W);
        let Q = "";
        return (
          W.currentChar() === "-" ? (W.next(), (Q += `-${Y(W)}`)) : (Q += Y(W)),
          W.currentChar() === Ba && w(Gt.UNTERMINATED_CLOSING_BRACE, a(), 0),
          Q
        );
      }
      function Z(W) {
        V(W), D(W, "'");
        let Q = "",
          ge = "";
        const I = (q) => q !== Fk && q !== Bn;
        for (; (Q = E(W, I)); ) Q === "\\" ? (ge += Oe(W)) : (ge += Q);
        const R = W.currentChar();
        return R === Bn || R === Ba
          ? (w(Gt.UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER, a(), 0),
            R === Bn && (W.next(), D(W, "'")),
            ge)
          : (D(W, "'"), ge);
      }
      function Oe(W) {
        const Q = W.currentChar();
        switch (Q) {
          case "\\":
          case "'":
            return W.next(), `\\${Q}`;
          case "u":
            return Me(W, Q, 4);
          case "U":
            return Me(W, Q, 6);
          default:
            return w(Gt.UNKNOWN_ESCAPE_SEQUENCE, a(), 0, Q), "";
        }
      }
      function Me(W, Q, ge) {
        D(W, Q);
        let I = "";
        for (let R = 0; R < ge; R++) {
          const q = U(W);
          if (!q) {
            w(
              Gt.INVALID_UNICODE_ESCAPE_SEQUENCE,
              a(),
              0,
              `\\${Q}${I}${W.currentChar()}`
            );
            break;
          }
          I += q;
        }
        return `\\${Q}${I}`;
      }
      function X(W) {
        V(W);
        let Q = "",
          ge = "";
        const I = (R) => R !== "{" && R !== "}" && R !== Xs && R !== Bn;
        for (; (Q = E(W, I)); ) ge += Q;
        return ge;
      }
      function Ee(W) {
        let Q = "",
          ge = "";
        for (; (Q = P(W)); ) ge += Q;
        return ge;
      }
      function me(W) {
        const Q = (ge = !1, I) => {
          const R = W.currentChar();
          return R === "{" ||
            R === "%" ||
            R === "@" ||
            R === "|" ||
            !R ||
            R === Xs
            ? I
            : R === Bn
            ? ((I += R), W.next(), Q(ge, I))
            : ((I += R), W.next(), Q(!0, I));
        };
        return Q(!1, "");
      }
      function xe(W) {
        V(W);
        const Q = D(W, "|");
        return V(W), Q;
      }
      function Se(W, Q) {
        let ge = null;
        switch (W.currentChar()) {
          case "{":
            return (
              Q.braceNest >= 1 && w(Gt.NOT_ALLOW_NEST_PLACEHOLDER, a(), 0),
              W.next(),
              (ge = S(Q, 2, "{")),
              V(W),
              Q.braceNest++,
              ge
            );
          case "}":
            return (
              Q.braceNest > 0 &&
                Q.currentType === 2 &&
                w(Gt.EMPTY_PLACEHOLDER, a(), 0),
              W.next(),
              (ge = S(Q, 3, "}")),
              Q.braceNest--,
              Q.braceNest > 0 && V(W),
              Q.inLinked && Q.braceNest === 0 && (Q.inLinked = !1),
              ge
            );
          case "@":
            return (
              Q.braceNest > 0 && w(Gt.UNTERMINATED_CLOSING_BRACE, a(), 0),
              (ge = Ie(W, Q) || M(Q)),
              (Q.braceNest = 0),
              ge
            );
          default:
            let I = !0,
              R = !0,
              q = !0;
            if (be(W))
              return (
                Q.braceNest > 0 && w(Gt.UNTERMINATED_CLOSING_BRACE, a(), 0),
                (ge = S(Q, 1, xe(W))),
                (Q.braceNest = 0),
                (Q.inLinked = !1),
                ge
              );
            if (
              Q.braceNest > 0 &&
              (Q.currentType === 5 ||
                Q.currentType === 6 ||
                Q.currentType === 7)
            )
              return (
                w(Gt.UNTERMINATED_CLOSING_BRACE, a(), 0),
                (Q.braceNest = 0),
                Ne(W, Q)
              );
            if ((I = ae(W, Q))) return (ge = S(Q, 5, J(W))), V(W), ge;
            if ((R = re(W, Q))) return (ge = S(Q, 6, T(W))), V(W), ge;
            if ((q = K(W, Q))) return (ge = S(Q, 7, Z(W))), V(W), ge;
            if (!I && !R && !q)
              return (
                (ge = S(Q, 13, X(W))),
                w(Gt.INVALID_TOKEN_IN_PLACEHOLDER, a(), 0, ge.value),
                V(W),
                ge
              );
            break;
        }
        return ge;
      }
      function Ie(W, Q) {
        const { currentType: ge } = Q;
        let I = null;
        const R = W.currentChar();
        switch (
          ((ge === 8 || ge === 9 || ge === 12 || ge === 10) &&
            (R === Bn || R === Xs) &&
            w(Gt.INVALID_LINKED_FORMAT, a(), 0),
          R)
        ) {
          case "@":
            return W.next(), (I = S(Q, 8, "@")), (Q.inLinked = !0), I;
          case ".":
            return V(W), W.next(), S(Q, 9, ".");
          case ":":
            return V(W), W.next(), S(Q, 10, ":");
          default:
            return be(W)
              ? ((I = S(Q, 1, xe(W))), (Q.braceNest = 0), (Q.inLinked = !1), I)
              : fe(W, Q) || pe(W, Q)
              ? (V(W), Ie(W, Q))
              : ye(W, Q)
              ? (V(W), S(Q, 12, Ee(W)))
              : _e(W, Q)
              ? (V(W), R === "{" ? Se(W, Q) || I : S(Q, 11, me(W)))
              : (ge === 8 && w(Gt.INVALID_LINKED_FORMAT, a(), 0),
                (Q.braceNest = 0),
                (Q.inLinked = !1),
                Ne(W, Q));
        }
      }
      function Ne(W, Q) {
        let ge = { type: 14 };
        if (Q.braceNest > 0) return Se(W, Q) || M(Q);
        if (Q.inLinked) return Ie(W, Q) || M(Q);
        switch (W.currentChar()) {
          case "{":
            return Se(W, Q) || M(Q);
          case "}":
            return (
              w(Gt.UNBALANCED_CLOSING_BRACE, a(), 0), W.next(), S(Q, 3, "}")
            );
          case "@":
            return Ie(W, Q) || M(Q);
          default:
            if (be(W))
              return (
                (ge = S(Q, 1, xe(W))), (Q.braceNest = 0), (Q.inLinked = !1), ge
              );
            const { isModulo: I, hasSpace: R } = Ce(W);
            if (I) return R ? S(Q, 0, le(W)) : S(Q, 4, ie(W));
            if (ke(W)) return S(Q, 0, le(W));
            break;
        }
        return ge;
      }
      function oe() {
        const { currentType: W, offset: Q, startLoc: ge, endLoc: I } = p;
        return (
          (p.lastType = W),
          (p.lastOffset = Q),
          (p.lastStartLoc = ge),
          (p.lastEndLoc = I),
          (p.offset = i()),
          (p.startLoc = a()),
          n.currentChar() === Ba ? S(p, 14) : Ne(n, p)
        );
      }
      return {
        nextToken: oe,
        currentOffset: i,
        currentPosition: a,
        context: m,
      };
    }
    const I3 = "parser",
      T3 = /(?:\\\\|\\'|\\u([0-9a-fA-F]{4})|\\U([0-9a-fA-F]{6}))/g;
    function P3(t, e, r) {
      switch (t) {
        case "\\\\":
          return "\\";
        case "\\'":
          return "'";
        default: {
          const n = parseInt(e || r, 16);
          return n <= 55295 || n >= 57344 ? String.fromCodePoint(n) : "\uFFFD";
        }
      }
    }
    function O3(t = {}) {
      const e = t.location !== !1,
        { onError: r } = t;
      function n(j, B, ae, re, ...K) {
        const fe = j.currentPosition();
        if (((fe.offset += re), (fe.column += re), r)) {
          const ye = Sv(ae, fe),
            pe = of(B, ye, { domain: I3, args: K });
          r(pe);
        }
      }
      function i(j, B, ae) {
        const re = { type: j, start: B, end: B };
        return e && (re.loc = { start: ae, end: ae }), re;
      }
      function a(j, B, ae, re) {
        (j.end = B), re && (j.type = re), e && j.loc && (j.loc.end = ae);
      }
      function l(j, B) {
        const ae = j.context(),
          re = i(3, ae.offset, ae.startLoc);
        return (
          (re.value = B), a(re, j.currentOffset(), j.currentPosition()), re
        );
      }
      function u(j, B) {
        const ae = j.context(),
          { lastOffset: re, lastStartLoc: K } = ae,
          fe = i(5, re, K);
        return (
          (fe.index = parseInt(B, 10)),
          j.nextToken(),
          a(fe, j.currentOffset(), j.currentPosition()),
          fe
        );
      }
      function p(j, B) {
        const ae = j.context(),
          { lastOffset: re, lastStartLoc: K } = ae,
          fe = i(4, re, K);
        return (
          (fe.key = B),
          j.nextToken(),
          a(fe, j.currentOffset(), j.currentPosition()),
          fe
        );
      }
      function m(j, B) {
        const ae = j.context(),
          { lastOffset: re, lastStartLoc: K } = ae,
          fe = i(9, re, K);
        return (
          (fe.value = B.replace(T3, P3)),
          j.nextToken(),
          a(fe, j.currentOffset(), j.currentPosition()),
          fe
        );
      }
      function v(j) {
        const B = j.nextToken(),
          ae = j.context(),
          { lastOffset: re, lastStartLoc: K } = ae,
          fe = i(8, re, K);
        return B.type !== 12
          ? (n(j, Gt.UNEXPECTED_EMPTY_LINKED_MODIFIER, ae.lastStartLoc, 0),
            (fe.value = ""),
            a(fe, re, K),
            { nextConsumeToken: B, node: fe })
          : (B.value == null &&
              n(j, Gt.UNEXPECTED_LEXICAL_ANALYSIS, ae.lastStartLoc, 0, hs(B)),
            (fe.value = B.value || ""),
            a(fe, j.currentOffset(), j.currentPosition()),
            { node: fe });
      }
      function w(j, B) {
        const ae = j.context(),
          re = i(7, ae.offset, ae.startLoc);
        return (
          (re.value = B), a(re, j.currentOffset(), j.currentPosition()), re
        );
      }
      function S(j) {
        const B = j.context(),
          ae = i(6, B.offset, B.startLoc);
        let re = j.nextToken();
        if (re.type === 9) {
          const K = v(j);
          (ae.modifier = K.node), (re = K.nextConsumeToken || j.nextToken());
        }
        switch (
          (re.type !== 10 &&
            n(j, Gt.UNEXPECTED_LEXICAL_ANALYSIS, B.lastStartLoc, 0, hs(re)),
          (re = j.nextToken()),
          re.type === 2 && (re = j.nextToken()),
          re.type)
        ) {
          case 11:
            re.value == null &&
              n(j, Gt.UNEXPECTED_LEXICAL_ANALYSIS, B.lastStartLoc, 0, hs(re)),
              (ae.key = w(j, re.value || ""));
            break;
          case 5:
            re.value == null &&
              n(j, Gt.UNEXPECTED_LEXICAL_ANALYSIS, B.lastStartLoc, 0, hs(re)),
              (ae.key = p(j, re.value || ""));
            break;
          case 6:
            re.value == null &&
              n(j, Gt.UNEXPECTED_LEXICAL_ANALYSIS, B.lastStartLoc, 0, hs(re)),
              (ae.key = u(j, re.value || ""));
            break;
          case 7:
            re.value == null &&
              n(j, Gt.UNEXPECTED_LEXICAL_ANALYSIS, B.lastStartLoc, 0, hs(re)),
              (ae.key = m(j, re.value || ""));
            break;
          default:
            n(j, Gt.UNEXPECTED_EMPTY_LINKED_KEY, B.lastStartLoc, 0);
            const K = j.context(),
              fe = i(7, K.offset, K.startLoc);
            return (
              (fe.value = ""),
              a(fe, K.offset, K.startLoc),
              (ae.key = fe),
              a(ae, K.offset, K.startLoc),
              { nextConsumeToken: re, node: ae }
            );
        }
        return a(ae, j.currentOffset(), j.currentPosition()), { node: ae };
      }
      function M(j) {
        const B = j.context(),
          ae = B.currentType === 1 ? j.currentOffset() : B.offset,
          re = B.currentType === 1 ? B.endLoc : B.startLoc,
          K = i(2, ae, re);
        K.items = [];
        let fe = null;
        do {
          const _e = fe || j.nextToken();
          switch (((fe = null), _e.type)) {
            case 0:
              _e.value == null &&
                n(j, Gt.UNEXPECTED_LEXICAL_ANALYSIS, B.lastStartLoc, 0, hs(_e)),
                K.items.push(l(j, _e.value || ""));
              break;
            case 6:
              _e.value == null &&
                n(j, Gt.UNEXPECTED_LEXICAL_ANALYSIS, B.lastStartLoc, 0, hs(_e)),
                K.items.push(u(j, _e.value || ""));
              break;
            case 5:
              _e.value == null &&
                n(j, Gt.UNEXPECTED_LEXICAL_ANALYSIS, B.lastStartLoc, 0, hs(_e)),
                K.items.push(p(j, _e.value || ""));
              break;
            case 7:
              _e.value == null &&
                n(j, Gt.UNEXPECTED_LEXICAL_ANALYSIS, B.lastStartLoc, 0, hs(_e)),
                K.items.push(m(j, _e.value || ""));
              break;
            case 8:
              const be = S(j);
              K.items.push(be.node), (fe = be.nextConsumeToken || null);
              break;
          }
        } while (B.currentType !== 14 && B.currentType !== 1);
        const ye = B.currentType === 1 ? B.lastOffset : j.currentOffset(),
          pe = B.currentType === 1 ? B.lastEndLoc : j.currentPosition();
        return a(K, ye, pe), K;
      }
      function D(j, B, ae, re) {
        const K = j.context();
        let fe = re.items.length === 0;
        const ye = i(1, B, ae);
        (ye.cases = []), ye.cases.push(re);
        do {
          const pe = M(j);
          fe || (fe = pe.items.length === 0), ye.cases.push(pe);
        } while (K.currentType !== 14);
        return (
          fe && n(j, Gt.MUST_HAVE_MESSAGES_IN_PLURAL, ae, 0),
          a(ye, j.currentOffset(), j.currentPosition()),
          ye
        );
      }
      function z(j) {
        const B = j.context(),
          { offset: ae, startLoc: re } = B,
          K = M(j);
        return B.currentType === 14 ? K : D(j, ae, re, K);
      }
      function V(j) {
        const B = E3(j, yn({}, t)),
          ae = B.context(),
          re = i(0, ae.offset, ae.startLoc);
        return (
          e && re.loc && (re.loc.source = j),
          (re.body = z(B)),
          ae.currentType !== 14 &&
            n(
              B,
              Gt.UNEXPECTED_LEXICAL_ANALYSIS,
              ae.lastStartLoc,
              0,
              j[ae.offset] || ""
            ),
          a(re, B.currentOffset(), B.currentPosition()),
          re
        );
      }
      return { parse: V };
    }
    function hs(t) {
      if (t.type === 14) return "EOF";
      const e = (t.value || "").replace(/\r?\n/gu, "\\n");
      return e.length > 10 ? e.slice(0, 9) + "\u2026" : e;
    }
    function L3(t, e = {}) {
      const r = { ast: t, helpers: new Set() };
      return { context: () => r, helper: (n) => (r.helpers.add(n), n) };
    }
    function Dk(t, e) {
      for (let r = 0; r < t.length; r++) Ev(t[r], e);
    }
    function Ev(t, e) {
      switch (t.type) {
        case 1:
          Dk(t.cases, e), e.helper("plural");
          break;
        case 2:
          Dk(t.items, e);
          break;
        case 6:
          Ev(t.key, e), e.helper("linked"), e.helper("type");
          break;
        case 5:
          e.helper("interpolate"), e.helper("list");
          break;
        case 4:
          e.helper("interpolate"), e.helper("named");
          break;
      }
    }
    function M3(t, e = {}) {
      const r = L3(t);
      r.helper("normalize"), t.body && Ev(t.body, r);
      const n = r.context();
      t.helpers = Array.from(n.helpers);
    }
    function R3(t, e) {
      const { sourceMap: r, filename: n, breakLineCode: i, needIndent: a } = e,
        l = {
          source: t.loc.source,
          filename: n,
          code: "",
          column: 1,
          line: 1,
          offset: 0,
          map: void 0,
          breakLineCode: i,
          needIndent: a,
          indentLevel: 0,
        },
        u = () => l;
      function p(M, D) {
        l.code += M;
      }
      function m(M, D = !0) {
        const z = D ? i : "";
        p(a ? z + "  ".repeat(M) : z);
      }
      function v(M = !0) {
        const D = ++l.indentLevel;
        M && m(D);
      }
      function w(M = !0) {
        const D = --l.indentLevel;
        M && m(D);
      }
      function S() {
        m(l.indentLevel);
      }
      return {
        context: u,
        push: p,
        indent: v,
        deindent: w,
        newline: S,
        helper: (M) => `_${M}`,
        needIndent: () => l.needIndent,
      };
    }
    function N3(t, e) {
      const { helper: r } = t;
      t.push(`${r("linked")}(`),
        ql(t, e.key),
        e.modifier
          ? (t.push(", "), ql(t, e.modifier), t.push(", _type"))
          : t.push(", undefined, _type"),
        t.push(")");
    }
    function B3(t, e) {
      const { helper: r, needIndent: n } = t;
      t.push(`${r("normalize")}([`), t.indent(n());
      const i = e.items.length;
      for (let a = 0; a < i && (ql(t, e.items[a]), a !== i - 1); a++)
        t.push(", ");
      t.deindent(n()), t.push("])");
    }
    function F3(t, e) {
      const { helper: r, needIndent: n } = t;
      if (e.cases.length > 1) {
        t.push(`${r("plural")}([`), t.indent(n());
        const i = e.cases.length;
        for (let a = 0; a < i && (ql(t, e.cases[a]), a !== i - 1); a++)
          t.push(", ");
        t.deindent(n()), t.push("])");
      }
    }
    function D3(t, e) {
      e.body ? ql(t, e.body) : t.push("null");
    }
    function ql(t, e) {
      const { helper: r } = t;
      switch (e.type) {
        case 0:
          D3(t, e);
          break;
        case 1:
          F3(t, e);
          break;
        case 2:
          B3(t, e);
          break;
        case 6:
          N3(t, e);
          break;
        case 8:
          t.push(JSON.stringify(e.value), e);
          break;
        case 7:
          t.push(JSON.stringify(e.value), e);
          break;
        case 5:
          t.push(`${r("interpolate")}(${r("list")}(${e.index}))`, e);
          break;
        case 4:
          t.push(
            `${r("interpolate")}(${r("named")}(${JSON.stringify(e.key)}))`,
            e
          );
          break;
        case 9:
          t.push(JSON.stringify(e.value), e);
          break;
        case 3:
          t.push(JSON.stringify(e.value), e);
          break;
      }
    }
    const z3 = (t, e = {}) => {
      const r = rt(e.mode) ? e.mode : "normal",
        n = rt(e.filename) ? e.filename : "message.intl",
        i = !!e.sourceMap,
        a =
          e.breakLineCode != null
            ? e.breakLineCode
            : r === "arrow"
            ? ";"
            : `
`,
        l = e.needIndent ? e.needIndent : r !== "arrow",
        u = t.helpers || [],
        p = R3(t, {
          mode: r,
          filename: n,
          sourceMap: i,
          breakLineCode: a,
          needIndent: l,
        });
      p.push(r === "normal" ? "function __msg__ (ctx) {" : "(ctx) => {"),
        p.indent(l),
        u.length > 0 &&
          (p.push(`const { ${u.map((w) => `${w}: _${w}`).join(", ")} } = ctx`),
          p.newline()),
        p.push("return "),
        ql(p, t),
        p.deindent(l),
        p.push("}");
      const { code: m, map: v } = p.context();
      return { ast: t, code: m, map: v ? v.toJSON() : void 0 };
    };
    function H3(t, e = {}) {
      const r = yn({}, e),
        n = O3(r).parse(t);
      return M3(n, r), z3(n, r);
    }
    const zk = {
        I18nInit: "i18n:init",
        FunctionTranslate: "function:translate",
      },
      Fa = [];
    (Fa[0] = { w: [0], i: [3, 0], "[": [4], o: [7] }),
      (Fa[1] = { w: [1], ".": [2], "[": [4], o: [7] }),
      (Fa[2] = { w: [2], i: [3, 0], 0: [3, 0] }),
      (Fa[3] = {
        i: [3, 0],
        0: [3, 0],
        w: [1, 1],
        ".": [2, 1],
        "[": [4, 1],
        o: [7, 1],
      }),
      (Fa[4] = {
        "'": [5, 0],
        '"': [6, 0],
        "[": [4, 2],
        "]": [1, 3],
        o: 8,
        l: [4, 0],
      }),
      (Fa[5] = { "'": [4, 0], o: 8, l: [5, 0] }),
      (Fa[6] = { '"': [4, 0], o: 8, l: [6, 0] });
    const U3 = /^\s?(?:true|false|-?[\d.]+|'[^']*'|"[^"]*")\s?$/;
    function W3(t) {
      return U3.test(t);
    }
    function X3(t) {
      const e = t.charCodeAt(0),
        r = t.charCodeAt(t.length - 1);
      return e === r && (e === 34 || e === 39) ? t.slice(1, -1) : t;
    }
    function j3(t) {
      if (t == null) return "o";
      switch (t.charCodeAt(0)) {
        case 91:
        case 93:
        case 46:
        case 34:
        case 39:
          return t;
        case 95:
        case 36:
        case 45:
          return "i";
        case 9:
        case 10:
        case 13:
        case 160:
        case 65279:
        case 8232:
        case 8233:
          return "w";
      }
      return "i";
    }
    function G3(t) {
      const e = t.trim();
      return t.charAt(0) === "0" && isNaN(parseInt(t))
        ? !1
        : W3(e)
        ? X3(e)
        : "*" + e;
    }
    function Y3(t) {
      const e = [];
      let r = -1,
        n = 0,
        i = 0,
        a,
        l,
        u,
        p,
        m,
        v,
        w;
      const S = [];
      (S[0] = () => {
        l === void 0 ? (l = u) : (l += u);
      }),
        (S[1] = () => {
          l !== void 0 && (e.push(l), (l = void 0));
        }),
        (S[2] = () => {
          S[0](), i++;
        }),
        (S[3] = () => {
          if (i > 0) i--, (n = 4), S[0]();
          else {
            if (((i = 0), l === void 0 || ((l = G3(l)), l === !1))) return !1;
            S[1]();
          }
        });
      function M() {
        const D = t[r + 1];
        if ((n === 5 && D === "'") || (n === 6 && D === '"'))
          return r++, (u = "\\" + D), S[0](), !0;
      }
      for (; n !== null; )
        if ((r++, (a = t[r]), !(a === "\\" && M()))) {
          if (
            ((p = j3(a)),
            (w = Fa[n]),
            (m = w[p] || w.l || 8),
            m === 8 ||
              ((n = m[0]),
              m[1] !== void 0 && ((v = S[m[1]]), v && ((u = a), v() === !1))))
          )
            return;
          if (n === 7) return e;
        }
    }
    const Hk = new Map();
    function V3(t, e) {
      return Ar(t) ? t[e] : null;
    }
    function q3(t, e) {
      if (!Ar(t)) return null;
      let r = Hk.get(e);
      if ((r || ((r = Y3(e)), r && Hk.set(e, r)), !r)) return null;
      const n = r.length;
      let i = t,
        a = 0;
      for (; a < n; ) {
        const l = i[r[a]];
        if (l === void 0) return null;
        (i = l), a++;
      }
      return i;
    }
    const K3 = (t) => t,
      $3 = (t) => "",
      Z3 = "text",
      Q3 = (t) => (t.length === 0 ? "" : t.join("")),
      J3 = b3;
    function Uk(t, e) {
      return (
        (t = Math.abs(t)),
        e === 2 ? (t ? (t > 1 ? 1 : 0) : 1) : t ? Math.min(t, 2) : 0
      );
    }
    function eN(t) {
      const e = cn(t.pluralIndex) ? t.pluralIndex : -1;
      return t.named && (cn(t.named.count) || cn(t.named.n))
        ? cn(t.named.count)
          ? t.named.count
          : cn(t.named.n)
          ? t.named.n
          : e
        : e;
    }
    function tN(t, e) {
      e.count || (e.count = t), e.n || (e.n = t);
    }
    function rN(t = {}) {
      const e = t.locale,
        r = eN(t),
        n =
          Ar(t.pluralRules) && rt(e) && bn(t.pluralRules[e])
            ? t.pluralRules[e]
            : Uk,
        i = Ar(t.pluralRules) && rt(e) && bn(t.pluralRules[e]) ? Uk : void 0,
        a = (V) => V[n(r, V.length, i)],
        l = t.list || [],
        u = (V) => l[V],
        p = t.named || {};
      cn(t.pluralIndex) && tN(r, p);
      const m = (V) => p[V];
      function v(V) {
        return (
          (bn(t.messages)
            ? t.messages(V)
            : Ar(t.messages)
            ? t.messages[V]
            : !1) || (t.parent ? t.parent.message(V) : $3)
        );
      }
      const w = (V) => (t.modifiers ? t.modifiers[V] : K3),
        S =
          Wt(t.processor) && bn(t.processor.normalize)
            ? t.processor.normalize
            : Q3,
        M =
          Wt(t.processor) && bn(t.processor.interpolate)
            ? t.processor.interpolate
            : J3,
        D = Wt(t.processor) && rt(t.processor.type) ? t.processor.type : Z3,
        z = {
          list: u,
          named: m,
          plural: a,
          linked: (V, ...j) => {
            const [B, ae] = j;
            let re = "text",
              K = "";
            j.length === 1
              ? Ar(B)
                ? ((K = B.modifier || K), (re = B.type || re))
                : rt(B) && (K = B || K)
              : j.length === 2 &&
                (rt(B) && (K = B || K), rt(ae) && (re = ae || re));
            let fe = v(V)(z);
            return (
              re === "vnode" && tn(fe) && K && (fe = fe[0]),
              K ? w(K)(fe, re) : fe
            );
          },
          message: v,
          type: D,
          interpolate: M,
          normalize: S,
        };
      return z;
    }
    let Tu = null;
    function nN(t) {
      Tu = t;
    }
    function iN(t, e, r) {
      Tu &&
        Tu.emit(zk.I18nInit, {
          timestamp: Date.now(),
          i18n: t,
          version: e,
          meta: r,
        });
    }
    const sN = aN(zk.FunctionTranslate);
    function aN(t) {
      return (e) => Tu && Tu.emit(t, e);
    }
    function oN(t, e, r) {
      return [
        ...new Set([
          r,
          ...(tn(e) ? e : Ar(e) ? Object.keys(e) : rt(e) ? [e] : [r]),
        ]),
      ];
    }
    function Wk(t, e, r) {
      const n = rt(r) ? r : Iv,
        i = t;
      i.__localeChainCache || (i.__localeChainCache = new Map());
      let a = i.__localeChainCache.get(n);
      if (!a) {
        a = [];
        let l = [r];
        for (; tn(l); ) l = Xk(a, l, e);
        const u = tn(e) || !Wt(e) ? e : e.default ? e.default : null;
        (l = rt(u) ? [u] : u),
          tn(l) && Xk(a, l, !1),
          i.__localeChainCache.set(n, a);
      }
      return a;
    }
    function Xk(t, e, r) {
      let n = !0;
      for (let i = 0; i < e.length && $r(n); i++) {
        const a = e[i];
        rt(a) && (n = lN(t, e[i], r));
      }
      return n;
    }
    function lN(t, e, r) {
      let n;
      const i = e.split("-");
      do {
        const a = i.join("-");
        (n = cN(t, a, r)), i.splice(-1, 1);
      } while (i.length && n === !0);
      return n;
    }
    function cN(t, e, r) {
      let n = !1;
      if (!t.includes(e) && ((n = !0), e)) {
        n = e[e.length - 1] !== "!";
        const i = e.replace(/!/g, "");
        t.push(i), (tn(r) || Wt(r)) && r[i] && (n = r[i]);
      }
      return n;
    }
    const uN = "9.2.2",
      lf = -1,
      Iv = "en-US",
      jk = "",
      Gk = (t) => `${t.charAt(0).toLocaleUpperCase()}${t.substr(1)}`;
    function hN() {
      return {
        upper: (t, e) =>
          e === "text" && rt(t)
            ? t.toUpperCase()
            : e === "vnode" && Ar(t) && "__v_isVNode" in t
            ? t.children.toUpperCase()
            : t,
        lower: (t, e) =>
          e === "text" && rt(t)
            ? t.toLowerCase()
            : e === "vnode" && Ar(t) && "__v_isVNode" in t
            ? t.children.toLowerCase()
            : t,
        capitalize: (t, e) =>
          e === "text" && rt(t)
            ? Gk(t)
            : e === "vnode" && Ar(t) && "__v_isVNode" in t
            ? Gk(t.children)
            : t,
      };
    }
    let Yk;
    function dN(t) {
      Yk = t;
    }
    let Vk;
    function fN(t) {
      Vk = t;
    }
    let qk;
    function pN(t) {
      qk = t;
    }
    let Kk = null;
    const $k = (t) => {
        Kk = t;
      },
      gN = () => Kk;
    let Zk = null;
    const Qk = (t) => {
        Zk = t;
      },
      mN = () => Zk;
    let Jk = 0;
    function vN(t = {}) {
      const e = rt(t.version) ? t.version : uN,
        r = rt(t.locale) ? t.locale : Iv,
        n =
          tn(t.fallbackLocale) ||
          Wt(t.fallbackLocale) ||
          rt(t.fallbackLocale) ||
          t.fallbackLocale === !1
            ? t.fallbackLocale
            : r,
        i = Wt(t.messages) ? t.messages : { [r]: {} },
        a = Wt(t.datetimeFormats) ? t.datetimeFormats : { [r]: {} },
        l = Wt(t.numberFormats) ? t.numberFormats : { [r]: {} },
        u = yn({}, t.modifiers || {}, hN()),
        p = t.pluralRules || {},
        m = bn(t.missing) ? t.missing : null,
        v = $r(t.missingWarn) || sf(t.missingWarn) ? t.missingWarn : !0,
        w = $r(t.fallbackWarn) || sf(t.fallbackWarn) ? t.fallbackWarn : !0,
        S = !!t.fallbackFormat,
        M = !!t.unresolving,
        D = bn(t.postTranslation) ? t.postTranslation : null,
        z = Wt(t.processor) ? t.processor : null,
        V = $r(t.warnHtmlMessage) ? t.warnHtmlMessage : !0,
        j = !!t.escapeParameter,
        B = bn(t.messageCompiler) ? t.messageCompiler : Yk,
        ae = bn(t.messageResolver) ? t.messageResolver : Vk || V3,
        re = bn(t.localeFallbacker) ? t.localeFallbacker : qk || oN,
        K = Ar(t.fallbackContext) ? t.fallbackContext : void 0,
        fe = bn(t.onWarn) ? t.onWarn : v3,
        ye = t,
        pe = Ar(ye.__datetimeFormatters) ? ye.__datetimeFormatters : new Map(),
        _e = Ar(ye.__numberFormatters) ? ye.__numberFormatters : new Map(),
        be = Ar(ye.__meta) ? ye.__meta : {};
      Jk++;
      const Ce = {
        version: e,
        cid: Jk,
        locale: r,
        fallbackLocale: n,
        messages: i,
        modifiers: u,
        pluralRules: p,
        missing: m,
        missingWarn: v,
        fallbackWarn: w,
        fallbackFormat: S,
        unresolving: M,
        postTranslation: D,
        processor: z,
        warnHtmlMessage: V,
        escapeParameter: j,
        messageCompiler: B,
        messageResolver: ae,
        localeFallbacker: re,
        fallbackContext: K,
        onWarn: fe,
        __meta: be,
      };
      return (
        (Ce.datetimeFormats = a),
        (Ce.numberFormats = l),
        (Ce.__datetimeFormatters = pe),
        (Ce.__numberFormatters = _e),
        __INTLIFY_PROD_DEVTOOLS__ && iN(Ce, e, be),
        Ce
      );
    }
    function Tv(t, e, r, n, i) {
      const { missing: a, onWarn: l } = t;
      if (a !== null) {
        const u = a(t, r, e, i);
        return rt(u) ? u : e;
      } else return e;
    }
    function Pu(t, e, r) {
      const n = t;
      (n.__localeChainCache = new Map()), t.localeFallbacker(t, r, e);
    }
    const yN = (t) => t;
    let e_ = Object.create(null);
    function bN(t, e = {}) {
      {
        const r = (e.onCacheKey || yN)(t),
          n = e_[r];
        if (n) return n;
        let i = !1;
        const a = e.onError || x3;
        e.onError = (p) => {
          (i = !0), a(p);
        };
        const { code: l } = H3(t, e),
          u = new Function(`return ${l}`)();
        return i ? u : (e_[r] = u);
      }
    }
    let t_ = Gt.__EXTEND_POINT__;
    const Pv = () => ++t_,
      Kl = {
        INVALID_ARGUMENT: t_,
        INVALID_DATE_ARGUMENT: Pv(),
        INVALID_ISO_DATE_ARGUMENT: Pv(),
        __EXTEND_POINT__: Pv(),
      };
    function $l(t) {
      return of(t, null, void 0);
    }
    const r_ = () => "",
      ds = (t) => bn(t);
    function n_(t, ...e) {
      const {
          fallbackFormat: r,
          postTranslation: n,
          unresolving: i,
          messageCompiler: a,
          fallbackLocale: l,
          messages: u,
        } = t,
        [p, m] = Ov(...e),
        v = $r(m.missingWarn) ? m.missingWarn : t.missingWarn,
        w = $r(m.fallbackWarn) ? m.fallbackWarn : t.fallbackWarn,
        S = $r(m.escapeParameter) ? m.escapeParameter : t.escapeParameter,
        M = !!m.resolvedMessage,
        D =
          rt(m.default) || $r(m.default)
            ? $r(m.default)
              ? a
                ? p
                : () => p
              : m.default
            : r
            ? a
              ? p
              : () => p
            : "",
        z = r || D !== "",
        V = rt(m.locale) ? m.locale : t.locale;
      S && xN(m);
      let [j, B, ae] = M ? [p, V, u[V] || {}] : i_(t, p, V, l, w, v),
        re = j,
        K = p;
      if (
        (!M && !(rt(re) || ds(re)) && z && ((re = D), (K = re)),
        !M && (!(rt(re) || ds(re)) || !rt(B)))
      )
        return i ? lf : p;
      let fe = !1;
      const ye = () => {
          fe = !0;
        },
        pe = ds(re) ? re : s_(t, p, B, re, K, ye);
      if (fe) return re;
      const _e = _N(t, B, ae, m),
        be = rN(_e),
        Ce = wN(t, pe, be),
        ke = n ? n(Ce, p) : Ce;
      if (__INTLIFY_PROD_DEVTOOLS__) {
        const E = {
          timestamp: Date.now(),
          key: rt(p) ? p : ds(re) ? re.key : "",
          locale: B || (ds(re) ? re.locale : ""),
          format: rt(re) ? re : ds(re) ? re.source : "",
          message: ke,
        };
        (E.meta = yn({}, t.__meta, gN() || {})), sN(E);
      }
      return ke;
    }
    function xN(t) {
      tn(t.list)
        ? (t.list = t.list.map((e) => (rt(e) ? Nk(e) : e)))
        : Ar(t.named) &&
          Object.keys(t.named).forEach((e) => {
            rt(t.named[e]) && (t.named[e] = Nk(t.named[e]));
          });
    }
    function i_(t, e, r, n, i, a) {
      const {
          messages: l,
          onWarn: u,
          messageResolver: p,
          localeFallbacker: m,
        } = t,
        v = m(t, n, r);
      let w = {},
        S,
        M = null;
      const D = "translate";
      for (
        let z = 0;
        z < v.length &&
        ((S = v[z]),
        (w = l[S] || {}),
        (M = p(w, e)) === null && (M = w[e]),
        !(rt(M) || bn(M)));
        z++
      ) {
        const V = Tv(t, e, S, a, D);
        V !== e && (M = V);
      }
      return [M, S, w];
    }
    function s_(t, e, r, n, i, a) {
      const { messageCompiler: l, warnHtmlMessage: u } = t;
      if (ds(n)) {
        const m = n;
        return (m.locale = m.locale || r), (m.key = m.key || e), m;
      }
      if (l == null) {
        const m = () => n;
        return (m.locale = r), (m.key = e), m;
      }
      const p = l(n, kN(t, r, i, n, u, a));
      return (p.locale = r), (p.key = e), (p.source = n), p;
    }
    function wN(t, e, r) {
      return e(r);
    }
    function Ov(...t) {
      const [e, r, n] = t,
        i = {};
      if (!rt(e) && !cn(e) && !ds(e)) throw $l(Kl.INVALID_ARGUMENT);
      const a = cn(e) ? String(e) : (ds(e), e);
      return (
        cn(r)
          ? (i.plural = r)
          : rt(r)
          ? (i.default = r)
          : Wt(r) && !af(r)
          ? (i.named = r)
          : tn(r) && (i.list = r),
        cn(n) ? (i.plural = n) : rt(n) ? (i.default = n) : Wt(n) && yn(i, n),
        [a, i]
      );
    }
    function kN(t, e, r, n, i, a) {
      return {
        warnHtmlMessage: i,
        onError: (l) => {
          throw (a && a(l), l);
        },
        onCacheKey: (l) => p3(e, r, l),
      };
    }
    function _N(t, e, r, n) {
      const {
          modifiers: i,
          pluralRules: a,
          messageResolver: l,
          fallbackLocale: u,
          fallbackWarn: p,
          missingWarn: m,
          fallbackContext: v,
        } = t,
        w = {
          locale: e,
          modifiers: i,
          pluralRules: a,
          messages: (S) => {
            let M = l(r, S);
            if (M == null && v) {
              const [, , D] = i_(v, S, e, u, p, m);
              M = l(D, S);
            }
            if (rt(M)) {
              let D = !1;
              const z = s_(t, S, e, M, S, () => {
                D = !0;
              });
              return D ? r_ : z;
            } else return ds(M) ? M : r_;
          },
        };
      return (
        t.processor && (w.processor = t.processor),
        n.list && (w.list = n.list),
        n.named && (w.named = n.named),
        cn(n.plural) && (w.pluralIndex = n.plural),
        w
      );
    }
    function a_(t, ...e) {
      const {
          datetimeFormats: r,
          unresolving: n,
          fallbackLocale: i,
          onWarn: a,
          localeFallbacker: l,
        } = t,
        { __datetimeFormatters: u } = t,
        [p, m, v, w] = Lv(...e),
        S = $r(v.missingWarn) ? v.missingWarn : t.missingWarn;
      $r(v.fallbackWarn) ? v.fallbackWarn : t.fallbackWarn;
      const M = !!v.part,
        D = rt(v.locale) ? v.locale : t.locale,
        z = l(t, i, D);
      if (!rt(p) || p === "") return new Intl.DateTimeFormat(D, w).format(m);
      let V = {},
        j,
        B = null;
      const ae = "datetime format";
      for (
        let fe = 0;
        fe < z.length && ((j = z[fe]), (V = r[j] || {}), (B = V[p]), !Wt(B));
        fe++
      )
        Tv(t, p, j, S, ae);
      if (!Wt(B) || !rt(j)) return n ? lf : p;
      let re = `${j}__${p}`;
      af(w) || (re = `${re}__${JSON.stringify(w)}`);
      let K = u.get(re);
      return (
        K || ((K = new Intl.DateTimeFormat(j, yn({}, B, w))), u.set(re, K)),
        M ? K.formatToParts(m) : K.format(m)
      );
    }
    const o_ = [
      "localeMatcher",
      "weekday",
      "era",
      "year",
      "month",
      "day",
      "hour",
      "minute",
      "second",
      "timeZoneName",
      "formatMatcher",
      "hour12",
      "timeZone",
      "dateStyle",
      "timeStyle",
      "calendar",
      "dayPeriod",
      "numberingSystem",
      "hourCycle",
      "fractionalSecondDigits",
    ];
    function Lv(...t) {
      const [e, r, n, i] = t,
        a = {};
      let l = {},
        u;
      if (rt(e)) {
        const p = e.match(/(\d{4}-\d{2}-\d{2})(T|\s)?(.*)/);
        if (!p) throw $l(Kl.INVALID_ISO_DATE_ARGUMENT);
        const m = p[3]
          ? p[3].trim().startsWith("T")
            ? `${p[1].trim()}${p[3].trim()}`
            : `${p[1].trim()}T${p[3].trim()}`
          : p[1].trim();
        u = new Date(m);
        try {
          u.toISOString();
        } catch {
          throw $l(Kl.INVALID_ISO_DATE_ARGUMENT);
        }
      } else if (m3(e)) {
        if (isNaN(e.getTime())) throw $l(Kl.INVALID_DATE_ARGUMENT);
        u = e;
      } else if (cn(e)) u = e;
      else throw $l(Kl.INVALID_ARGUMENT);
      return (
        rt(r)
          ? (a.key = r)
          : Wt(r) &&
            Object.keys(r).forEach((p) => {
              o_.includes(p) ? (l[p] = r[p]) : (a[p] = r[p]);
            }),
        rt(n) ? (a.locale = n) : Wt(n) && (l = n),
        Wt(i) && (l = i),
        [a.key || "", u, a, l]
      );
    }
    function l_(t, e, r) {
      const n = t;
      for (const i in r) {
        const a = `${e}__${i}`;
        n.__datetimeFormatters.has(a) && n.__datetimeFormatters.delete(a);
      }
    }
    function c_(t, ...e) {
      const {
          numberFormats: r,
          unresolving: n,
          fallbackLocale: i,
          onWarn: a,
          localeFallbacker: l,
        } = t,
        { __numberFormatters: u } = t,
        [p, m, v, w] = Mv(...e),
        S = $r(v.missingWarn) ? v.missingWarn : t.missingWarn;
      $r(v.fallbackWarn) ? v.fallbackWarn : t.fallbackWarn;
      const M = !!v.part,
        D = rt(v.locale) ? v.locale : t.locale,
        z = l(t, i, D);
      if (!rt(p) || p === "") return new Intl.NumberFormat(D, w).format(m);
      let V = {},
        j,
        B = null;
      const ae = "number format";
      for (
        let fe = 0;
        fe < z.length && ((j = z[fe]), (V = r[j] || {}), (B = V[p]), !Wt(B));
        fe++
      )
        Tv(t, p, j, S, ae);
      if (!Wt(B) || !rt(j)) return n ? lf : p;
      let re = `${j}__${p}`;
      af(w) || (re = `${re}__${JSON.stringify(w)}`);
      let K = u.get(re);
      return (
        K || ((K = new Intl.NumberFormat(j, yn({}, B, w))), u.set(re, K)),
        M ? K.formatToParts(m) : K.format(m)
      );
    }
    const u_ = [
      "localeMatcher",
      "style",
      "currency",
      "currencyDisplay",
      "currencySign",
      "useGrouping",
      "minimumIntegerDigits",
      "minimumFractionDigits",
      "maximumFractionDigits",
      "minimumSignificantDigits",
      "maximumSignificantDigits",
      "compactDisplay",
      "notation",
      "signDisplay",
      "unit",
      "unitDisplay",
      "roundingMode",
      "roundingPriority",
      "roundingIncrement",
      "trailingZeroDisplay",
    ];
    function Mv(...t) {
      const [e, r, n, i] = t,
        a = {};
      let l = {};
      if (!cn(e)) throw $l(Kl.INVALID_ARGUMENT);
      const u = e;
      return (
        rt(r)
          ? (a.key = r)
          : Wt(r) &&
            Object.keys(r).forEach((p) => {
              u_.includes(p) ? (l[p] = r[p]) : (a[p] = r[p]);
            }),
        rt(n) ? (a.locale = n) : Wt(n) && (l = n),
        Wt(i) && (l = i),
        [a.key || "", u, a, l]
      );
    }
    function h_(t, e, r) {
      const n = t;
      for (const i in r) {
        const a = `${e}__${i}`;
        n.__numberFormatters.has(a) && n.__numberFormatters.delete(a);
      }
    }
    typeof __INTLIFY_PROD_DEVTOOLS__ != "boolean" &&
      (_v().__INTLIFY_PROD_DEVTOOLS__ = !1);
    const AN = "9.2.2";
    function CN() {
      typeof __INTLIFY_PROD_DEVTOOLS__ != "boolean" &&
        (_v().__INTLIFY_PROD_DEVTOOLS__ = !1);
    }
    let d_ = Gt.__EXTEND_POINT__;
    const jn = () => ++d_,
      ni = {
        UNEXPECTED_RETURN_TYPE: d_,
        INVALID_ARGUMENT: jn(),
        MUST_BE_CALL_SETUP_TOP: jn(),
        NOT_INSLALLED: jn(),
        NOT_AVAILABLE_IN_LEGACY_MODE: jn(),
        REQUIRED_VALUE: jn(),
        INVALID_VALUE: jn(),
        CANNOT_SETUP_VUE_DEVTOOLS_PLUGIN: jn(),
        NOT_INSLALLED_WITH_PROVIDE: jn(),
        UNEXPECTED_ERROR: jn(),
        NOT_COMPATIBLE_LEGACY_VUE_I18N: jn(),
        BRIDGE_SUPPORT_VUE_2_ONLY: jn(),
        MUST_DEFINE_I18N_OPTION_IN_ALLOW_COMPOSITION: jn(),
        NOT_AVAILABLE_COMPOSITION_IN_LEGACY: jn(),
        __EXTEND_POINT__: jn(),
      };
    function yi(t, ...e) {
      return of(t, null, void 0);
    }
    const Rv = Na("__transrateVNode"),
      Nv = Na("__datetimeParts"),
      Bv = Na("__numberParts"),
      SN = Na("__setPluralRules");
    Na("__intlifyMeta");
    const EN = Na("__injectWithOption");
    function Fv(t) {
      if (!Ar(t)) return t;
      for (const e in t)
        if (Av(t, e))
          if (!e.includes(".")) Ar(t[e]) && Fv(t[e]);
          else {
            const r = e.split("."),
              n = r.length - 1;
            let i = t;
            for (let a = 0; a < n; a++)
              r[a] in i || (i[r[a]] = {}), (i = i[r[a]]);
            (i[r[n]] = t[e]), delete t[e], Ar(i[r[n]]) && Fv(i[r[n]]);
          }
      return t;
    }
    function f_(t, e) {
      const { messages: r, __i18n: n, messageResolver: i, flatJson: a } = e,
        l = Wt(r) ? r : tn(n) ? {} : { [t]: {} };
      if (
        (tn(n) &&
          n.forEach((u) => {
            if ("locale" in u && "resource" in u) {
              const { locale: p, resource: m } = u;
              p ? ((l[p] = l[p] || {}), Ou(m, l[p])) : Ou(m, l);
            } else rt(u) && Ou(JSON.parse(u), l);
          }),
        i == null && a)
      )
        for (const u in l) Av(l, u) && Fv(l[u]);
      return l;
    }
    const cf = (t) => !Ar(t) || tn(t);
    function Ou(t, e) {
      if (cf(t) || cf(e)) throw yi(ni.INVALID_VALUE);
      for (const r in t)
        Av(t, r) && (cf(t[r]) || cf(e[r]) ? (e[r] = t[r]) : Ou(t[r], e[r]));
    }
    function p_(t) {
      return t.type;
    }
    function IN(t, e, r) {
      let n = Ar(e.messages) ? e.messages : {};
      "__i18nGlobal" in r &&
        (n = f_(t.locale.value, { messages: n, __i18n: r.__i18nGlobal }));
      const i = Object.keys(n);
      i.length &&
        i.forEach((a) => {
          t.mergeLocaleMessage(a, n[a]);
        });
      {
        if (Ar(e.datetimeFormats)) {
          const a = Object.keys(e.datetimeFormats);
          a.length &&
            a.forEach((l) => {
              t.mergeDateTimeFormat(l, e.datetimeFormats[l]);
            });
        }
        if (Ar(e.numberFormats)) {
          const a = Object.keys(e.numberFormats);
          a.length &&
            a.forEach((l) => {
              t.mergeNumberFormat(l, e.numberFormats[l]);
            });
        }
      }
    }
    function g_(t) {
      return $e(_u, null, t, 0);
    }
    const m_ = "__INTLIFY_META__";
    let v_ = 0;
    function y_(t) {
      return (e, r, n, i) => t(r, n, Su() || void 0, i);
    }
    const TN = () => {
      const t = Su();
      let e = null;
      return t && (e = p_(t)[m_]) ? { [m_]: e } : null;
    };
    function b_(t = {}, e) {
      const { __root: r } = t,
        n = r === void 0;
      let i = $r(t.inheritLocale) ? t.inheritLocale : !0;
      const a = We(r && i ? r.locale.value : rt(t.locale) ? t.locale : Iv),
        l = We(
          r && i
            ? r.fallbackLocale.value
            : rt(t.fallbackLocale) ||
              tn(t.fallbackLocale) ||
              Wt(t.fallbackLocale) ||
              t.fallbackLocale === !1
            ? t.fallbackLocale
            : a.value
        ),
        u = We(f_(a.value, t)),
        p = We(Wt(t.datetimeFormats) ? t.datetimeFormats : { [a.value]: {} }),
        m = We(Wt(t.numberFormats) ? t.numberFormats : { [a.value]: {} });
      let v = r
          ? r.missingWarn
          : $r(t.missingWarn) || sf(t.missingWarn)
          ? t.missingWarn
          : !0,
        w = r
          ? r.fallbackWarn
          : $r(t.fallbackWarn) || sf(t.fallbackWarn)
          ? t.fallbackWarn
          : !0,
        S = r ? r.fallbackRoot : $r(t.fallbackRoot) ? t.fallbackRoot : !0,
        M = !!t.fallbackFormat,
        D = bn(t.missing) ? t.missing : null,
        z = bn(t.missing) ? y_(t.missing) : null,
        V = bn(t.postTranslation) ? t.postTranslation : null,
        j = r
          ? r.warnHtmlMessage
          : $r(t.warnHtmlMessage)
          ? t.warnHtmlMessage
          : !0,
        B = !!t.escapeParameter;
      const ae = r ? r.modifiers : Wt(t.modifiers) ? t.modifiers : {};
      let re = t.pluralRules || (r && r.pluralRules),
        K;
      (K = (() => {
        n && Qk(null);
        const ne = {
          version: AN,
          locale: a.value,
          fallbackLocale: l.value,
          messages: u.value,
          modifiers: ae,
          pluralRules: re,
          missing: z === null ? void 0 : z,
          missingWarn: v,
          fallbackWarn: w,
          fallbackFormat: M,
          unresolving: !0,
          postTranslation: V === null ? void 0 : V,
          warnHtmlMessage: j,
          escapeParameter: B,
          messageResolver: t.messageResolver,
          __meta: { framework: "vue" },
        };
        (ne.datetimeFormats = p.value),
          (ne.numberFormats = m.value),
          (ne.__datetimeFormatters = Wt(K) ? K.__datetimeFormatters : void 0),
          (ne.__numberFormatters = Wt(K) ? K.__numberFormatters : void 0);
        const de = vN(ne);
        return n && Qk(de), de;
      })()),
        Pu(K, a.value, l.value);
      function fe() {
        return [a.value, l.value, u.value, p.value, m.value];
      }
      const ye = He({
          get: () => a.value,
          set: (ne) => {
            (a.value = ne), (K.locale = a.value);
          },
        }),
        pe = He({
          get: () => l.value,
          set: (ne) => {
            (l.value = ne), (K.fallbackLocale = l.value), Pu(K, a.value, ne);
          },
        }),
        _e = He(() => u.value),
        be = He(() => p.value),
        Ce = He(() => m.value);
      function ke() {
        return bn(V) ? V : null;
      }
      function E(ne) {
        (V = ne), (K.postTranslation = ne);
      }
      function P() {
        return D;
      }
      function L(ne) {
        ne !== null && (z = y_(ne)), (D = ne), (K.missing = z);
      }
      const U = (ne, de, Te, Re, Ve, Pe) => {
        fe();
        let Be;
        if (__INTLIFY_PROD_DEVTOOLS__)
          try {
            $k(TN()),
              n || (K.fallbackContext = r ? mN() : void 0),
              (Be = ne(K));
          } finally {
            $k(null), n || (K.fallbackContext = void 0);
          }
        else Be = ne(K);
        if (cn(Be) && Be === lf) {
          const [Ze, Je] = de();
          return r && S ? Re(r) : Ve(Ze);
        } else {
          if (Pe(Be)) return Be;
          throw yi(ni.UNEXPECTED_RETURN_TYPE);
        }
      };
      function Y(...ne) {
        return U(
          (de) => Reflect.apply(n_, null, [de, ...ne]),
          () => Ov(...ne),
          "translate",
          (de) => Reflect.apply(de.t, de, [...ne]),
          (de) => de,
          (de) => rt(de)
        );
      }
      function ie(...ne) {
        const [de, Te, Re] = ne;
        if (Re && !Ar(Re)) throw yi(ni.INVALID_ARGUMENT);
        return Y(de, Te, yn({ resolvedMessage: !0 }, Re || {}));
      }
      function le(...ne) {
        return U(
          (de) => Reflect.apply(a_, null, [de, ...ne]),
          () => Lv(...ne),
          "datetime format",
          (de) => Reflect.apply(de.d, de, [...ne]),
          () => jk,
          (de) => rt(de)
        );
      }
      function J(...ne) {
        return U(
          (de) => Reflect.apply(c_, null, [de, ...ne]),
          () => Mv(...ne),
          "number format",
          (de) => Reflect.apply(de.n, de, [...ne]),
          () => jk,
          (de) => rt(de)
        );
      }
      function T(ne) {
        return ne.map((de) =>
          rt(de) || cn(de) || $r(de) ? g_(String(de)) : de
        );
      }
      const Z = { normalize: T, interpolate: (ne) => ne, type: "vnode" };
      function Oe(...ne) {
        return U(
          (de) => {
            let Te;
            const Re = de;
            try {
              (Re.processor = Z), (Te = Reflect.apply(n_, null, [Re, ...ne]));
            } finally {
              Re.processor = null;
            }
            return Te;
          },
          () => Ov(...ne),
          "translate",
          (de) => de[Rv](...ne),
          (de) => [g_(de)],
          (de) => tn(de)
        );
      }
      function Me(...ne) {
        return U(
          (de) => Reflect.apply(c_, null, [de, ...ne]),
          () => Mv(...ne),
          "number format",
          (de) => de[Bv](...ne),
          () => [],
          (de) => rt(de) || tn(de)
        );
      }
      function X(...ne) {
        return U(
          (de) => Reflect.apply(a_, null, [de, ...ne]),
          () => Lv(...ne),
          "datetime format",
          (de) => de[Nv](...ne),
          () => [],
          (de) => rt(de) || tn(de)
        );
      }
      function Ee(ne) {
        (re = ne), (K.pluralRules = re);
      }
      function me(ne, de) {
        const Te = rt(de) ? de : a.value,
          Re = Ie(Te);
        return K.messageResolver(Re, ne) !== null;
      }
      function xe(ne) {
        let de = null;
        const Te = Wk(K, l.value, a.value);
        for (let Re = 0; Re < Te.length; Re++) {
          const Ve = u.value[Te[Re]] || {},
            Pe = K.messageResolver(Ve, ne);
          if (Pe != null) {
            de = Pe;
            break;
          }
        }
        return de;
      }
      function Se(ne) {
        return xe(ne) ?? (r ? r.tm(ne) || {} : {});
      }
      function Ie(ne) {
        return u.value[ne] || {};
      }
      function Ne(ne, de) {
        (u.value[ne] = de), (K.messages = u.value);
      }
      function oe(ne, de) {
        (u.value[ne] = u.value[ne] || {}),
          Ou(de, u.value[ne]),
          (K.messages = u.value);
      }
      function W(ne) {
        return p.value[ne] || {};
      }
      function Q(ne, de) {
        (p.value[ne] = de), (K.datetimeFormats = p.value), l_(K, ne, de);
      }
      function ge(ne, de) {
        (p.value[ne] = yn(p.value[ne] || {}, de)),
          (K.datetimeFormats = p.value),
          l_(K, ne, de);
      }
      function I(ne) {
        return m.value[ne] || {};
      }
      function R(ne, de) {
        (m.value[ne] = de), (K.numberFormats = m.value), h_(K, ne, de);
      }
      function q(ne, de) {
        (m.value[ne] = yn(m.value[ne] || {}, de)),
          (K.numberFormats = m.value),
          h_(K, ne, de);
      }
      v_++,
        r &&
          kv &&
          (Or(r.locale, (ne) => {
            i && ((a.value = ne), (K.locale = ne), Pu(K, a.value, l.value));
          }),
          Or(r.fallbackLocale, (ne) => {
            i &&
              ((l.value = ne),
              (K.fallbackLocale = ne),
              Pu(K, a.value, l.value));
          }));
      const ce = {
        id: v_,
        locale: ye,
        fallbackLocale: pe,
        get inheritLocale() {
          return i;
        },
        set inheritLocale(ne) {
          (i = ne),
            ne &&
              r &&
              ((a.value = r.locale.value),
              (l.value = r.fallbackLocale.value),
              Pu(K, a.value, l.value));
        },
        get availableLocales() {
          return Object.keys(u.value).sort();
        },
        messages: _e,
        get modifiers() {
          return ae;
        },
        get pluralRules() {
          return re || {};
        },
        get isGlobal() {
          return n;
        },
        get missingWarn() {
          return v;
        },
        set missingWarn(ne) {
          (v = ne), (K.missingWarn = v);
        },
        get fallbackWarn() {
          return w;
        },
        set fallbackWarn(ne) {
          (w = ne), (K.fallbackWarn = w);
        },
        get fallbackRoot() {
          return S;
        },
        set fallbackRoot(ne) {
          S = ne;
        },
        get fallbackFormat() {
          return M;
        },
        set fallbackFormat(ne) {
          (M = ne), (K.fallbackFormat = M);
        },
        get warnHtmlMessage() {
          return j;
        },
        set warnHtmlMessage(ne) {
          (j = ne), (K.warnHtmlMessage = ne);
        },
        get escapeParameter() {
          return B;
        },
        set escapeParameter(ne) {
          (B = ne), (K.escapeParameter = ne);
        },
        t: Y,
        getLocaleMessage: Ie,
        setLocaleMessage: Ne,
        mergeLocaleMessage: oe,
        getPostTranslationHandler: ke,
        setPostTranslationHandler: E,
        getMissingHandler: P,
        setMissingHandler: L,
        [SN]: Ee,
      };
      return (
        (ce.datetimeFormats = be),
        (ce.numberFormats = Ce),
        (ce.rt = ie),
        (ce.te = me),
        (ce.tm = Se),
        (ce.d = le),
        (ce.n = J),
        (ce.getDateTimeFormat = W),
        (ce.setDateTimeFormat = Q),
        (ce.mergeDateTimeFormat = ge),
        (ce.getNumberFormat = I),
        (ce.setNumberFormat = R),
        (ce.mergeNumberFormat = q),
        (ce[EN] = t.__injectWithOption),
        (ce[Rv] = Oe),
        (ce[Nv] = X),
        (ce[Bv] = Me),
        ce
      );
    }
    const Dv = {
      tag: { type: [String, Object] },
      locale: { type: String },
      scope: {
        type: String,
        validator: (t) => t === "parent" || t === "global",
        default: "parent",
      },
      i18n: { type: Object },
    };
    function PN({ slots: t }, e) {
      return e.length === 1 && e[0] === "default"
        ? (t.default ? t.default() : []).reduce(
            (r, n) => (r = [...r, ...(tn(n.children) ? n.children : [n])]),
            []
          )
        : e.reduce((r, n) => {
            const i = t[n];
            return i && (r[n] = i()), r;
          }, {});
    }
    function x_(t) {
      return dr;
    }
    const w_ = {
      name: "i18n-t",
      props: yn(
        {
          keypath: { type: String, required: !0 },
          plural: {
            type: [Number, String],
            validator: (t) => cn(t) || !isNaN(t),
          },
        },
        Dv
      ),
      setup(t, e) {
        const { slots: r, attrs: n } = e,
          i = t.i18n || zv({ useScope: t.scope, __useComponent: !0 });
        return () => {
          const a = Object.keys(r).filter((w) => w !== "_"),
            l = {};
          t.locale && (l.locale = t.locale),
            t.plural !== void 0 &&
              (l.plural = rt(t.plural) ? +t.plural : t.plural);
          const u = PN(e, a),
            p = i[Rv](t.keypath, u, l),
            m = yn({}, n),
            v = rt(t.tag) || Ar(t.tag) ? t.tag : x_();
          return Vr(v, m, p);
        };
      },
    };
    function ON(t) {
      return tn(t) && !rt(t[0]);
    }
    function k_(t, e, r, n) {
      const { slots: i, attrs: a } = e;
      return () => {
        const l = { part: !0 };
        let u = {};
        t.locale && (l.locale = t.locale),
          rt(t.format)
            ? (l.key = t.format)
            : Ar(t.format) &&
              (rt(t.format.key) && (l.key = t.format.key),
              (u = Object.keys(t.format).reduce(
                (S, M) => (r.includes(M) ? yn({}, S, { [M]: t.format[M] }) : S),
                {}
              )));
        const p = n(t.value, l, u);
        let m = [l.key];
        tn(p)
          ? (m = p.map((S, M) => {
              const D = i[S.type],
                z = D
                  ? D({ [S.type]: S.value, index: M, parts: p })
                  : [S.value];
              return ON(z) && (z[0].key = `${S.type}-${M}`), z;
            }))
          : rt(p) && (m = [p]);
        const v = yn({}, a),
          w = rt(t.tag) || Ar(t.tag) ? t.tag : x_();
        return Vr(w, v, m);
      };
    }
    const __ = {
        name: "i18n-n",
        props: yn(
          {
            value: { type: Number, required: !0 },
            format: { type: [String, Object] },
          },
          Dv
        ),
        setup(t, e) {
          const r = t.i18n || zv({ useScope: "parent", __useComponent: !0 });
          return k_(t, e, u_, (...n) => r[Bv](...n));
        },
      },
      A_ = {
        name: "i18n-d",
        props: yn(
          {
            value: { type: [Number, Date], required: !0 },
            format: { type: [String, Object] },
          },
          Dv
        ),
        setup(t, e) {
          const r = t.i18n || zv({ useScope: "parent", __useComponent: !0 });
          return k_(t, e, o_, (...n) => r[Nv](...n));
        },
      };
    function LN(t, e) {
      const r = t;
      if (t.mode === "composition") return r.__getInstance(e) || t.global;
      {
        const n = r.__getInstance(e);
        return n != null ? n.__composer : t.global.__composer;
      }
    }
    function MN(t) {
      const e = (r) => {
        const { instance: n, modifiers: i, value: a } = r;
        if (!n || !n.$) throw yi(ni.UNEXPECTED_ERROR);
        const l = LN(t, n.$),
          u = C_(a);
        return [Reflect.apply(l.t, l, [...S_(u)]), l];
      };
      return {
        created: (r, n) => {
          const [i, a] = e(n);
          kv &&
            t.global === a &&
            (r.__i18nWatcher = Or(a.locale, () => {
              n.instance && n.instance.$forceUpdate();
            })),
            (r.__composer = a),
            (r.textContent = i);
        },
        unmounted: (r) => {
          kv &&
            r.__i18nWatcher &&
            (r.__i18nWatcher(),
            (r.__i18nWatcher = void 0),
            delete r.__i18nWatcher),
            r.__composer && ((r.__composer = void 0), delete r.__composer);
        },
        beforeUpdate: (r, { value: n }) => {
          if (r.__composer) {
            const i = r.__composer,
              a = C_(n);
            r.textContent = Reflect.apply(i.t, i, [...S_(a)]);
          }
        },
        getSSRProps: (r) => {
          const [n] = e(r);
          return { textContent: n };
        },
      };
    }
    function C_(t) {
      if (rt(t)) return { path: t };
      if (Wt(t)) {
        if (!("path" in t)) throw yi(ni.REQUIRED_VALUE, "path");
        return t;
      } else throw yi(ni.INVALID_VALUE);
    }
    function S_(t) {
      const { path: e, locale: r, args: n, choice: i, plural: a } = t,
        l = {},
        u = n || {};
      return (
        rt(r) && (l.locale = r),
        cn(i) && (l.plural = i),
        cn(a) && (l.plural = a),
        [e, u, l]
      );
    }
    function RN(t, e, ...r) {
      const n = Wt(r[0]) ? r[0] : {},
        i = !!n.useI18nComponentName;
      (!$r(n.globalInstall) || n.globalInstall) &&
        (t.component(i ? "i18n" : w_.name, w_),
        t.component(__.name, __),
        t.component(A_.name, A_)),
        t.directive("t", MN(e));
    }
    const NN = Na("global-vue-i18n");
    function BN(t = {}, e) {
      const r = $r(t.globalInjection) ? t.globalInjection : !0,
        n = !0,
        i = new Map(),
        [a, l] = FN(t),
        u = Na("");
      function p(w) {
        return i.get(w) || null;
      }
      function m(w, S) {
        i.set(w, S);
      }
      function v(w) {
        i.delete(w);
      }
      {
        const w = {
          get mode() {
            return "composition";
          },
          get allowComposition() {
            return n;
          },
          async install(S, ...M) {
            (S.__VUE_I18N_SYMBOL__ = u),
              S.provide(S.__VUE_I18N_SYMBOL__, w),
              r && GN(S, w.global),
              RN(S, w, ...M);
            const D = S.unmount;
            S.unmount = () => {
              w.dispose(), D();
            };
          },
          get global() {
            return l;
          },
          dispose() {
            a.stop();
          },
          __instances: i,
          __getInstance: p,
          __setInstance: m,
          __deleteInstance: v,
        };
        return w;
      }
    }
    function zv(t = {}) {
      const e = Su();
      if (e == null) throw yi(ni.MUST_BE_CALL_SETUP_TOP);
      if (
        !e.isCE &&
        e.appContext.app != null &&
        !e.appContext.app.__VUE_I18N_SYMBOL__
      )
        throw yi(ni.NOT_INSLALLED);
      const r = DN(e),
        n = HN(r),
        i = p_(e),
        a = zN(t, i);
      if (a === "global") return IN(n, t, i), n;
      if (a === "parent") {
        let p = UN(r, e, t.__useComponent);
        return p == null && (p = n), p;
      }
      const l = r;
      let u = l.__getInstance(e);
      if (u == null) {
        const p = yn({}, t);
        "__i18n" in i && (p.__i18n = i.__i18n),
          n && (p.__root = n),
          (u = b_(p)),
          WN(l, e),
          l.__setInstance(e, u);
      }
      return u;
    }
    function FN(t, e, r) {
      const n = n1();
      {
        const i = n.run(() => b_(t));
        if (i == null) throw yi(ni.UNEXPECTED_ERROR);
        return [n, i];
      }
    }
    function DN(t) {
      {
        const e = Lr(t.isCE ? NN : t.appContext.app.__VUE_I18N_SYMBOL__);
        if (!e)
          throw yi(
            t.isCE ? ni.NOT_INSLALLED_WITH_PROVIDE : ni.UNEXPECTED_ERROR
          );
        return e;
      }
    }
    function zN(t, e) {
      return af(t)
        ? "__i18n" in e
          ? "local"
          : "global"
        : t.useScope
        ? t.useScope
        : "local";
    }
    function HN(t) {
      return t.mode === "composition" ? t.global : t.global.__composer;
    }
    function UN(t, e, r = !1) {
      let n = null;
      const i = e.root;
      let a = e.parent;
      for (; a != null; ) {
        const l = t;
        if (
          (t.mode === "composition" && (n = l.__getInstance(a)),
          n != null || i === a)
        )
          break;
        a = a.parent;
      }
      return n;
    }
    function WN(t, e, r) {
      sr(() => {}, e),
        En(() => {
          t.__deleteInstance(e);
        }, e);
    }
    const XN = ["locale", "fallbackLocale", "availableLocales"],
      jN = ["t", "rt", "d", "n", "tm"];
    function GN(t, e) {
      const r = Object.create(null);
      XN.forEach((n) => {
        const i = Object.getOwnPropertyDescriptor(e, n);
        if (!i) throw yi(ni.UNEXPECTED_ERROR);
        const a = mn(i.value)
          ? {
              get() {
                return i.value.value;
              },
              set(l) {
                i.value.value = l;
              },
            }
          : {
              get() {
                return i.get && i.get();
              },
            };
        Object.defineProperty(r, n, a);
      }),
        (t.config.globalProperties.$i18n = r),
        jN.forEach((n) => {
          const i = Object.getOwnPropertyDescriptor(e, n);
          if (!i || !i.value) throw yi(ni.UNEXPECTED_ERROR);
          Object.defineProperty(t.config.globalProperties, `$${n}`, i);
        });
    }
    if ((dN(bN), fN(q3), pN(Wk), CN(), __INTLIFY_PROD_DEVTOOLS__)) {
      const t = _v();
      (t.__INTLIFY__ = !0), nN(t.__INTLIFY_DEVTOOLS_GLOBAL_HOOK__);
    }
    function Ri(t, e, ...r) {
      if (t in e) {
        let i = e[t];
        return typeof i == "function" ? i(...r) : i;
      }
      let n = new Error(
        `Tried to handle "${t}" but there is no handler defined. Only defined handlers are: ${Object.keys(
          e
        )
          .map((i) => `"${i}"`)
          .join(", ")}.`
      );
      throw (Error.captureStackTrace && Error.captureStackTrace(n, Ri), n);
    }
    var Zl = ((t) => (
        (t[(t.None = 0)] = "None"),
        (t[(t.RenderStrategy = 1)] = "RenderStrategy"),
        (t[(t.Static = 2)] = "Static"),
        t
      ))(Zl || {}),
      Da = ((t) => (
        (t[(t.Unmount = 0)] = "Unmount"), (t[(t.Hidden = 1)] = "Hidden"), t
      ))(Da || {});
    function xn({
      visible: t = !0,
      features: e = 0,
      ourProps: r,
      theirProps: n,
      ...i
    }) {
      var a;
      let l = I_(n, r),
        u = Object.assign(i, { props: l });
      if (t || (e & 2 && l.static)) return Hv(u);
      if (e & 1) {
        let p = (a = l.unmount) == null || a ? 0 : 1;
        return Ri(p, {
          0() {
            return null;
          },
          1() {
            return Hv({
              ...i,
              props: { ...l, hidden: !0, style: { display: "none" } },
            });
          },
        });
      }
      return Hv(u);
    }
    function Hv({ props: t, attrs: e, slots: r, slot: n, name: i }) {
      var a, l;
      let { as: u, ...p } = Uv(t, ["unmount", "static"]),
        m = (a = r.default) == null ? void 0 : a.call(r, n),
        v = {};
      if (n) {
        let w = !1,
          S = [];
        for (let [M, D] of Object.entries(n))
          typeof D == "boolean" && (w = !0), D === !0 && S.push(M);
        w && (v["data-headlessui-state"] = S.join(" "));
      }
      if (u === "template") {
        if (
          ((m = E_(m ?? [])),
          Object.keys(p).length > 0 || Object.keys(e).length > 0)
        ) {
          let [w, ...S] = m ?? [];
          if (!VN(w) || S.length > 0)
            throw new Error(
              [
                'Passing props on "template"!',
                "",
                `The current component <${i} /> is rendering a "template".`,
                "However we need to passthrough the following props:",
                Object.keys(p)
                  .concat(Object.keys(e))
                  .map((z) => z.trim())
                  .filter((z, V, j) => j.indexOf(z) === V)
                  .sort((z, V) => z.localeCompare(V))
                  .map((z) => `  - ${z}`).join(`
`),
                "",
                "You can apply a few solutions:",
                [
                  'Add an `as="..."` prop, to ensure that we render an actual element instead of a "template".',
                  "Render a single element as the child so that we can forward the props onto that element.",
                ].map((z) => `  - ${z}`).join(`
`),
              ].join(`
`)
            );
          let M = I_((l = w.props) != null ? l : {}, p),
            D = Us(w, M);
          for (let z in M)
            z.startsWith("on") &&
              (D.props || (D.props = {}), (D.props[z] = M[z]));
          return D;
        }
        return Array.isArray(m) && m.length === 1 ? m[0] : m;
      }
      return Vr(u, Object.assign({}, p, v), { default: () => m });
    }
    function E_(t) {
      return t.flatMap((e) => (e.type === dr ? E_(e.children) : [e]));
    }
    function I_(...t) {
      if (t.length === 0) return {};
      if (t.length === 1) return t[0];
      let e = {},
        r = {};
      for (let n of t)
        for (let i in n)
          i.startsWith("on") && typeof n[i] == "function"
            ? (r[i] != null || (r[i] = []), r[i].push(n[i]))
            : (e[i] = n[i]);
      if (e.disabled || e["aria-disabled"])
        return Object.assign(
          e,
          Object.fromEntries(Object.keys(r).map((n) => [n, void 0]))
        );
      for (let n in r)
        Object.assign(e, {
          [n](i, ...a) {
            let l = r[n];
            for (let u of l) {
              if (i instanceof Event && i.defaultPrevented) return;
              u(i, ...a);
            }
          },
        });
      return e;
    }
    function YN(t) {
      let e = Object.assign({}, t);
      for (let r in e) e[r] === void 0 && delete e[r];
      return e;
    }
    function Uv(t, e = []) {
      let r = Object.assign({}, t);
      for (let n of e) n in r && delete r[n];
      return r;
    }
    function VN(t) {
      return t == null
        ? !1
        : typeof t.type == "string" ||
            typeof t.type == "object" ||
            typeof t.type == "function";
    }
    let qN = 0;
    function KN() {
      return ++qN;
    }
    function fs() {
      return KN();
    }
    var Fr = ((t) => (
      (t.Space = " "),
      (t.Enter = "Enter"),
      (t.Escape = "Escape"),
      (t.Backspace = "Backspace"),
      (t.Delete = "Delete"),
      (t.ArrowLeft = "ArrowLeft"),
      (t.ArrowUp = "ArrowUp"),
      (t.ArrowRight = "ArrowRight"),
      (t.ArrowDown = "ArrowDown"),
      (t.Home = "Home"),
      (t.End = "End"),
      (t.PageUp = "PageUp"),
      (t.PageDown = "PageDown"),
      (t.Tab = "Tab"),
      t
    ))(Fr || {});
    function $N(t) {
      throw new Error("Unexpected object: " + t);
    }
    var ii = ((t) => (
      (t[(t.First = 0)] = "First"),
      (t[(t.Previous = 1)] = "Previous"),
      (t[(t.Next = 2)] = "Next"),
      (t[(t.Last = 3)] = "Last"),
      (t[(t.Specific = 4)] = "Specific"),
      (t[(t.Nothing = 5)] = "Nothing"),
      t
    ))(ii || {});
    function ZN(t, e) {
      let r = e.resolveItems();
      if (r.length <= 0) return null;
      let n = e.resolveActiveIndex(),
        i = n ?? -1,
        a = (() => {
          switch (t.focus) {
            case 0:
              return r.findIndex((l) => !e.resolveDisabled(l));
            case 1: {
              let l = r
                .slice()
                .reverse()
                .findIndex((u, p, m) =>
                  i !== -1 && m.length - p - 1 >= i ? !1 : !e.resolveDisabled(u)
                );
              return l === -1 ? l : r.length - 1 - l;
            }
            case 2:
              return r.findIndex((l, u) =>
                u <= i ? !1 : !e.resolveDisabled(l)
              );
            case 3: {
              let l = r
                .slice()
                .reverse()
                .findIndex((u) => !e.resolveDisabled(u));
              return l === -1 ? l : r.length - 1 - l;
            }
            case 4:
              return r.findIndex((l) => e.resolveId(l) === t.id);
            case 5:
              return null;
            default:
              $N(t);
          }
        })();
      return a === -1 ? n : a;
    }
    function yt(t) {
      var e;
      return t == null || t.value == null
        ? null
        : (e = t.value.$el) != null
        ? e
        : t.value;
    }
    let T_ = Symbol("Context");
    var wn = ((t) => (
      (t[(t.Open = 1)] = "Open"),
      (t[(t.Closed = 2)] = "Closed"),
      (t[(t.Closing = 4)] = "Closing"),
      (t[(t.Opening = 8)] = "Opening"),
      t
    ))(wn || {});
    function QN() {
      return uf() !== null;
    }
    function uf() {
      return Lr(T_, null);
    }
    function P_(t) {
      vn(T_, t);
    }
    function O_(t, e) {
      if (t) return t;
      let r = e ?? "button";
      if (typeof r == "string" && r.toLowerCase() === "button") return "button";
    }
    function JN(t, e) {
      let r = We(O_(t.value.type, t.value.as));
      return (
        sr(() => {
          r.value = O_(t.value.type, t.value.as);
        }),
        Wn(() => {
          var n;
          r.value ||
            (yt(e) &&
              yt(e) instanceof HTMLButtonElement &&
              !((n = yt(e)) != null && n.hasAttribute("type")) &&
              (r.value = "button"));
        }),
        r
      );
    }
    var eB = Object.defineProperty,
      tB = (t, e, r) =>
        e in t
          ? eB(t, e, {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: r,
            })
          : (t[e] = r),
      L_ = (t, e, r) => (tB(t, typeof e != "symbol" ? e + "" : e, r), r);
    class rB {
      constructor() {
        L_(this, "current", this.detect()), L_(this, "currentId", 0);
      }
      set(e) {
        this.current !== e && ((this.currentId = 0), (this.current = e));
      }
      reset() {
        this.set(this.detect());
      }
      nextId() {
        return ++this.currentId;
      }
      get isServer() {
        return this.current === "server";
      }
      get isClient() {
        return this.current === "client";
      }
      detect() {
        return typeof window > "u" || typeof document > "u"
          ? "server"
          : "client";
      }
    }
    let Lu = new rB();
    function Ni(t) {
      if (Lu.isServer) return null;
      if (t instanceof Node) return t.ownerDocument;
      if (t != null && t.hasOwnProperty("value")) {
        let e = yt(t);
        if (e) return e.ownerDocument;
      }
      return document;
    }
    function M_({ container: t, accept: e, walk: r, enabled: n }) {
      Wn(() => {
        let i = t.value;
        if (!i || (n !== void 0 && !n.value)) return;
        let a = Ni(t);
        if (!a) return;
        let l = Object.assign((p) => e(p), { acceptNode: e }),
          u = a.createTreeWalker(i, NodeFilter.SHOW_ELEMENT, l, !1);
        for (; u.nextNode(); ) r(u.currentNode);
      });
    }
    let Wv = [
      "[contentEditable=true]",
      "[tabindex]",
      "a[href]",
      "area[href]",
      "button:not([disabled])",
      "iframe",
      "input:not([disabled])",
      "select:not([disabled])",
      "textarea:not([disabled])",
    ]
      .map((t) => `${t}:not([tabindex='-1'])`)
      .join(",");
    var Gn = ((t) => (
        (t[(t.First = 1)] = "First"),
        (t[(t.Previous = 2)] = "Previous"),
        (t[(t.Next = 4)] = "Next"),
        (t[(t.Last = 8)] = "Last"),
        (t[(t.WrapAround = 16)] = "WrapAround"),
        (t[(t.NoScroll = 32)] = "NoScroll"),
        t
      ))(Gn || {}),
      hf = ((t) => (
        (t[(t.Error = 0)] = "Error"),
        (t[(t.Overflow = 1)] = "Overflow"),
        (t[(t.Success = 2)] = "Success"),
        (t[(t.Underflow = 3)] = "Underflow"),
        t
      ))(hf || {}),
      nB = ((t) => (
        (t[(t.Previous = -1)] = "Previous"), (t[(t.Next = 1)] = "Next"), t
      ))(nB || {});
    function R_(t = document.body) {
      return t == null
        ? []
        : Array.from(t.querySelectorAll(Wv)).sort((e, r) =>
            Math.sign(
              (e.tabIndex || Number.MAX_SAFE_INTEGER) -
                (r.tabIndex || Number.MAX_SAFE_INTEGER)
            )
          );
    }
    var Xv = ((t) => (
      (t[(t.Strict = 0)] = "Strict"), (t[(t.Loose = 1)] = "Loose"), t
    ))(Xv || {});
    function jv(t, e = 0) {
      var r;
      return t === ((r = Ni(t)) == null ? void 0 : r.body)
        ? !1
        : Ri(e, {
            0() {
              return t.matches(Wv);
            },
            1() {
              let n = t;
              for (; n !== null; ) {
                if (n.matches(Wv)) return !0;
                n = n.parentElement;
              }
              return !1;
            },
          });
    }
    function N_(t) {
      let e = Ni(t);
      Li(() => {
        e && !jv(e.activeElement, 0) && za(t);
      });
    }
    var iB = ((t) => (
      (t[(t.Keyboard = 0)] = "Keyboard"), (t[(t.Mouse = 1)] = "Mouse"), t
    ))(iB || {});
    typeof window < "u" &&
      typeof document < "u" &&
      (document.addEventListener(
        "keydown",
        (t) => {
          t.metaKey ||
            t.altKey ||
            t.ctrlKey ||
            (document.documentElement.dataset.headlessuiFocusVisible = "");
        },
        !0
      ),
      document.addEventListener(
        "click",
        (t) => {
          t.detail === 1
            ? delete document.documentElement.dataset.headlessuiFocusVisible
            : t.detail === 0 &&
              (document.documentElement.dataset.headlessuiFocusVisible = "");
        },
        !0
      ));
    function za(t) {
      t == null || t.focus({ preventScroll: !0 });
    }
    let sB = ["textarea", "input"].join(",");
    function aB(t) {
      var e, r;
      return (r =
        (e = t == null ? void 0 : t.matches) == null
          ? void 0
          : e.call(t, sB)) != null
        ? r
        : !1;
    }
    function Gv(t, e = (r) => r) {
      return t.slice().sort((r, n) => {
        let i = e(r),
          a = e(n);
        if (i === null || a === null) return 0;
        let l = i.compareDocumentPosition(a);
        return l & Node.DOCUMENT_POSITION_FOLLOWING
          ? -1
          : l & Node.DOCUMENT_POSITION_PRECEDING
          ? 1
          : 0;
      });
    }
    function oB(t, e) {
      return Do(R_(), e, { relativeTo: t });
    }
    function Do(
      t,
      e,
      { sorted: r = !0, relativeTo: n = null, skipElements: i = [] } = {}
    ) {
      var a;
      let l =
          (a = Array.isArray(t)
            ? t.length > 0
              ? t[0].ownerDocument
              : document
            : t == null
            ? void 0
            : t.ownerDocument) != null
            ? a
            : document,
        u = Array.isArray(t) ? (r ? Gv(t) : t) : R_(t);
      i.length > 0 && u.length > 1 && (u = u.filter((D) => !i.includes(D))),
        (n = n ?? l.activeElement);
      let p = (() => {
          if (e & 5) return 1;
          if (e & 10) return -1;
          throw new Error(
            "Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last"
          );
        })(),
        m = (() => {
          if (e & 1) return 0;
          if (e & 2) return Math.max(0, u.indexOf(n)) - 1;
          if (e & 4) return Math.max(0, u.indexOf(n)) + 1;
          if (e & 8) return u.length - 1;
          throw new Error(
            "Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last"
          );
        })(),
        v = e & 32 ? { preventScroll: !0 } : {},
        w = 0,
        S = u.length,
        M;
      do {
        if (w >= S || w + S <= 0) return 0;
        let D = m + w;
        if (e & 16) D = (D + S) % S;
        else {
          if (D < 0) return 3;
          if (D >= S) return 1;
        }
        (M = u[D]), M == null || M.focus(v), (w += p);
      } while (M !== l.activeElement);
      return e & 6 && aB(M) && M.select(), 2;
    }
    function df(t, e, r) {
      Lu.isServer ||
        Wn((n) => {
          document.addEventListener(t, e, r),
            n(() => document.removeEventListener(t, e, r));
        });
    }
    function B_(t, e, r) {
      Lu.isServer ||
        Wn((n) => {
          window.addEventListener(t, e, r),
            n(() => window.removeEventListener(t, e, r));
        });
    }
    function F_(t, e, r = He(() => !0)) {
      function n(a, l) {
        if (!r.value || a.defaultPrevented) return;
        let u = l(a);
        if (u === null || !u.getRootNode().contains(u)) return;
        let p = (function m(v) {
          return typeof v == "function"
            ? m(v())
            : Array.isArray(v) || v instanceof Set
            ? v
            : [v];
        })(t);
        for (let m of p) {
          if (m === null) continue;
          let v = m instanceof HTMLElement ? m : yt(m);
          if (
            (v != null && v.contains(u)) ||
            (a.composed && a.composedPath().includes(v))
          )
            return;
        }
        return (
          !jv(u, Xv.Loose) && u.tabIndex !== -1 && a.preventDefault(), e(a, u)
        );
      }
      let i = We(null);
      df(
        "pointerdown",
        (a) => {
          var l, u;
          r.value &&
            (i.value =
              ((u = (l = a.composedPath) == null ? void 0 : l.call(a)) == null
                ? void 0
                : u[0]) || a.target);
        },
        !0
      ),
        df(
          "mousedown",
          (a) => {
            var l, u;
            r.value &&
              (i.value =
                ((u = (l = a.composedPath) == null ? void 0 : l.call(a)) == null
                  ? void 0
                  : u[0]) || a.target);
          },
          !0
        ),
        df(
          "click",
          (a) => {
            i.value && (n(a, () => i.value), (i.value = null));
          },
          !0
        ),
        df(
          "touchend",
          (a) =>
            n(a, () => (a.target instanceof HTMLElement ? a.target : null)),
          !0
        ),
        B_(
          "blur",
          (a) =>
            n(a, () =>
              window.document.activeElement instanceof HTMLIFrameElement
                ? window.document.activeElement
                : null
            ),
          !0
        );
    }
    var Mu = ((t) => (
      (t[(t.None = 1)] = "None"),
      (t[(t.Focusable = 2)] = "Focusable"),
      (t[(t.Hidden = 4)] = "Hidden"),
      t
    ))(Mu || {});
    let ff = dt({
      name: "Hidden",
      props: {
        as: { type: [Object, String], default: "div" },
        features: { type: Number, default: 1 },
      },
      setup(t, { slots: e, attrs: r }) {
        return () => {
          let { features: n, ...i } = t,
            a = {
              "aria-hidden": (n & 2) === 2 ? !0 : void 0,
              style: {
                position: "fixed",
                top: 1,
                left: 1,
                width: 1,
                height: 0,
                padding: 0,
                margin: -1,
                overflow: "hidden",
                clip: "rect(0, 0, 0, 0)",
                whiteSpace: "nowrap",
                borderWidth: "0",
                ...((n & 4) === 4 && (n & 2) !== 2 && { display: "none" }),
              },
            };
          return xn({
            ourProps: a,
            theirProps: i,
            slot: {},
            attrs: r,
            slots: e,
            name: "Hidden",
          });
        };
      },
    });
    function D_(t = {}, e = null, r = []) {
      for (let [n, i] of Object.entries(t)) H_(r, z_(e, n), i);
      return r;
    }
    function z_(t, e) {
      return t ? t + "[" + e + "]" : e;
    }
    function H_(t, e, r) {
      if (Array.isArray(r))
        for (let [n, i] of r.entries()) H_(t, z_(e, n.toString()), i);
      else
        r instanceof Date
          ? t.push([e, r.toISOString()])
          : typeof r == "boolean"
          ? t.push([e, r ? "1" : "0"])
          : typeof r == "string"
          ? t.push([e, r])
          : typeof r == "number"
          ? t.push([e, `${r}`])
          : r == null
          ? t.push([e, ""])
          : D_(r, e, t);
    }
    function lB(t) {
      var e, r;
      let n = (e = t == null ? void 0 : t.form) != null ? e : t.closest("form");
      if (n) {
        for (let i of n.elements)
          if (
            i !== t &&
            ((i.tagName === "INPUT" && i.type === "submit") ||
              (i.tagName === "BUTTON" && i.type === "submit") ||
              (i.nodeName === "INPUT" && i.type === "image"))
          ) {
            i.click();
            return;
          }
        (r = n.requestSubmit) == null || r.call(n);
      }
    }
    function cB(t, e, r) {
      let n = We(r == null ? void 0 : r.value),
        i = He(() => t.value !== void 0);
      return [
        He(() => (i.value ? t.value : n.value)),
        function (a) {
          return i.value || (n.value = a), e == null ? void 0 : e(a);
        },
      ];
    }
    function U_(t) {
      return [t.screenX, t.screenY];
    }
    function uB() {
      let t = We([-1, -1]);
      return {
        wasMoved(e) {
          let r = U_(e);
          return t.value[0] === r[0] && t.value[1] === r[1]
            ? !1
            : ((t.value = r), !0);
        },
        update(e) {
          t.value = U_(e);
        },
      };
    }
    function hB() {
      return (
        /iPhone/gi.test(window.navigator.platform) ||
        (/Mac/gi.test(window.navigator.platform) &&
          window.navigator.maxTouchPoints > 0)
      );
    }
    function Yv(t) {
      typeof queueMicrotask == "function"
        ? queueMicrotask(t)
        : Promise.resolve()
            .then(t)
            .catch((e) =>
              setTimeout(() => {
                throw e;
              })
            );
    }
    function Ru() {
      let t = [],
        e = {
          addEventListener(r, n, i, a) {
            return (
              r.addEventListener(n, i, a),
              e.add(() => r.removeEventListener(n, i, a))
            );
          },
          requestAnimationFrame(...r) {
            let n = requestAnimationFrame(...r);
            e.add(() => cancelAnimationFrame(n));
          },
          nextFrame(...r) {
            e.requestAnimationFrame(() => {
              e.requestAnimationFrame(...r);
            });
          },
          setTimeout(...r) {
            let n = setTimeout(...r);
            e.add(() => clearTimeout(n));
          },
          microTask(...r) {
            let n = { current: !0 };
            return (
              Yv(() => {
                n.current && r[0]();
              }),
              e.add(() => {
                n.current = !1;
              })
            );
          },
          style(r, n, i) {
            let a = r.style.getPropertyValue(n);
            return (
              Object.assign(r.style, { [n]: i }),
              this.add(() => {
                Object.assign(r.style, { [n]: a });
              })
            );
          },
          group(r) {
            let n = Ru();
            return r(n), this.add(() => n.dispose());
          },
          add(r) {
            return (
              t.push(r),
              () => {
                let n = t.indexOf(r);
                if (n >= 0) for (let i of t.splice(n, 1)) i();
              }
            );
          },
          dispose() {
            for (let r of t.splice(0)) r();
          },
        };
      return e;
    }
    var Nu = ((t) => (
      (t[(t.Forwards = 0)] = "Forwards"),
      (t[(t.Backwards = 1)] = "Backwards"),
      t
    ))(Nu || {});
    function dB() {
      let t = We(0);
      return (
        B_("keydown", (e) => {
          e.key === "Tab" && (t.value = e.shiftKey ? 1 : 0);
        }),
        t
      );
    }
    function W_(t, e, r, n) {
      Lu.isServer ||
        Wn((i) => {
          (t = t ?? window),
            t.addEventListener(e, r, n),
            i(() => t.removeEventListener(e, r, n));
        });
    }
    function fB(t) {
      function e() {
        document.readyState !== "loading" &&
          (t(), document.removeEventListener("DOMContentLoaded", e));
      }
      typeof window < "u" &&
        typeof document < "u" &&
        (document.addEventListener("DOMContentLoaded", e), e());
    }
    function X_(t) {
      if (!t) return new Set();
      if (typeof t == "function") return new Set(t());
      let e = new Set();
      for (let r of t.value) {
        let n = yt(r);
        n instanceof HTMLElement && e.add(n);
      }
      return e;
    }
    var j_ = ((t) => (
      (t[(t.None = 1)] = "None"),
      (t[(t.InitialFocus = 2)] = "InitialFocus"),
      (t[(t.TabLock = 4)] = "TabLock"),
      (t[(t.FocusLock = 8)] = "FocusLock"),
      (t[(t.RestoreFocus = 16)] = "RestoreFocus"),
      (t[(t.All = 30)] = "All"),
      t
    ))(j_ || {});
    let Bu = Object.assign(
        dt({
          name: "FocusTrap",
          props: {
            as: { type: [Object, String], default: "div" },
            initialFocus: { type: Object, default: null },
            features: { type: Number, default: 30 },
            containers: { type: [Object, Function], default: We(new Set()) },
          },
          inheritAttrs: !1,
          setup(t, { attrs: e, slots: r, expose: n }) {
            let i = We(null);
            n({ el: i, $el: i });
            let a = He(() => Ni(i)),
              l = We(!1);
            sr(() => (l.value = !0)),
              En(() => (l.value = !1)),
              gB(
                { ownerDocument: a },
                He(() => l.value && !!(t.features & 16))
              );
            let u = mB(
              {
                ownerDocument: a,
                container: i,
                initialFocus: He(() => t.initialFocus),
              },
              He(() => l.value && !!(t.features & 2))
            );
            vB(
              {
                ownerDocument: a,
                container: i,
                containers: t.containers,
                previousActiveElement: u,
              },
              He(() => l.value && !!(t.features & 8))
            );
            let p = dB();
            function m(M) {
              let D = yt(i);
              D &&
                ((z) => z())(() => {
                  Ri(p.value, {
                    [Nu.Forwards]: () => {
                      Do(D, Gn.First, { skipElements: [M.relatedTarget] });
                    },
                    [Nu.Backwards]: () => {
                      Do(D, Gn.Last, { skipElements: [M.relatedTarget] });
                    },
                  });
                });
            }
            let v = We(!1);
            function w(M) {
              M.key === "Tab" &&
                ((v.value = !0),
                requestAnimationFrame(() => {
                  v.value = !1;
                }));
            }
            function S(M) {
              if (!l.value) return;
              let D = X_(t.containers);
              yt(i) instanceof HTMLElement && D.add(yt(i));
              let z = M.relatedTarget;
              z instanceof HTMLElement &&
                z.dataset.headlessuiFocusGuard !== "true" &&
                (G_(D, z) ||
                  (v.value
                    ? Do(
                        yt(i),
                        Ri(p.value, {
                          [Nu.Forwards]: () => Gn.Next,
                          [Nu.Backwards]: () => Gn.Previous,
                        }) | Gn.WrapAround,
                        { relativeTo: M.target }
                      )
                    : M.target instanceof HTMLElement && za(M.target)));
            }
            return () => {
              let M = {},
                D = { ref: i, onKeydown: w, onFocusout: S },
                { features: z, initialFocus: V, containers: j, ...B } = t;
              return Vr(dr, [
                !!(z & 4) &&
                  Vr(ff, {
                    as: "button",
                    type: "button",
                    "data-headlessui-focus-guard": !0,
                    onFocus: m,
                    features: Mu.Focusable,
                  }),
                xn({
                  ourProps: D,
                  theirProps: { ...e, ...B },
                  slot: M,
                  attrs: e,
                  slots: r,
                  name: "FocusTrap",
                }),
                !!(z & 4) &&
                  Vr(ff, {
                    as: "button",
                    type: "button",
                    "data-headlessui-focus-guard": !0,
                    onFocus: m,
                    features: Mu.Focusable,
                  }),
              ]);
            };
          },
        }),
        { features: j_ }
      ),
      zo = [];
    fB(() => {
      function t(e) {
        e.target instanceof HTMLElement &&
          e.target !== document.body &&
          zo[0] !== e.target &&
          (zo.unshift(e.target),
          (zo = zo.filter((r) => r != null && r.isConnected)),
          zo.splice(10));
      }
      window.addEventListener("click", t, { capture: !0 }),
        window.addEventListener("mousedown", t, { capture: !0 }),
        window.addEventListener("focus", t, { capture: !0 }),
        document.body.addEventListener("click", t, { capture: !0 }),
        document.body.addEventListener("mousedown", t, { capture: !0 }),
        document.body.addEventListener("focus", t, { capture: !0 });
    });
    function pB(t) {
      let e = We(zo.slice());
      return (
        Or(
          [t],
          ([r], [n]) => {
            n === !0 && r === !1
              ? Yv(() => {
                  e.value.splice(0);
                })
              : n === !1 && r === !0 && (e.value = zo.slice());
          },
          { flush: "post" }
        ),
        () => {
          var r;
          return (r = e.value.find((n) => n != null && n.isConnected)) != null
            ? r
            : null;
        }
      );
    }
    function gB({ ownerDocument: t }, e) {
      let r = pB(e);
      sr(() => {
        Wn(
          () => {
            var n, i;
            e.value ||
              (((n = t.value) == null ? void 0 : n.activeElement) ===
                ((i = t.value) == null ? void 0 : i.body) &&
                za(r()));
          },
          { flush: "post" }
        );
      }),
        En(() => {
          e.value && za(r());
        });
    }
    function mB({ ownerDocument: t, container: e, initialFocus: r }, n) {
      let i = We(null),
        a = We(!1);
      return (
        sr(() => (a.value = !0)),
        En(() => (a.value = !1)),
        sr(() => {
          Or(
            [e, r, n],
            (l, u) => {
              if (
                l.every((m, v) => (u == null ? void 0 : u[v]) === m) ||
                !n.value
              )
                return;
              let p = yt(e);
              p &&
                Yv(() => {
                  var m, v;
                  if (!a.value) return;
                  let w = yt(r),
                    S = (m = t.value) == null ? void 0 : m.activeElement;
                  if (w) {
                    if (w === S) {
                      i.value = S;
                      return;
                    }
                  } else if (p.contains(S)) {
                    i.value = S;
                    return;
                  }
                  w
                    ? za(w)
                    : Do(p, Gn.First | Gn.NoScroll) === hf.Error &&
                      console.warn(
                        "There are no focusable elements inside the <FocusTrap />"
                      ),
                    (i.value =
                      (v = t.value) == null ? void 0 : v.activeElement);
                });
            },
            { immediate: !0, flush: "post" }
          );
        }),
        i
      );
    }
    function vB(
      {
        ownerDocument: t,
        container: e,
        containers: r,
        previousActiveElement: n,
      },
      i
    ) {
      var a;
      W_(
        (a = t.value) == null ? void 0 : a.defaultView,
        "focus",
        (l) => {
          if (!i.value) return;
          let u = X_(r);
          yt(e) instanceof HTMLElement && u.add(yt(e));
          let p = n.value;
          if (!p) return;
          let m = l.target;
          m && m instanceof HTMLElement
            ? G_(u, m)
              ? ((n.value = m), za(m))
              : (l.preventDefault(), l.stopPropagation(), za(p))
            : za(n.value);
        },
        !0
      );
    }
    function G_(t, e) {
      for (let r of t) if (r.contains(e)) return !0;
      return !1;
    }
    let Vv = new Map(),
      Fu = new Map();
    function Y_(t, e = We(!0)) {
      Wn((r) => {
        var n;
        if (!e.value) return;
        let i = yt(t);
        if (!i) return;
        r(function () {
          var l;
          if (!i) return;
          let u = (l = Fu.get(i)) != null ? l : 1;
          if ((u === 1 ? Fu.delete(i) : Fu.set(i, u - 1), u !== 1)) return;
          let p = Vv.get(i);
          p &&
            (p["aria-hidden"] === null
              ? i.removeAttribute("aria-hidden")
              : i.setAttribute("aria-hidden", p["aria-hidden"]),
            (i.inert = p.inert),
            Vv.delete(i));
        });
        let a = (n = Fu.get(i)) != null ? n : 0;
        Fu.set(i, a + 1),
          a === 0 &&
            (Vv.set(i, {
              "aria-hidden": i.getAttribute("aria-hidden"),
              inert: i.inert,
            }),
            i.setAttribute("aria-hidden", "true"),
            (i.inert = !0));
      });
    }
    let V_ = Symbol("ForcePortalRootContext");
    function yB() {
      return Lr(V_, !1);
    }
    let q_ = dt({
      name: "ForcePortalRoot",
      props: {
        as: { type: [Object, String], default: "template" },
        force: { type: Boolean, default: !1 },
      },
      setup(t, { slots: e, attrs: r }) {
        return (
          vn(V_, t.force),
          () => {
            let { force: n, ...i } = t;
            return xn({
              theirProps: i,
              ourProps: {},
              slot: {},
              slots: e,
              attrs: r,
              name: "ForcePortalRoot",
            });
          }
        );
      },
    });
    function bB(t) {
      let e = Ni(t);
      if (!e) {
        if (t === null) return null;
        throw new Error(
          `[Headless UI]: Cannot find ownerDocument for contextElement: ${t}`
        );
      }
      let r = e.getElementById("headlessui-portal-root");
      if (r) return r;
      let n = e.createElement("div");
      return (
        n.setAttribute("id", "headlessui-portal-root"), e.body.appendChild(n)
      );
    }
    let xB = dt({
        name: "Portal",
        props: { as: { type: [Object, String], default: "div" } },
        setup(t, { slots: e, attrs: r }) {
          let n = We(null),
            i = He(() => Ni(n)),
            a = yB(),
            l = Lr(K_, null),
            u = We(a === !0 || l == null ? bB(n.value) : l.resolveTarget());
          Wn(() => {
            a || (l != null && (u.value = l.resolveTarget()));
          });
          let p = Lr(qv, null);
          return (
            sr(() => {
              let m = yt(n);
              m && p && En(p.register(m));
            }),
            En(() => {
              var m, v;
              let w =
                (m = i.value) == null
                  ? void 0
                  : m.getElementById("headlessui-portal-root");
              w &&
                u.value === w &&
                u.value.children.length <= 0 &&
                ((v = u.value.parentElement) == null || v.removeChild(u.value));
            }),
            () => {
              if (u.value === null) return null;
              let m = { ref: n, "data-headlessui-portal": "" };
              return Vr(
                fv,
                { to: u.value },
                xn({
                  ourProps: m,
                  theirProps: t,
                  slot: {},
                  attrs: r,
                  slots: e,
                  name: "Portal",
                })
              );
            }
          );
        },
      }),
      qv = Symbol("PortalParentContext");
    function wB() {
      let t = Lr(qv, null),
        e = We([]);
      function r(a) {
        return e.value.push(a), t && t.register(a), () => n(a);
      }
      function n(a) {
        let l = e.value.indexOf(a);
        l !== -1 && e.value.splice(l, 1), t && t.unregister(a);
      }
      let i = { register: r, unregister: n, portals: e };
      return [
        e,
        dt({
          name: "PortalWrapper",
          setup(a, { slots: l }) {
            return (
              vn(qv, i),
              () => {
                var u;
                return (u = l.default) == null ? void 0 : u.call(l);
              }
            );
          },
        }),
      ];
    }
    let K_ = Symbol("PortalGroupContext"),
      kB = dt({
        name: "PortalGroup",
        props: {
          as: { type: [Object, String], default: "template" },
          target: { type: Object, default: null },
        },
        setup(t, { attrs: e, slots: r }) {
          let n = gu({
            resolveTarget() {
              return t.target;
            },
          });
          return (
            vn(K_, n),
            () => {
              let { target: i, ...a } = t;
              return xn({
                theirProps: a,
                ourProps: {},
                slot: {},
                attrs: e,
                slots: r,
                name: "PortalGroup",
              });
            }
          );
        },
      }),
      $_ = Symbol("StackContext");
    var Kv = ((t) => (
      (t[(t.Add = 0)] = "Add"), (t[(t.Remove = 1)] = "Remove"), t
    ))(Kv || {});
    function _B() {
      return Lr($_, () => {});
    }
    function AB({ type: t, enabled: e, element: r, onUpdate: n }) {
      let i = _B();
      function a(...l) {
        n == null || n(...l), i(...l);
      }
      sr(() => {
        Or(
          e,
          (l, u) => {
            l ? a(0, t, r) : u === !0 && a(1, t, r);
          },
          { immediate: !0, flush: "sync" }
        );
      }),
        En(() => {
          e.value && a(1, t, r);
        }),
        vn($_, a);
    }
    let CB = Symbol("DescriptionContext");
    function $v({
      slot: t = We({}),
      name: e = "Description",
      props: r = {},
    } = {}) {
      let n = We([]);
      function i(a) {
        return (
          n.value.push(a),
          () => {
            let l = n.value.indexOf(a);
            l !== -1 && n.value.splice(l, 1);
          }
        );
      }
      return (
        vn(CB, { register: i, slot: t, name: e, props: r }),
        He(() => (n.value.length > 0 ? n.value.join(" ") : void 0))
      );
    }
    function SB(t) {
      let e = S1(t.getSnapshot());
      return (
        En(
          t.subscribe(() => {
            e.value = t.getSnapshot();
          })
        ),
        e
      );
    }
    function EB(t, e) {
      let r = t(),
        n = new Set();
      return {
        getSnapshot() {
          return r;
        },
        subscribe(i) {
          return n.add(i), () => n.delete(i);
        },
        dispatch(i, ...a) {
          let l = e[i].call(r, ...a);
          l && ((r = l), n.forEach((u) => u()));
        },
      };
    }
    function IB() {
      let t;
      return {
        before({ doc: e }) {
          var r;
          let n = e.documentElement;
          t =
            ((r = e.defaultView) != null ? r : window).innerWidth -
            n.clientWidth;
        },
        after({ doc: e, d: r }) {
          let n = e.documentElement,
            i = n.clientWidth - n.offsetWidth,
            a = t - i;
          r.style(n, "paddingRight", `${a}px`);
        },
      };
    }
    function TB() {
      if (!hB()) return {};
      let t;
      return {
        before() {
          t = window.pageYOffset;
        },
        after({ doc: e, d: r, meta: n }) {
          function i(l) {
            return n.containers.flatMap((u) => u()).some((u) => u.contains(l));
          }
          if (
            window.getComputedStyle(e.documentElement).scrollBehavior !== "auto"
          ) {
            let l = Ru();
            l.style(e.documentElement, "scroll-behavior", "auto"),
              r.add(() => r.microTask(() => l.dispose()));
          }
          r.style(e.body, "marginTop", `-${t}px`), window.scrollTo(0, 0);
          let a = null;
          r.addEventListener(
            e,
            "click",
            (l) => {
              if (l.target instanceof HTMLElement)
                try {
                  let u = l.target.closest("a");
                  if (!u) return;
                  let { hash: p } = new URL(u.href),
                    m = e.querySelector(p);
                  m && !i(m) && (a = m);
                } catch {}
            },
            !0
          ),
            r.addEventListener(
              e,
              "touchmove",
              (l) => {
                l.target instanceof HTMLElement &&
                  !i(l.target) &&
                  l.preventDefault();
              },
              { passive: !1 }
            ),
            r.add(() => {
              window.scrollTo(0, window.pageYOffset + t),
                a &&
                  a.isConnected &&
                  (a.scrollIntoView({ block: "nearest" }), (a = null));
            });
        },
      };
    }
    function PB() {
      return {
        before({ doc: t, d: e }) {
          e.style(t.documentElement, "overflow", "hidden");
        },
      };
    }
    function OB(t) {
      let e = {};
      for (let r of t) Object.assign(e, r(e));
      return e;
    }
    let Ho = EB(() => new Map(), {
      PUSH(t, e) {
        var r;
        let n =
          (r = this.get(t)) != null
            ? r
            : { doc: t, count: 0, d: Ru(), meta: new Set() };
        return n.count++, n.meta.add(e), this.set(t, n), this;
      },
      POP(t, e) {
        let r = this.get(t);
        return r && (r.count--, r.meta.delete(e)), this;
      },
      SCROLL_PREVENT({ doc: t, d: e, meta: r }) {
        let n = { doc: t, d: e, meta: OB(r) },
          i = [TB(), IB(), PB()];
        i.forEach(({ before: a }) => (a == null ? void 0 : a(n))),
          i.forEach(({ after: a }) => (a == null ? void 0 : a(n)));
      },
      SCROLL_ALLOW({ d: t }) {
        t.dispose();
      },
      TEARDOWN({ doc: t }) {
        this.delete(t);
      },
    });
    Ho.subscribe(() => {
      let t = Ho.getSnapshot(),
        e = new Map();
      for (let [r] of t) e.set(r, r.documentElement.style.overflow);
      for (let r of t.values()) {
        let n = e.get(r.doc) === "hidden",
          i = r.count !== 0;
        ((i && !n) || (!i && n)) &&
          Ho.dispatch(r.count > 0 ? "SCROLL_PREVENT" : "SCROLL_ALLOW", r),
          r.count === 0 && Ho.dispatch("TEARDOWN", r);
      }
    });
    function LB(t, e, r) {
      let n = SB(Ho),
        i = He(() => {
          let a = t.value ? n.value.get(t.value) : void 0;
          return a ? a.count > 0 : !1;
        });
      return (
        Or(
          [t, e],
          ([a, l], [u], p) => {
            if (!a || !l) return;
            Ho.dispatch("PUSH", a, r);
            let m = !1;
            p(() => {
              m || (Ho.dispatch("POP", u ?? a, r), (m = !0));
            });
          },
          { immediate: !0 }
        ),
        i
      );
    }
    function MB({
      defaultContainers: t = [],
      portals: e,
      mainTreeNodeRef: r,
    } = {}) {
      let n = We(null),
        i = Ni(n);
      function a() {
        var l;
        let u = [];
        for (let p of t)
          p !== null &&
            (p instanceof HTMLElement
              ? u.push(p)
              : "value" in p &&
                p.value instanceof HTMLElement &&
                u.push(p.value));
        if (e != null && e.value) for (let p of e.value) u.push(p);
        for (let p of (l =
          i == null ? void 0 : i.querySelectorAll("html > *, body > *")) != null
          ? l
          : [])
          p !== document.body &&
            p !== document.head &&
            p instanceof HTMLElement &&
            p.id !== "headlessui-portal-root" &&
            (p.contains(yt(n)) || u.some((m) => p.contains(m)) || u.push(p));
        return u;
      }
      return {
        resolveContainers: a,
        contains(l) {
          return a().some((u) => u.contains(l));
        },
        mainTreeNodeRef: n,
        MainTreeNode() {
          return r != null ? null : Vr(ff, { features: Mu.Hidden, ref: n });
        },
      };
    }
    var RB = ((t) => (
      (t[(t.Open = 0)] = "Open"), (t[(t.Closed = 1)] = "Closed"), t
    ))(RB || {});
    let Zv = Symbol("DialogContext");
    function Qv(t) {
      let e = Lr(Zv, null);
      if (e === null) {
        let r = new Error(`<${t} /> is missing a parent <Dialog /> component.`);
        throw (Error.captureStackTrace && Error.captureStackTrace(r, Qv), r);
      }
      return e;
    }
    let pf = "DC8F892D-2EBD-447C-A4C8-A03058436FF4",
      Z_ = dt({
        name: "Dialog",
        inheritAttrs: !1,
        props: {
          as: { type: [Object, String], default: "div" },
          static: { type: Boolean, default: !1 },
          unmount: { type: Boolean, default: !0 },
          open: { type: [Boolean, String], default: pf },
          initialFocus: { type: Object, default: null },
          id: { type: String, default: () => `headlessui-dialog-${fs()}` },
        },
        emits: { close: (t) => !0 },
        setup(t, { emit: e, attrs: r, slots: n, expose: i }) {
          var a;
          let l = We(!1);
          sr(() => {
            l.value = !0;
          });
          let u = We(0),
            p = uf(),
            m = He(() =>
              t.open === pf && p !== null
                ? (p.value & wn.Open) === wn.Open
                : t.open
            ),
            v = We(null),
            w = He(() => Ni(v));
          if ((i({ el: v, $el: v }), !(t.open !== pf || p !== null)))
            throw new Error(
              "You forgot to provide an `open` prop to the `Dialog`."
            );
          if (typeof m.value != "boolean")
            throw new Error(
              `You provided an \`open\` prop to the \`Dialog\`, but the value is not a boolean. Received: ${
                m.value === pf ? void 0 : t.open
              }`
            );
          let S = He(() => (l.value && m.value ? 0 : 1)),
            M = He(() => S.value === 0),
            D = He(() => u.value > 1),
            z = Lr(Zv, null) !== null,
            [V, j] = wB(),
            {
              resolveContainers: B,
              mainTreeNodeRef: ae,
              MainTreeNode: re,
            } = MB({
              portals: V,
              defaultContainers: [
                He(() => {
                  var Y;
                  return (Y = E.panelRef.value) != null ? Y : v.value;
                }),
              ],
            }),
            K = He(() => (D.value ? "parent" : "leaf")),
            fe = He(() =>
              p !== null ? (p.value & wn.Closing) === wn.Closing : !1
            ),
            ye = He(() => (z || fe.value ? !1 : M.value)),
            pe = He(() => {
              var Y, ie, le;
              return (le = Array.from(
                (ie =
                  (Y = w.value) == null
                    ? void 0
                    : Y.querySelectorAll("body > *")) != null
                  ? ie
                  : []
              ).find((J) =>
                J.id === "headlessui-portal-root"
                  ? !1
                  : J.contains(yt(ae)) && J instanceof HTMLElement
              )) != null
                ? le
                : null;
            });
          Y_(pe, ye);
          let _e = He(() => (D.value ? !0 : M.value)),
            be = He(() => {
              var Y, ie, le;
              return (le = Array.from(
                (ie =
                  (Y = w.value) == null
                    ? void 0
                    : Y.querySelectorAll("[data-headlessui-portal]")) != null
                  ? ie
                  : []
              ).find((J) => J.contains(yt(ae)) && J instanceof HTMLElement)) !=
                null
                ? le
                : null;
            });
          Y_(be, _e),
            AB({
              type: "Dialog",
              enabled: He(() => S.value === 0),
              element: v,
              onUpdate: (Y, ie) => {
                if (ie === "Dialog")
                  return Ri(Y, {
                    [Kv.Add]: () => (u.value += 1),
                    [Kv.Remove]: () => (u.value -= 1),
                  });
              },
            });
          let Ce = $v({
              name: "DialogDescription",
              slot: He(() => ({ open: m.value })),
            }),
            ke = We(null),
            E = {
              titleId: ke,
              panelRef: We(null),
              dialogState: S,
              setTitleId(Y) {
                ke.value !== Y && (ke.value = Y);
              },
              close() {
                e("close", !1);
              },
            };
          vn(Zv, E);
          let P = He(() => !(!M.value || D.value));
          F_(
            B,
            (Y, ie) => {
              E.close(), Li(() => (ie == null ? void 0 : ie.focus()));
            },
            P
          );
          let L = He(() => !(D.value || S.value !== 0));
          W_((a = w.value) == null ? void 0 : a.defaultView, "keydown", (Y) => {
            L.value &&
              (Y.defaultPrevented ||
                (Y.key === Fr.Escape &&
                  (Y.preventDefault(), Y.stopPropagation(), E.close())));
          });
          let U = He(() => !(fe.value || S.value !== 0 || z));
          return (
            LB(w, U, (Y) => {
              var ie;
              return {
                containers: [...((ie = Y.containers) != null ? ie : []), B],
              };
            }),
            Wn((Y) => {
              if (S.value !== 0) return;
              let ie = yt(v);
              if (!ie) return;
              let le = new ResizeObserver((J) => {
                for (let T of J) {
                  let Z = T.target.getBoundingClientRect();
                  Z.x === 0 &&
                    Z.y === 0 &&
                    Z.width === 0 &&
                    Z.height === 0 &&
                    E.close();
                }
              });
              le.observe(ie), Y(() => le.disconnect());
            }),
            () => {
              let { id: Y, open: ie, initialFocus: le, ...J } = t,
                T = {
                  ...r,
                  ref: v,
                  id: Y,
                  role: "dialog",
                  "aria-modal": S.value === 0 ? !0 : void 0,
                  "aria-labelledby": ke.value,
                  "aria-describedby": Ce.value,
                },
                Z = { open: S.value === 0 };
              return Vr(q_, { force: !0 }, () => [
                Vr(xB, () =>
                  Vr(kB, { target: v.value }, () =>
                    Vr(q_, { force: !1 }, () =>
                      Vr(
                        Bu,
                        {
                          initialFocus: le,
                          containers: B,
                          features: M.value
                            ? Ri(K.value, {
                                parent: Bu.features.RestoreFocus,
                                leaf: Bu.features.All & ~Bu.features.FocusLock,
                              })
                            : Bu.features.None,
                        },
                        () =>
                          Vr(j, {}, () =>
                            xn({
                              ourProps: T,
                              theirProps: { ...J, ...r },
                              slot: Z,
                              attrs: r,
                              slots: n,
                              visible: S.value === 0,
                              features: Zl.RenderStrategy | Zl.Static,
                              name: "Dialog",
                            })
                          )
                      )
                    )
                  )
                ),
                Vr(re),
              ]);
            }
          );
        },
      }),
      NB = dt({
        name: "DialogOverlay",
        props: {
          as: { type: [Object, String], default: "div" },
          id: {
            type: String,
            default: () => `headlessui-dialog-overlay-${fs()}`,
          },
        },
        setup(t, { attrs: e, slots: r }) {
          let n = Qv("DialogOverlay");
          function i(a) {
            a.target === a.currentTarget &&
              (a.preventDefault(), a.stopPropagation(), n.close());
          }
          return () => {
            let { id: a, ...l } = t;
            return xn({
              ourProps: { id: a, "aria-hidden": !0, onClick: i },
              theirProps: l,
              slot: { open: n.dialogState.value === 0 },
              attrs: e,
              slots: r,
              name: "DialogOverlay",
            });
          };
        },
      }),
      BB = dt({
        name: "DialogPanel",
        props: {
          as: { type: [Object, String], default: "div" },
          id: {
            type: String,
            default: () => `headlessui-dialog-panel-${fs()}`,
          },
        },
        setup(t, { attrs: e, slots: r, expose: n }) {
          let i = Qv("DialogPanel");
          n({ el: i.panelRef, $el: i.panelRef });
          function a(l) {
            l.stopPropagation();
          }
          return () => {
            let { id: l, ...u } = t,
              p = { id: l, ref: i.panelRef, onClick: a };
            return xn({
              ourProps: p,
              theirProps: u,
              slot: { open: i.dialogState.value === 0 },
              attrs: e,
              slots: r,
              name: "DialogPanel",
            });
          };
        },
      }),
      Q_ =
        /([\u2700-\u27BF]|[\uE000-\uF8FF]|\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDFFF]|[\u2011-\u26FF]|\uD83E[\uDD10-\uDDFF])/g;
    function J_(t) {
      var e, r;
      let n = (e = t.innerText) != null ? e : "",
        i = t.cloneNode(!0);
      if (!(i instanceof HTMLElement)) return n;
      let a = !1;
      for (let u of i.querySelectorAll('[hidden],[aria-hidden],[role="img"]'))
        u.remove(), (a = !0);
      let l = a ? ((r = i.innerText) != null ? r : "") : n;
      return Q_.test(l) && (l = l.replace(Q_, "")), l;
    }
    function FB(t) {
      let e = t.getAttribute("aria-label");
      if (typeof e == "string") return e.trim();
      let r = t.getAttribute("aria-labelledby");
      if (r) {
        let n = r
          .split(" ")
          .map((i) => {
            let a = document.getElementById(i);
            if (a) {
              let l = a.getAttribute("aria-label");
              return typeof l == "string" ? l.trim() : J_(a).trim();
            }
            return null;
          })
          .filter(Boolean);
        if (n.length > 0) return n.join(", ");
      }
      return J_(t).trim();
    }
    function DB(t) {
      let e = We(""),
        r = We("");
      return () => {
        let n = yt(t);
        if (!n) return "";
        let i = n.innerText;
        if (e.value === i) return r.value;
        let a = FB(n).trim().toLowerCase();
        return (e.value = i), (r.value = a), a;
      };
    }
    var zB = ((t) => (
        (t[(t.Open = 0)] = "Open"), (t[(t.Closed = 1)] = "Closed"), t
      ))(zB || {}),
      HB = ((t) => (
        (t[(t.Pointer = 0)] = "Pointer"), (t[(t.Other = 1)] = "Other"), t
      ))(HB || {});
    function UB(t) {
      requestAnimationFrame(() => requestAnimationFrame(t));
    }
    let eA = Symbol("MenuContext");
    function gf(t) {
      let e = Lr(eA, null);
      if (e === null) {
        let r = new Error(`<${t} /> is missing a parent <Menu /> component.`);
        throw (Error.captureStackTrace && Error.captureStackTrace(r, gf), r);
      }
      return e;
    }
    let WB = dt({
        name: "Menu",
        props: { as: { type: [Object, String], default: "template" } },
        setup(t, { slots: e, attrs: r }) {
          let n = We(1),
            i = We(null),
            a = We(null),
            l = We([]),
            u = We(""),
            p = We(null),
            m = We(1);
          function v(S = (M) => M) {
            let M = p.value !== null ? l.value[p.value] : null,
              D = Gv(S(l.value.slice()), (V) => yt(V.dataRef.domRef)),
              z = M ? D.indexOf(M) : null;
            return z === -1 && (z = null), { items: D, activeItemIndex: z };
          }
          let w = {
            menuState: n,
            buttonRef: i,
            itemsRef: a,
            items: l,
            searchQuery: u,
            activeItemIndex: p,
            activationTrigger: m,
            closeMenu: () => {
              (n.value = 1), (p.value = null);
            },
            openMenu: () => (n.value = 0),
            goToItem(S, M, D) {
              let z = v(),
                V = ZN(
                  S === ii.Specific
                    ? { focus: ii.Specific, id: M }
                    : { focus: S },
                  {
                    resolveItems: () => z.items,
                    resolveActiveIndex: () => z.activeItemIndex,
                    resolveId: (j) => j.id,
                    resolveDisabled: (j) => j.dataRef.disabled,
                  }
                );
              (u.value = ""),
                (p.value = V),
                (m.value = D ?? 1),
                (l.value = z.items);
            },
            search(S) {
              let M = u.value !== "" ? 0 : 1;
              u.value += S.toLowerCase();
              let D = (
                  p.value !== null
                    ? l.value
                        .slice(p.value + M)
                        .concat(l.value.slice(0, p.value + M))
                    : l.value
                ).find(
                  (V) =>
                    V.dataRef.textValue.startsWith(u.value) &&
                    !V.dataRef.disabled
                ),
                z = D ? l.value.indexOf(D) : -1;
              z === -1 || z === p.value || ((p.value = z), (m.value = 1));
            },
            clearSearch() {
              u.value = "";
            },
            registerItem(S, M) {
              let D = v((z) => [...z, { id: S, dataRef: M }]);
              (l.value = D.items), (p.value = D.activeItemIndex), (m.value = 1);
            },
            unregisterItem(S) {
              let M = v((D) => {
                let z = D.findIndex((V) => V.id === S);
                return z !== -1 && D.splice(z, 1), D;
              });
              (l.value = M.items), (p.value = M.activeItemIndex), (m.value = 1);
            },
          };
          return (
            F_(
              [i, a],
              (S, M) => {
                var D;
                w.closeMenu(),
                  jv(M, Xv.Loose) ||
                    (S.preventDefault(), (D = yt(i)) == null || D.focus());
              },
              He(() => n.value === 0)
            ),
            vn(eA, w),
            P_(He(() => Ri(n.value, { 0: wn.Open, 1: wn.Closed }))),
            () => {
              let S = { open: n.value === 0, close: w.closeMenu };
              return xn({
                ourProps: {},
                theirProps: t,
                slot: S,
                slots: e,
                attrs: r,
                name: "Menu",
              });
            }
          );
        },
      }),
      XB = dt({
        name: "MenuButton",
        props: {
          disabled: { type: Boolean, default: !1 },
          as: { type: [Object, String], default: "button" },
          id: { type: String, default: () => `headlessui-menu-button-${fs()}` },
        },
        setup(t, { attrs: e, slots: r, expose: n }) {
          let i = gf("MenuButton");
          n({ el: i.buttonRef, $el: i.buttonRef });
          function a(m) {
            switch (m.key) {
              case Fr.Space:
              case Fr.Enter:
              case Fr.ArrowDown:
                m.preventDefault(),
                  m.stopPropagation(),
                  i.openMenu(),
                  Li(() => {
                    var v;
                    (v = yt(i.itemsRef)) == null ||
                      v.focus({ preventScroll: !0 }),
                      i.goToItem(ii.First);
                  });
                break;
              case Fr.ArrowUp:
                m.preventDefault(),
                  m.stopPropagation(),
                  i.openMenu(),
                  Li(() => {
                    var v;
                    (v = yt(i.itemsRef)) == null ||
                      v.focus({ preventScroll: !0 }),
                      i.goToItem(ii.Last);
                  });
                break;
            }
          }
          function l(m) {
            switch (m.key) {
              case Fr.Space:
                m.preventDefault();
                break;
            }
          }
          function u(m) {
            t.disabled ||
              (i.menuState.value === 0
                ? (i.closeMenu(),
                  Li(() => {
                    var v;
                    return (v = yt(i.buttonRef)) == null
                      ? void 0
                      : v.focus({ preventScroll: !0 });
                  }))
                : (m.preventDefault(),
                  i.openMenu(),
                  UB(() => {
                    var v;
                    return (v = yt(i.itemsRef)) == null
                      ? void 0
                      : v.focus({ preventScroll: !0 });
                  })));
          }
          let p = JN(
            He(() => ({ as: t.as, type: e.type })),
            i.buttonRef
          );
          return () => {
            var m;
            let v = { open: i.menuState.value === 0 },
              { id: w, ...S } = t,
              M = {
                ref: i.buttonRef,
                id: w,
                type: p.value,
                "aria-haspopup": "menu",
                "aria-controls": (m = yt(i.itemsRef)) == null ? void 0 : m.id,
                "aria-expanded": i.menuState.value === 0,
                onKeydown: a,
                onKeyup: l,
                onClick: u,
              };
            return xn({
              ourProps: M,
              theirProps: S,
              slot: v,
              attrs: e,
              slots: r,
              name: "MenuButton",
            });
          };
        },
      }),
      jB = dt({
        name: "MenuItems",
        props: {
          as: { type: [Object, String], default: "div" },
          static: { type: Boolean, default: !1 },
          unmount: { type: Boolean, default: !0 },
          id: { type: String, default: () => `headlessui-menu-items-${fs()}` },
        },
        setup(t, { attrs: e, slots: r, expose: n }) {
          let i = gf("MenuItems"),
            a = We(null);
          n({ el: i.itemsRef, $el: i.itemsRef }),
            M_({
              container: He(() => yt(i.itemsRef)),
              enabled: He(() => i.menuState.value === 0),
              accept(v) {
                return v.getAttribute("role") === "menuitem"
                  ? NodeFilter.FILTER_REJECT
                  : v.hasAttribute("role")
                  ? NodeFilter.FILTER_SKIP
                  : NodeFilter.FILTER_ACCEPT;
              },
              walk(v) {
                v.setAttribute("role", "none");
              },
            });
          function l(v) {
            var w;
            switch ((a.value && clearTimeout(a.value), v.key)) {
              case Fr.Space:
                if (i.searchQuery.value !== "")
                  return (
                    v.preventDefault(), v.stopPropagation(), i.search(v.key)
                  );
              case Fr.Enter:
                if (
                  (v.preventDefault(),
                  v.stopPropagation(),
                  i.activeItemIndex.value !== null)
                ) {
                  let S = i.items.value[i.activeItemIndex.value];
                  (w = yt(S.dataRef.domRef)) == null || w.click();
                }
                i.closeMenu(), N_(yt(i.buttonRef));
                break;
              case Fr.ArrowDown:
                return (
                  v.preventDefault(), v.stopPropagation(), i.goToItem(ii.Next)
                );
              case Fr.ArrowUp:
                return (
                  v.preventDefault(),
                  v.stopPropagation(),
                  i.goToItem(ii.Previous)
                );
              case Fr.Home:
              case Fr.PageUp:
                return (
                  v.preventDefault(), v.stopPropagation(), i.goToItem(ii.First)
                );
              case Fr.End:
              case Fr.PageDown:
                return (
                  v.preventDefault(), v.stopPropagation(), i.goToItem(ii.Last)
                );
              case Fr.Escape:
                v.preventDefault(),
                  v.stopPropagation(),
                  i.closeMenu(),
                  Li(() => {
                    var S;
                    return (S = yt(i.buttonRef)) == null
                      ? void 0
                      : S.focus({ preventScroll: !0 });
                  });
                break;
              case Fr.Tab:
                v.preventDefault(),
                  v.stopPropagation(),
                  i.closeMenu(),
                  Li(() =>
                    oB(yt(i.buttonRef), v.shiftKey ? Gn.Previous : Gn.Next)
                  );
                break;
              default:
                v.key.length === 1 &&
                  (i.search(v.key),
                  (a.value = setTimeout(() => i.clearSearch(), 350)));
                break;
            }
          }
          function u(v) {
            switch (v.key) {
              case Fr.Space:
                v.preventDefault();
                break;
            }
          }
          let p = uf(),
            m = He(() =>
              p !== null
                ? (p.value & wn.Open) === wn.Open
                : i.menuState.value === 0
            );
          return () => {
            var v, w;
            let S = { open: i.menuState.value === 0 },
              { id: M, ...D } = t,
              z = {
                "aria-activedescendant":
                  i.activeItemIndex.value === null ||
                  (v = i.items.value[i.activeItemIndex.value]) == null
                    ? void 0
                    : v.id,
                "aria-labelledby":
                  (w = yt(i.buttonRef)) == null ? void 0 : w.id,
                id: M,
                onKeydown: l,
                onKeyup: u,
                role: "menu",
                tabIndex: 0,
                ref: i.itemsRef,
              };
            return xn({
              ourProps: z,
              theirProps: D,
              slot: S,
              attrs: e,
              slots: r,
              features: Zl.RenderStrategy | Zl.Static,
              visible: m.value,
              name: "MenuItems",
            });
          };
        },
      }),
      GB = dt({
        name: "MenuItem",
        inheritAttrs: !1,
        props: {
          as: { type: [Object, String], default: "template" },
          disabled: { type: Boolean, default: !1 },
          id: { type: String, default: () => `headlessui-menu-item-${fs()}` },
        },
        setup(t, { slots: e, attrs: r, expose: n }) {
          let i = gf("MenuItem"),
            a = We(null);
          n({ el: a, $el: a });
          let l = He(() =>
              i.activeItemIndex.value !== null
                ? i.items.value[i.activeItemIndex.value].id === t.id
                : !1
            ),
            u = DB(a),
            p = He(() => ({
              disabled: t.disabled,
              get textValue() {
                return u();
              },
              domRef: a,
            }));
          sr(() => i.registerItem(t.id, p)),
            En(() => i.unregisterItem(t.id)),
            Wn(() => {
              i.menuState.value === 0 &&
                l.value &&
                i.activationTrigger.value !== 0 &&
                Li(() => {
                  var z, V;
                  return (V =
                    (z = yt(a)) == null ? void 0 : z.scrollIntoView) == null
                    ? void 0
                    : V.call(z, { block: "nearest" });
                });
            });
          function m(z) {
            if (t.disabled) return z.preventDefault();
            i.closeMenu(), N_(yt(i.buttonRef));
          }
          function v() {
            if (t.disabled) return i.goToItem(ii.Nothing);
            i.goToItem(ii.Specific, t.id);
          }
          let w = uB();
          function S(z) {
            w.update(z);
          }
          function M(z) {
            w.wasMoved(z) &&
              (t.disabled || l.value || i.goToItem(ii.Specific, t.id, 0));
          }
          function D(z) {
            w.wasMoved(z) &&
              (t.disabled || (l.value && i.goToItem(ii.Nothing)));
          }
          return () => {
            let { disabled: z } = t,
              V = { active: l.value, disabled: z, close: i.closeMenu },
              { id: j, ...B } = t;
            return xn({
              ourProps: {
                id: j,
                ref: a,
                role: "menuitem",
                tabIndex: z === !0 ? void 0 : -1,
                "aria-disabled": z === !0 ? !0 : void 0,
                disabled: void 0,
                onClick: m,
                onFocus: v,
                onPointerenter: S,
                onMouseenter: S,
                onPointermove: M,
                onMousemove: M,
                onPointerleave: D,
                onMouseleave: D,
              },
              theirProps: { ...r, ...B },
              slot: V,
              attrs: r,
              slots: e,
              name: "MenuItem",
            });
          };
        },
      }),
      tA = Symbol("LabelContext");
    function rA() {
      let t = Lr(tA, null);
      if (t === null) {
        let e = new Error(
          "You used a <Label /> component, but it is not inside a parent."
        );
        throw (Error.captureStackTrace && Error.captureStackTrace(e, rA), e);
      }
      return t;
    }
    function nA({ slot: t = {}, name: e = "Label", props: r = {} } = {}) {
      let n = We([]);
      function i(a) {
        return (
          n.value.push(a),
          () => {
            let l = n.value.indexOf(a);
            l !== -1 && n.value.splice(l, 1);
          }
        );
      }
      return (
        vn(tA, { register: i, slot: t, name: e, props: r }),
        He(() => (n.value.length > 0 ? n.value.join(" ") : void 0))
      );
    }
    let YB = dt({
      name: "Label",
      props: {
        as: { type: [Object, String], default: "label" },
        passive: { type: [Boolean], default: !1 },
        id: { type: String, default: () => `headlessui-label-${fs()}` },
      },
      setup(t, { slots: e, attrs: r }) {
        let n = rA();
        return (
          sr(() => En(n.register(t.id))),
          () => {
            let { name: i = "Label", slot: a = {}, props: l = {} } = n,
              { id: u, passive: p, ...m } = t,
              v = {
                ...Object.entries(l).reduce(
                  (w, [S, M]) => Object.assign(w, { [S]: Xe(M) }),
                  {}
                ),
                id: u,
              };
            return (
              p && (delete v.onClick, delete v.htmlFor, delete m.onClick),
              xn({
                ourProps: v,
                theirProps: m,
                slot: a,
                attrs: r,
                slots: e,
                name: i,
              })
            );
          }
        );
      },
    });
    function VB(t, e) {
      return t === e;
    }
    let iA = Symbol("RadioGroupContext");
    function sA(t) {
      let e = Lr(iA, null);
      if (e === null) {
        let r = new Error(
          `<${t} /> is missing a parent <RadioGroup /> component.`
        );
        throw (Error.captureStackTrace && Error.captureStackTrace(r, sA), r);
      }
      return e;
    }
    let qB = dt({
      name: "RadioGroup",
      emits: { "update:modelValue": (t) => !0 },
      props: {
        as: { type: [Object, String], default: "div" },
        disabled: { type: [Boolean], default: !1 },
        by: { type: [String, Function], default: () => VB },
        modelValue: {
          type: [Object, String, Number, Boolean],
          default: void 0,
        },
        defaultValue: {
          type: [Object, String, Number, Boolean],
          default: void 0,
        },
        form: { type: String, optional: !0 },
        name: { type: String, optional: !0 },
        id: { type: String, default: () => `headlessui-radiogroup-${fs()}` },
      },
      inheritAttrs: !1,
      setup(t, { emit: e, attrs: r, slots: n, expose: i }) {
        let a = We(null),
          l = We([]),
          u = nA({ name: "RadioGroupLabel" }),
          p = $v({ name: "RadioGroupDescription" });
        i({ el: a, $el: a });
        let [m, v] = cB(
            He(() => t.modelValue),
            (D) => e("update:modelValue", D),
            He(() => t.defaultValue)
          ),
          w = {
            options: l,
            value: m,
            disabled: He(() => t.disabled),
            firstOption: He(() => l.value.find((D) => !D.propsRef.disabled)),
            containsCheckedOption: He(() =>
              l.value.some((D) =>
                w.compare(_t(D.propsRef.value), _t(t.modelValue))
              )
            ),
            compare(D, z) {
              if (typeof t.by == "string") {
                let V = t.by;
                return (
                  (D == null ? void 0 : D[V]) === (z == null ? void 0 : z[V])
                );
              }
              return t.by(D, z);
            },
            change(D) {
              var z;
              if (t.disabled || w.compare(_t(m.value), _t(D))) return !1;
              let V =
                (z = l.value.find((j) =>
                  w.compare(_t(j.propsRef.value), _t(D))
                )) == null
                  ? void 0
                  : z.propsRef;
              return V != null && V.disabled ? !1 : (v(D), !0);
            },
            registerOption(D) {
              l.value.push(D), (l.value = Gv(l.value, (z) => z.element));
            },
            unregisterOption(D) {
              let z = l.value.findIndex((V) => V.id === D);
              z !== -1 && l.value.splice(z, 1);
            },
          };
        vn(iA, w),
          M_({
            container: He(() => yt(a)),
            accept(D) {
              return D.getAttribute("role") === "radio"
                ? NodeFilter.FILTER_REJECT
                : D.hasAttribute("role")
                ? NodeFilter.FILTER_SKIP
                : NodeFilter.FILTER_ACCEPT;
            },
            walk(D) {
              D.setAttribute("role", "none");
            },
          });
        function S(D) {
          if (!a.value || !a.value.contains(D.target)) return;
          let z = l.value
            .filter((V) => V.propsRef.disabled === !1)
            .map((V) => V.element);
          switch (D.key) {
            case Fr.Enter:
              lB(D.currentTarget);
              break;
            case Fr.ArrowLeft:
            case Fr.ArrowUp:
              if (
                (D.preventDefault(),
                D.stopPropagation(),
                Do(z, Gn.Previous | Gn.WrapAround) === hf.Success)
              ) {
                let V = l.value.find((j) => {
                  var B;
                  return (
                    j.element ===
                    ((B = Ni(a)) == null ? void 0 : B.activeElement)
                  );
                });
                V && w.change(V.propsRef.value);
              }
              break;
            case Fr.ArrowRight:
            case Fr.ArrowDown:
              if (
                (D.preventDefault(),
                D.stopPropagation(),
                Do(z, Gn.Next | Gn.WrapAround) === hf.Success)
              ) {
                let V = l.value.find((j) => {
                  var B;
                  return (
                    j.element ===
                    ((B = Ni(j.element)) == null ? void 0 : B.activeElement)
                  );
                });
                V && w.change(V.propsRef.value);
              }
              break;
            case Fr.Space:
              {
                D.preventDefault(), D.stopPropagation();
                let V = l.value.find((j) => {
                  var B;
                  return (
                    j.element ===
                    ((B = Ni(j.element)) == null ? void 0 : B.activeElement)
                  );
                });
                V && w.change(V.propsRef.value);
              }
              break;
          }
        }
        let M = He(() => {
          var D;
          return (D = yt(a)) == null ? void 0 : D.closest("form");
        });
        return (
          sr(() => {
            Or(
              [M],
              () => {
                if (!M.value || t.defaultValue === void 0) return;
                function D() {
                  w.change(t.defaultValue);
                }
                return (
                  M.value.addEventListener("reset", D),
                  () => {
                    var z;
                    (z = M.value) == null || z.removeEventListener("reset", D);
                  }
                );
              },
              { immediate: !0 }
            );
          }),
          () => {
            let { disabled: D, name: z, id: V, form: j, ...B } = t,
              ae = {
                ref: a,
                id: V,
                role: "radiogroup",
                "aria-labelledby": u.value,
                "aria-describedby": p.value,
                onKeydown: S,
              };
            return Vr(dr, [
              ...(z != null && m.value != null
                ? D_({ [z]: m.value }).map(([re, K]) =>
                    Vr(
                      ff,
                      YN({
                        features: Mu.Hidden,
                        key: re,
                        as: "input",
                        type: "hidden",
                        hidden: !0,
                        readOnly: !0,
                        form: j,
                        name: re,
                        value: K,
                      })
                    )
                  )
                : []),
              xn({
                ourProps: ae,
                theirProps: {
                  ...r,
                  ...Uv(B, ["modelValue", "defaultValue", "by"]),
                },
                slot: {},
                attrs: r,
                slots: n,
                name: "RadioGroup",
              }),
            ]);
          }
        );
      },
    });
    var KB = ((t) => (
      (t[(t.Empty = 1)] = "Empty"), (t[(t.Active = 2)] = "Active"), t
    ))(KB || {});
    let $B = dt({
        name: "RadioGroupOption",
        props: {
          as: { type: [Object, String], default: "div" },
          value: { type: [Object, String, Number, Boolean] },
          disabled: { type: Boolean, default: !1 },
          id: {
            type: String,
            default: () => `headlessui-radiogroup-option-${fs()}`,
          },
        },
        setup(t, { attrs: e, slots: r, expose: n }) {
          let i = sA("RadioGroupOption"),
            a = nA({ name: "RadioGroupLabel" }),
            l = $v({ name: "RadioGroupDescription" }),
            u = We(null),
            p = He(() => ({ value: t.value, disabled: t.disabled })),
            m = We(1);
          n({ el: u, $el: u });
          let v = He(() => yt(u));
          sr(() => i.registerOption({ id: t.id, element: v, propsRef: p })),
            En(() => i.unregisterOption(t.id));
          let w = He(() => {
              var B;
              return (
                ((B = i.firstOption.value) == null ? void 0 : B.id) === t.id
              );
            }),
            S = He(() => i.disabled.value || t.disabled),
            M = He(() => i.compare(_t(i.value.value), _t(t.value))),
            D = He(() =>
              S.value
                ? -1
                : M.value || (!i.containsCheckedOption.value && w.value)
                ? 0
                : -1
            );
          function z() {
            var B;
            i.change(t.value) &&
              ((m.value |= 2), (B = yt(u)) == null || B.focus());
          }
          function V() {
            m.value |= 2;
          }
          function j() {
            m.value &= -3;
          }
          return () => {
            let { id: B, value: ae, disabled: re, ...K } = t,
              fe = {
                checked: M.value,
                disabled: S.value,
                active: !!(m.value & 2),
              },
              ye = {
                id: B,
                ref: u,
                role: "radio",
                "aria-checked": M.value ? "true" : "false",
                "aria-labelledby": a.value,
                "aria-describedby": l.value,
                "aria-disabled": S.value ? !0 : void 0,
                tabIndex: D.value,
                onClick: S.value ? void 0 : z,
                onFocus: S.value ? void 0 : V,
                onBlur: S.value ? void 0 : j,
              };
            return xn({
              ourProps: ye,
              theirProps: K,
              slot: fe,
              attrs: e,
              slots: r,
              name: "RadioGroupOption",
            });
          };
        },
      }),
      aA = YB;
    function ZB(t) {
      let e = { called: !1 };
      return (...r) => {
        if (!e.called) return (e.called = !0), t(...r);
      };
    }
    function Jv(t, ...e) {
      t && e.length > 0 && t.classList.add(...e);
    }
    function mf(t, ...e) {
      t && e.length > 0 && t.classList.remove(...e);
    }
    var e0 = ((t) => (
      (t.Finished = "finished"), (t.Cancelled = "cancelled"), t
    ))(e0 || {});
    function QB(t, e) {
      let r = Ru();
      if (!t) return r.dispose;
      let { transitionDuration: n, transitionDelay: i } = getComputedStyle(t),
        [a, l] = [n, i].map((u) => {
          let [p = 0] = u
            .split(",")
            .filter(Boolean)
            .map((m) =>
              m.includes("ms") ? parseFloat(m) : parseFloat(m) * 1e3
            )
            .sort((m, v) => v - m);
          return p;
        });
      return (
        a !== 0 ? r.setTimeout(() => e("finished"), a + l) : e("finished"),
        r.add(() => e("cancelled")),
        r.dispose
      );
    }
    function oA(t, e, r, n, i, a) {
      let l = Ru(),
        u = a !== void 0 ? ZB(a) : () => {};
      return (
        mf(t, ...i),
        Jv(t, ...e, ...r),
        l.nextFrame(() => {
          mf(t, ...r),
            Jv(t, ...n),
            l.add(QB(t, (p) => (mf(t, ...n, ...e), Jv(t, ...i), u(p))));
        }),
        l.add(() => mf(t, ...e, ...r, ...n, ...i)),
        l.add(() => u("cancelled")),
        l.dispose
      );
    }
    function Uo(t = "") {
      return t.split(" ").filter((e) => e.trim().length > 1);
    }
    let t0 = Symbol("TransitionContext");
    var JB = ((t) => ((t.Visible = "visible"), (t.Hidden = "hidden"), t))(
      JB || {}
    );
    function e5() {
      return Lr(t0, null) !== null;
    }
    function t5() {
      let t = Lr(t0, null);
      if (t === null)
        throw new Error(
          "A <TransitionChild /> is used but it is missing a parent <TransitionRoot />."
        );
      return t;
    }
    function r5() {
      let t = Lr(r0, null);
      if (t === null)
        throw new Error(
          "A <TransitionChild /> is used but it is missing a parent <TransitionRoot />."
        );
      return t;
    }
    let r0 = Symbol("NestingContext");
    function vf(t) {
      return "children" in t
        ? vf(t.children)
        : t.value.filter(({ state: e }) => e === "visible").length > 0;
    }
    function lA(t) {
      let e = We([]),
        r = We(!1);
      sr(() => (r.value = !0)), En(() => (r.value = !1));
      function n(a, l = Da.Hidden) {
        let u = e.value.findIndex(({ id: p }) => p === a);
        u !== -1 &&
          (Ri(l, {
            [Da.Unmount]() {
              e.value.splice(u, 1);
            },
            [Da.Hidden]() {
              e.value[u].state = "hidden";
            },
          }),
          !vf(e) && r.value && (t == null || t()));
      }
      function i(a) {
        let l = e.value.find(({ id: u }) => u === a);
        return (
          l
            ? l.state !== "visible" && (l.state = "visible")
            : e.value.push({ id: a, state: "visible" }),
          () => n(a, Da.Unmount)
        );
      }
      return { children: e, register: i, unregister: n };
    }
    let cA = Zl.RenderStrategy,
      Ql = dt({
        props: {
          as: { type: [Object, String], default: "div" },
          show: { type: [Boolean], default: null },
          unmount: { type: [Boolean], default: !0 },
          appear: { type: [Boolean], default: !1 },
          enter: { type: [String], default: "" },
          enterFrom: { type: [String], default: "" },
          enterTo: { type: [String], default: "" },
          entered: { type: [String], default: "" },
          leave: { type: [String], default: "" },
          leaveFrom: { type: [String], default: "" },
          leaveTo: { type: [String], default: "" },
        },
        emits: {
          beforeEnter: () => !0,
          afterEnter: () => !0,
          beforeLeave: () => !0,
          afterLeave: () => !0,
        },
        setup(t, { emit: e, attrs: r, slots: n, expose: i }) {
          let a = We(0);
          function l() {
            (a.value |= wn.Opening), e("beforeEnter");
          }
          function u() {
            (a.value &= ~wn.Opening), e("afterEnter");
          }
          function p() {
            (a.value |= wn.Closing), e("beforeLeave");
          }
          function m() {
            (a.value &= ~wn.Closing), e("afterLeave");
          }
          if (!e5() && QN())
            return () =>
              Vr(
                Du,
                {
                  ...t,
                  onBeforeEnter: l,
                  onAfterEnter: u,
                  onBeforeLeave: p,
                  onAfterLeave: m,
                },
                n
              );
          let v = We(null),
            w = He(() => (t.unmount ? Da.Unmount : Da.Hidden));
          i({ el: v, $el: v });
          let { show: S, appear: M } = t5(),
            { register: D, unregister: z } = r5(),
            V = We(S.value ? "visible" : "hidden"),
            j = { value: !0 },
            B = fs(),
            ae = { value: !1 },
            re = lA(() => {
              !ae.value &&
                V.value !== "hidden" &&
                ((V.value = "hidden"), z(B), m());
            });
          sr(() => {
            let E = D(B);
            En(E);
          }),
            Wn(() => {
              if (w.value === Da.Hidden && B) {
                if (S.value && V.value !== "visible") {
                  V.value = "visible";
                  return;
                }
                Ri(V.value, { hidden: () => z(B), visible: () => D(B) });
              }
            });
          let K = Uo(t.enter),
            fe = Uo(t.enterFrom),
            ye = Uo(t.enterTo),
            pe = Uo(t.entered),
            _e = Uo(t.leave),
            be = Uo(t.leaveFrom),
            Ce = Uo(t.leaveTo);
          sr(() => {
            Wn(() => {
              if (V.value === "visible") {
                let E = yt(v);
                if (E instanceof Comment && E.data === "")
                  throw new Error(
                    "Did you forget to passthrough the `ref` to the actual DOM node?"
                  );
              }
            });
          });
          function ke(E) {
            let P = j.value && !M.value,
              L = yt(v);
            !L ||
              !(L instanceof HTMLElement) ||
              P ||
              ((ae.value = !0),
              S.value && l(),
              S.value || p(),
              E(
                S.value
                  ? oA(L, K, fe, ye, pe, (U) => {
                      (ae.value = !1), U === e0.Finished && u();
                    })
                  : oA(L, _e, be, Ce, pe, (U) => {
                      (ae.value = !1),
                        U === e0.Finished &&
                          (vf(re) || ((V.value = "hidden"), z(B), m()));
                    })
              ));
          }
          return (
            sr(() => {
              Or(
                [S],
                (E, P, L) => {
                  ke(L), (j.value = !1);
                },
                { immediate: !0 }
              );
            }),
            vn(r0, re),
            P_(
              He(
                () =>
                  Ri(V.value, { visible: wn.Open, hidden: wn.Closed }) | a.value
              )
            ),
            () => {
              let {
                  appear: E,
                  show: P,
                  enter: L,
                  enterFrom: U,
                  enterTo: Y,
                  entered: ie,
                  leave: le,
                  leaveFrom: J,
                  leaveTo: T,
                  ...Z
                } = t,
                Oe = { ref: v },
                Me = {
                  ...Z,
                  ...(M.value && S.value && Lu.isServer
                    ? { class: ot([r.class, Z.class, ...K, ...fe]) }
                    : {}),
                };
              return xn({
                theirProps: Me,
                ourProps: Oe,
                slot: {},
                slots: n,
                attrs: r,
                features: cA,
                visible: V.value === "visible",
                name: "TransitionChild",
              });
            }
          );
        },
      }),
      n5 = Ql,
      Du = dt({
        inheritAttrs: !1,
        props: {
          as: { type: [Object, String], default: "div" },
          show: { type: [Boolean], default: null },
          unmount: { type: [Boolean], default: !0 },
          appear: { type: [Boolean], default: !1 },
          enter: { type: [String], default: "" },
          enterFrom: { type: [String], default: "" },
          enterTo: { type: [String], default: "" },
          entered: { type: [String], default: "" },
          leave: { type: [String], default: "" },
          leaveFrom: { type: [String], default: "" },
          leaveTo: { type: [String], default: "" },
        },
        emits: {
          beforeEnter: () => !0,
          afterEnter: () => !0,
          beforeLeave: () => !0,
          afterLeave: () => !0,
        },
        setup(t, { emit: e, attrs: r, slots: n }) {
          let i = uf(),
            a = He(() =>
              t.show === null && i !== null
                ? (i.value & wn.Open) === wn.Open
                : t.show
            );
          Wn(() => {
            if (![!0, !1].includes(a.value))
              throw new Error(
                'A <Transition /> is used but it is missing a `:show="true | false"` prop.'
              );
          });
          let l = We(a.value ? "visible" : "hidden"),
            u = lA(() => {
              l.value = "hidden";
            }),
            p = We(!0),
            m = { show: a, appear: He(() => t.appear || !p.value) };
          return (
            sr(() => {
              Wn(() => {
                (p.value = !1),
                  a.value
                    ? (l.value = "visible")
                    : vf(u) || (l.value = "hidden");
              });
            }),
            vn(r0, u),
            vn(t0, m),
            () => {
              let v = Uv(t, [
                  "show",
                  "appear",
                  "unmount",
                  "onBeforeEnter",
                  "onBeforeLeave",
                  "onAfterEnter",
                  "onAfterLeave",
                ]),
                w = { unmount: t.unmount };
              return xn({
                ourProps: { ...w, as: "template" },
                theirProps: {},
                slot: {},
                slots: {
                  ...n,
                  default: () => [
                    Vr(
                      n5,
                      {
                        onBeforeEnter: () => e("beforeEnter"),
                        onAfterEnter: () => e("afterEnter"),
                        onBeforeLeave: () => e("beforeLeave"),
                        onAfterLeave: () => e("afterLeave"),
                        ...r,
                        ...w,
                        ...v,
                      },
                      n.default
                    ),
                  ],
                },
                attrs: {},
                features: cA,
                visible: l.value === "visible",
                name: "Transition",
              });
            }
          );
        },
      });
    function i5(t) {
      return {
        all: (t = t || new Map()),
        on: function (e, r) {
          var n = t.get(e);
          n ? n.push(r) : t.set(e, [r]);
        },
        off: function (e, r) {
          var n = t.get(e);
          n && (r ? n.splice(n.indexOf(r) >>> 0, 1) : t.set(e, []));
        },
        emit: function (e, r) {
          var n = t.get(e);
          n &&
            n.slice().map(function (i) {
              i(r);
            }),
            (n = t.get("*")) &&
              n.slice().map(function (i) {
                i(e, r);
              });
        },
      };
    }
    var js = ((t) => (
        (t.showBusyState = "showBusyState"),
        (t.hideBusyState = "hideBusyState"),
        (t.showAlert = "showAlert"),
        (t.showBanner = "showBanner"),
        (t.hideBanner = "hideBanner"),
        t
      ))(js || {}),
      yf = ((t) => (
        (t[(t.loading = 0)] = "loading"), (t[(t.message = 1)] = "message"), t
      ))(yf || {}),
      Wo = ((t) => (
        (t[(t.info = 0)] = "info"),
        (t[(t.warning = 1)] = "warning"),
        (t[(t.error = 2)] = "error"),
        (t[(t.success = 3)] = "success"),
        t
      ))(Wo || {}),
      Bi = ((t) => (
        (t[(t.light = 0)] = "light"), (t[(t.dark = 1)] = "dark"), t
      ))(Bi || {});
    const bf = i5(),
      {
        addObserver: xf,
        removeObserver: wf,
        postNotification: One,
        clear: Lne,
      } = {
        addObserver: bf.on,
        removeObserver: bf.off,
        postNotification: bf.emit,
        clear: bf.all.clear,
      },
      s5 = { class: "fixed top-0 inset-x-0 pt-2 lg:pb-5 z-30" },
      a5 = { class: "max-w-7xl mx-auto px-2 lg:px-6 lg:px-8" },
      o5 = { class: "flex items-center justify-between" },
      l5 = {
        class: "order-3 flex-shrink-0 w-full lg:order-2 lg:mt-0 lg:w-auto",
        "data-test-the-banner-message": "",
      },
      c5 = { class: "order-2 flex-shrink-0 lg:order-3 lg:ml-2" },
      u5 = {
        class:
          "-mr-1 flex p-2 rounded-md focus:outline-none focus:ring-2 focus:ring-white",
        type: "button",
      },
      h5 = ve(
        "path",
        {
          d: "M6 18L18 6M6 6l12 12",
          "stroke-linecap": "round",
          "stroke-linejoin": "round",
        },
        null,
        -1
      ),
      d5 = [h5],
      f5 = 5e3,
      p5 = dt({
        __name: "TheBanner",
        setup(t, { expose: e }) {
          const r = We(!1),
            n = We(""),
            i = We(Wo.error);
          let a = 0;
          function l(p) {
            (i.value = (p == null ? void 0 : p.type) ?? Wo.error),
              (n.value = (p == null ? void 0 : p.message) ?? ""),
              (r.value = !0),
              (a = window.setTimeout(() => {
                r.value = !1;
              }, f5));
          }
          function u() {
            clearTimeout(a), (r.value = !1);
          }
          return (
            e({ show: l, hide: u }),
            (p, m) => (
              je(),
              jt(
                Xe(Du),
                {
                  show: r.value,
                  enter: "transition ease-in-out duration-300 transform",
                  "enter-from": "-translate-y-20 opacity-0",
                  "enter-to": "translate-y-0 opacity-100",
                  leave: "transition ease-in-out duration-300 transform",
                  "leave-from": "translate-y-0 opacity-100",
                  "leave-to": "-translate-y-20 opacity-0",
                },
                {
                  default: Ft(() => [
                    ve("div", s5, [
                      ve("div", a5, [
                        ve(
                          "div",
                          {
                            class: ot([
                              [
                                {
                                  "bg-red-400  text-white":
                                    i.value === Xe(Wo).error,
                                },
                                {
                                  "bg-project-primary text-white":
                                    i.value === Xe(Wo).info,
                                },
                                {
                                  "bg-green-500 text-white":
                                    i.value === Xe(Wo).success,
                                },
                                {
                                  "bg-slate-900 bg-opacity-95":
                                    i.value === Xe(Wo).warning,
                                },
                              ],
                              "p-2 rounded-lg shadow-lg lg:p-3",
                            ]),
                          },
                          [
                            ve("div", o5, [
                              ve("div", l5, Bt(n.value), 1),
                              ve("div", c5, [
                                ve("button", u5, [
                                  (je(),
                                  et(
                                    "svg",
                                    {
                                      "aria-hidden": "true",
                                      class: "h-6 w-6 text-white",
                                      fill: "none",
                                      stroke: "currentColor",
                                      "stroke-width": "2",
                                      viewBox: "0 0 24 24",
                                      xmlns: "http://www.w3.org/2000/svg",
                                      onClick:
                                        m[0] || (m[0] = (v) => (r.value = !1)),
                                    },
                                    d5
                                  )),
                                ]),
                              ]),
                            ]),
                          ],
                          2
                        ),
                      ]),
                    ]),
                  ]),
                  _: 1,
                },
                8,
                ["show"]
              )
            )
          );
        },
      });
    var Yn = ((t) => (
        (t[(t.none = 0)] = "none"),
        (t[(t.small = 1)] = "small"),
        (t[(t.medium = 2)] = "medium"),
        (t[(t.large = 3)] = "large"),
        (t[(t.xl = 4)] = "xl"),
        t
      ))(Yn || {}),
      Vn = ((t) => (
        (t[(t.none = -1)] = "none"),
        (t[(t.primary = 0)] = "primary"),
        (t[(t.secondary = 1)] = "secondary"),
        (t[(t.tertiary = 2)] = "tertiary"),
        t
      ))(Vn || {}),
      n0 = ((t) => (
        (t[(t.small = 0)] = "small"),
        (t[(t.medium = 1)] = "medium"),
        (t[(t.large = 2)] = "large"),
        (t[(t.xl = 3)] = "xl"),
        t
      ))(n0 || {}),
      ps = ((t) => (
        (t[(t.normal = 0)] = "normal"),
        (t[(t.warning = 1)] = "warning"),
        (t[(t.danger = 2)] = "danger"),
        (t[(t.success = 3)] = "success"),
        (t[(t.info = 4)] = "info"),
        t
      ))(ps || {});
    const gs = { asc: "asc", desc: "desc" },
      g5 = dt({
        __name: "CircleSpinner",
        props: { size: { default: Yn.small }, theme: { default: Bi.light } },
        setup(t) {
          const e = {
            [Yn.none]: ["scale-0"],
            [Yn.small]: ["scale-50"],
            [Yn.medium]: ["scale-100"],
            [Yn.large]: ["scale-150"],
            [Yn.xl]: ["scale-200"],
          };
          return (r, n) =>
            r.size !== Xe(Yn).none
              ? (je(),
                et(
                  "div",
                  {
                    key: 0,
                    class: ot([[e[r.size]], "loader"]),
                    "data-test-circle-spinner-wrapper": "",
                  },
                  [
                    ve(
                      "div",
                      {
                        class: ot([
                          [
                            r.theme === Xe(Bi).light
                              ? "text-teal"
                              : "text-gray-500",
                          ],
                          "dot-spin",
                        ]),
                        "data-test-circle-spinner-dots": "",
                      },
                      null,
                      2
                    ),
                  ],
                  2
                ))
              : Yr("", !0);
        },
      }),
      Jl = (t, e) => {
        const r = t.__vccOpts || t;
        for (const [n, i] of e) r[n] = i;
        return r;
      },
      i0 = Jl(g5, [["__scopeId", "data-v-b76f316e"]]),
      m5 = {
        class:
          "absolute top-1/3 flex flex-col justify-center items-center space-x-3 px-6 py-6",
      },
      v5 = ["src"],
      y5 = { class: "mt-5 text-gray-900 text-2xl font-semibold text-center" },
      b5 = {
        class: "mt-5 text-gray-900 text-lg font-semibold text-center max-w-xl",
      },
      x5 = 750,
      w5 = dt({
        __name: "TheOverlay",
        setup(t, { expose: e }) {
          const r = We(!1),
            n = We(""),
            i = We(""),
            a = We(yf.loading),
            l = We(null),
            u = We(Bi.light);
          let p = 0,
            m = 0;
          function v(S) {
            const M = (S == null ? void 0 : S.delay) ?? 0;
            (a.value = (S == null ? void 0 : S.type) ?? yf.loading),
              (u.value = (S == null ? void 0 : S.theme) ?? Bi.light),
              (i.value = (S == null ? void 0 : S.description) ?? ""),
              (n.value = (S == null ? void 0 : S.message) ?? ""),
              (l.value = (S == null ? void 0 : S.icon) ?? null),
              (m = Date.now() + M + x5),
              (p = window.setTimeout(() => {
                r.value = !0;
              }, M));
          }
          function w() {
            clearTimeout(p);
            const S = m - Date.now();
            S > 0
              ? setTimeout(() => {
                  r.value = !1;
                }, S)
              : (r.value = !1);
          }
          return (
            e({ show: v, hide: w }),
            (S, M) => (
              je(),
              jt(fv, { to: "body" }, [
                $e(
                  Xe(Du),
                  {
                    show: r.value,
                    enter: "ease-out duration-300",
                    "enter-from": "opacity-0",
                    "enter-to": "opacity-100",
                    leave: "ease-in duration-100",
                    "leave-from": "opacity-100",
                    "leave-to": "opacity-0",
                  },
                  {
                    default: Ft(() => [
                      ve(
                        "div",
                        {
                          class: ot([
                            [
                              {
                                "bg-white bg-opacity-95":
                                  u.value === Xe(Bi).light,
                              },
                              {
                                "bg-slate-900 bg-opacity-30":
                                  u.value === Xe(Bi).dark,
                              },
                            ],
                            "overlay-wrapper fixed inset-0 w-full flex justify-center transition-opacity select-none",
                          ]),
                          "aria-hidden": "true",
                          "data-test-overlay-wrapper": "",
                        },
                        [
                          ve("div", m5, [
                            a.value === Xe(yf).loading
                              ? (je(),
                                jt(
                                  i0,
                                  { key: 0, size: Xe(Yn).xl, theme: u.value },
                                  null,
                                  8,
                                  ["size", "theme"]
                                ))
                              : (je(),
                                et(
                                  "img",
                                  {
                                    key: 1,
                                    src: l.value,
                                    alt: "busy-overlay-icon",
                                    class: "w-16 h-16",
                                  },
                                  null,
                                  8,
                                  v5
                                )),
                            ve("p", y5, Bt(n.value), 1),
                            ve("p", b5, Bt(i.value), 1),
                          ]),
                        ],
                        2
                      ),
                    ]),
                    _: 1,
                  },
                  8,
                  ["show"]
                ),
              ])
            )
          );
        },
      }),
      k5 = Jl(w5, [["__scopeId", "data-v-fa8dac1b"]]),
      _5 = dt({
        __name: "App",
        setup(t) {
          const e = We(),
            r = We();
          function n(u) {
            var p;
            (p = e.value) == null || p.show(u);
          }
          function i() {
            var u;
            (u = e.value) == null || u.hide();
          }
          function a(u) {
            var p;
            (p = r.value) == null || p.show(u);
          }
          function l() {
            var u;
            (u = r.value) == null || u.hide();
          }
          return (
            sr(() => {
              xf(js.showBusyState, n),
                xf(js.hideBusyState, i),
                xf(js.showBanner, a),
                xf(js.hideBanner, l);
            }),
            En(() => {
              wf(js.showBusyState, n),
                wf(js.hideBusyState, i),
                wf(js.showBanner, a),
                wf(js.hideBanner, l);
            }),
            (u, p) => {
              const m = X1("router-view");
              return (
                je(),
                et(
                  dr,
                  null,
                  [
                    $e(k5, { ref_key: "theOverlay", ref: e }, null, 512),
                    $e(p5, { ref_key: "theBanner", ref: r }, null, 512),
                    $e(m),
                  ],
                  64
                )
              );
            }
          );
        },
      }),
      A5 = {
        $: {
          back: "Back",
          cancel: "Cancel",
          confirm: "Confirm",
          continue: "Continue",
          close: "Close",
          error: "Error",
          go: "Go",
          hi: "Hi, {nickname}",
          important: "IMPORTANT",
          language: { en: "English" },
          logging_out: "Logging out...",
          logout: "Logout",
          next: "Next",
          page_not_found: "Hmm... We're unable to find that page.",
          pending: "Pending...",
          submit: "Submit",
          try_again: "Try again",
          version: "Ping Dashboard Version {version}",
          email: "Email",
          new_email: "Enter your new email here",
        },
        login: {
          title: "ping-dashboard",
          header: "Connect your wallet",
          description_paragraph_one:
            "Sign in to MetaMask now to log in. Once you\u2019re signed in to MetaMask, click the \u201CConnect wallet\u201D button.",
          description_paragraph_two:
            "You should confirm in MetaMask that you\u2019re connecting to:",
          next_button_label: "Connect wallet",
          no_metamask: `Apparently you don't have MetaMask installed.
You need to install it before connecting your wallet, please look at the link below.`,
          pending_confirmation:
            "Request is pending. Please confirm it using MetaMask.",
        },
        metamask: {
          failed_to_get_balance: {
            header: "Failed to get PING balance",
            description:
              "Sorry, we can't check you PING balance at the moment. Please use desktop browser.",
          },
          browser_not_supported: {
            header: "Your browser is not supported.",
            description:
              "Your current browser does not support the MetaMask extension. To continue, please try the latest version of Chrome, Firefox, Brave, Opera or Edge.",
          },
          mobile_not_supported: {
            header: "Mobile not currently supported.",
            description:
              "MetaMask mobile integration is not compatible with this browser. To continue, please use the desktop browser.",
          },
        },
      },
      C5 = { en: A5 },
      ec = typeof window < "u";
    function S5(t) {
      return t.__esModule || t[Symbol.toStringTag] === "Module";
    }
    const tr = Object.assign;
    function s0(t, e) {
      const r = {};
      for (const n in e) {
        const i = e[n];
        r[n] = Fi(i) ? i.map(t) : t(i);
      }
      return r;
    }
    const zu = () => {},
      Fi = Array.isArray,
      E5 = /\/$/,
      I5 = (t) => t.replace(E5, "");
    function a0(t, e, r = "/") {
      let n,
        i = {},
        a = "",
        l = "";
      const u = e.indexOf("#");
      let p = e.indexOf("?");
      return (
        u < p && u >= 0 && (p = -1),
        p > -1 &&
          ((n = e.slice(0, p)),
          (a = e.slice(p + 1, u > -1 ? u : e.length)),
          (i = t(a))),
        u > -1 && ((n = n || e.slice(0, u)), (l = e.slice(u, e.length))),
        (n = L5(n ?? e, r)),
        { fullPath: n + (a && "?") + a + l, path: n, query: i, hash: l }
      );
    }
    function T5(t, e) {
      const r = e.query ? t(e.query) : "";
      return e.path + (r && "?") + r + (e.hash || "");
    }
    function uA(t, e) {
      return !e || !t.toLowerCase().startsWith(e.toLowerCase())
        ? t
        : t.slice(e.length) || "/";
    }
    function P5(t, e, r) {
      const n = e.matched.length - 1,
        i = r.matched.length - 1;
      return (
        n > -1 &&
        n === i &&
        tc(e.matched[n], r.matched[i]) &&
        hA(e.params, r.params) &&
        t(e.query) === t(r.query) &&
        e.hash === r.hash
      );
    }
    function tc(t, e) {
      return (t.aliasOf || t) === (e.aliasOf || e);
    }
    function hA(t, e) {
      if (Object.keys(t).length !== Object.keys(e).length) return !1;
      for (const r in t) if (!O5(t[r], e[r])) return !1;
      return !0;
    }
    function O5(t, e) {
      return Fi(t) ? dA(t, e) : Fi(e) ? dA(e, t) : t === e;
    }
    function dA(t, e) {
      return Fi(e)
        ? t.length === e.length && t.every((r, n) => r === e[n])
        : t.length === 1 && t[0] === e;
    }
    function L5(t, e) {
      if (t.startsWith("/")) return t;
      if (!t) return e;
      const r = e.split("/"),
        n = t.split("/"),
        i = n[n.length - 1];
      (i === ".." || i === ".") && n.push("");
      let a = r.length - 1,
        l,
        u;
      for (l = 0; l < n.length; l++)
        if (((u = n[l]), u !== "."))
          if (u === "..") a > 1 && a--;
          else break;
      return (
        r.slice(0, a).join("/") +
        "/" +
        n.slice(l - (l === n.length ? 1 : 0)).join("/")
      );
    }
    var Hu;
    (function (t) {
      (t.pop = "pop"), (t.push = "push");
    })(Hu || (Hu = {}));
    var Uu;
    (function (t) {
      (t.back = "back"), (t.forward = "forward"), (t.unknown = "");
    })(Uu || (Uu = {}));
    function M5(t) {
      if (!t)
        if (ec) {
          const e = document.querySelector("base");
          (t = (e && e.getAttribute("href")) || "/"),
            (t = t.replace(/^\w+:\/\/[^\/]+/, ""));
        } else t = "/";
      return t[0] !== "/" && t[0] !== "#" && (t = "/" + t), I5(t);
    }
    const R5 = /^[^#]+#/;
    function N5(t, e) {
      return t.replace(R5, "#") + e;
    }
    function B5(t, e) {
      const r = document.documentElement.getBoundingClientRect(),
        n = t.getBoundingClientRect();
      return {
        behavior: e.behavior,
        left: n.left - r.left - (e.left || 0),
        top: n.top - r.top - (e.top || 0),
      };
    }
    const kf = () => ({ left: window.pageXOffset, top: window.pageYOffset });
    function F5(t) {
      let e;
      if ("el" in t) {
        const r = t.el,
          n = typeof r == "string" && r.startsWith("#"),
          i =
            typeof r == "string"
              ? n
                ? document.getElementById(r.slice(1))
                : document.querySelector(r)
              : r;
        if (!i) return;
        e = B5(i, t);
      } else e = t;
      "scrollBehavior" in document.documentElement.style
        ? window.scrollTo(e)
        : window.scrollTo(
            e.left != null ? e.left : window.pageXOffset,
            e.top != null ? e.top : window.pageYOffset
          );
    }
    function fA(t, e) {
      return (history.state ? history.state.position - e : -1) + t;
    }
    const o0 = new Map();
    function D5(t, e) {
      o0.set(t, e);
    }
    function z5(t) {
      const e = o0.get(t);
      return o0.delete(t), e;
    }
    let H5 = () => location.protocol + "//" + location.host;
    function pA(t, e) {
      const { pathname: r, search: n, hash: i } = e,
        a = t.indexOf("#");
      if (a > -1) {
        let l = i.includes(t.slice(a)) ? t.slice(a).length : 1,
          u = i.slice(l);
        return u[0] !== "/" && (u = "/" + u), uA(u, "");
      }
      return uA(r, t) + n + i;
    }
    function U5(t, e, r, n) {
      let i = [],
        a = [],
        l = null;
      const u = ({ state: S }) => {
        const M = pA(t, location),
          D = r.value,
          z = e.value;
        let V = 0;
        if (S) {
          if (((r.value = M), (e.value = S), l && l === D)) {
            l = null;
            return;
          }
          V = z ? S.position - z.position : 0;
        } else n(M);
        i.forEach((j) => {
          j(r.value, D, {
            delta: V,
            type: Hu.pop,
            direction: V ? (V > 0 ? Uu.forward : Uu.back) : Uu.unknown,
          });
        });
      };
      function p() {
        l = r.value;
      }
      function m(S) {
        i.push(S);
        const M = () => {
          const D = i.indexOf(S);
          D > -1 && i.splice(D, 1);
        };
        return a.push(M), M;
      }
      function v() {
        const { history: S } = window;
        S.state && S.replaceState(tr({}, S.state, { scroll: kf() }), "");
      }
      function w() {
        for (const S of a) S();
        (a = []),
          window.removeEventListener("popstate", u),
          window.removeEventListener("beforeunload", v);
      }
      return (
        window.addEventListener("popstate", u),
        window.addEventListener("beforeunload", v, { passive: !0 }),
        { pauseListeners: p, listen: m, destroy: w }
      );
    }
    function gA(t, e, r, n = !1, i = !1) {
      return {
        back: t,
        current: e,
        forward: r,
        replaced: n,
        position: window.history.length,
        scroll: i ? kf() : null,
      };
    }
    function W5(t) {
      const { history: e, location: r } = window,
        n = { value: pA(t, r) },
        i = { value: e.state };
      i.value ||
        a(
          n.value,
          {
            back: null,
            current: n.value,
            forward: null,
            position: e.length - 1,
            replaced: !0,
            scroll: null,
          },
          !0
        );
      function a(p, m, v) {
        const w = t.indexOf("#"),
          S =
            w > -1
              ? (r.host && document.querySelector("base") ? t : t.slice(w)) + p
              : H5() + t + p;
        try {
          e[v ? "replaceState" : "pushState"](m, "", S), (i.value = m);
        } catch (M) {
          console.error(M), r[v ? "replace" : "assign"](S);
        }
      }
      function l(p, m) {
        const v = tr({}, e.state, gA(i.value.back, p, i.value.forward, !0), m, {
          position: i.value.position,
        });
        a(p, v, !0), (n.value = p);
      }
      function u(p, m) {
        const v = tr({}, i.value, e.state, { forward: p, scroll: kf() });
        a(v.current, v, !0);
        const w = tr({}, gA(n.value, p, null), { position: v.position + 1 }, m);
        a(p, w, !1), (n.value = p);
      }
      return { location: n, state: i, push: u, replace: l };
    }
    function X5(t) {
      t = M5(t);
      const e = W5(t),
        r = U5(t, e.state, e.location, e.replace);
      function n(a, l = !0) {
        l || r.pauseListeners(), history.go(a);
      }
      const i = tr(
        { location: "", base: t, go: n, createHref: N5.bind(null, t) },
        e,
        r
      );
      return (
        Object.defineProperty(i, "location", {
          enumerable: !0,
          get: () => e.location.value,
        }),
        Object.defineProperty(i, "state", {
          enumerable: !0,
          get: () => e.state.value,
        }),
        i
      );
    }
    function j5(t) {
      return typeof t == "string" || (t && typeof t == "object");
    }
    function mA(t) {
      return typeof t == "string" || typeof t == "symbol";
    }
    const Ha = {
        path: "/",
        name: void 0,
        params: {},
        query: {},
        hash: "",
        fullPath: "/",
        matched: [],
        meta: {},
        redirectedFrom: void 0,
      },
      vA = Symbol("");
    var yA;
    (function (t) {
      (t[(t.aborted = 4)] = "aborted"),
        (t[(t.cancelled = 8)] = "cancelled"),
        (t[(t.duplicated = 16)] = "duplicated");
    })(yA || (yA = {}));
    function rc(t, e) {
      return tr(new Error(), { type: t, [vA]: !0 }, e);
    }
    function Gs(t, e) {
      return t instanceof Error && vA in t && (e == null || !!(t.type & e));
    }
    const bA = "[^/]+?",
      G5 = { sensitive: !1, strict: !1, start: !0, end: !0 },
      Y5 = /[.+*?^${}()[\]/\\]/g;
    function V5(t, e) {
      const r = tr({}, G5, e),
        n = [];
      let i = r.start ? "^" : "";
      const a = [];
      for (const m of t) {
        const v = m.length ? [] : [90];
        r.strict && !m.length && (i += "/");
        for (let w = 0; w < m.length; w++) {
          const S = m[w];
          let M = 40 + (r.sensitive ? 0.25 : 0);
          if (S.type === 0)
            w || (i += "/"), (i += S.value.replace(Y5, "\\$&")), (M += 40);
          else if (S.type === 1) {
            const { value: D, repeatable: z, optional: V, regexp: j } = S;
            a.push({ name: D, repeatable: z, optional: V });
            const B = j || bA;
            if (B !== bA) {
              M += 10;
              try {
                new RegExp(`(${B})`);
              } catch (re) {
                throw new Error(
                  `Invalid custom RegExp for param "${D}" (${B}): ` + re.message
                );
              }
            }
            let ae = z ? `((?:${B})(?:/(?:${B}))*)` : `(${B})`;
            w || (ae = V && m.length < 2 ? `(?:/${ae})` : "/" + ae),
              V && (ae += "?"),
              (i += ae),
              (M += 20),
              V && (M += -8),
              z && (M += -20),
              B === ".*" && (M += -50);
          }
          v.push(M);
        }
        n.push(v);
      }
      if (r.strict && r.end) {
        const m = n.length - 1;
        n[m][n[m].length - 1] += 0.7000000000000001;
      }
      r.strict || (i += "/?"),
        r.end ? (i += "$") : r.strict && (i += "(?:/|$)");
      const l = new RegExp(i, r.sensitive ? "" : "i");
      function u(m) {
        const v = m.match(l),
          w = {};
        if (!v) return null;
        for (let S = 1; S < v.length; S++) {
          const M = v[S] || "",
            D = a[S - 1];
          w[D.name] = M && D.repeatable ? M.split("/") : M;
        }
        return w;
      }
      function p(m) {
        let v = "",
          w = !1;
        for (const S of t) {
          (!w || !v.endsWith("/")) && (v += "/"), (w = !1);
          for (const M of S)
            if (M.type === 0) v += M.value;
            else if (M.type === 1) {
              const { value: D, repeatable: z, optional: V } = M,
                j = D in m ? m[D] : "";
              if (Fi(j) && !z)
                throw new Error(
                  `Provided param "${D}" is an array but it is not repeatable (* or + modifiers)`
                );
              const B = Fi(j) ? j.join("/") : j;
              if (!B)
                if (V)
                  S.length < 2 &&
                    (v.endsWith("/") ? (v = v.slice(0, -1)) : (w = !0));
                else throw new Error(`Missing required param "${D}"`);
              v += B;
            }
        }
        return v || "/";
      }
      return { re: l, score: n, keys: a, parse: u, stringify: p };
    }
    function q5(t, e) {
      let r = 0;
      for (; r < t.length && r < e.length; ) {
        const n = e[r] - t[r];
        if (n) return n;
        r++;
      }
      return t.length < e.length
        ? t.length === 1 && t[0] === 80
          ? -1
          : 1
        : t.length > e.length
        ? e.length === 1 && e[0] === 80
          ? 1
          : -1
        : 0;
    }
    function K5(t, e) {
      let r = 0;
      const n = t.score,
        i = e.score;
      for (; r < n.length && r < i.length; ) {
        const a = q5(n[r], i[r]);
        if (a) return a;
        r++;
      }
      if (Math.abs(i.length - n.length) === 1) {
        if (xA(n)) return 1;
        if (xA(i)) return -1;
      }
      return i.length - n.length;
    }
    function xA(t) {
      const e = t[t.length - 1];
      return t.length > 0 && e[e.length - 1] < 0;
    }
    const $5 = { type: 0, value: "" },
      Z5 = /[a-zA-Z0-9_]/;
    function Q5(t) {
      if (!t) return [[]];
      if (t === "/") return [[$5]];
      if (!t.startsWith("/")) throw new Error(`Invalid path "${t}"`);
      function e(M) {
        throw new Error(`ERR (${r})/"${m}": ${M}`);
      }
      let r = 0,
        n = r;
      const i = [];
      let a;
      function l() {
        a && i.push(a), (a = []);
      }
      let u = 0,
        p,
        m = "",
        v = "";
      function w() {
        m &&
          (r === 0
            ? a.push({ type: 0, value: m })
            : r === 1 || r === 2 || r === 3
            ? (a.length > 1 &&
                (p === "*" || p === "+") &&
                e(
                  `A repeatable param (${m}) must be alone in its segment. eg: '/:ids+.`
                ),
              a.push({
                type: 1,
                value: m,
                regexp: v,
                repeatable: p === "*" || p === "+",
                optional: p === "*" || p === "?",
              }))
            : e("Invalid state to consume buffer"),
          (m = ""));
      }
      function S() {
        m += p;
      }
      for (; u < t.length; ) {
        if (((p = t[u++]), p === "\\" && r !== 2)) {
          (n = r), (r = 4);
          continue;
        }
        switch (r) {
          case 0:
            p === "/" ? (m && w(), l()) : p === ":" ? (w(), (r = 1)) : S();
            break;
          case 4:
            S(), (r = n);
            break;
          case 1:
            p === "("
              ? (r = 2)
              : Z5.test(p)
              ? S()
              : (w(), (r = 0), p !== "*" && p !== "?" && p !== "+" && u--);
            break;
          case 2:
            p === ")"
              ? v[v.length - 1] == "\\"
                ? (v = v.slice(0, -1) + p)
                : (r = 3)
              : (v += p);
            break;
          case 3:
            w(), (r = 0), p !== "*" && p !== "?" && p !== "+" && u--, (v = "");
            break;
          default:
            e("Unknown state");
            break;
        }
      }
      return (
        r === 2 && e(`Unfinished custom RegExp for param "${m}"`), w(), l(), i
      );
    }
    function J5(t, e, r) {
      const n = V5(Q5(t.path), r),
        i = tr(n, { record: t, parent: e, children: [], alias: [] });
      return (
        e && !i.record.aliasOf == !e.record.aliasOf && e.children.push(i), i
      );
    }
    function eF(t, e) {
      const r = [],
        n = new Map();
      e = _A({ strict: !1, end: !0, sensitive: !1 }, e);
      function i(v) {
        return n.get(v);
      }
      function a(v, w, S) {
        const M = !S,
          D = tF(v);
        D.aliasOf = S && S.record;
        const z = _A(e, v),
          V = [D];
        if ("alias" in v) {
          const ae = typeof v.alias == "string" ? [v.alias] : v.alias;
          for (const re of ae)
            V.push(
              tr({}, D, {
                components: S ? S.record.components : D.components,
                path: re,
                aliasOf: S ? S.record : D,
              })
            );
        }
        let j, B;
        for (const ae of V) {
          const { path: re } = ae;
          if (w && re[0] !== "/") {
            const K = w.record.path,
              fe = K[K.length - 1] === "/" ? "" : "/";
            ae.path = w.record.path + (re && fe + re);
          }
          if (
            ((j = J5(ae, w, z)),
            S
              ? S.alias.push(j)
              : ((B = B || j),
                B !== j && B.alias.push(j),
                M && v.name && !kA(j) && l(v.name)),
            D.children)
          ) {
            const K = D.children;
            for (let fe = 0; fe < K.length; fe++)
              a(K[fe], j, S && S.children[fe]);
          }
          (S = S || j),
            ((j.record.components && Object.keys(j.record.components).length) ||
              j.record.name ||
              j.record.redirect) &&
              p(j);
        }
        return B
          ? () => {
              l(B);
            }
          : zu;
      }
      function l(v) {
        if (mA(v)) {
          const w = n.get(v);
          w &&
            (n.delete(v),
            r.splice(r.indexOf(w), 1),
            w.children.forEach(l),
            w.alias.forEach(l));
        } else {
          const w = r.indexOf(v);
          w > -1 &&
            (r.splice(w, 1),
            v.record.name && n.delete(v.record.name),
            v.children.forEach(l),
            v.alias.forEach(l));
        }
      }
      function u() {
        return r;
      }
      function p(v) {
        let w = 0;
        for (
          ;
          w < r.length &&
          K5(v, r[w]) >= 0 &&
          (v.record.path !== r[w].record.path || !AA(v, r[w]));

        )
          w++;
        r.splice(w, 0, v), v.record.name && !kA(v) && n.set(v.record.name, v);
      }
      function m(v, w) {
        let S,
          M = {},
          D,
          z;
        if ("name" in v && v.name) {
          if (((S = n.get(v.name)), !S)) throw rc(1, { location: v });
          (z = S.record.name),
            (M = tr(
              wA(
                w.params,
                S.keys.filter((B) => !B.optional).map((B) => B.name)
              ),
              v.params &&
                wA(
                  v.params,
                  S.keys.map((B) => B.name)
                )
            )),
            (D = S.stringify(M));
        } else if ("path" in v)
          (D = v.path),
            (S = r.find((B) => B.re.test(D))),
            S && ((M = S.parse(D)), (z = S.record.name));
        else {
          if (
            ((S = w.name ? n.get(w.name) : r.find((B) => B.re.test(w.path))),
            !S)
          )
            throw rc(1, { location: v, currentLocation: w });
          (z = S.record.name),
            (M = tr({}, w.params, v.params)),
            (D = S.stringify(M));
        }
        const V = [];
        let j = S;
        for (; j; ) V.unshift(j.record), (j = j.parent);
        return { name: z, path: D, params: M, matched: V, meta: nF(V) };
      }
      return (
        t.forEach((v) => a(v)),
        {
          addRoute: a,
          resolve: m,
          removeRoute: l,
          getRoutes: u,
          getRecordMatcher: i,
        }
      );
    }
    function wA(t, e) {
      const r = {};
      for (const n of e) n in t && (r[n] = t[n]);
      return r;
    }
    function tF(t) {
      return {
        path: t.path,
        redirect: t.redirect,
        name: t.name,
        meta: t.meta || {},
        aliasOf: void 0,
        beforeEnter: t.beforeEnter,
        props: rF(t),
        children: t.children || [],
        instances: {},
        leaveGuards: new Set(),
        updateGuards: new Set(),
        enterCallbacks: {},
        components:
          "components" in t
            ? t.components || null
            : t.component && { default: t.component },
      };
    }
    function rF(t) {
      const e = {},
        r = t.props || !1;
      if ("component" in t) e.default = r;
      else for (const n in t.components) e[n] = typeof r == "object" ? r[n] : r;
      return e;
    }
    function kA(t) {
      for (; t; ) {
        if (t.record.aliasOf) return !0;
        t = t.parent;
      }
      return !1;
    }
    function nF(t) {
      return t.reduce((e, r) => tr(e, r.meta), {});
    }
    function _A(t, e) {
      const r = {};
      for (const n in t) r[n] = n in e ? e[n] : t[n];
      return r;
    }
    function AA(t, e) {
      return e.children.some((r) => r === t || AA(t, r));
    }
    const CA = /#/g,
      iF = /&/g,
      sF = /\//g,
      aF = /=/g,
      oF = /\?/g,
      SA = /\+/g,
      lF = /%5B/g,
      cF = /%5D/g,
      EA = /%5E/g,
      uF = /%60/g,
      IA = /%7B/g,
      hF = /%7C/g,
      TA = /%7D/g,
      dF = /%20/g;
    function l0(t) {
      return encodeURI("" + t)
        .replace(hF, "|")
        .replace(lF, "[")
        .replace(cF, "]");
    }
    function fF(t) {
      return l0(t).replace(IA, "{").replace(TA, "}").replace(EA, "^");
    }
    function c0(t) {
      return l0(t)
        .replace(SA, "%2B")
        .replace(dF, "+")
        .replace(CA, "%23")
        .replace(iF, "%26")
        .replace(uF, "`")
        .replace(IA, "{")
        .replace(TA, "}")
        .replace(EA, "^");
    }
    function pF(t) {
      return c0(t).replace(aF, "%3D");
    }
    function gF(t) {
      return l0(t).replace(CA, "%23").replace(oF, "%3F");
    }
    function mF(t) {
      return t == null ? "" : gF(t).replace(sF, "%2F");
    }
    function _f(t) {
      try {
        return decodeURIComponent("" + t);
      } catch {}
      return "" + t;
    }
    function vF(t) {
      const e = {};
      if (t === "" || t === "?") return e;
      const r = (t[0] === "?" ? t.slice(1) : t).split("&");
      for (let n = 0; n < r.length; ++n) {
        const i = r[n].replace(SA, " "),
          a = i.indexOf("="),
          l = _f(a < 0 ? i : i.slice(0, a)),
          u = a < 0 ? null : _f(i.slice(a + 1));
        if (l in e) {
          let p = e[l];
          Fi(p) || (p = e[l] = [p]), p.push(u);
        } else e[l] = u;
      }
      return e;
    }
    function PA(t) {
      let e = "";
      for (let r in t) {
        const n = t[r];
        if (((r = pF(r)), n == null)) {
          n !== void 0 && (e += (e.length ? "&" : "") + r);
          continue;
        }
        (Fi(n) ? n.map((i) => i && c0(i)) : [n && c0(n)]).forEach((i) => {
          i !== void 0 &&
            ((e += (e.length ? "&" : "") + r), i != null && (e += "=" + i));
        });
      }
      return e;
    }
    function yF(t) {
      const e = {};
      for (const r in t) {
        const n = t[r];
        n !== void 0 &&
          (e[r] = Fi(n)
            ? n.map((i) => (i == null ? null : "" + i))
            : n == null
            ? n
            : "" + n);
      }
      return e;
    }
    const bF = Symbol(""),
      OA = Symbol(""),
      Af = Symbol(""),
      LA = Symbol(""),
      u0 = Symbol("");
    function Wu() {
      let t = [];
      function e(n) {
        return (
          t.push(n),
          () => {
            const i = t.indexOf(n);
            i > -1 && t.splice(i, 1);
          }
        );
      }
      function r() {
        t = [];
      }
      return { add: e, list: () => t.slice(), reset: r };
    }
    function Ua(t, e, r, n, i) {
      const a = n && (n.enterCallbacks[i] = n.enterCallbacks[i] || []);
      return () =>
        new Promise((l, u) => {
          const p = (w) => {
              w === !1
                ? u(rc(4, { from: r, to: e }))
                : w instanceof Error
                ? u(w)
                : j5(w)
                ? u(rc(2, { from: e, to: w }))
                : (a &&
                    n.enterCallbacks[i] === a &&
                    typeof w == "function" &&
                    a.push(w),
                  l());
            },
            m = t.call(n && n.instances[i], e, r, p);
          let v = Promise.resolve(m);
          t.length < 3 && (v = v.then(p)), v.catch((w) => u(w));
        });
    }
    function h0(t, e, r, n) {
      const i = [];
      for (const a of t)
        for (const l in a.components) {
          let u = a.components[l];
          if (!(e !== "beforeRouteEnter" && !a.instances[l]))
            if (xF(u)) {
              const p = (u.__vccOpts || u)[e];
              p && i.push(Ua(p, r, n, a, l));
            } else {
              let p = u();
              i.push(() =>
                p.then((m) => {
                  if (!m)
                    return Promise.reject(
                      new Error(
                        `Couldn't resolve component "${l}" at "${a.path}"`
                      )
                    );
                  const v = S5(m) ? m.default : m;
                  a.components[l] = v;
                  const w = (v.__vccOpts || v)[e];
                  return w && Ua(w, r, n, a, l)();
                })
              );
            }
        }
      return i;
    }
    function xF(t) {
      return (
        typeof t == "object" ||
        "displayName" in t ||
        "props" in t ||
        "__vccOpts" in t
      );
    }
    function MA(t) {
      const e = Lr(Af),
        r = Lr(LA),
        n = He(() => e.resolve(Xe(t.to))),
        i = He(() => {
          const { matched: p } = n.value,
            { length: m } = p,
            v = p[m - 1],
            w = r.matched;
          if (!v || !w.length) return -1;
          const S = w.findIndex(tc.bind(null, v));
          if (S > -1) return S;
          const M = RA(p[m - 2]);
          return m > 1 && RA(v) === M && w[w.length - 1].path !== M
            ? w.findIndex(tc.bind(null, p[m - 2]))
            : S;
        }),
        a = He(() => i.value > -1 && AF(r.params, n.value.params)),
        l = He(
          () =>
            i.value > -1 &&
            i.value === r.matched.length - 1 &&
            hA(r.params, n.value.params)
        );
      function u(p = {}) {
        return _F(p)
          ? e[Xe(t.replace) ? "replace" : "push"](Xe(t.to)).catch(zu)
          : Promise.resolve();
      }
      return {
        route: n,
        href: He(() => n.value.href),
        isActive: a,
        isExactActive: l,
        navigate: u,
      };
    }
    const wF = dt({
        name: "RouterLink",
        compatConfig: { MODE: 3 },
        props: {
          to: { type: [String, Object], required: !0 },
          replace: Boolean,
          activeClass: String,
          exactActiveClass: String,
          custom: Boolean,
          ariaCurrentValue: { type: String, default: "page" },
        },
        useLink: MA,
        setup(t, { slots: e }) {
          const r = gu(MA(t)),
            { options: n } = Lr(Af),
            i = He(() => ({
              [NA(t.activeClass, n.linkActiveClass, "router-link-active")]:
                r.isActive,
              [NA(
                t.exactActiveClass,
                n.linkExactActiveClass,
                "router-link-exact-active"
              )]: r.isExactActive,
            }));
          return () => {
            const a = e.default && e.default(r);
            return t.custom
              ? a
              : Vr(
                  "a",
                  {
                    "aria-current": r.isExactActive ? t.ariaCurrentValue : null,
                    href: r.href,
                    onClick: r.navigate,
                    class: i.value,
                  },
                  a
                );
          };
        },
      }),
      kF = wF;
    function _F(t) {
      if (
        !(t.metaKey || t.altKey || t.ctrlKey || t.shiftKey) &&
        !t.defaultPrevented &&
        !(t.button !== void 0 && t.button !== 0)
      ) {
        if (t.currentTarget && t.currentTarget.getAttribute) {
          const e = t.currentTarget.getAttribute("target");
          if (/\b_blank\b/i.test(e)) return;
        }
        return t.preventDefault && t.preventDefault(), !0;
      }
    }
    function AF(t, e) {
      for (const r in e) {
        const n = e[r],
          i = t[r];
        if (typeof n == "string") {
          if (n !== i) return !1;
        } else if (
          !Fi(i) ||
          i.length !== n.length ||
          n.some((a, l) => a !== i[l])
        )
          return !1;
      }
      return !0;
    }
    function RA(t) {
      return t ? (t.aliasOf ? t.aliasOf.path : t.path) : "";
    }
    const NA = (t, e, r) => t ?? e ?? r,
      CF = dt({
        name: "RouterView",
        inheritAttrs: !1,
        props: { name: { type: String, default: "default" }, route: Object },
        compatConfig: { MODE: 3 },
        setup(t, { attrs: e, slots: r }) {
          const n = Lr(u0),
            i = He(() => t.route || n.value),
            a = Lr(OA, 0),
            l = He(() => {
              let m = Xe(a);
              const { matched: v } = i.value;
              let w;
              for (; (w = v[m]) && !w.components; ) m++;
              return m;
            }),
            u = He(() => i.value.matched[l.value]);
          vn(
            OA,
            He(() => l.value + 1)
          ),
            vn(bF, u),
            vn(u0, i);
          const p = We();
          return (
            Or(
              () => [p.value, u.value, t.name],
              ([m, v, w], [S, M, D]) => {
                v &&
                  ((v.instances[w] = m),
                  M &&
                    M !== v &&
                    m &&
                    m === S &&
                    (v.leaveGuards.size || (v.leaveGuards = M.leaveGuards),
                    v.updateGuards.size || (v.updateGuards = M.updateGuards))),
                  m &&
                    v &&
                    (!M || !tc(v, M) || !S) &&
                    (v.enterCallbacks[w] || []).forEach((z) => z(m));
              },
              { flush: "post" }
            ),
            () => {
              const m = i.value,
                v = t.name,
                w = u.value,
                S = w && w.components[v];
              if (!S) return BA(r.default, { Component: S, route: m });
              const M = w.props[v],
                D = M
                  ? M === !0
                    ? m.params
                    : typeof M == "function"
                    ? M(m)
                    : M
                  : null,
                z = Vr(
                  S,
                  tr({}, D, e, {
                    onVnodeUnmounted: (V) => {
                      V.component.isUnmounted && (w.instances[v] = null);
                    },
                    ref: p,
                  })
                );
              return BA(r.default, { Component: z, route: m }) || z;
            }
          );
        },
      });
    function BA(t, e) {
      if (!t) return null;
      const r = t(e);
      return r.length === 1 ? r[0] : r;
    }
    const SF = CF;
    function EF(t) {
      const e = eF(t.routes, t),
        r = t.parseQuery || vF,
        n = t.stringifyQuery || PA,
        i = t.history,
        a = Wu(),
        l = Wu(),
        u = Wu(),
        p = S1(Ha);
      let m = Ha;
      ec &&
        t.scrollBehavior &&
        "scrollRestoration" in history &&
        (history.scrollRestoration = "manual");
      const v = s0.bind(null, (me) => "" + me),
        w = s0.bind(null, mF),
        S = s0.bind(null, _f);
      function M(me, xe) {
        let Se, Ie;
        return (
          mA(me) ? ((Se = e.getRecordMatcher(me)), (Ie = xe)) : (Ie = me),
          e.addRoute(Ie, Se)
        );
      }
      function D(me) {
        const xe = e.getRecordMatcher(me);
        xe && e.removeRoute(xe);
      }
      function z() {
        return e.getRoutes().map((me) => me.record);
      }
      function V(me) {
        return !!e.getRecordMatcher(me);
      }
      function j(me, xe) {
        if (((xe = tr({}, xe || p.value)), typeof me == "string")) {
          const Q = a0(r, me, xe.path),
            ge = e.resolve({ path: Q.path }, xe),
            I = i.createHref(Q.fullPath);
          return tr(Q, ge, {
            params: S(ge.params),
            hash: _f(Q.hash),
            redirectedFrom: void 0,
            href: I,
          });
        }
        let Se;
        if ("path" in me)
          Se = tr({}, me, { path: a0(r, me.path, xe.path).path });
        else {
          const Q = tr({}, me.params);
          for (const ge in Q) Q[ge] == null && delete Q[ge];
          (Se = tr({}, me, { params: w(Q) })), (xe.params = w(xe.params));
        }
        const Ie = e.resolve(Se, xe),
          Ne = me.hash || "";
        Ie.params = v(S(Ie.params));
        const oe = T5(n, tr({}, me, { hash: fF(Ne), path: Ie.path })),
          W = i.createHref(oe);
        return tr(
          {
            fullPath: oe,
            hash: Ne,
            query: n === PA ? yF(me.query) : me.query || {},
          },
          Ie,
          { redirectedFrom: void 0, href: W }
        );
      }
      function B(me) {
        return typeof me == "string" ? a0(r, me, p.value.path) : tr({}, me);
      }
      function ae(me, xe) {
        if (m !== me) return rc(8, { from: xe, to: me });
      }
      function re(me) {
        return ye(me);
      }
      function K(me) {
        return re(tr(B(me), { replace: !0 }));
      }
      function fe(me) {
        const xe = me.matched[me.matched.length - 1];
        if (xe && xe.redirect) {
          const { redirect: Se } = xe;
          let Ie = typeof Se == "function" ? Se(me) : Se;
          return (
            typeof Ie == "string" &&
              ((Ie =
                Ie.includes("?") || Ie.includes("#")
                  ? (Ie = B(Ie))
                  : { path: Ie }),
              (Ie.params = {})),
            tr(
              {
                query: me.query,
                hash: me.hash,
                params: "path" in Ie ? {} : me.params,
              },
              Ie
            )
          );
        }
      }
      function ye(me, xe) {
        const Se = (m = j(me)),
          Ie = p.value,
          Ne = me.state,
          oe = me.force,
          W = me.replace === !0,
          Q = fe(Se);
        if (Q)
          return ye(
            tr(B(Q), {
              state: typeof Q == "object" ? tr({}, Ne, Q.state) : Ne,
              force: oe,
              replace: W,
            }),
            xe || Se
          );
        const ge = Se;
        ge.redirectedFrom = xe;
        let I;
        return (
          !oe &&
            P5(n, Ie, Se) &&
            ((I = rc(16, { to: ge, from: Ie })), T(Ie, Ie, !0, !1)),
          (I ? Promise.resolve(I) : be(ge, Ie))
            .catch((R) => (Gs(R) ? (Gs(R, 2) ? R : J(R)) : ie(R, ge, Ie)))
            .then((R) => {
              if (R) {
                if (Gs(R, 2))
                  return ye(
                    tr({ replace: W }, B(R.to), {
                      state:
                        typeof R.to == "object" ? tr({}, Ne, R.to.state) : Ne,
                      force: oe,
                    }),
                    xe || ge
                  );
              } else R = ke(ge, Ie, !0, W, Ne);
              return Ce(ge, Ie, R), R;
            })
        );
      }
      function pe(me, xe) {
        const Se = ae(me, xe);
        return Se ? Promise.reject(Se) : Promise.resolve();
      }
      function _e(me) {
        const xe = Me.values().next().value;
        return xe && typeof xe.runWithContext == "function"
          ? xe.runWithContext(me)
          : me();
      }
      function be(me, xe) {
        let Se;
        const [Ie, Ne, oe] = IF(me, xe);
        Se = h0(Ie.reverse(), "beforeRouteLeave", me, xe);
        for (const Q of Ie)
          Q.leaveGuards.forEach((ge) => {
            Se.push(Ua(ge, me, xe));
          });
        const W = pe.bind(null, me, xe);
        return (
          Se.push(W),
          Ee(Se)
            .then(() => {
              Se = [];
              for (const Q of a.list()) Se.push(Ua(Q, me, xe));
              return Se.push(W), Ee(Se);
            })
            .then(() => {
              Se = h0(Ne, "beforeRouteUpdate", me, xe);
              for (const Q of Ne)
                Q.updateGuards.forEach((ge) => {
                  Se.push(Ua(ge, me, xe));
                });
              return Se.push(W), Ee(Se);
            })
            .then(() => {
              Se = [];
              for (const Q of oe)
                if (Q.beforeEnter)
                  if (Fi(Q.beforeEnter))
                    for (const ge of Q.beforeEnter) Se.push(Ua(ge, me, xe));
                  else Se.push(Ua(Q.beforeEnter, me, xe));
              return Se.push(W), Ee(Se);
            })
            .then(
              () => (
                me.matched.forEach((Q) => (Q.enterCallbacks = {})),
                (Se = h0(oe, "beforeRouteEnter", me, xe)),
                Se.push(W),
                Ee(Se)
              )
            )
            .then(() => {
              Se = [];
              for (const Q of l.list()) Se.push(Ua(Q, me, xe));
              return Se.push(W), Ee(Se);
            })
            .catch((Q) => (Gs(Q, 8) ? Q : Promise.reject(Q)))
        );
      }
      function Ce(me, xe, Se) {
        u.list().forEach((Ie) => _e(() => Ie(me, xe, Se)));
      }
      function ke(me, xe, Se, Ie, Ne) {
        const oe = ae(me, xe);
        if (oe) return oe;
        const W = xe === Ha,
          Q = ec ? history.state : {};
        Se &&
          (Ie || W
            ? i.replace(me.fullPath, tr({ scroll: W && Q && Q.scroll }, Ne))
            : i.push(me.fullPath, Ne)),
          (p.value = me),
          T(me, xe, Se, W),
          J();
      }
      let E;
      function P() {
        E ||
          (E = i.listen((me, xe, Se) => {
            if (!X.listening) return;
            const Ie = j(me),
              Ne = fe(Ie);
            if (Ne) {
              ye(tr(Ne, { replace: !0 }), Ie).catch(zu);
              return;
            }
            m = Ie;
            const oe = p.value;
            ec && D5(fA(oe.fullPath, Se.delta), kf()),
              be(Ie, oe)
                .catch((W) =>
                  Gs(W, 12)
                    ? W
                    : Gs(W, 2)
                    ? (ye(W.to, Ie)
                        .then((Q) => {
                          Gs(Q, 20) &&
                            !Se.delta &&
                            Se.type === Hu.pop &&
                            i.go(-1, !1);
                        })
                        .catch(zu),
                      Promise.reject())
                    : (Se.delta && i.go(-Se.delta, !1), ie(W, Ie, oe))
                )
                .then((W) => {
                  (W = W || ke(Ie, oe, !1)),
                    W &&
                      (Se.delta && !Gs(W, 8)
                        ? i.go(-Se.delta, !1)
                        : Se.type === Hu.pop && Gs(W, 20) && i.go(-1, !1)),
                    Ce(Ie, oe, W);
                })
                .catch(zu);
          }));
      }
      let L = Wu(),
        U = Wu(),
        Y;
      function ie(me, xe, Se) {
        J(me);
        const Ie = U.list();
        return (
          Ie.length ? Ie.forEach((Ne) => Ne(me, xe, Se)) : console.error(me),
          Promise.reject(me)
        );
      }
      function le() {
        return Y && p.value !== Ha
          ? Promise.resolve()
          : new Promise((me, xe) => {
              L.add([me, xe]);
            });
      }
      function J(me) {
        return (
          Y ||
            ((Y = !me),
            P(),
            L.list().forEach(([xe, Se]) => (me ? Se(me) : xe())),
            L.reset()),
          me
        );
      }
      function T(me, xe, Se, Ie) {
        const { scrollBehavior: Ne } = t;
        if (!ec || !Ne) return Promise.resolve();
        const oe =
          (!Se && z5(fA(me.fullPath, 0))) ||
          ((Ie || !Se) && history.state && history.state.scroll) ||
          null;
        return Li()
          .then(() => Ne(me, xe, oe))
          .then((W) => W && F5(W))
          .catch((W) => ie(W, me, xe));
      }
      const Z = (me) => i.go(me);
      let Oe;
      const Me = new Set(),
        X = {
          currentRoute: p,
          listening: !0,
          addRoute: M,
          removeRoute: D,
          hasRoute: V,
          getRoutes: z,
          resolve: j,
          options: t,
          push: re,
          replace: K,
          go: Z,
          back: () => Z(-1),
          forward: () => Z(1),
          beforeEach: a.add,
          beforeResolve: l.add,
          afterEach: u.add,
          onError: U.add,
          isReady: le,
          install(me) {
            const xe = this;
            me.component("RouterLink", kF),
              me.component("RouterView", SF),
              (me.config.globalProperties.$router = xe),
              Object.defineProperty(me.config.globalProperties, "$route", {
                enumerable: !0,
                get: () => Xe(p),
              }),
              ec &&
                !Oe &&
                p.value === Ha &&
                ((Oe = !0), re(i.location).catch((Ne) => {}));
            const Se = {};
            for (const Ne in Ha)
              Object.defineProperty(Se, Ne, {
                get: () => p.value[Ne],
                enumerable: !0,
              });
            me.provide(Af, xe), me.provide(LA, w1(Se)), me.provide(u0, p);
            const Ie = me.unmount;
            Me.add(me),
              (me.unmount = function () {
                Me.delete(me),
                  Me.size < 1 &&
                    ((m = Ha),
                    E && E(),
                    (E = null),
                    (p.value = Ha),
                    (Oe = !1),
                    (Y = !1)),
                  Ie();
              });
          },
        };
      function Ee(me) {
        return me.reduce((xe, Se) => xe.then(() => _e(Se)), Promise.resolve());
      }
      return X;
    }
    function IF(t, e) {
      const r = [],
        n = [],
        i = [],
        a = Math.max(e.matched.length, t.matched.length);
      for (let l = 0; l < a; l++) {
        const u = e.matched[l];
        u && (t.matched.find((m) => tc(m, u)) ? n.push(u) : r.push(u));
        const p = t.matched[l];
        p && (e.matched.find((m) => tc(m, p)) || i.push(p));
      }
      return [r, n, i];
    }
    function TF() {
      return Lr(Af);
    }
    const PF = {},
      OF = { class: "text-lg font-bold" };
    function LF(t, e) {
      return (
        je(), et("div", null, [ve("p", OF, Bt(t.$t("$.page_not_found")), 1)])
      );
    }
    const MF = Jl(PF, [["render", LF]]),
      FA = "/assets/logo-dc6cf1d2.svg";
    function Cf(t, e) {
      return (
        je(),
        et(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            fill: "none",
            viewBox: "0 0 24 24",
            "stroke-width": "1.5",
            stroke: "currentColor",
            "aria-hidden": "true",
          },
          [
            ve("path", {
              "stroke-linecap": "round",
              "stroke-linejoin": "round",
              d: "M19.5 13.5L12 21m0 0l-7.5-7.5M12 21V3",
            }),
          ]
        )
      );
    }
    function RF(t, e) {
      return (
        je(),
        et(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            fill: "none",
            viewBox: "0 0 24 24",
            "stroke-width": "1.5",
            stroke: "currentColor",
            "aria-hidden": "true",
          },
          [
            ve("path", {
              "stroke-linecap": "round",
              "stroke-linejoin": "round",
              d: "M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5",
            }),
          ]
        )
      );
    }
    function NF(t, e) {
      return (
        je(),
        et(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            fill: "none",
            viewBox: "0 0 24 24",
            "stroke-width": "1.5",
            stroke: "currentColor",
            "aria-hidden": "true",
          },
          [
            ve("path", {
              "stroke-linecap": "round",
              "stroke-linejoin": "round",
              d: "M9.75 3.104v5.714a2.25 2.25 0 01-.659 1.591L5 14.5M9.75 3.104c-.251.023-.501.05-.75.082m.75-.082a24.301 24.301 0 014.5 0m0 0v5.714c0 .597.237 1.17.659 1.591L19.8 15.3M14.25 3.104c.251.023.501.05.75.082M19.8 15.3l-1.57.393A9.065 9.065 0 0112 15a9.065 9.065 0 00-6.23-.693L5 14.5m14.8.8l1.402 1.402c1.232 1.232.65 3.318-1.067 3.611A48.309 48.309 0 0112 21c-2.773 0-5.491-.235-8.135-.687-1.718-.293-2.3-2.379-1.067-3.61L5 14.5",
            }),
          ]
        )
      );
    }
    function BF(t, e) {
      return (
        je(),
        et(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            fill: "none",
            viewBox: "0 0 24 24",
            "stroke-width": "1.5",
            stroke: "currentColor",
            "aria-hidden": "true",
          },
          [
            ve("path", {
              "stroke-linecap": "round",
              "stroke-linejoin": "round",
              d: "M10.125 2.25h-4.5c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125v-9M10.125 2.25h.375a9 9 0 019 9v.375M10.125 2.25A3.375 3.375 0 0113.5 5.625v1.5c0 .621.504 1.125 1.125 1.125h1.5a3.375 3.375 0 013.375 3.375M9 15l2.25 2.25L15 12",
            }),
          ]
        )
      );
    }
    function DA(t, e) {
      return (
        je(),
        et(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            fill: "none",
            viewBox: "0 0 24 24",
            "stroke-width": "1.5",
            stroke: "currentColor",
            "aria-hidden": "true",
          },
          [
            ve("path", {
              "stroke-linecap": "round",
              "stroke-linejoin": "round",
              d: "M15.182 16.318A4.486 4.486 0 0012.016 15a4.486 4.486 0 00-3.198 1.318M21 12a9 9 0 11-18 0 9 9 0 0118 0zM9.75 9.75c0 .414-.168.75-.375.75S9 10.164 9 9.75 9.168 9 9.375 9s.375.336.375.75zm-.375 0h.008v.015h-.008V9.75zm5.625 0c0 .414-.168.75-.375.75s-.375-.336-.375-.75.168-.75.375-.75.375.336.375.75zm-.375 0h.008v.015h-.008V9.75z",
            }),
          ]
        )
      );
    }
    function zA(t, e) {
      return (
        je(),
        et(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            fill: "none",
            viewBox: "0 0 24 24",
            "stroke-width": "1.5",
            stroke: "currentColor",
            "aria-hidden": "true",
          },
          [
            ve("path", {
              "stroke-linecap": "round",
              "stroke-linejoin": "round",
              d: "M15.182 15.182a4.5 4.5 0 01-6.364 0M21 12a9 9 0 11-18 0 9 9 0 0118 0zM9.75 9.75c0 .414-.168.75-.375.75S9 10.164 9 9.75 9.168 9 9.375 9s.375.336.375.75zm-.375 0h.008v.015h-.008V9.75zm5.625 0c0 .414-.168.75-.375.75s-.375-.336-.375-.75.168-.75.375-.75.375.336.375.75zm-.375 0h.008v.015h-.008V9.75z",
            }),
          ]
        )
      );
    }
    function FF(t, e) {
      return (
        je(),
        et(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            fill: "none",
            viewBox: "0 0 24 24",
            "stroke-width": "1.5",
            stroke: "currentColor",
            "aria-hidden": "true",
          },
          [
            ve("path", {
              "stroke-linecap": "round",
              "stroke-linejoin": "round",
              d: "M9 6.75V15m6-6v8.25m.503 3.498l4.875-2.437c.381-.19.622-.58.622-1.006V4.82c0-.836-.88-1.38-1.628-1.006l-3.869 1.934c-.317.159-.69.159-1.006 0L9.503 3.252a1.125 1.125 0 00-1.006 0L3.622 5.689C3.24 5.88 3 6.27 3 6.695V19.18c0 .836.88 1.38 1.628 1.006l3.869-1.934c.317-.159.69-.159 1.006 0l4.994 2.497c.317.158.69.158 1.006 0z",
            }),
          ]
        )
      );
    }
    function DF(t, e) {
      return (
        je(),
        et(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            fill: "none",
            viewBox: "0 0 24 24",
            "stroke-width": "1.5",
            stroke: "currentColor",
            "aria-hidden": "true",
          },
          [
            ve("path", {
              "stroke-linecap": "round",
              "stroke-linejoin": "round",
              d: "M3.75 3v11.25A2.25 2.25 0 006 16.5h2.25M3.75 3h-1.5m1.5 0h16.5m0 0h1.5m-1.5 0v11.25A2.25 2.25 0 0118 16.5h-2.25m-7.5 0h7.5m-7.5 0l-1 3m8.5-3l1 3m0 0l.5 1.5m-.5-1.5h-9.5m0 0l-.5 1.5m.75-9l3-3 2.148 2.148A12.061 12.061 0 0116.5 7.605",
            }),
          ]
        )
      );
    }
    function HA(t, e) {
      return (
        je(),
        et(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            fill: "none",
            viewBox: "0 0 24 24",
            "stroke-width": "1.5",
            stroke: "currentColor",
            "aria-hidden": "true",
          },
          [
            ve("path", {
              "stroke-linecap": "round",
              "stroke-linejoin": "round",
              d: "M9.879 7.519c1.171-1.025 3.071-1.025 4.242 0 1.172 1.025 1.172 2.687 0 3.712-.203.179-.43.326-.67.442-.745.361-1.45.999-1.45 1.827v.75M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9 5.25h.008v.008H12v-.008z",
            }),
          ]
        )
      );
    }
    function zF(t, e) {
      return (
        je(),
        et(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            fill: "none",
            viewBox: "0 0 24 24",
            "stroke-width": "1.5",
            stroke: "currentColor",
            "aria-hidden": "true",
          },
          [
            ve("path", {
              "stroke-linecap": "round",
              "stroke-linejoin": "round",
              d: "M15.59 14.37a6 6 0 01-5.84 7.38v-4.8m5.84-2.58a14.98 14.98 0 006.16-12.12A14.98 14.98 0 009.631 8.41m5.96 5.96a14.926 14.926 0 01-5.841 2.58m-.119-8.54a6 6 0 00-7.381 5.84h4.8m2.581-5.84a14.927 14.927 0 00-2.58 5.84m2.699 2.7c-.103.021-.207.041-.311.06a15.09 15.09 0 01-2.448-2.448 14.9 14.9 0 01.06-.312m-2.24 2.39a4.493 4.493 0 00-1.757 4.306 4.493 4.493 0 004.306-1.758M16.5 9a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z",
            }),
          ]
        )
      );
    }
    function HF(t, e) {
      return (
        je(),
        et(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            fill: "none",
            viewBox: "0 0 24 24",
            "stroke-width": "1.5",
            stroke: "currentColor",
            "aria-hidden": "true",
          },
          [
            ve("path", {
              "stroke-linecap": "round",
              "stroke-linejoin": "round",
              d: "M9.348 14.651a3.75 3.75 0 010-5.303m5.304 0a3.75 3.75 0 010 5.303m-7.425 2.122a6.75 6.75 0 010-9.546m9.546 0a6.75 6.75 0 010 9.546M5.106 18.894c-3.808-3.808-3.808-9.98 0-13.789m13.788 0c3.808 3.808 3.808 9.981 0 13.79M12 12h.008v.007H12V12zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z",
            }),
          ]
        )
      );
    }
    function UF(t, e) {
      return (
        je(),
        et(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            fill: "none",
            viewBox: "0 0 24 24",
            "stroke-width": "1.5",
            stroke: "currentColor",
            "aria-hidden": "true",
          },
          [
            ve("path", {
              "stroke-linecap": "round",
              "stroke-linejoin": "round",
              d: "M3.375 19.5h17.25m-17.25 0a1.125 1.125 0 01-1.125-1.125M3.375 19.5h7.5c.621 0 1.125-.504 1.125-1.125m-9.75 0V5.625m0 12.75v-1.5c0-.621.504-1.125 1.125-1.125m18.375 2.625V5.625m0 12.75c0 .621-.504 1.125-1.125 1.125m1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125m0 3.75h-7.5A1.125 1.125 0 0112 18.375m9.75-12.75c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125m19.5 0v1.5c0 .621-.504 1.125-1.125 1.125M2.25 5.625v1.5c0 .621.504 1.125 1.125 1.125m0 0h17.25m-17.25 0h7.5c.621 0 1.125.504 1.125 1.125M3.375 8.25c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125m17.25-3.75h-7.5c-.621 0-1.125.504-1.125 1.125m8.625-1.125c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125m-17.25 0h7.5m-7.5 0c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125M12 10.875v-1.5m0 1.5c0 .621-.504 1.125-1.125 1.125M12 10.875c0 .621.504 1.125 1.125 1.125m-2.25 0c.621 0 1.125.504 1.125 1.125M13.125 12h7.5m-7.5 0c-.621 0-1.125.504-1.125 1.125M20.625 12c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125m-17.25 0h7.5M12 14.625v-1.5m0 1.5c0 .621-.504 1.125-1.125 1.125M12 14.625c0 .621.504 1.125 1.125 1.125m-2.25 0c.621 0 1.125.504 1.125 1.125m0 1.5v-1.5m0 0c0-.621.504-1.125 1.125-1.125m0 0h7.5",
            }),
          ]
        )
      );
    }
    function Sf(t, e) {
      return (
        je(),
        et(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            fill: "none",
            viewBox: "0 0 24 24",
            "stroke-width": "1.5",
            stroke: "currentColor",
            "aria-hidden": "true",
          },
          [
            ve("path", {
              "stroke-linecap": "round",
              "stroke-linejoin": "round",
              d: "M21 12a2.25 2.25 0 00-2.25-2.25H15a3 3 0 11-6 0H5.25A2.25 2.25 0 003 12m18 0v6a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 18v-6m18 0V9M3 12V9m18 0a2.25 2.25 0 00-2.25-2.25H5.25A2.25 2.25 0 003 9m18 0V6a2.25 2.25 0 00-2.25-2.25H5.25A2.25 2.25 0 003 6v3",
            }),
          ]
        )
      );
    }
    function UA(t, e) {
      return (
        je(),
        et(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            fill: "none",
            viewBox: "0 0 24 24",
            "stroke-width": "1.5",
            stroke: "currentColor",
            "aria-hidden": "true",
          },
          [
            ve("path", {
              "stroke-linecap": "round",
              "stroke-linejoin": "round",
              d: "M6 18L18 6M6 6l12 12",
            }),
          ]
        )
      );
    }
    const WF = "1.1.0",
      XF = {
        class:
          "flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0 z-99",
      },
      jF = ve(
        "span",
        {
          "aria-hidden": "true",
          class: "hidden sm:inline-block sm:align-middle sm:h-screen",
        },
        " \u200B ",
        -1
      ),
      GF = { class: "absolute top-2 md:top-8 w-full mx-auto" },
      YF = ["onClick"],
      VF = { class: "px-3 sm:px-5" },
      d0 = dt({
        __name: "BaseModal",
        props: {
          hasCloseButton: { type: Boolean, default: !0 },
          isDismissible: { type: Boolean, default: !0 },
          isVisible: { type: Boolean },
          classes: { default: "" },
          overlayClick: { type: Boolean, default: !1 },
          initialFocus: { default: null },
        },
        emits: ["close", "didDismiss"],
        setup(t, { emit: e }) {
          const r = t,
            n = eR(),
            i = He(() => (r.overlayClick ? "" : "pointer-events-none"));
          function a() {
            e("didDismiss");
          }
          return (l, u) => (
            je(),
            jt(fv, { to: "body" }, [
              $e(
                Xe(Du),
                {
                  show: l.isVisible,
                  appear: "",
                  as: "template",
                  "data-test-base-modal-transition-root": "",
                  onClick:
                    u[2] ||
                    (u[2] = (p) => (l.isDismissible ? e("close") : () => {})),
                },
                {
                  default: Ft(() => [
                    $e(
                      Xe(Z_),
                      {
                        "initial-focus": l.initialFocus,
                        as: "div",
                        class:
                          "fixed z-99 inset-0 overflow-y-auto mt-18 sm:mt-0",
                        "data-test-base-modal-dialog": "",
                        onClose: u[1] || (u[1] = (p) => e("close")),
                      },
                      {
                        default: Ft(() => [
                          ve("div", XF, [
                            $e(
                              Xe(Ql),
                              {
                                as: "template",
                                enter: "ease-out duration-200",
                                "enter-from": "opacity-0",
                                "enter-to": "opacity-100",
                                leave: "ease-in duration-100",
                                "leave-from": "opacity-100",
                                "leave-to": "opacity-0",
                              },
                              {
                                default: Ft(() => [
                                  $e(
                                    Xe(NB),
                                    {
                                      class: ot([
                                        i.value,
                                        "fixed inset-0 bg-gray-900 bg-opacity-70 transition-opacity",
                                      ]),
                                      "data-test-base-modal-overlay": "",
                                    },
                                    null,
                                    8,
                                    ["class"]
                                  ),
                                ]),
                                _: 1,
                              }
                            ),
                            jF,
                            $e(
                              Xe(Ql),
                              {
                                as: "template",
                                enter: "ease-out duration-200",
                                "enter-from":
                                  "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95",
                                "enter-to":
                                  "opacity-100 translate-y-0 sm:scale-100",
                                leave: "ease-in duration-100",
                                "leave-from":
                                  "opacity-100 translate-y-0 sm:scale-100",
                                "leave-to":
                                  "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95",
                                onAfterLeave: a,
                              },
                              {
                                default: Ft(() => [
                                  ve("div", GF, [
                                    ve(
                                      "div",
                                      {
                                        class: ot([
                                          l.classes,
                                          "inline-block align-bottom bg-gray-700 text-white rounded pt-5 z-20 text-left overflow-hidden shadow-xl transform transition-all sm:align-middle sm:max-w-2xl sm:w-full",
                                        ]),
                                        "data-test-base-modal-content-wrapper":
                                          "",
                                        onClick: s3(() => {}, ["stop"]),
                                      },
                                      [
                                        l.isDismissible && l.hasCloseButton
                                          ? (je(),
                                            et(
                                              "div",
                                              {
                                                key: 0,
                                                class:
                                                  "absolute right-2 top-1 cursor-pointer",
                                                onClick:
                                                  u[0] ||
                                                  (u[0] = (p) => e("close")),
                                              },
                                              [$e(Xe(UA), { class: "w-5 h-5" })]
                                            ))
                                          : Yr("", !0),
                                        ve("div", VF, [
                                          Oo(l.$slots, "default"),
                                        ]),
                                        ve(
                                          "div",
                                          {
                                            class: ot([
                                              { "mb-8": Xe(n).buttons },
                                              "mt-5 sm:mt-8 px-5 py-3",
                                            ]),
                                            "data-test-base-modal-buttons-wrapper":
                                              "",
                                          },
                                          [Oo(l.$slots, "buttons")],
                                          2
                                        ),
                                      ],
                                      10,
                                      YF
                                    ),
                                  ]),
                                ]),
                                _: 3,
                              }
                            ),
                          ]),
                        ]),
                        _: 3,
                      },
                      8,
                      ["initial-focus"]
                    ),
                  ]),
                  _: 3,
                },
                8,
                ["show"]
              ),
            ])
          );
        },
      }),
      qF = {
        class:
          "sm:px-10 mt-8 flex flex-col justify-center items-center text-center",
      },
      KF = { class: "w-full text-2xl leading-6 font-semibold text-white" },
      f0 = dt({
        __name: "BaseModalContent",
        props: { title: {} },
        setup(t) {
          return (e, r) => (
            je(),
            et("div", qF, [
              ve("h3", KF, Bt(e.title), 1),
              Oo(e.$slots, "default"),
            ])
          );
        },
      });
    function $F() {
      for (var t = 0, e, r, n = ""; t < arguments.length; )
        (e = arguments[t++]) && (r = WA(e)) && (n && (n += " "), (n += r));
      return n;
    }
    function WA(t) {
      if (typeof t == "string") return t;
      for (var e, r = "", n = 0; n < t.length; n++)
        t[n] && (e = WA(t[n])) && (r && (r += " "), (r += e));
      return r;
    }
    var p0 = "-";
    function ZF(t) {
      var e = JF(t),
        r = t.conflictingClassGroups,
        n = t.conflictingClassGroupModifiers,
        i = n === void 0 ? {} : n;
      function a(u) {
        var p = u.split(p0);
        return p[0] === "" && p.length !== 1 && p.shift(), XA(p, e) || QF(u);
      }
      function l(u, p) {
        var m = r[u] || [];
        return p && i[u] ? [].concat(m, i[u]) : m;
      }
      return { getClassGroupId: a, getConflictingClassGroupIds: l };
    }
    function XA(t, e) {
      var l;
      if (t.length === 0) return e.classGroupId;
      var r = t[0],
        n = e.nextPart.get(r),
        i = n ? XA(t.slice(1), n) : void 0;
      if (i) return i;
      if (e.validators.length !== 0) {
        var a = t.join(p0);
        return (l = e.validators.find(function (u) {
          var p = u.validator;
          return p(a);
        })) == null
          ? void 0
          : l.classGroupId;
      }
    }
    var jA = /^\[(.+)\]$/;
    function QF(t) {
      if (jA.test(t)) {
        var e = jA.exec(t)[1],
          r = e == null ? void 0 : e.substring(0, e.indexOf(":"));
        if (r) return "arbitrary.." + r;
      }
    }
    function JF(t) {
      var e = t.theme,
        r = t.prefix,
        n = { nextPart: new Map(), validators: [] },
        i = tD(Object.entries(t.classGroups), r);
      return (
        i.forEach(function (a) {
          var l = a[0],
            u = a[1];
          g0(u, n, l, e);
        }),
        n
      );
    }
    function g0(t, e, r, n) {
      t.forEach(function (i) {
        if (typeof i == "string") {
          var a = i === "" ? e : GA(e, i);
          a.classGroupId = r;
          return;
        }
        if (typeof i == "function") {
          if (eD(i)) {
            g0(i(n), e, r, n);
            return;
          }
          e.validators.push({ validator: i, classGroupId: r });
          return;
        }
        Object.entries(i).forEach(function (l) {
          var u = l[0],
            p = l[1];
          g0(p, GA(e, u), r, n);
        });
      });
    }
    function GA(t, e) {
      var r = t;
      return (
        e.split(p0).forEach(function (n) {
          r.nextPart.has(n) ||
            r.nextPart.set(n, { nextPart: new Map(), validators: [] }),
            (r = r.nextPart.get(n));
        }),
        r
      );
    }
    function eD(t) {
      return t.isThemeGetter;
    }
    function tD(t, e) {
      return e
        ? t.map(function (r) {
            var n = r[0],
              i = r[1],
              a = i.map(function (l) {
                return typeof l == "string"
                  ? e + l
                  : typeof l == "object"
                  ? Object.fromEntries(
                      Object.entries(l).map(function (u) {
                        var p = u[0],
                          m = u[1];
                        return [e + p, m];
                      })
                    )
                  : l;
              });
            return [n, a];
          })
        : t;
    }
    function rD(t) {
      if (t < 1) return { get: function () {}, set: function () {} };
      var e = 0,
        r = new Map(),
        n = new Map();
      function i(a, l) {
        r.set(a, l), e++, e > t && ((e = 0), (n = r), (r = new Map()));
      }
      return {
        get: function (a) {
          var l = r.get(a);
          if (l !== void 0) return l;
          if ((l = n.get(a)) !== void 0) return i(a, l), l;
        },
        set: function (a, l) {
          r.has(a) ? r.set(a, l) : i(a, l);
        },
      };
    }
    var YA = "!";
    function nD(t) {
      var e = t.separator || ":",
        r = e.length === 1,
        n = e[0],
        i = e.length;
      return function (a) {
        for (var l = [], u = 0, p = 0, m, v = 0; v < a.length; v++) {
          var w = a[v];
          if (u === 0) {
            if (w === n && (r || a.slice(v, v + i) === e)) {
              l.push(a.slice(p, v)), (p = v + i);
              continue;
            }
            if (w === "/") {
              m = v;
              continue;
            }
          }
          w === "[" ? u++ : w === "]" && u--;
        }
        var S = l.length === 0 ? a : a.substring(p),
          M = S.startsWith(YA),
          D = M ? S.substring(1) : S,
          z = m && m > p ? m - p : void 0;
        return {
          modifiers: l,
          hasImportantModifier: M,
          baseClassName: D,
          maybePostfixModifierPosition: z,
        };
      };
    }
    function iD(t) {
      if (t.length <= 1) return t;
      var e = [],
        r = [];
      return (
        t.forEach(function (n) {
          var i = n[0] === "[";
          i ? (e.push.apply(e, r.sort().concat([n])), (r = [])) : r.push(n);
        }),
        e.push.apply(e, r.sort()),
        e
      );
    }
    function sD(t) {
      return { cache: rD(t.cacheSize), splitModifiers: nD(t), ...ZF(t) };
    }
    var aD = /\s+/;
    function oD(t, e) {
      var r = e.splitModifiers,
        n = e.getClassGroupId,
        i = e.getConflictingClassGroupIds,
        a = new Set();
      return t
        .trim()
        .split(aD)
        .map(function (l) {
          var u = r(l),
            p = u.modifiers,
            m = u.hasImportantModifier,
            v = u.baseClassName,
            w = u.maybePostfixModifierPosition,
            S = n(w ? v.substring(0, w) : v),
            M = !!w;
          if (!S) {
            if (!w) return { isTailwindClass: !1, originalClassName: l };
            if (((S = n(v)), !S))
              return { isTailwindClass: !1, originalClassName: l };
            M = !1;
          }
          var D = iD(p).join(":"),
            z = m ? D + YA : D;
          return {
            isTailwindClass: !0,
            modifierId: z,
            classGroupId: S,
            originalClassName: l,
            hasPostfixModifier: M,
          };
        })
        .reverse()
        .filter(function (l) {
          if (!l.isTailwindClass) return !0;
          var u = l.modifierId,
            p = l.classGroupId,
            m = l.hasPostfixModifier,
            v = u + p;
          return a.has(v)
            ? !1
            : (a.add(v),
              i(p, m).forEach(function (w) {
                return a.add(u + w);
              }),
              !0);
        })
        .reverse()
        .map(function (l) {
          return l.originalClassName;
        })
        .join(" ");
    }
    function lD() {
      for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++)
        e[r] = arguments[r];
      var n,
        i,
        a,
        l = u;
      function u(m) {
        var v = e[0],
          w = e.slice(1),
          S = w.reduce(function (M, D) {
            return D(M);
          }, v());
        return (n = sD(S)), (i = n.cache.get), (a = n.cache.set), (l = p), p(m);
      }
      function p(m) {
        var v = i(m);
        if (v) return v;
        var w = oD(m, n);
        return a(m, w), w;
      }
      return function () {
        return l($F.apply(null, arguments));
      };
    }
    function Mr(t) {
      var e = function (r) {
        return r[t] || [];
      };
      return (e.isThemeGetter = !0), e;
    }
    var VA = /^\[(?:([a-z-]+):)?(.+)\]$/i,
      cD = /^\d+\/\d+$/,
      uD = new Set(["px", "full", "screen"]),
      hD = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/,
      dD =
        /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/,
      fD = /^-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/;
    function Di(t) {
      return Xo(t) || uD.has(t) || cD.test(t) || m0(t);
    }
    function m0(t) {
      return jo(t, "length", bD);
    }
    function pD(t) {
      return jo(t, "size", qA);
    }
    function gD(t) {
      return jo(t, "position", qA);
    }
    function mD(t) {
      return jo(t, "url", xD);
    }
    function Ef(t) {
      return jo(t, "number", Xo);
    }
    function Xo(t) {
      return !Number.isNaN(Number(t));
    }
    function vD(t) {
      return t.endsWith("%") && Xo(t.slice(0, -1));
    }
    function Xu(t) {
      return KA(t) || jo(t, "number", KA);
    }
    function Mt(t) {
      return VA.test(t);
    }
    function ju() {
      return !0;
    }
    function Wa(t) {
      return hD.test(t);
    }
    function yD(t) {
      return jo(t, "", wD);
    }
    function jo(t, e, r) {
      var n = VA.exec(t);
      return n ? (n[1] ? n[1] === e : r(n[2])) : !1;
    }
    function bD(t) {
      return dD.test(t);
    }
    function qA() {
      return !1;
    }
    function xD(t) {
      return t.startsWith("url(");
    }
    function KA(t) {
      return Number.isInteger(Number(t));
    }
    function wD(t) {
      return fD.test(t);
    }
    function kD() {
      var t = Mr("colors"),
        e = Mr("spacing"),
        r = Mr("blur"),
        n = Mr("brightness"),
        i = Mr("borderColor"),
        a = Mr("borderRadius"),
        l = Mr("borderSpacing"),
        u = Mr("borderWidth"),
        p = Mr("contrast"),
        m = Mr("grayscale"),
        v = Mr("hueRotate"),
        w = Mr("invert"),
        S = Mr("gap"),
        M = Mr("gradientColorStops"),
        D = Mr("gradientColorStopPositions"),
        z = Mr("inset"),
        V = Mr("margin"),
        j = Mr("opacity"),
        B = Mr("padding"),
        ae = Mr("saturate"),
        re = Mr("scale"),
        K = Mr("sepia"),
        fe = Mr("skew"),
        ye = Mr("space"),
        pe = Mr("translate"),
        _e = function () {
          return ["auto", "contain", "none"];
        },
        be = function () {
          return ["auto", "hidden", "clip", "visible", "scroll"];
        },
        Ce = function () {
          return ["auto", Mt, e];
        },
        ke = function () {
          return [Mt, e];
        },
        E = function () {
          return ["", Di];
        },
        P = function () {
          return ["auto", Xo, Mt];
        },
        L = function () {
          return [
            "bottom",
            "center",
            "left",
            "left-bottom",
            "left-top",
            "right",
            "right-bottom",
            "right-top",
            "top",
          ];
        },
        U = function () {
          return ["solid", "dashed", "dotted", "double", "none"];
        },
        Y = function () {
          return [
            "normal",
            "multiply",
            "screen",
            "overlay",
            "darken",
            "lighten",
            "color-dodge",
            "color-burn",
            "hard-light",
            "soft-light",
            "difference",
            "exclusion",
            "hue",
            "saturation",
            "color",
            "luminosity",
            "plus-lighter",
          ];
        },
        ie = function () {
          return [
            "start",
            "end",
            "center",
            "between",
            "around",
            "evenly",
            "stretch",
          ];
        },
        le = function () {
          return ["", "0", Mt];
        },
        J = function () {
          return [
            "auto",
            "avoid",
            "all",
            "avoid-page",
            "page",
            "left",
            "right",
            "column",
          ];
        },
        T = function () {
          return [Xo, Ef];
        },
        Z = function () {
          return [Xo, Mt];
        };
      return {
        cacheSize: 500,
        theme: {
          colors: [ju],
          spacing: [Di],
          blur: ["none", "", Wa, Mt],
          brightness: T(),
          borderColor: [t],
          borderRadius: ["none", "", "full", Wa, Mt],
          borderSpacing: ke(),
          borderWidth: E(),
          contrast: T(),
          grayscale: le(),
          hueRotate: Z(),
          invert: le(),
          gap: ke(),
          gradientColorStops: [t],
          gradientColorStopPositions: [vD, m0],
          inset: Ce(),
          margin: Ce(),
          opacity: T(),
          padding: ke(),
          saturate: T(),
          scale: T(),
          sepia: le(),
          skew: Z(),
          space: ke(),
          translate: ke(),
        },
        classGroups: {
          aspect: [{ aspect: ["auto", "square", "video", Mt] }],
          container: ["container"],
          columns: [{ columns: [Wa] }],
          "break-after": [{ "break-after": J() }],
          "break-before": [{ "break-before": J() }],
          "break-inside": [
            { "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"] },
          ],
          "box-decoration": [{ "box-decoration": ["slice", "clone"] }],
          box: [{ box: ["border", "content"] }],
          display: [
            "block",
            "inline-block",
            "inline",
            "flex",
            "inline-flex",
            "table",
            "inline-table",
            "table-caption",
            "table-cell",
            "table-column",
            "table-column-group",
            "table-footer-group",
            "table-header-group",
            "table-row-group",
            "table-row",
            "flow-root",
            "grid",
            "inline-grid",
            "contents",
            "list-item",
            "hidden",
          ],
          float: [{ float: ["right", "left", "none"] }],
          clear: [{ clear: ["left", "right", "both", "none"] }],
          isolation: ["isolate", "isolation-auto"],
          "object-fit": [
            { object: ["contain", "cover", "fill", "none", "scale-down"] },
          ],
          "object-position": [{ object: [].concat(L(), [Mt]) }],
          overflow: [{ overflow: be() }],
          "overflow-x": [{ "overflow-x": be() }],
          "overflow-y": [{ "overflow-y": be() }],
          overscroll: [{ overscroll: _e() }],
          "overscroll-x": [{ "overscroll-x": _e() }],
          "overscroll-y": [{ "overscroll-y": _e() }],
          position: ["static", "fixed", "absolute", "relative", "sticky"],
          inset: [{ inset: [z] }],
          "inset-x": [{ "inset-x": [z] }],
          "inset-y": [{ "inset-y": [z] }],
          start: [{ start: [z] }],
          end: [{ end: [z] }],
          top: [{ top: [z] }],
          right: [{ right: [z] }],
          bottom: [{ bottom: [z] }],
          left: [{ left: [z] }],
          visibility: ["visible", "invisible", "collapse"],
          z: [{ z: ["auto", Xu] }],
          basis: [{ basis: Ce() }],
          "flex-direction": [
            { flex: ["row", "row-reverse", "col", "col-reverse"] },
          ],
          "flex-wrap": [{ flex: ["wrap", "wrap-reverse", "nowrap"] }],
          flex: [{ flex: ["1", "auto", "initial", "none", Mt] }],
          grow: [{ grow: le() }],
          shrink: [{ shrink: le() }],
          order: [{ order: ["first", "last", "none", Xu] }],
          "grid-cols": [{ "grid-cols": [ju] }],
          "col-start-end": [{ col: ["auto", { span: ["full", Xu] }, Mt] }],
          "col-start": [{ "col-start": P() }],
          "col-end": [{ "col-end": P() }],
          "grid-rows": [{ "grid-rows": [ju] }],
          "row-start-end": [{ row: ["auto", { span: [Xu] }, Mt] }],
          "row-start": [{ "row-start": P() }],
          "row-end": [{ "row-end": P() }],
          "grid-flow": [
            { "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"] },
          ],
          "auto-cols": [{ "auto-cols": ["auto", "min", "max", "fr", Mt] }],
          "auto-rows": [{ "auto-rows": ["auto", "min", "max", "fr", Mt] }],
          gap: [{ gap: [S] }],
          "gap-x": [{ "gap-x": [S] }],
          "gap-y": [{ "gap-y": [S] }],
          "justify-content": [{ justify: ["normal"].concat(ie()) }],
          "justify-items": [
            { "justify-items": ["start", "end", "center", "stretch"] },
          ],
          "justify-self": [
            { "justify-self": ["auto", "start", "end", "center", "stretch"] },
          ],
          "align-content": [{ content: ["normal"].concat(ie(), ["baseline"]) }],
          "align-items": [
            { items: ["start", "end", "center", "baseline", "stretch"] },
          ],
          "align-self": [
            { self: ["auto", "start", "end", "center", "stretch", "baseline"] },
          ],
          "place-content": [{ "place-content": [].concat(ie(), ["baseline"]) }],
          "place-items": [
            {
              "place-items": ["start", "end", "center", "baseline", "stretch"],
            },
          ],
          "place-self": [
            { "place-self": ["auto", "start", "end", "center", "stretch"] },
          ],
          p: [{ p: [B] }],
          px: [{ px: [B] }],
          py: [{ py: [B] }],
          ps: [{ ps: [B] }],
          pe: [{ pe: [B] }],
          pt: [{ pt: [B] }],
          pr: [{ pr: [B] }],
          pb: [{ pb: [B] }],
          pl: [{ pl: [B] }],
          m: [{ m: [V] }],
          mx: [{ mx: [V] }],
          my: [{ my: [V] }],
          ms: [{ ms: [V] }],
          me: [{ me: [V] }],
          mt: [{ mt: [V] }],
          mr: [{ mr: [V] }],
          mb: [{ mb: [V] }],
          ml: [{ ml: [V] }],
          "space-x": [{ "space-x": [ye] }],
          "space-x-reverse": ["space-x-reverse"],
          "space-y": [{ "space-y": [ye] }],
          "space-y-reverse": ["space-y-reverse"],
          w: [{ w: ["auto", "min", "max", "fit", Mt, e] }],
          "min-w": [{ "min-w": ["min", "max", "fit", Mt, Di] }],
          "max-w": [
            {
              "max-w": [
                "0",
                "none",
                "full",
                "min",
                "max",
                "fit",
                "prose",
                { screen: [Wa] },
                Wa,
                Mt,
              ],
            },
          ],
          h: [{ h: [Mt, e, "auto", "min", "max", "fit"] }],
          "min-h": [{ "min-h": ["min", "max", "fit", Mt, Di] }],
          "max-h": [{ "max-h": [Mt, e, "min", "max", "fit"] }],
          "font-size": [{ text: ["base", Wa, m0] }],
          "font-smoothing": ["antialiased", "subpixel-antialiased"],
          "font-style": ["italic", "not-italic"],
          "font-weight": [
            {
              font: [
                "thin",
                "extralight",
                "light",
                "normal",
                "medium",
                "semibold",
                "bold",
                "extrabold",
                "black",
                Ef,
              ],
            },
          ],
          "font-family": [{ font: [ju] }],
          "fvn-normal": ["normal-nums"],
          "fvn-ordinal": ["ordinal"],
          "fvn-slashed-zero": ["slashed-zero"],
          "fvn-figure": ["lining-nums", "oldstyle-nums"],
          "fvn-spacing": ["proportional-nums", "tabular-nums"],
          "fvn-fraction": ["diagonal-fractions", "stacked-fractons"],
          tracking: [
            {
              tracking: [
                "tighter",
                "tight",
                "normal",
                "wide",
                "wider",
                "widest",
                Mt,
              ],
            },
          ],
          "line-clamp": [{ "line-clamp": ["none", Xo, Ef] }],
          leading: [
            {
              leading: [
                "none",
                "tight",
                "snug",
                "normal",
                "relaxed",
                "loose",
                Mt,
                Di,
              ],
            },
          ],
          "list-image": [{ "list-image": ["none", Mt] }],
          "list-style-type": [{ list: ["none", "disc", "decimal", Mt] }],
          "list-style-position": [{ list: ["inside", "outside"] }],
          "placeholder-color": [{ placeholder: [t] }],
          "placeholder-opacity": [{ "placeholder-opacity": [j] }],
          "text-alignment": [
            { text: ["left", "center", "right", "justify", "start", "end"] },
          ],
          "text-color": [{ text: [t] }],
          "text-opacity": [{ "text-opacity": [j] }],
          "text-decoration": [
            "underline",
            "overline",
            "line-through",
            "no-underline",
          ],
          "text-decoration-style": [{ decoration: [].concat(U(), ["wavy"]) }],
          "text-decoration-thickness": [
            { decoration: ["auto", "from-font", Di] },
          ],
          "underline-offset": [{ "underline-offset": ["auto", Mt, Di] }],
          "text-decoration-color": [{ decoration: [t] }],
          "text-transform": [
            "uppercase",
            "lowercase",
            "capitalize",
            "normal-case",
          ],
          "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
          indent: [{ indent: ke() }],
          "vertical-align": [
            {
              align: [
                "baseline",
                "top",
                "middle",
                "bottom",
                "text-top",
                "text-bottom",
                "sub",
                "super",
                Mt,
              ],
            },
          ],
          whitespace: [
            {
              whitespace: [
                "normal",
                "nowrap",
                "pre",
                "pre-line",
                "pre-wrap",
                "break-spaces",
              ],
            },
          ],
          break: [{ break: ["normal", "words", "all", "keep"] }],
          hyphens: [{ hyphens: ["none", "manual", "auto"] }],
          content: [{ content: ["none", Mt] }],
          "bg-attachment": [{ bg: ["fixed", "local", "scroll"] }],
          "bg-clip": [{ "bg-clip": ["border", "padding", "content", "text"] }],
          "bg-opacity": [{ "bg-opacity": [j] }],
          "bg-origin": [{ "bg-origin": ["border", "padding", "content"] }],
          "bg-position": [{ bg: [].concat(L(), [gD]) }],
          "bg-repeat": [
            { bg: ["no-repeat", { repeat: ["", "x", "y", "round", "space"] }] },
          ],
          "bg-size": [{ bg: ["auto", "cover", "contain", pD] }],
          "bg-image": [
            {
              bg: [
                "none",
                { "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"] },
                mD,
              ],
            },
          ],
          "bg-color": [{ bg: [t] }],
          "gradient-from-pos": [{ from: [D] }],
          "gradient-via-pos": [{ via: [D] }],
          "gradient-to-pos": [{ to: [D] }],
          "gradient-from": [{ from: [M] }],
          "gradient-via": [{ via: [M] }],
          "gradient-to": [{ to: [M] }],
          rounded: [{ rounded: [a] }],
          "rounded-s": [{ "rounded-s": [a] }],
          "rounded-e": [{ "rounded-e": [a] }],
          "rounded-t": [{ "rounded-t": [a] }],
          "rounded-r": [{ "rounded-r": [a] }],
          "rounded-b": [{ "rounded-b": [a] }],
          "rounded-l": [{ "rounded-l": [a] }],
          "rounded-ss": [{ "rounded-ss": [a] }],
          "rounded-se": [{ "rounded-se": [a] }],
          "rounded-ee": [{ "rounded-ee": [a] }],
          "rounded-es": [{ "rounded-es": [a] }],
          "rounded-tl": [{ "rounded-tl": [a] }],
          "rounded-tr": [{ "rounded-tr": [a] }],
          "rounded-br": [{ "rounded-br": [a] }],
          "rounded-bl": [{ "rounded-bl": [a] }],
          "border-w": [{ border: [u] }],
          "border-w-x": [{ "border-x": [u] }],
          "border-w-y": [{ "border-y": [u] }],
          "border-w-s": [{ "border-s": [u] }],
          "border-w-e": [{ "border-e": [u] }],
          "border-w-t": [{ "border-t": [u] }],
          "border-w-r": [{ "border-r": [u] }],
          "border-w-b": [{ "border-b": [u] }],
          "border-w-l": [{ "border-l": [u] }],
          "border-opacity": [{ "border-opacity": [j] }],
          "border-style": [{ border: [].concat(U(), ["hidden"]) }],
          "divide-x": [{ "divide-x": [u] }],
          "divide-x-reverse": ["divide-x-reverse"],
          "divide-y": [{ "divide-y": [u] }],
          "divide-y-reverse": ["divide-y-reverse"],
          "divide-opacity": [{ "divide-opacity": [j] }],
          "divide-style": [{ divide: U() }],
          "border-color": [{ border: [i] }],
          "border-color-x": [{ "border-x": [i] }],
          "border-color-y": [{ "border-y": [i] }],
          "border-color-t": [{ "border-t": [i] }],
          "border-color-r": [{ "border-r": [i] }],
          "border-color-b": [{ "border-b": [i] }],
          "border-color-l": [{ "border-l": [i] }],
          "divide-color": [{ divide: [i] }],
          "outline-style": [{ outline: [""].concat(U()) }],
          "outline-offset": [{ "outline-offset": [Mt, Di] }],
          "outline-w": [{ outline: [Di] }],
          "outline-color": [{ outline: [t] }],
          "ring-w": [{ ring: E() }],
          "ring-w-inset": ["ring-inset"],
          "ring-color": [{ ring: [t] }],
          "ring-opacity": [{ "ring-opacity": [j] }],
          "ring-offset-w": [{ "ring-offset": [Di] }],
          "ring-offset-color": [{ "ring-offset": [t] }],
          shadow: [{ shadow: ["", "inner", "none", Wa, yD] }],
          "shadow-color": [{ shadow: [ju] }],
          opacity: [{ opacity: [j] }],
          "mix-blend": [{ "mix-blend": Y() }],
          "bg-blend": [{ "bg-blend": Y() }],
          filter: [{ filter: ["", "none"] }],
          blur: [{ blur: [r] }],
          brightness: [{ brightness: [n] }],
          contrast: [{ contrast: [p] }],
          "drop-shadow": [{ "drop-shadow": ["", "none", Wa, Mt] }],
          grayscale: [{ grayscale: [m] }],
          "hue-rotate": [{ "hue-rotate": [v] }],
          invert: [{ invert: [w] }],
          saturate: [{ saturate: [ae] }],
          sepia: [{ sepia: [K] }],
          "backdrop-filter": [{ "backdrop-filter": ["", "none"] }],
          "backdrop-blur": [{ "backdrop-blur": [r] }],
          "backdrop-brightness": [{ "backdrop-brightness": [n] }],
          "backdrop-contrast": [{ "backdrop-contrast": [p] }],
          "backdrop-grayscale": [{ "backdrop-grayscale": [m] }],
          "backdrop-hue-rotate": [{ "backdrop-hue-rotate": [v] }],
          "backdrop-invert": [{ "backdrop-invert": [w] }],
          "backdrop-opacity": [{ "backdrop-opacity": [j] }],
          "backdrop-saturate": [{ "backdrop-saturate": [ae] }],
          "backdrop-sepia": [{ "backdrop-sepia": [K] }],
          "border-collapse": [{ border: ["collapse", "separate"] }],
          "border-spacing": [{ "border-spacing": [l] }],
          "border-spacing-x": [{ "border-spacing-x": [l] }],
          "border-spacing-y": [{ "border-spacing-y": [l] }],
          "table-layout": [{ table: ["auto", "fixed"] }],
          caption: [{ caption: ["top", "bottom"] }],
          transition: [
            {
              transition: [
                "none",
                "all",
                "",
                "colors",
                "opacity",
                "shadow",
                "transform",
                Mt,
              ],
            },
          ],
          duration: [{ duration: Z() }],
          ease: [{ ease: ["linear", "in", "out", "in-out", Mt] }],
          delay: [{ delay: Z() }],
          animate: [
            { animate: ["none", "spin", "ping", "pulse", "bounce", Mt] },
          ],
          transform: [{ transform: ["", "gpu", "none"] }],
          scale: [{ scale: [re] }],
          "scale-x": [{ "scale-x": [re] }],
          "scale-y": [{ "scale-y": [re] }],
          rotate: [{ rotate: [Xu, Mt] }],
          "translate-x": [{ "translate-x": [pe] }],
          "translate-y": [{ "translate-y": [pe] }],
          "skew-x": [{ "skew-x": [fe] }],
          "skew-y": [{ "skew-y": [fe] }],
          "transform-origin": [
            {
              origin: [
                "center",
                "top",
                "top-right",
                "right",
                "bottom-right",
                "bottom",
                "bottom-left",
                "left",
                "top-left",
                Mt,
              ],
            },
          ],
          accent: [{ accent: ["auto", t] }],
          appearance: ["appearance-none"],
          cursor: [
            {
              cursor: [
                "auto",
                "default",
                "pointer",
                "wait",
                "text",
                "move",
                "help",
                "not-allowed",
                "none",
                "context-menu",
                "progress",
                "cell",
                "crosshair",
                "vertical-text",
                "alias",
                "copy",
                "no-drop",
                "grab",
                "grabbing",
                "all-scroll",
                "col-resize",
                "row-resize",
                "n-resize",
                "e-resize",
                "s-resize",
                "w-resize",
                "ne-resize",
                "nw-resize",
                "se-resize",
                "sw-resize",
                "ew-resize",
                "ns-resize",
                "nesw-resize",
                "nwse-resize",
                "zoom-in",
                "zoom-out",
                Mt,
              ],
            },
          ],
          "caret-color": [{ caret: [t] }],
          "pointer-events": [{ "pointer-events": ["none", "auto"] }],
          resize: [{ resize: ["none", "y", "x", ""] }],
          "scroll-behavior": [{ scroll: ["auto", "smooth"] }],
          "scroll-m": [{ "scroll-m": ke() }],
          "scroll-mx": [{ "scroll-mx": ke() }],
          "scroll-my": [{ "scroll-my": ke() }],
          "scroll-ms": [{ "scroll-ms": ke() }],
          "scroll-me": [{ "scroll-me": ke() }],
          "scroll-mt": [{ "scroll-mt": ke() }],
          "scroll-mr": [{ "scroll-mr": ke() }],
          "scroll-mb": [{ "scroll-mb": ke() }],
          "scroll-ml": [{ "scroll-ml": ke() }],
          "scroll-p": [{ "scroll-p": ke() }],
          "scroll-px": [{ "scroll-px": ke() }],
          "scroll-py": [{ "scroll-py": ke() }],
          "scroll-ps": [{ "scroll-ps": ke() }],
          "scroll-pe": [{ "scroll-pe": ke() }],
          "scroll-pt": [{ "scroll-pt": ke() }],
          "scroll-pr": [{ "scroll-pr": ke() }],
          "scroll-pb": [{ "scroll-pb": ke() }],
          "scroll-pl": [{ "scroll-pl": ke() }],
          "snap-align": [{ snap: ["start", "end", "center", "align-none"] }],
          "snap-stop": [{ snap: ["normal", "always"] }],
          "snap-type": [{ snap: ["none", "x", "y", "both"] }],
          "snap-strictness": [{ snap: ["mandatory", "proximity"] }],
          touch: [
            {
              touch: [
                "auto",
                "none",
                "pinch-zoom",
                "manipulation",
                { pan: ["x", "left", "right", "y", "up", "down"] },
              ],
            },
          ],
          select: [{ select: ["none", "text", "all", "auto"] }],
          "will-change": [
            { "will-change": ["auto", "scroll", "contents", "transform", Mt] },
          ],
          fill: [{ fill: [t, "none"] }],
          "stroke-w": [{ stroke: [Di, Ef] }],
          stroke: [{ stroke: [t, "none"] }],
          sr: ["sr-only", "not-sr-only"],
        },
        conflictingClassGroups: {
          overflow: ["overflow-x", "overflow-y"],
          overscroll: ["overscroll-x", "overscroll-y"],
          inset: [
            "inset-x",
            "inset-y",
            "start",
            "end",
            "top",
            "right",
            "bottom",
            "left",
          ],
          "inset-x": ["right", "left"],
          "inset-y": ["top", "bottom"],
          flex: ["basis", "grow", "shrink"],
          gap: ["gap-x", "gap-y"],
          p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
          px: ["pr", "pl"],
          py: ["pt", "pb"],
          m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
          mx: ["mr", "ml"],
          my: ["mt", "mb"],
          "font-size": ["leading"],
          "fvn-normal": [
            "fvn-ordinal",
            "fvn-slashed-zero",
            "fvn-figure",
            "fvn-spacing",
            "fvn-fraction",
          ],
          "fvn-ordinal": ["fvn-normal"],
          "fvn-slashed-zero": ["fvn-normal"],
          "fvn-figure": ["fvn-normal"],
          "fvn-spacing": ["fvn-normal"],
          "fvn-fraction": ["fvn-normal"],
          rounded: [
            "rounded-s",
            "rounded-e",
            "rounded-t",
            "rounded-r",
            "rounded-b",
            "rounded-l",
            "rounded-ss",
            "rounded-se",
            "rounded-ee",
            "rounded-es",
            "rounded-tl",
            "rounded-tr",
            "rounded-br",
            "rounded-bl",
          ],
          "rounded-s": ["rounded-ss", "rounded-es"],
          "rounded-e": ["rounded-se", "rounded-ee"],
          "rounded-t": ["rounded-tl", "rounded-tr"],
          "rounded-r": ["rounded-tr", "rounded-br"],
          "rounded-b": ["rounded-br", "rounded-bl"],
          "rounded-l": ["rounded-tl", "rounded-bl"],
          "border-spacing": ["border-spacing-x", "border-spacing-y"],
          "border-w": [
            "border-w-s",
            "border-w-e",
            "border-w-t",
            "border-w-r",
            "border-w-b",
            "border-w-l",
          ],
          "border-w-x": ["border-w-r", "border-w-l"],
          "border-w-y": ["border-w-t", "border-w-b"],
          "border-color": [
            "border-color-t",
            "border-color-r",
            "border-color-b",
            "border-color-l",
          ],
          "border-color-x": ["border-color-r", "border-color-l"],
          "border-color-y": ["border-color-t", "border-color-b"],
          "scroll-m": [
            "scroll-mx",
            "scroll-my",
            "scroll-ms",
            "scroll-me",
            "scroll-mt",
            "scroll-mr",
            "scroll-mb",
            "scroll-ml",
          ],
          "scroll-mx": ["scroll-mr", "scroll-ml"],
          "scroll-my": ["scroll-mt", "scroll-mb"],
          "scroll-p": [
            "scroll-px",
            "scroll-py",
            "scroll-ps",
            "scroll-pe",
            "scroll-pt",
            "scroll-pr",
            "scroll-pb",
            "scroll-pl",
          ],
          "scroll-px": ["scroll-pr", "scroll-pl"],
          "scroll-py": ["scroll-pt", "scroll-pb"],
        },
        conflictingClassGroupModifiers: { "font-size": ["leading"] },
      };
    }
    var _D = lD(kD);
    const AD = dt({
        __name: "FlatSpinner",
        props: { scale: { default: "1" }, colorClass: { default: "bg-black" } },
        setup(t) {
          const e = t,
            r = He(() => ({
              width: `calc(61px * ${e.scale})`,
              height: `calc(13px * ${e.scale})`,
            })),
            n = He(() => ({ transform: `scale(${e.scale})` }));
          return (i, a) => (
            je(),
            et(
              "div",
              {
                style: fu(r.value),
                class: "loader",
                "data-test-flat-spinner-wrapper": "",
              },
              [
                ve(
                  "div",
                  {
                    style: fu(n.value),
                    class: "loader-scale",
                    "data-test-flat-spinner-loader-wrapper": "",
                  },
                  [
                    (je(),
                    et(
                      dr,
                      null,
                      Hs(4, (l) =>
                        ve(
                          "div",
                          {
                            key: l,
                            class: ot([[i.colorClass], "dot"]),
                            "data-test-flat-spinner-loader": "",
                          },
                          null,
                          2
                        )
                      ),
                      64
                    )),
                  ],
                  4
                ),
              ],
              4
            )
          );
        },
      }),
      CD = Jl(AD, [["__scopeId", "data-v-ce8cef1d"]]),
      v0 = dt({
        __name: "BaseButton",
        props: {
          type: { default: Vn.primary },
          isDisabled: { type: Boolean, default: !1 },
          isBusy: { type: Boolean, default: !1 },
          isFocused: { type: Boolean, default: !1 },
          spinnerSize: { default: Yn.none },
          title: { default: "" },
          tag: { default: "button" },
          padding: { default: "" },
          classes: { default: "" },
          size: { default: n0.medium },
        },
        emits: ["click"],
        setup(t, { emit: e }) {
          const r = t,
            n = We(),
            i = We(),
            a = We(),
            l = {
              [Vn.none]: "",
              [Vn.primary]:
                "transition-transform duration-200 text-white font-bold border border-teal bg-project-primary/70 rounded-std shadow-sm",
              [Vn.secondary]:
                "transition-transform duration-200 text-project-primary/70 font-bold border border-project-primary/70 bg-springboard rounded-std shadow-sm",
              [Vn.tertiary]:
                "text-project-primary border border-project-primary bg-white hover:bg-gray-100 rounded-std shadow-sm",
            },
            u = He(() => {
              let w = r.padding;
              return (
                r.padding || (w = "py-3 px-8"),
                _D(
                  `${l[r.type]}`,
                  `${w}`,
                  `${r.classes}`,
                  `${r.isBusy ? "cursor-not-allowed" : ""}`
                )
              );
            }),
            p = He(() => {
              const w =
                  r.type === Vn.primary && r.spinnerSize !== Yn.none
                    ? "transition-transform duration-200"
                    : "",
                S = r.isBusy ? "translate-y-10" : "";
              return `${w} ${S}`;
            }),
            m = He(() =>
              r.type === Vn.primary || r.type === Vn.secondary
                ? "bg-white"
                : "bg-project-primary"
            );
          function v() {
            !r.isDisabled && !r.isBusy && e("click");
          }
          return (
            Or(
              () => r.isFocused,
              async (w) => {
                w &&
                  (await Li(() => {
                    var S;
                    (S = a.value) == null || S.focus();
                  }));
              }
            ),
            (w, S) => (
              je(),
              jt(
                zs(w.tag),
                {
                  ref_key: "buttonRef",
                  ref: a,
                  class: ot([
                    u.value,
                    "relative inline-flex justify-center items-center rounded overflow-hidden select-none leading-none text-base font-medium focus:outline-none focus:ring-2 focus:project-primary disabled:opacity-40 disabled:pointer-events-hover disabled:cursor-not-allowed",
                  ]),
                  disabled: r.isDisabled,
                  "data-test-base-button-wrapper": "",
                  onClick: v,
                },
                {
                  default: Ft(() => [
                    w.spinnerSize !== Xe(Yn).none
                      ? (je(),
                        et(
                          "div",
                          {
                            key: 0,
                            ref_key: "spinner",
                            ref: n,
                            class: ot([
                              [w.isBusy ? "-translate-y-1" : "-translate-y-10"],
                              "absolute inset-y-0 inset-x-1/2 inset-y-1/2 transition-transform duration-200",
                            ]),
                            "data-test-base-button-spinner-wrapper": "",
                          },
                          [
                            $e(
                              CD,
                              {
                                "color-class": m.value,
                                theme:
                                  w.type === Xe(Vn).tertiary
                                    ? Xe(Bi).light
                                    : Xe(Bi).dark,
                                class: "-ml-4 mb-4",
                                "data-test-base-button-spinner": "",
                                scale: "0.5",
                              },
                              null,
                              8,
                              ["color-class", "theme"]
                            ),
                          ],
                          2
                        ))
                      : Yr("", !0),
                    ve(
                      "div",
                      {
                        ref_key: "content",
                        ref: i,
                        class: ot(p.value),
                        "data-test-base-button-content-wrapper": "",
                      },
                      [
                        Oo(w.$slots, "default", {}, () => [
                          ve(
                            "span",
                            {
                              class: ot([
                                { "text-xs": w.size === Xe(n0).small },
                                "font-bold",
                              ]),
                              "data-test-base-button-default-slot-content": "",
                            },
                            Bt(w.title),
                            3
                          ),
                        ]),
                      ],
                      2
                    ),
                  ]),
                  _: 3,
                },
                8,
                ["class", "disabled"]
              )
            )
          );
        },
      }),
      SD = {
        class: "relative flex items-start cursor-pointer",
        "data-test-base-checkbox-wrapper": "",
      },
      ED = { class: "flex items-center h-5" },
      ID = ["id", "aria-describedby", "checked", "disabled", "name"],
      TD = {
        key: 0,
        class:
          "mt-px ml-3 text-sm sm:text-base cursor-pointer whitespace-nowrap",
      },
      PD = ["for"],
      OD = { class: "ml-1.5 cursor-pointer" },
      LD = dt({
        __name: "BaseCheckbox",
        props: {
          isDisabled: { type: Boolean, default: !1 },
          isValid: { type: Boolean, default: !0 },
          label: { default: "" },
          checked: { type: Boolean },
          id: {},
        },
        emits: ["update:checked"],
        setup(t) {
          return (e, r) => (
            je(),
            et("div", SD, [
              ve("div", ED, [
                ve(
                  "input",
                  {
                    id: e.id,
                    "aria-describedby": e.id,
                    checked: e.checked,
                    class: ot([
                      { "ring-red-500 ring-2": !e.isValid },
                      "h-4 w-4 text-teal border-gray-300 rounded cursor-pointer disabled:opacity-40 focus:ring-teal",
                    ]),
                    disabled: e.isDisabled,
                    name: e.id,
                    "data-test-base-checkbox-input": "",
                    type: "checkbox",
                    onInput:
                      r[0] ||
                      (r[0] = (n) =>
                        e.$emit("update:checked", n.target.checked)),
                  },
                  null,
                  42,
                  ID
                ),
                e.label
                  ? (je(),
                    et("div", TD, [
                      ve(
                        "label",
                        {
                          for: e.id,
                          class: "cursor-pointer",
                          "data-test-base-checkbox-label": "",
                        },
                        Bt(e.label),
                        9,
                        PD
                      ),
                    ]))
                  : Yr("", !0),
                ve("div", OD, [Oo(e.$slots, "default")]),
              ]),
            ])
          );
        },
      }),
      MD = ve(
        "div",
        {
          class:
            "text-sm md:text-base flex flex-col items-start h-full mt-8 select-none",
        },
        [
          ve(
            "p",
            null,
            "The $PING dashboard is a tool that can help you review previous signals given by our telegram bot."
          ),
          ve(
            "p",
            { class: "mt-4" },
            "However, it is important to remember that the dashboard is not a financial advisor and does not guarantee any profits. The past performance of the signals on the dashboard are not indicative of future results."
          ),
          ve(
            "p",
            { class: "mt-4" },
            "It is up to you to always do your own research before making any trading decisions."
          ),
          ve(
            "p",
            { class: "mt-4" },
            "In addition, the bots signals are not immune to malicious contracts. The honeypot checkers we have deployed are to be used as a guide and are not always 100% accurate."
          ),
          ve(
            "p",
            { class: "mt-4" },
            "We always recommend manually reviewing the code before buying any signal given by the bot / dashboard"
          ),
        ],
        -1
      ),
      RD = { class: "flex justify-center" },
      ND = dt({
        __name: "DisclaimerModal",
        props: { isVisible: { type: Boolean } },
        emits: ["close"],
        setup(t, { emit: e }) {
          const r = We(!1);
          async function n() {
            r.value &&
              localStorage.setItem("ping:do-not-show-disclaimer", "true"),
              e("close");
          }
          return (i, a) => (
            je(),
            jt(
              d0,
              { "is-dismissible": !1, "is-visible": i.isVisible, onClose: n },
              {
                buttons: Ft(() => [
                  ve("div", null, [
                    $e(
                      LD,
                      {
                        id: "do-not-show-disclaimer",
                        checked: r.value,
                        label: "Don't show this again",
                        class: "sm:ml-12",
                        "onUpdate:checked":
                          a[0] || (a[0] = (l) => (r.value = l)),
                      },
                      null,
                      8,
                      ["checked"]
                    ),
                    ve("div", RD, [
                      $e(
                        v0,
                        {
                          title: "I get it",
                          type: Xe(Vn).primary,
                          class: "mt-4",
                          onClick: n,
                        },
                        null,
                        8,
                        ["type"]
                      ),
                    ]),
                  ]),
                ]),
                default: Ft(() => [
                  $e(
                    f0,
                    { title: "Welcome" },
                    { default: Ft(() => [MD]), _: 1 }
                  ),
                ]),
                _: 1,
              },
              8,
              ["is-visible"]
            )
          );
        },
      }),
      BD = "/assets/metamask-logo-0e219d59.png",
      FD = ve("img", { class: "w-10", src: BD }, null, -1),
      DD = { class: "ml-2 text-base" },
      zD = dt({
        __name: "MetaMaskConnection",
        props: { walletAddress: {} },
        emits: ["connect", "disconnect"],
        setup(t, { emit: e }) {
          const r = t;
          return (n, i) => (
            je(),
            jt(Xe(GB), null, {
              default: Ft(() => [
                ve(
                  "div",
                  {
                    class:
                      "flex items-center justify-start w-48 select-none cursor-pointer px-3 py-1 text-sm leading-6 text-gray-200 hover:bg-project-primary/10",
                    onClick:
                      i[0] ||
                      (i[0] = (a) =>
                        r.walletAddress ? e("disconnect") : e("connect")),
                  },
                  [
                    FD,
                    ve(
                      "span",
                      DD,
                      Bt(r.walletAddress ? "Connected" : "MetaMask"),
                      1
                    ),
                  ]
                ),
              ]),
              _: 1,
            })
          );
        },
      });
    function HD({
      mustBeMetaMask: t = !1,
      silent: e = !1,
      timeout: r = 3e3,
    } = {}) {
      i();
      let n = !1;
      return new Promise((a) => {
        window.ethereum
          ? l()
          : (window.addEventListener("ethereum#initialized", l, { once: !0 }),
            setTimeout(() => {
              l();
            }, r));
        function l() {
          if (n) return;
          (n = !0), window.removeEventListener("ethereum#initialized", l);
          const { ethereum: u } = window;
          u && (!t || u.isMetaMask)
            ? a(u)
            : (!e &&
                console.error(
                  "@metamask/detect-provider:",
                  t && u
                    ? "Non-MetaMask window.ethereum detected."
                    : "Unable to detect window.ethereum."
                ),
              a(null));
        }
      });
      function i() {
        if (typeof t != "boolean")
          throw new Error(
            "@metamask/detect-provider: Expected option 'mustBeMetaMask' to be a boolean."
          );
        if (typeof e != "boolean")
          throw new Error(
            "@metamask/detect-provider: Expected option 'silent' to be a boolean."
          );
        if (typeof r != "number")
          throw new Error(
            "@metamask/detect-provider: Expected option 'timeout' to be a number."
          );
      }
    }
    var UD = HD;
    const y0 = ns(UD),
      WD = {
        "Amazon Silk": "amazon_silk",
        "Android Browser": "android",
        Bada: "bada",
        BlackBerry: "blackberry",
        Chrome: "chrome",
        Chromium: "chromium",
        Electron: "electron",
        Epiphany: "epiphany",
        Firefox: "firefox",
        Focus: "focus",
        Generic: "generic",
        "Google Search": "google_search",
        Googlebot: "googlebot",
        "Internet Explorer": "ie",
        "K-Meleon": "k_meleon",
        Maxthon: "maxthon",
        "Microsoft Edge": "edge",
        "MZ Browser": "mz",
        "NAVER Whale Browser": "naver",
        Opera: "opera",
        "Opera Coast": "opera_coast",
        PhantomJS: "phantomjs",
        Puffin: "puffin",
        QupZilla: "qupzilla",
        QQ: "qq",
        QQLite: "qqlite",
        Safari: "safari",
        Sailfish: "sailfish",
        "Samsung Internet for Android": "samsung_internet",
        SeaMonkey: "seamonkey",
        Sleipnir: "sleipnir",
        Swing: "swing",
        Tizen: "tizen",
        "UC Browser": "uc",
        Vivaldi: "vivaldi",
        "WebOS Browser": "webos",
        WeChat: "wechat",
        "Yandex Browser": "yandex",
        Roku: "roku",
      },
      $A = {
        amazon_silk: "Amazon Silk",
        android: "Android Browser",
        bada: "Bada",
        blackberry: "BlackBerry",
        chrome: "Chrome",
        chromium: "Chromium",
        electron: "Electron",
        epiphany: "Epiphany",
        firefox: "Firefox",
        focus: "Focus",
        generic: "Generic",
        googlebot: "Googlebot",
        google_search: "Google Search",
        ie: "Internet Explorer",
        k_meleon: "K-Meleon",
        maxthon: "Maxthon",
        edge: "Microsoft Edge",
        mz: "MZ Browser",
        naver: "NAVER Whale Browser",
        opera: "Opera",
        opera_coast: "Opera Coast",
        phantomjs: "PhantomJS",
        puffin: "Puffin",
        qupzilla: "QupZilla",
        qq: "QQ Browser",
        qqlite: "QQ Browser Lite",
        safari: "Safari",
        sailfish: "Sailfish",
        samsung_internet: "Samsung Internet for Android",
        seamonkey: "SeaMonkey",
        sleipnir: "Sleipnir",
        swing: "Swing",
        tizen: "Tizen",
        uc: "UC Browser",
        vivaldi: "Vivaldi",
        webos: "WebOS Browser",
        wechat: "WeChat",
        yandex: "Yandex Browser",
      },
      Zr = { tablet: "tablet", mobile: "mobile", desktop: "desktop", tv: "tv" },
      Fn = {
        WindowsPhone: "Windows Phone",
        Windows: "Windows",
        MacOS: "macOS",
        iOS: "iOS",
        Android: "Android",
        WebOS: "WebOS",
        BlackBerry: "BlackBerry",
        Bada: "Bada",
        Tizen: "Tizen",
        Linux: "Linux",
        ChromeOS: "Chrome OS",
        PlayStation4: "PlayStation 4",
        Roku: "Roku",
      },
      Xa = {
        EdgeHTML: "EdgeHTML",
        Blink: "Blink",
        Trident: "Trident",
        Presto: "Presto",
        Gecko: "Gecko",
        WebKit: "WebKit",
      };
    class Ue {
      static getFirstMatch(e, r) {
        const n = r.match(e);
        return (n && n.length > 0 && n[1]) || "";
      }
      static getSecondMatch(e, r) {
        const n = r.match(e);
        return (n && n.length > 1 && n[2]) || "";
      }
      static matchAndReturnConst(e, r, n) {
        if (e.test(r)) return n;
      }
      static getWindowsVersionName(e) {
        switch (e) {
          case "NT":
            return "NT";
          case "XP":
            return "XP";
          case "NT 5.0":
            return "2000";
          case "NT 5.1":
            return "XP";
          case "NT 5.2":
            return "2003";
          case "NT 6.0":
            return "Vista";
          case "NT 6.1":
            return "7";
          case "NT 6.2":
            return "8";
          case "NT 6.3":
            return "8.1";
          case "NT 10.0":
            return "10";
          default:
            return;
        }
      }
      static getMacOSVersionName(e) {
        const r = e
          .split(".")
          .splice(0, 2)
          .map((n) => parseInt(n, 10) || 0);
        if ((r.push(0), r[0] === 10))
          switch (r[1]) {
            case 5:
              return "Leopard";
            case 6:
              return "Snow Leopard";
            case 7:
              return "Lion";
            case 8:
              return "Mountain Lion";
            case 9:
              return "Mavericks";
            case 10:
              return "Yosemite";
            case 11:
              return "El Capitan";
            case 12:
              return "Sierra";
            case 13:
              return "High Sierra";
            case 14:
              return "Mojave";
            case 15:
              return "Catalina";
            default:
              return;
          }
      }
      static getAndroidVersionName(e) {
        const r = e
          .split(".")
          .splice(0, 2)
          .map((n) => parseInt(n, 10) || 0);
        if ((r.push(0), !(r[0] === 1 && r[1] < 5))) {
          if (r[0] === 1 && r[1] < 6) return "Cupcake";
          if (r[0] === 1 && r[1] >= 6) return "Donut";
          if (r[0] === 2 && r[1] < 2) return "Eclair";
          if (r[0] === 2 && r[1] === 2) return "Froyo";
          if (r[0] === 2 && r[1] > 2) return "Gingerbread";
          if (r[0] === 3) return "Honeycomb";
          if (r[0] === 4 && r[1] < 1) return "Ice Cream Sandwich";
          if (r[0] === 4 && r[1] < 4) return "Jelly Bean";
          if (r[0] === 4 && r[1] >= 4) return "KitKat";
          if (r[0] === 5) return "Lollipop";
          if (r[0] === 6) return "Marshmallow";
          if (r[0] === 7) return "Nougat";
          if (r[0] === 8) return "Oreo";
          if (r[0] === 9) return "Pie";
        }
      }
      static getVersionPrecision(e) {
        return e.split(".").length;
      }
      static compareVersions(e, r, n = !1) {
        const i = Ue.getVersionPrecision(e),
          a = Ue.getVersionPrecision(r);
        let l = Math.max(i, a),
          u = 0;
        const p = Ue.map([e, r], (m) => {
          const v = l - Ue.getVersionPrecision(m),
            w = m + new Array(v + 1).join(".0");
          return Ue.map(
            w.split("."),
            (S) => new Array(20 - S.length).join("0") + S
          ).reverse();
        });
        for (n && (u = l - Math.min(i, a)), l -= 1; l >= u; ) {
          if (p[0][l] > p[1][l]) return 1;
          if (p[0][l] === p[1][l]) {
            if (l === u) return 0;
            l -= 1;
          } else if (p[0][l] < p[1][l]) return -1;
        }
      }
      static map(e, r) {
        const n = [];
        let i;
        if (Array.prototype.map) return Array.prototype.map.call(e, r);
        for (i = 0; i < e.length; i += 1) n.push(r(e[i]));
        return n;
      }
      static find(e, r) {
        let n, i;
        if (Array.prototype.find) return Array.prototype.find.call(e, r);
        for (n = 0, i = e.length; n < i; n += 1) {
          const a = e[n];
          if (r(a, n)) return a;
        }
      }
      static assign(e, ...r) {
        const n = e;
        let i, a;
        if (Object.assign) return Object.assign(e, ...r);
        for (i = 0, a = r.length; i < a; i += 1) {
          const l = r[i];
          typeof l == "object" &&
            l !== null &&
            Object.keys(l).forEach((u) => {
              n[u] = l[u];
            });
        }
        return e;
      }
      static getBrowserAlias(e) {
        return WD[e];
      }
      static getBrowserTypeByAlias(e) {
        return $A[e] || "";
      }
    }
    const fr = /version\/(\d+(\.?_?\d+)+)/i,
      XD = [
        {
          test: [/googlebot/i],
          describe(t) {
            const e = { name: "Googlebot" },
              r =
                Ue.getFirstMatch(/googlebot\/(\d+(\.\d+))/i, t) ||
                Ue.getFirstMatch(fr, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/opera/i],
          describe(t) {
            const e = { name: "Opera" },
              r =
                Ue.getFirstMatch(fr, t) ||
                Ue.getFirstMatch(/(?:opera)[\s/](\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/opr\/|opios/i],
          describe(t) {
            const e = { name: "Opera" },
              r =
                Ue.getFirstMatch(/(?:opr|opios)[\s/](\S+)/i, t) ||
                Ue.getFirstMatch(fr, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/SamsungBrowser/i],
          describe(t) {
            const e = { name: "Samsung Internet for Android" },
              r =
                Ue.getFirstMatch(fr, t) ||
                Ue.getFirstMatch(/(?:SamsungBrowser)[\s/](\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/Whale/i],
          describe(t) {
            const e = { name: "NAVER Whale Browser" },
              r =
                Ue.getFirstMatch(fr, t) ||
                Ue.getFirstMatch(/(?:whale)[\s/](\d+(?:\.\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/MZBrowser/i],
          describe(t) {
            const e = { name: "MZ Browser" },
              r =
                Ue.getFirstMatch(/(?:MZBrowser)[\s/](\d+(?:\.\d+)+)/i, t) ||
                Ue.getFirstMatch(fr, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/focus/i],
          describe(t) {
            const e = { name: "Focus" },
              r =
                Ue.getFirstMatch(/(?:focus)[\s/](\d+(?:\.\d+)+)/i, t) ||
                Ue.getFirstMatch(fr, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/swing/i],
          describe(t) {
            const e = { name: "Swing" },
              r =
                Ue.getFirstMatch(/(?:swing)[\s/](\d+(?:\.\d+)+)/i, t) ||
                Ue.getFirstMatch(fr, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/coast/i],
          describe(t) {
            const e = { name: "Opera Coast" },
              r =
                Ue.getFirstMatch(fr, t) ||
                Ue.getFirstMatch(/(?:coast)[\s/](\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/opt\/\d+(?:.?_?\d+)+/i],
          describe(t) {
            const e = { name: "Opera Touch" },
              r =
                Ue.getFirstMatch(/(?:opt)[\s/](\d+(\.?_?\d+)+)/i, t) ||
                Ue.getFirstMatch(fr, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/yabrowser/i],
          describe(t) {
            const e = { name: "Yandex Browser" },
              r =
                Ue.getFirstMatch(/(?:yabrowser)[\s/](\d+(\.?_?\d+)+)/i, t) ||
                Ue.getFirstMatch(fr, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/ucbrowser/i],
          describe(t) {
            const e = { name: "UC Browser" },
              r =
                Ue.getFirstMatch(fr, t) ||
                Ue.getFirstMatch(/(?:ucbrowser)[\s/](\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/Maxthon|mxios/i],
          describe(t) {
            const e = { name: "Maxthon" },
              r =
                Ue.getFirstMatch(fr, t) ||
                Ue.getFirstMatch(/(?:Maxthon|mxios)[\s/](\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/epiphany/i],
          describe(t) {
            const e = { name: "Epiphany" },
              r =
                Ue.getFirstMatch(fr, t) ||
                Ue.getFirstMatch(/(?:epiphany)[\s/](\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/puffin/i],
          describe(t) {
            const e = { name: "Puffin" },
              r =
                Ue.getFirstMatch(fr, t) ||
                Ue.getFirstMatch(/(?:puffin)[\s/](\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/sleipnir/i],
          describe(t) {
            const e = { name: "Sleipnir" },
              r =
                Ue.getFirstMatch(fr, t) ||
                Ue.getFirstMatch(/(?:sleipnir)[\s/](\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/k-meleon/i],
          describe(t) {
            const e = { name: "K-Meleon" },
              r =
                Ue.getFirstMatch(fr, t) ||
                Ue.getFirstMatch(/(?:k-meleon)[\s/](\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/micromessenger/i],
          describe(t) {
            const e = { name: "WeChat" },
              r =
                Ue.getFirstMatch(
                  /(?:micromessenger)[\s/](\d+(\.?_?\d+)+)/i,
                  t
                ) || Ue.getFirstMatch(fr, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/qqbrowser/i],
          describe(t) {
            const e = {
                name: /qqbrowserlite/i.test(t)
                  ? "QQ Browser Lite"
                  : "QQ Browser",
              },
              r =
                Ue.getFirstMatch(
                  /(?:qqbrowserlite|qqbrowser)[/](\d+(\.?_?\d+)+)/i,
                  t
                ) || Ue.getFirstMatch(fr, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/msie|trident/i],
          describe(t) {
            const e = { name: "Internet Explorer" },
              r = Ue.getFirstMatch(/(?:msie |rv:)(\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/\sedg\//i],
          describe(t) {
            const e = { name: "Microsoft Edge" },
              r = Ue.getFirstMatch(/\sedg\/(\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/edg([ea]|ios)/i],
          describe(t) {
            const e = { name: "Microsoft Edge" },
              r = Ue.getSecondMatch(/edg([ea]|ios)\/(\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/vivaldi/i],
          describe(t) {
            const e = { name: "Vivaldi" },
              r = Ue.getFirstMatch(/vivaldi\/(\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/seamonkey/i],
          describe(t) {
            const e = { name: "SeaMonkey" },
              r = Ue.getFirstMatch(/seamonkey\/(\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/sailfish/i],
          describe(t) {
            const e = { name: "Sailfish" },
              r = Ue.getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/silk/i],
          describe(t) {
            const e = { name: "Amazon Silk" },
              r = Ue.getFirstMatch(/silk\/(\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/phantom/i],
          describe(t) {
            const e = { name: "PhantomJS" },
              r = Ue.getFirstMatch(/phantomjs\/(\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/slimerjs/i],
          describe(t) {
            const e = { name: "SlimerJS" },
              r = Ue.getFirstMatch(/slimerjs\/(\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/blackberry|\bbb\d+/i, /rim\stablet/i],
          describe(t) {
            const e = { name: "BlackBerry" },
              r =
                Ue.getFirstMatch(fr, t) ||
                Ue.getFirstMatch(/blackberry[\d]+\/(\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/(web|hpw)[o0]s/i],
          describe(t) {
            const e = { name: "WebOS Browser" },
              r =
                Ue.getFirstMatch(fr, t) ||
                Ue.getFirstMatch(/w(?:eb)?[o0]sbrowser\/(\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/bada/i],
          describe(t) {
            const e = { name: "Bada" },
              r = Ue.getFirstMatch(/dolfin\/(\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/tizen/i],
          describe(t) {
            const e = { name: "Tizen" },
              r =
                Ue.getFirstMatch(
                  /(?:tizen\s?)?browser\/(\d+(\.?_?\d+)+)/i,
                  t
                ) || Ue.getFirstMatch(fr, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/qupzilla/i],
          describe(t) {
            const e = { name: "QupZilla" },
              r =
                Ue.getFirstMatch(/(?:qupzilla)[\s/](\d+(\.?_?\d+)+)/i, t) ||
                Ue.getFirstMatch(fr, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/firefox|iceweasel|fxios/i],
          describe(t) {
            const e = { name: "Firefox" },
              r = Ue.getFirstMatch(
                /(?:firefox|iceweasel|fxios)[\s/](\d+(\.?_?\d+)+)/i,
                t
              );
            return r && (e.version = r), e;
          },
        },
        {
          test: [/electron/i],
          describe(t) {
            const e = { name: "Electron" },
              r = Ue.getFirstMatch(/(?:electron)\/(\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/MiuiBrowser/i],
          describe(t) {
            const e = { name: "Miui" },
              r = Ue.getFirstMatch(/(?:MiuiBrowser)[\s/](\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/chromium/i],
          describe(t) {
            const e = { name: "Chromium" },
              r =
                Ue.getFirstMatch(/(?:chromium)[\s/](\d+(\.?_?\d+)+)/i, t) ||
                Ue.getFirstMatch(fr, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/chrome|crios|crmo/i],
          describe(t) {
            const e = { name: "Chrome" },
              r = Ue.getFirstMatch(
                /(?:chrome|crios|crmo)\/(\d+(\.?_?\d+)+)/i,
                t
              );
            return r && (e.version = r), e;
          },
        },
        {
          test: [/GSA/i],
          describe(t) {
            const e = { name: "Google Search" },
              r = Ue.getFirstMatch(/(?:GSA)\/(\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test(t) {
            const e = !t.test(/like android/i),
              r = t.test(/android/i);
            return e && r;
          },
          describe(t) {
            const e = { name: "Android Browser" },
              r = Ue.getFirstMatch(fr, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/playstation 4/i],
          describe(t) {
            const e = { name: "PlayStation 4" },
              r = Ue.getFirstMatch(fr, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/safari|applewebkit/i],
          describe(t) {
            const e = { name: "Safari" },
              r = Ue.getFirstMatch(fr, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/.*/i],
          describe(t) {
            const e = /^(.*)\/(.*) /,
              r = /^(.*)\/(.*)[ \t]\((.*)/,
              n = t.search("\\(") !== -1 ? r : e;
            return {
              name: Ue.getFirstMatch(n, t),
              version: Ue.getSecondMatch(n, t),
            };
          },
        },
      ],
      jD = [
        {
          test: [/Roku\/DVP/],
          describe(t) {
            const e = Ue.getFirstMatch(/Roku\/DVP-(\d+\.\d+)/i, t);
            return { name: Fn.Roku, version: e };
          },
        },
        {
          test: [/windows phone/i],
          describe(t) {
            const e = Ue.getFirstMatch(
              /windows phone (?:os)?\s?(\d+(\.\d+)*)/i,
              t
            );
            return { name: Fn.WindowsPhone, version: e };
          },
        },
        {
          test: [/windows /i],
          describe(t) {
            const e = Ue.getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i, t),
              r = Ue.getWindowsVersionName(e);
            return { name: Fn.Windows, version: e, versionName: r };
          },
        },
        {
          test: [/Macintosh(.*?) FxiOS(.*?)\//],
          describe(t) {
            const e = { name: Fn.iOS },
              r = Ue.getSecondMatch(/(Version\/)(\d[\d.]+)/, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/macintosh/i],
          describe(t) {
            const e = Ue.getFirstMatch(/mac os x (\d+(\.?_?\d+)+)/i, t).replace(
                /[_\s]/g,
                "."
              ),
              r = Ue.getMacOSVersionName(e),
              n = { name: Fn.MacOS, version: e };
            return r && (n.versionName = r), n;
          },
        },
        {
          test: [/(ipod|iphone|ipad)/i],
          describe(t) {
            const e = Ue.getFirstMatch(
              /os (\d+([_\s]\d+)*) like mac os x/i,
              t
            ).replace(/[_\s]/g, ".");
            return { name: Fn.iOS, version: e };
          },
        },
        {
          test(t) {
            const e = !t.test(/like android/i),
              r = t.test(/android/i);
            return e && r;
          },
          describe(t) {
            const e = Ue.getFirstMatch(/android[\s/-](\d+(\.\d+)*)/i, t),
              r = Ue.getAndroidVersionName(e),
              n = { name: Fn.Android, version: e };
            return r && (n.versionName = r), n;
          },
        },
        {
          test: [/(web|hpw)[o0]s/i],
          describe(t) {
            const e = Ue.getFirstMatch(/(?:web|hpw)[o0]s\/(\d+(\.\d+)*)/i, t),
              r = { name: Fn.WebOS };
            return e && e.length && (r.version = e), r;
          },
        },
        {
          test: [/blackberry|\bbb\d+/i, /rim\stablet/i],
          describe(t) {
            const e =
              Ue.getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i, t) ||
              Ue.getFirstMatch(/blackberry\d+\/(\d+([_\s]\d+)*)/i, t) ||
              Ue.getFirstMatch(/\bbb(\d+)/i, t);
            return { name: Fn.BlackBerry, version: e };
          },
        },
        {
          test: [/bada/i],
          describe(t) {
            const e = Ue.getFirstMatch(/bada\/(\d+(\.\d+)*)/i, t);
            return { name: Fn.Bada, version: e };
          },
        },
        {
          test: [/tizen/i],
          describe(t) {
            const e = Ue.getFirstMatch(/tizen[/\s](\d+(\.\d+)*)/i, t);
            return { name: Fn.Tizen, version: e };
          },
        },
        {
          test: [/linux/i],
          describe() {
            return { name: Fn.Linux };
          },
        },
        {
          test: [/CrOS/],
          describe() {
            return { name: Fn.ChromeOS };
          },
        },
        {
          test: [/PlayStation 4/],
          describe(t) {
            const e = Ue.getFirstMatch(/PlayStation 4[/\s](\d+(\.\d+)*)/i, t);
            return { name: Fn.PlayStation4, version: e };
          },
        },
      ],
      GD = [
        {
          test: [/googlebot/i],
          describe() {
            return { type: "bot", vendor: "Google" };
          },
        },
        {
          test: [/huawei/i],
          describe(t) {
            const e = Ue.getFirstMatch(/(can-l01)/i, t) && "Nova",
              r = { type: Zr.mobile, vendor: "Huawei" };
            return e && (r.model = e), r;
          },
        },
        {
          test: [/nexus\s*(?:7|8|9|10).*/i],
          describe() {
            return { type: Zr.tablet, vendor: "Nexus" };
          },
        },
        {
          test: [/ipad/i],
          describe() {
            return { type: Zr.tablet, vendor: "Apple", model: "iPad" };
          },
        },
        {
          test: [/Macintosh(.*?) FxiOS(.*?)\//],
          describe() {
            return { type: Zr.tablet, vendor: "Apple", model: "iPad" };
          },
        },
        {
          test: [/kftt build/i],
          describe() {
            return {
              type: Zr.tablet,
              vendor: "Amazon",
              model: "Kindle Fire HD 7",
            };
          },
        },
        {
          test: [/silk/i],
          describe() {
            return { type: Zr.tablet, vendor: "Amazon" };
          },
        },
        {
          test: [/tablet(?! pc)/i],
          describe() {
            return { type: Zr.tablet };
          },
        },
        {
          test(t) {
            const e = t.test(/ipod|iphone/i),
              r = t.test(/like (ipod|iphone)/i);
            return e && !r;
          },
          describe(t) {
            const e = Ue.getFirstMatch(/(ipod|iphone)/i, t);
            return { type: Zr.mobile, vendor: "Apple", model: e };
          },
        },
        {
          test: [/nexus\s*[0-6].*/i, /galaxy nexus/i],
          describe() {
            return { type: Zr.mobile, vendor: "Nexus" };
          },
        },
        {
          test: [/[^-]mobi/i],
          describe() {
            return { type: Zr.mobile };
          },
        },
        {
          test(t) {
            return t.getBrowserName(!0) === "blackberry";
          },
          describe() {
            return { type: Zr.mobile, vendor: "BlackBerry" };
          },
        },
        {
          test(t) {
            return t.getBrowserName(!0) === "bada";
          },
          describe() {
            return { type: Zr.mobile };
          },
        },
        {
          test(t) {
            return t.getBrowserName() === "windows phone";
          },
          describe() {
            return { type: Zr.mobile, vendor: "Microsoft" };
          },
        },
        {
          test(t) {
            const e = Number(String(t.getOSVersion()).split(".")[0]);
            return t.getOSName(!0) === "android" && e >= 3;
          },
          describe() {
            return { type: Zr.tablet };
          },
        },
        {
          test(t) {
            return t.getOSName(!0) === "android";
          },
          describe() {
            return { type: Zr.mobile };
          },
        },
        {
          test(t) {
            return t.getOSName(!0) === "macos";
          },
          describe() {
            return { type: Zr.desktop, vendor: "Apple" };
          },
        },
        {
          test(t) {
            return t.getOSName(!0) === "windows";
          },
          describe() {
            return { type: Zr.desktop };
          },
        },
        {
          test(t) {
            return t.getOSName(!0) === "linux";
          },
          describe() {
            return { type: Zr.desktop };
          },
        },
        {
          test(t) {
            return t.getOSName(!0) === "playstation 4";
          },
          describe() {
            return { type: Zr.tv };
          },
        },
        {
          test(t) {
            return t.getOSName(!0) === "roku";
          },
          describe() {
            return { type: Zr.tv };
          },
        },
      ],
      YD = [
        {
          test(t) {
            return t.getBrowserName(!0) === "microsoft edge";
          },
          describe(t) {
            if (/\sedg\//i.test(t)) return { name: Xa.Blink };
            const e = Ue.getFirstMatch(/edge\/(\d+(\.?_?\d+)+)/i, t);
            return { name: Xa.EdgeHTML, version: e };
          },
        },
        {
          test: [/trident/i],
          describe(t) {
            const e = { name: Xa.Trident },
              r = Ue.getFirstMatch(/trident\/(\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test(t) {
            return t.test(/presto/i);
          },
          describe(t) {
            const e = { name: Xa.Presto },
              r = Ue.getFirstMatch(/presto\/(\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test(t) {
            const e = t.test(/gecko/i),
              r = t.test(/like gecko/i);
            return e && !r;
          },
          describe(t) {
            const e = { name: Xa.Gecko },
              r = Ue.getFirstMatch(/gecko\/(\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
        {
          test: [/(apple)?webkit\/537\.36/i],
          describe() {
            return { name: Xa.Blink };
          },
        },
        {
          test: [/(apple)?webkit/i],
          describe(t) {
            const e = { name: Xa.WebKit },
              r = Ue.getFirstMatch(/webkit\/(\d+(\.?_?\d+)+)/i, t);
            return r && (e.version = r), e;
          },
        },
      ];
    class ZA {
      constructor(e, r = !1) {
        if (e == null || e === "")
          throw new Error("UserAgent parameter can't be empty");
        (this._ua = e), (this.parsedResult = {}), r !== !0 && this.parse();
      }
      getUA() {
        return this._ua;
      }
      test(e) {
        return e.test(this._ua);
      }
      parseBrowser() {
        this.parsedResult.browser = {};
        const e = Ue.find(XD, (r) => {
          if (typeof r.test == "function") return r.test(this);
          if (r.test instanceof Array) return r.test.some((n) => this.test(n));
          throw new Error("Browser's test function is not valid");
        });
        return (
          e && (this.parsedResult.browser = e.describe(this.getUA())),
          this.parsedResult.browser
        );
      }
      getBrowser() {
        return this.parsedResult.browser
          ? this.parsedResult.browser
          : this.parseBrowser();
      }
      getBrowserName(e) {
        return e
          ? String(this.getBrowser().name).toLowerCase() || ""
          : this.getBrowser().name || "";
      }
      getBrowserVersion() {
        return this.getBrowser().version;
      }
      getOS() {
        return this.parsedResult.os ? this.parsedResult.os : this.parseOS();
      }
      parseOS() {
        this.parsedResult.os = {};
        const e = Ue.find(jD, (r) => {
          if (typeof r.test == "function") return r.test(this);
          if (r.test instanceof Array) return r.test.some((n) => this.test(n));
          throw new Error("Browser's test function is not valid");
        });
        return (
          e && (this.parsedResult.os = e.describe(this.getUA())),
          this.parsedResult.os
        );
      }
      getOSName(e) {
        const { name: r } = this.getOS();
        return e ? String(r).toLowerCase() || "" : r || "";
      }
      getOSVersion() {
        return this.getOS().version;
      }
      getPlatform() {
        return this.parsedResult.platform
          ? this.parsedResult.platform
          : this.parsePlatform();
      }
      getPlatformType(e = !1) {
        const { type: r } = this.getPlatform();
        return e ? String(r).toLowerCase() || "" : r || "";
      }
      parsePlatform() {
        this.parsedResult.platform = {};
        const e = Ue.find(GD, (r) => {
          if (typeof r.test == "function") return r.test(this);
          if (r.test instanceof Array) return r.test.some((n) => this.test(n));
          throw new Error("Browser's test function is not valid");
        });
        return (
          e && (this.parsedResult.platform = e.describe(this.getUA())),
          this.parsedResult.platform
        );
      }
      getEngine() {
        return this.parsedResult.engine
          ? this.parsedResult.engine
          : this.parseEngine();
      }
      getEngineName(e) {
        return e
          ? String(this.getEngine().name).toLowerCase() || ""
          : this.getEngine().name || "";
      }
      parseEngine() {
        this.parsedResult.engine = {};
        const e = Ue.find(YD, (r) => {
          if (typeof r.test == "function") return r.test(this);
          if (r.test instanceof Array) return r.test.some((n) => this.test(n));
          throw new Error("Browser's test function is not valid");
        });
        return (
          e && (this.parsedResult.engine = e.describe(this.getUA())),
          this.parsedResult.engine
        );
      }
      parse() {
        return (
          this.parseBrowser(),
          this.parseOS(),
          this.parsePlatform(),
          this.parseEngine(),
          this
        );
      }
      getResult() {
        return Ue.assign({}, this.parsedResult);
      }
      satisfies(e) {
        const r = {};
        let n = 0;
        const i = {};
        let a = 0;
        if (
          (Object.keys(e).forEach((l) => {
            const u = e[l];
            typeof u == "string"
              ? ((i[l] = u), (a += 1))
              : typeof u == "object" && ((r[l] = u), (n += 1));
          }),
          n > 0)
        ) {
          const l = Object.keys(r),
            u = Ue.find(l, (m) => this.isOS(m));
          if (u) {
            const m = this.satisfies(r[u]);
            if (m !== void 0) return m;
          }
          const p = Ue.find(l, (m) => this.isPlatform(m));
          if (p) {
            const m = this.satisfies(r[p]);
            if (m !== void 0) return m;
          }
        }
        if (a > 0) {
          const l = Object.keys(i),
            u = Ue.find(l, (p) => this.isBrowser(p, !0));
          if (u !== void 0) return this.compareVersion(i[u]);
        }
      }
      isBrowser(e, r = !1) {
        const n = this.getBrowserName().toLowerCase();
        let i = e.toLowerCase();
        const a = Ue.getBrowserTypeByAlias(i);
        return r && a && (i = a.toLowerCase()), i === n;
      }
      compareVersion(e) {
        let r = [0],
          n = e,
          i = !1;
        const a = this.getBrowserVersion();
        if (typeof a == "string")
          return (
            e[0] === ">" || e[0] === "<"
              ? ((n = e.substr(1)),
                e[1] === "=" ? ((i = !0), (n = e.substr(2))) : (r = []),
                e[0] === ">" ? r.push(1) : r.push(-1))
              : e[0] === "="
              ? (n = e.substr(1))
              : e[0] === "~" && ((i = !0), (n = e.substr(1))),
            r.indexOf(Ue.compareVersions(a, n, i)) > -1
          );
      }
      isOS(e) {
        return this.getOSName(!0) === String(e).toLowerCase();
      }
      isPlatform(e) {
        return this.getPlatformType(!0) === String(e).toLowerCase();
      }
      isEngine(e) {
        return this.getEngineName(!0) === String(e).toLowerCase();
      }
      is(e, r = !1) {
        return this.isBrowser(e, r) || this.isOS(e) || this.isPlatform(e);
      }
      some(e = []) {
        return e.some((r) => this.is(r));
      }
    }
    class VD {
      static getParser(e, r = !1) {
        if (typeof e != "string")
          throw new Error("UserAgent should be a string");
        return new ZA(e, r);
      }
      static parse(e) {
        return new ZA(e).getResult();
      }
      static get BROWSER_MAP() {
        return $A;
      }
      static get ENGINE_MAP() {
        return Xa;
      }
      static get OS_MAP() {
        return Fn;
      }
      static get PLATFORMS_MAP() {
        return Zr;
      }
    }
    function qD(t, e, r, n) {
      function i(a) {
        return a instanceof r
          ? a
          : new r(function (l) {
              l(a);
            });
      }
      return new (r || (r = Promise))(function (a, l) {
        function u(v) {
          try {
            m(n.next(v));
          } catch (w) {
            l(w);
          }
        }
        function p(v) {
          try {
            m(n.throw(v));
          } catch (w) {
            l(w);
          }
        }
        function m(v) {
          v.done ? a(v.value) : i(v.value).then(u, p);
        }
        m((n = n.apply(t, e || [])).next());
      });
    }
    function KD(t, e) {
      var r = {
          label: 0,
          sent: function () {
            if (a[0] & 1) throw a[1];
            return a[1];
          },
          trys: [],
          ops: [],
        },
        n,
        i,
        a,
        l;
      return (
        (l = { next: u(0), throw: u(1), return: u(2) }),
        typeof Symbol == "function" &&
          (l[Symbol.iterator] = function () {
            return this;
          }),
        l
      );
      function u(m) {
        return function (v) {
          return p([m, v]);
        };
      }
      function p(m) {
        if (n) throw new TypeError("Generator is already executing.");
        for (; r; )
          try {
            if (
              ((n = 1),
              i &&
                (a =
                  m[0] & 2
                    ? i.return
                    : m[0]
                    ? i.throw || ((a = i.return) && a.call(i), 0)
                    : i.next) &&
                !(a = a.call(i, m[1])).done)
            )
              return a;
            switch (((i = 0), a && (m = [m[0] & 2, a.value]), m[0])) {
              case 0:
              case 1:
                a = m;
                break;
              case 4:
                return r.label++, { value: m[1], done: !1 };
              case 5:
                r.label++, (i = m[1]), (m = [0]);
                continue;
              case 7:
                (m = r.ops.pop()), r.trys.pop();
                continue;
              default:
                if (
                  ((a = r.trys),
                  !(a = a.length > 0 && a[a.length - 1]) &&
                    (m[0] === 6 || m[0] === 2))
                ) {
                  r = 0;
                  continue;
                }
                if (m[0] === 3 && (!a || (m[1] > a[0] && m[1] < a[3]))) {
                  r.label = m[1];
                  break;
                }
                if (m[0] === 6 && r.label < a[1]) {
                  (r.label = a[1]), (a = m);
                  break;
                }
                if (a && r.label < a[2]) {
                  (r.label = a[2]), r.ops.push(m);
                  break;
                }
                a[2] && r.ops.pop(), r.trys.pop();
                continue;
            }
            m = e.call(t, r);
          } catch (v) {
            (m = [6, v]), (i = 0);
          } finally {
            n = a = 0;
          }
        if (m[0] & 5) throw m[1];
        return { value: m[0] ? m[1] : void 0, done: !0 };
      }
    }
    var ms = {
        INSTALLED: "INSTALLED",
        NOT_INSTALLED: "NOT_INSTALLED",
        REGISTERED: "REGISTERED",
        REGISTERING: "REGISTERING",
        RELOADING: "RELOADING",
      },
      QA = {
        CHROME:
          "https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn",
        FIREFOX: "https://addons.mozilla.org/firefox/addon/ether-metamask/",
        DEFAULT: "https://metamask.io",
      },
      If = "REGISTRATION_IN_PROGRESS",
      JA = "FORWARDER_ID",
      b0 = (function () {
        function t(e) {
          var r = e === void 0 ? {} : e,
            n = r.forwarderOrigin,
            i = n === void 0 ? "https://fwd.metamask.io" : n,
            a = r.forwarderMode,
            l = a === void 0 ? t.FORWARDER_MODE.INJECT : a;
          (this.forwarderOrigin = i),
            (this.forwarderMode = l),
            (this.state = t.isMetaMaskInstalled()
              ? ms.INSTALLED
              : ms.NOT_INSTALLED);
          var u = t._detectBrowser();
          u ? (this.downloadUrl = QA[u]) : (this.downloadUrl = QA.DEFAULT),
            (this._onMessage = this._onMessage.bind(this)),
            (this._onMessageFromForwarder =
              this._onMessageFromForwarder.bind(this)),
            (this._openForwarder = this._openForwarder.bind(this)),
            (this._openDownloadPage = this._openDownloadPage.bind(this)),
            (this.startOnboarding = this.startOnboarding.bind(this)),
            (this.stopOnboarding = this.stopOnboarding.bind(this)),
            window.addEventListener("message", this._onMessage),
            l === t.FORWARDER_MODE.INJECT &&
              sessionStorage.getItem(If) === "true" &&
              t._injectForwarder(this.forwarderOrigin);
        }
        return (
          (t.prototype._onMessage = function (e) {
            if (e.origin === this.forwarderOrigin) {
              if (e.data.type === "metamask:reload")
                return this._onMessageFromForwarder(e);
              console.debug(
                "Unknown message from '" +
                  e.origin +
                  "' with data " +
                  JSON.stringify(e.data)
              );
            }
          }),
          (t.prototype._onMessageUnknownStateError = function (e) {
            throw new Error("Unknown state: '" + e + "'");
          }),
          (t.prototype._onMessageFromForwarder = function (e) {
            return qD(this, void 0, void 0, function () {
              var r;
              return KD(this, function (n) {
                switch (n.label) {
                  case 0:
                    switch (((r = this.state), r)) {
                      case ms.RELOADING:
                        return [3, 1];
                      case ms.NOT_INSTALLED:
                        return [3, 2];
                      case ms.INSTALLED:
                        return [3, 3];
                      case ms.REGISTERING:
                        return [3, 5];
                      case ms.REGISTERED:
                        return [3, 6];
                    }
                    return [3, 7];
                  case 1:
                    return (
                      console.debug("Ignoring message while reloading"), [3, 8]
                    );
                  case 2:
                    return (
                      console.debug("Reloading now to register with MetaMask"),
                      (this.state = ms.RELOADING),
                      location.reload(),
                      [3, 8]
                    );
                  case 3:
                    return (
                      console.debug("Registering with MetaMask"),
                      (this.state = ms.REGISTERING),
                      [4, t._register()]
                    );
                  case 4:
                    return (
                      n.sent(),
                      (this.state = ms.REGISTERED),
                      e.source.postMessage(
                        { type: "metamask:registrationCompleted" },
                        e.origin
                      ),
                      this.stopOnboarding(),
                      [3, 8]
                    );
                  case 5:
                    return (
                      console.debug(
                        "Already registering - ignoring reload message"
                      ),
                      [3, 8]
                    );
                  case 6:
                    return (
                      console.debug(
                        "Already registered - ignoring reload message"
                      ),
                      [3, 8]
                    );
                  case 7:
                    this._onMessageUnknownStateError(this.state), (n.label = 8);
                  case 8:
                    return [2];
                }
              });
            });
          }),
          (t.prototype.startOnboarding = function () {
            sessionStorage.setItem(If, "true"),
              this._openDownloadPage(),
              this._openForwarder();
          }),
          (t.prototype.stopOnboarding = function () {
            sessionStorage.getItem(If) === "true" &&
              (this.forwarderMode === t.FORWARDER_MODE.INJECT &&
                (console.debug("Removing forwarder"), t._removeForwarder()),
              sessionStorage.setItem(If, "false"));
          }),
          (t.prototype._openForwarder = function () {
            this.forwarderMode === t.FORWARDER_MODE.OPEN_TAB
              ? window.open(this.forwarderOrigin, "_blank")
              : t._injectForwarder(this.forwarderOrigin);
          }),
          (t.prototype._openDownloadPage = function () {
            window.open(this.downloadUrl, "_blank");
          }),
          (t.isMetaMaskInstalled = function () {
            return !!(window.ethereum && window.ethereum.isMetaMask);
          }),
          (t._register = function () {
            return window.ethereum.request({
              method: "wallet_registerOnboarding",
            });
          }),
          (t._injectForwarder = function (e) {
            var r = document.body,
              n = document.createElement("iframe");
            n.setAttribute("height", "0"),
              n.setAttribute("width", "0"),
              n.setAttribute("style", "display: none;"),
              n.setAttribute("src", e),
              n.setAttribute("id", JA),
              r.insertBefore(n, r.children[0]);
          }),
          (t._removeForwarder = function () {
            var e;
            (e = document.getElementById(JA)) === null ||
              e === void 0 ||
              e.remove();
          }),
          (t._detectBrowser = function () {
            var e = VD.parse(window.navigator.userAgent);
            return e.browser.name === "Firefox"
              ? "FIREFOX"
              : ["Chrome", "Chromium"].includes(e.browser.name || "")
              ? "CHROME"
              : null;
          }),
          (t.FORWARDER_MODE = { INJECT: "INJECT", OPEN_TAB: "OPEN_TAB" }),
          t
        );
      })();
    function $D(t) {
      return t !== void 0;
    }
    var Go = ((t) => (
      (t[(t.chrome = 0)] = "chrome"),
      (t[(t.firefox = 1)] = "firefox"),
      (t[(t.safari = 2)] = "safari"),
      (t[(t.opera = 3)] = "opera"),
      (t[(t.edge = 4)] = "edge"),
      (t[(t.brave = 5)] = "brave"),
      (t[(t.metamask = 6)] = "metamask"),
      (t[(t.noBrowser = 7)] = "noBrowser"),
      t
    ))(Go || {});
    function ZD() {
      const t = navigator.userAgent;
      let e;
      return (
        /chrome|chromium|crios/iu.test(t)
          ? (e = 0)
          : /firefox|fxios/iu.test(t)
          ? (e = 1)
          : /safari/iu.test(t)
          ? (e = 2)
          : /opr\//iu.test(t)
          ? (e = 3)
          : /edg/iu.test(t)
          ? (e = 4)
          : /metamask/iu.test(t)
          ? (e = 6)
          : (e = 7),
        e
      );
    }
    function QD() {
      return /Android|webOS|iPhone|iPad|iPod|BlackBerry|Windows Phone/iu.test(
        navigator.userAgent
      );
    }
    const JD = [
        Go.chrome,
        Go.firefox,
        Go.opera,
        Go.edge,
        Go.brave,
        Go.metamask,
      ],
      nc = We(""),
      Gu = We(!1),
      eC = We(!1),
      tC = We(!1);
    function x0() {
      function t() {
        const { ethereum: u } = window;
        u.selectedAddress
          ? (nc.value = u.selectedAddress)
          : setTimeout(() => {
              u.selectedAddress && (nc.value = u.selectedAddress);
            }, 2e3);
      }
      function e(u) {
        u[0] ? (nc.value = u[0]) : (nc.value = "");
      }
      sr(async () => {
        var p;
        if (
          ((Gu.value =
            !((p = window.ethereum) != null && p.isBraveWallet) &&
            b0.isMetaMaskInstalled()),
          !Gu.value)
        )
          return;
        t();
        const u = await y0({ mustBeMetaMask: !0 });
        u &&
          (u.on("chainChanged", () => {
            window.location.reload();
          }),
          u.on("accountsChanged", e));
      });
      let r;
      ((u) => {
        (u[(u.userRejectedRequest = 4001)] = "userRejectedRequest"),
          (u[(u.pendingConfirmation = -32002)] = "pendingConfirmation");
      })(r || (r = {}));
      const n = We(!1);
      We("");
      async function i(u) {
        u[0] && ((n.value = !1), (nc.value = u[0]));
      }
      async function a() {
        try {
          n.value = !0;
          const u = await y0({ mustBeMetaMask: !0 });
          if (u) u.on("accountsChanged", i);
          else {
            n.value = !1;
            return;
          }
          try {
            await u.request({ method: "eth_requestAccounts" });
          } catch (p) {
            $D(p) && p.code === 4001 && (n.value = !1);
          }
        } catch {}
      }
      async function l() {
        var p;
        const u = ZD();
        if (QD() && !Gu.value) {
          eC.value = !0;
          return;
        }
        if (!JD.includes(u)) {
          tC.value = !0;
          return;
        }
        Gu.value =
          !((p = window.ethereum) != null && p.isBraveWallet) &&
          b0.isMetaMaskInstalled();
      }
      return {
        connectWallet: a,
        walletAddress: nc,
        checkBrowser: l,
        isMobileBrowser: eC,
        isUnsupportedBrowser: tC,
        isMetaMaskInstalled: Gu,
      };
    }
    const rC = (t) => (OM("data-v-18bf6a53"), (t = t()), LM(), t),
      e6 = {
        class:
          "sticky top-20 left-20 z-30 h-24 sm:h-16 bg-gradient-to-t from-gray-900/0 to-gray-900",
      },
      t6 = { class: "flex items-center" },
      r6 = rC(() =>
        ve(
          "svg",
          {
            class: "w-3 h-3",
            "aria-hidden": "true",
            xmlns: "http://www.w3.org/2000/svg",
            fill: "none",
            viewBox: "0 0 14 14",
          },
          [
            ve("path", {
              stroke: "currentColor",
              "stroke-linecap": "round",
              "stroke-linejoin": "round",
              "stroke-width": "2",
              d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
            }),
          ],
          -1
        )
      ),
      n6 = rC(() => ve("span", { class: "sr-only" }, "Close banner", -1)),
      i6 = [r6, n6],
      s6 = dt({
        __name: "TheStickyBanner",
        props: {
          type: {},
          isVisible: { type: Boolean },
          autoDismiss: { type: Boolean, default: !1 },
        },
        emits: ["dismiss"],
        setup(t, { emit: e }) {
          const r = t;
          return (
            Or(
              () => r.autoDismiss,
              (n) => {
                n &&
                  setTimeout(() => {
                    e("dismiss");
                  }, 5e3);
              },
              { immediate: !0 }
            ),
            (n, i) => (
              je(),
              et("div", e6, [
                $e(
                  nf,
                  { name: "slide" },
                  {
                    default: Ft(() => [
                      r.isVisible
                        ? (je(),
                          et(
                            "div",
                            {
                              key: 0,
                              tabindex: "-1",
                              class: ot([
                                "flex justify-between w-full p-4 border-b",
                                [
                                  {
                                    "bg-project-primary/25":
                                      r.type === Xe(ps).success,
                                  },
                                  {
                                    "bg-yellow-400/25":
                                      r.type === Xe(ps).warning,
                                  },
                                  { "bg-red-500/25": r.type === Xe(ps).danger },
                                  {
                                    "bg-gray-700 border-gray-600":
                                      r.type === Xe(ps).info,
                                  },
                                ],
                              ]),
                            },
                            [
                              Oo(n.$slots, "default", {}, void 0, !0),
                              ve("div", t6, [
                                ve(
                                  "button",
                                  {
                                    onClick:
                                      i[0] || (i[0] = (a) => e("dismiss")),
                                    type: "button",
                                    class:
                                      "flex-shrink-0 inline-flex justify-center w-7 h-7 items-center text-gray-400 rounded-lg text-sm p-1.5 hover:bg-gray-600 hover:text-white",
                                  },
                                  i6
                                ),
                              ]),
                            ],
                            2
                          ))
                        : Yr("", !0),
                    ]),
                    _: 3,
                  }
                ),
              ])
            )
          );
        },
      }),
      a6 = Jl(s6, [["__scopeId", "data-v-18bf6a53"]]),
      o6 = { class: "flex items-center mx-auto" },
      l6 = { class: "flex items-center text-sm font-normal text-gray-200" },
      c6 = {
        class:
          "inline-flex p-1 mr-3 bg-project-primary/60 rounded-full w-6 h-6 items-center justify-center",
      },
      u6 = ve(
        "span",
        null,
        "Your current access level is limited to signals with a 3 hour delay. Connect your wallet and maintain a balance of 5000 PING tokens for instant signals.",
        -1
      ),
      w0 = {
        __name: "ConnectYourWalletBanner",
        setup(t) {
          return (e, r) => (
            je(),
            et("div", o6, [
              ve("p", l6, [
                ve("span", c6, [$e(Xe(Sf), { class: "w-4 text-gray-200" })]),
                u6,
              ]),
            ])
          );
        },
      },
      h6 = { class: "flex items-center mx-auto" },
      d6 = { class: "flex items-center text-sm font-normal text-gray-200" },
      f6 = {
        class:
          "inline-flex p-1 mr-3 bg-project-primary/60 rounded-full w-6 h-6 items-center justify-center",
      },
      p6 = ve("span", null, "You successfully connected your wallet.", -1),
      g6 = {
        __name: "SuccessfullyConnectedWalletBanner",
        setup(t) {
          return (e, r) => (
            je(),
            et("div", h6, [
              ve("p", d6, [
                ve("span", f6, [$e(Xe(Sf), { class: "w-4 text-gray-200" })]),
                p6,
              ]),
            ])
          );
        },
      },
      m6 = { class: "flex items-center mx-auto" },
      v6 = { class: "flex items-center text-sm font-normal text-gray-200" },
      y6 = {
        class:
          "inline-flex p-1 mr-3 bg-project-primary/60 rounded-full w-6 h-6 items-center justify-center",
      },
      b6 = ve(
        "span",
        null,
        "It looks like you don't have enough $PING in you wallet. You need minimum 5.000 $PING to get full access to the dashboard.",
        -1
      ),
      x6 = {
        __name: "NotEnoughTokensInYourWalletBanner",
        setup(t) {
          return (e, r) => (
            je(),
            et("div", m6, [
              ve("p", v6, [
                ve("span", y6, [$e(Xe(Sf), { class: "w-4 text-gray-200" })]),
                b6,
              ]),
            ])
          );
        },
      },
      w6 = { class: "flex flex-col items-start h-full text-large mt-8" },
      k6 = dt({
        __name: "MetaMaskNotSupportedModal",
        props: { isVisible: { type: Boolean } },
        emits: ["close"],
        setup(t, { emit: e }) {
          const r = We("metamask.mobile_not_supported.header"),
            n = We("metamask.mobile_not_supported.description");
          async function i() {
            e("close");
          }
          return (a, l) => (
            je(),
            jt(
              d0,
              { "is-visible": a.isVisible, onClose: i },
              {
                default: Ft(() => [
                  $e(
                    f0,
                    { title: a.$t(r.value) },
                    {
                      default: Ft(() => [
                        ve("div", w6, [ve("p", null, Bt(a.$t(n.value)), 1)]),
                      ]),
                      _: 1,
                    },
                    8,
                    ["title"]
                  ),
                ]),
                _: 1,
              },
              8,
              ["is-visible"]
            )
          );
        },
      }),
      _6 = 100,
      A6 = 101,
      C6 = 201,
      S6 = 202,
      E6 = 203,
      I6 = 204,
      T6 = 205,
      P6 = 206,
      O6 = 207,
      L6 = 300,
      M6 = 301,
      R6 = 310,
      N6 = 311,
      B6 = 400,
      F6 = 402,
      D6 = 405,
      z6 = 407,
      H6 = 408,
      U6 = 410,
      W6 = 411,
      X6 = 412,
      j6 = 413,
      G6 = 414,
      Y6 = 415,
      V6 = 416,
      q6 = 417,
      K6 = 418,
      $6 = 419,
      Z6 = 420,
      Q6 = 421,
      J6 = 422,
      e4 = 423,
      t4 = 424,
      r4 = 425,
      n4 = 426,
      i4 = 427,
      s4 = 428,
      a4 = 429,
      o4 = 430,
      l4 = 431,
      c4 = 432,
      u4 = 433,
      h4 = 434,
      d4 = 435,
      f4 = 436,
      p4 = 437,
      g4 = 438,
      m4 = 439,
      v4 = 440,
      y4 = 441,
      b4 = 500,
      x4 = 503,
      w4 = 505,
      k4 = 506,
      _4 = 507,
      A4 = 600,
      C4 = 602,
      S4 = 603,
      E4 = 604,
      I4 = 701,
      T4 = 702,
      P4 = 703,
      O4 = 704,
      L4 = 705,
      M4 = 706,
      R4 = 707,
      N4 = 709,
      B4 = 801,
      F4 = 802,
      D4 = 4001,
      z4 = 4100,
      H4 = 4200,
      U4 = 4900,
      W4 = 4901,
      X4 = 902,
      j4 = 903,
      G4 = 1001,
      Y4 = 1002,
      V4 = 1003,
      q4 = 1004,
      K4 = 1005,
      $4 = 1006,
      Z4 = 1008,
      Q4 = 1009,
      J4 = 1010,
      e8 = 1011,
      t8 = 1012,
      r8 = 1014,
      n8 = 1100,
      nC = 1101,
      Tf = -32700,
      Pf = -32600,
      Of = -32601,
      Lf = -32602,
      Mf = -32603,
      Rf = -32e3,
      Nf = -32001,
      Bf = -32002,
      Ff = -32003,
      Df = -32004,
      zf = -32005,
      Hf = -32006;
    class gt extends Error {
      constructor(e, r) {
        super(e),
          (this.innerError = r),
          (this.name = this.constructor.name),
          typeof Error.captureStackTrace == "function"
            ? Error.captureStackTrace(new.target.constructor)
            : (this.stack = new Error().stack);
      }
      static convertToString(e, r = !1) {
        if (e == null) return "undefined";
        const n = JSON.stringify(e, (i, a) =>
          typeof a == "bigint" ? a.toString() : a
        );
        return r && ["bigint", "string"].includes(typeof e)
          ? n.replace(/['\\"]+/g, "")
          : n;
      }
      toJSON() {
        return {
          name: this.name,
          code: this.code,
          message: this.message,
          innerError: this.innerError,
        };
      }
    }
    class Et extends gt {
      constructor(e, r) {
        super(
          `Invalid value given "${gt.convertToString(e, !0)}". Error: ${r}.`
        ),
          (this.name = this.constructor.name);
      }
    }
    class iC extends gt {
      constructor() {
        super("Private key must be 32 bytes."), (this.code = I4);
      }
    }
    class i8 extends gt {
      constructor() {
        super("Invalid Private Key, Not a valid string or uint8Array"),
          (this.code = T4);
      }
    }
    class s8 extends gt {
      constructor(e) {
        super(`"${e}"`), (this.code = F4);
      }
    }
    class sC extends gt {
      constructor() {
        super("Invalid key derivation function"), (this.code = P4);
      }
    }
    class a8 extends gt {
      constructor() {
        super("Key derivation failed - possibly wrong password"),
          (this.code = O4);
      }
    }
    class o8 extends gt {
      constructor() {
        super("Unsupported key store version"), (this.code = L4);
      }
    }
    class l8 extends gt {
      constructor() {
        super("Password cannot be empty"), (this.code = M4);
      }
    }
    class c8 extends gt {
      constructor() {
        super("Initialization vector must be 16 bytes"), (this.code = R4);
      }
    }
    class u8 extends gt {
      constructor() {
        super("c > 1000, pbkdf2 is less secure with less iterations"),
          (this.code = N4);
      }
    }
    class Yu extends gt {
      constructor(e, r) {
        super(e),
          (this.code = b4),
          r && ((this.errorCode = r.code), (this.errorReason = r.reason));
      }
      toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), {
          errorCode: this.errorCode,
          errorReason: this.errorReason,
        });
      }
    }
    class k0 extends Yu {
      constructor(e) {
        super("Connection not open", e), (this.code = x4);
      }
    }
    class h8 extends Yu {
      constructor(e) {
        super(`Maximum number of reconnect attempts reached! (${e})`),
          (this.code = w4);
      }
    }
    class d8 extends Yu {
      constructor() {
        super(
          "CONNECTION ERROR: Provider started to reconnect before the response got received!"
        ),
          (this.code = k4);
      }
    }
    class f8 extends Yu {
      constructor(e) {
        super(`Request already sent with following id: ${e}`), (this.code = _4);
      }
    }
    class si extends gt {
      constructor(e, r) {
        super(e), (this.code = L6), (this.receipt = r);
      }
    }
    class aC extends gt {
      constructor(e, r) {
        super(
          `The resolver at ${e} does not implement requested method: "${r}".`
        ),
          (this.address = e),
          (this.name = r),
          (this.code = M6);
      }
      toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), {
          address: this.address,
          name: this.name,
        });
      }
    }
    class Uf extends si {
      constructor(e) {
        if (
          (super(e.message || "Error"),
          (this.name = ("name" in e && e.name) || this.constructor.name),
          (this.stack = ("stack" in e && e.stack) || void 0),
          (this.code = e.code),
          typeof e.data == "object")
        ) {
          let r;
          "originalError" in e.data ? (r = e.data.originalError) : (r = e.data),
            (this.data = r.data),
            (this.innerError = new Uf(r));
        } else this.data = e.data;
      }
      setDecodedProperties(e, r, n) {
        (this.errorName = e), (this.errorSignature = r), (this.errorArgs = n);
      }
      toJSON() {
        let e = Object.assign(Object.assign({}, super.toJSON()), {
          data: this.data,
        });
        return (
          this.errorName &&
            (e = Object.assign(Object.assign({}, e), {
              errorName: this.errorName,
              errorSignature: this.errorSignature,
              errorArgs: this.errorArgs,
            })),
          e
        );
      }
    }
    class Ys extends si {
      constructor(e) {
        super(
          "Error happened while trying to execute a function inside a smart contract"
        ),
          (this.code = R6),
          (this.innerError = new Uf(e));
      }
    }
    class p8 extends Et {
      constructor(e) {
        var r, n;
        super(
          `data: ${
            (r = e.data) !== null && r !== void 0 ? r : "undefined"
          }, input: ${
            (n = e.input) !== null && n !== void 0 ? n : "undefined"
          }`,
          `You can't have "data" and "input" as properties of a contract at the same time, please use either "data" or "input" instead.`
        ),
          (this.code = N6);
      }
    }
    class g8 extends gt {
      constructor(e) {
        super(`ENS is not supported on network ${e}`), (this.code = X4);
      }
    }
    class m8 extends gt {
      constructor() {
        super("Network not synced"), (this.code = j4);
      }
    }
    class oC extends gt {
      constructor(e) {
        super(`Invalid parameters passed. "${typeof e < "u" ? e : ""}"`),
          (this.hint = e),
          (this.code = O6);
      }
      toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), {
          hint: this.hint,
        });
      }
    }
    class _0 extends gt {
      constructor() {
        super(...arguments), (this.code = C6);
      }
    }
    class Vs extends gt {
      constructor() {
        super("The method you're trying to call is not implemented."),
          (this.code = S6);
      }
    }
    class lC extends gt {
      constructor() {
        super(...arguments), (this.code = E6);
      }
    }
    class v8 extends gt {
      constructor() {
        super(...arguments), (this.code = I6);
      }
    }
    class ja extends gt {
      constructor() {
        super(...arguments), (this.code = T6);
      }
    }
    class y8 extends gt {
      constructor(e) {
        super(`A plugin with the namespace: ${e} has already been registered.`),
          (this.code = P6);
      }
    }
    class Wf extends gt {
      constructor() {
        super(...arguments), (this.code = A4);
      }
    }
    class A0 extends gt {
      constructor(e) {
        super(`Client URL "${e}" is invalid.`), (this.code = C4);
      }
    }
    class zi extends gt {
      constructor() {
        super(...arguments), (this.code = S4);
      }
    }
    class b8 extends gt {
      constructor() {
        super(...arguments), (this.code = E4);
      }
    }
    class x8 extends Et {
      constructor() {
        super(...arguments), (this.code = B4);
      }
    }
    class C0 extends gt {
      constructor(e, r) {
        super(e), (this.receipt = r), (this.code = B6);
      }
      toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), {
          receipt: this.receipt,
        });
      }
    }
    class Vu extends gt {
      constructor(e, r, n, i) {
        super(
          `Transaction has been reverted by the EVM${
            n === void 0
              ? ""
              : `:
 ${gt.convertToString(n)}`
          }`
        ),
          (this.reason = e),
          (this.signature = r),
          (this.receipt = n),
          (this.data = i),
          (this.code = F6);
      }
      toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), {
          reason: this.reason,
          signature: this.signature,
          receipt: this.receipt,
          data: this.data,
        });
      }
    }
    class S0 extends Vu {
      constructor(e, r, n, i, a, l, u) {
        super(e),
          (this.reason = e),
          (this.customErrorName = r),
          (this.customErrorDecodedSignature = n),
          (this.customErrorArguments = i),
          (this.signature = a),
          (this.receipt = l),
          (this.data = u),
          (this.code = g4);
      }
      toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), {
          reason: this.reason,
          customErrorName: this.customErrorName,
          customErrorDecodedSignature: this.customErrorDecodedSignature,
          customErrorArguments: this.customErrorArguments,
          signature: this.signature,
          receipt: this.receipt,
          data: this.data,
        });
      }
    }
    class E0 extends C0 {
      constructor(e) {
        super(
          `Transaction has been reverted by the EVM${
            e === void 0
              ? ""
              : `:
 ${gt.convertToString(e)}`
          }`,
          e
        ),
          (this.code = D6);
      }
    }
    class w8 extends C0 {
      constructor() {
        super("Raw transaction undefined"), (this.code = z6);
      }
    }
    class cC extends C0 {
      constructor() {
        super("Transaction not found"), (this.code = o4);
      }
    }
    class k8 extends Et {
      constructor(e) {
        super(e, "invalid transaction with invalid sender"), (this.code = H6);
      }
    }
    class _8 extends Et {
      constructor(e) {
        super(e, "invalid transaction with invalid receiver"), (this.code = p4);
      }
    }
    class A8 extends Et {
      constructor() {
        super(
          "MissingCustomChainError",
          "If tx.common is provided it must have tx.common.customChain"
        ),
          (this.code = U6);
      }
    }
    class C8 extends Et {
      constructor() {
        super(
          "MissingCustomChainIdError",
          "If tx.common is provided it must have tx.common.customChain and tx.common.customChain.chainId"
        ),
          (this.code = W6);
      }
    }
    class S8 extends Et {
      constructor(e) {
        super(
          JSON.stringify(e),
          "Chain Id doesnt match in tx.chainId tx.common.customChain.chainId"
        ),
          (this.code = X6);
      }
    }
    class E8 extends Et {
      constructor(e) {
        super(
          JSON.stringify(e),
          "Chain doesnt match in tx.chain tx.common.basechain"
        ),
          (this.code = d4);
      }
    }
    class I8 extends Et {
      constructor(e) {
        super(
          JSON.stringify(e),
          "hardfork doesnt match in tx.hardfork tx.common.hardfork"
        ),
          (this.code = f4);
      }
    }
    class T8 extends Et {
      constructor() {
        super(
          "CommonOrChainAndHardforkError",
          "Please provide the common object or the chain and hardfork property but not all together."
        ),
          (this.code = j6);
      }
    }
    class P8 extends Et {
      constructor(e) {
        var r, n;
        super(
          "MissingChainOrHardforkError",
          `When specifying chain and hardfork, both values must be defined. Received "chain": ${
            (r = e.chain) !== null && r !== void 0 ? r : "undefined"
          }, "hardfork": ${
            (n = e.hardfork) !== null && n !== void 0 ? n : "undefined"
          }`
        ),
          (this.code = G6);
      }
    }
    class O8 extends gt {
      constructor() {
        super(
          'Missing properties in transaction, either define "gas" and "gasPrice" for type 0 transactions or "gas", "maxPriorityFeePerGas" and "maxFeePerGas" for type 2 transactions'
        ),
          (this.code = v4);
      }
    }
    class L8 extends Et {
      constructor(e) {
        var r, n, i, a;
        super(
          `gas: ${
            (r = e.gas) !== null && r !== void 0 ? r : "undefined"
          }, gasPrice: ${
            (n = e.gasPrice) !== null && n !== void 0 ? n : "undefined"
          }, maxPriorityFeePerGas: ${
            (i = e.maxPriorityFeePerGas) !== null && i !== void 0
              ? i
              : "undefined"
          }, maxFeePerGas: ${
            (a = e.maxFeePerGas) !== null && a !== void 0 ? a : "undefined"
          }`,
          '"gas" is missing'
        ),
          (this.code = Y6),
          (this.innerError = new O8());
      }
    }
    class M8 extends gt {
      constructor() {
        super(
          'Missing properties in transaction, either define "gas" and "gasPrice" for type 0 transactions or "gas", "maxPriorityFeePerGas" and "maxFeePerGas" for type 2 transactions, not both'
        ),
          (this.code = y4);
      }
    }
    class R8 extends Et {
      constructor(e) {
        var r, n, i, a;
        super(
          `gas: ${
            (r = e.gas) !== null && r !== void 0 ? r : "undefined"
          }, gasPrice: ${
            (n = e.gasPrice) !== null && n !== void 0 ? n : "undefined"
          }, maxPriorityFeePerGas: ${
            (i = e.maxPriorityFeePerGas) !== null && i !== void 0
              ? i
              : "undefined"
          }, maxFeePerGas: ${
            (a = e.maxFeePerGas) !== null && a !== void 0 ? a : "undefined"
          }`,
          "transaction must specify legacy or fee market gas properties, not both"
        ),
          (this.code = h4),
          (this.innerError = new M8());
      }
    }
    class N8 extends Et {
      constructor(e) {
        var r, n;
        super(
          `gas: ${
            (r = e.gas) !== null && r !== void 0 ? r : "undefined"
          }, gasPrice: ${
            (n = e.gasPrice) !== null && n !== void 0 ? n : "undefined"
          }`,
          "Gas or gasPrice is lower than 0"
        ),
          (this.code = V6);
      }
    }
    class B8 extends Et {
      constructor(e) {
        var r, n;
        super(
          `maxPriorityFeePerGas: ${
            (r = e.maxPriorityFeePerGas) !== null && r !== void 0
              ? r
              : "undefined"
          }, maxFeePerGas: ${
            (n = e.maxFeePerGas) !== null && n !== void 0 ? n : "undefined"
          }`,
          "maxPriorityFeePerGas or maxFeePerGas is lower than 0"
        ),
          (this.code = q6);
      }
    }
    class F8 extends Et {
      constructor(e) {
        super(e, "eip-1559 transactions don't support gasPrice"),
          (this.code = K6);
      }
    }
    class uC extends Et {
      constructor(e) {
        var r, n;
        super(
          `maxPriorityFeePerGas: ${
            (r = e.maxPriorityFeePerGas) !== null && r !== void 0
              ? r
              : "undefined"
          }, maxFeePerGas: ${
            (n = e.maxFeePerGas) !== null && n !== void 0 ? n : "undefined"
          }`,
          "pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas"
        ),
          (this.code = $6);
      }
    }
    class D8 extends Et {
      constructor(e) {
        super(e, "invalid transaction object"), (this.code = Z6);
      }
    }
    class z8 extends Et {
      constructor(e) {
        var r, n;
        super(
          `nonce: ${
            (r = e.nonce) !== null && r !== void 0 ? r : "undefined"
          }, chainId: ${
            (n = e.chainId) !== null && n !== void 0 ? n : "undefined"
          }`,
          "Nonce or chainId is lower than 0"
        ),
          (this.code = Q6);
      }
    }
    class H8 extends Et {
      constructor() {
        super(
          "UnableToPopulateNonceError",
          "unable to populate nonce, no from address available"
        ),
          (this.code = J6);
      }
    }
    class U8 extends Et {
      constructor() {
        super("Eip1559NotSupportedError", "Network doesn't support eip-1559"),
          (this.code = e4);
      }
    }
    class hC extends Et {
      constructor(e) {
        super(e, "unsupported transaction type"), (this.code = t4);
      }
    }
    class dC extends Et {
      constructor(e) {
        var r, n;
        super(
          `data: ${
            (r = e.data) !== null && r !== void 0 ? r : "undefined"
          }, input: ${
            (n = e.input) !== null && n !== void 0 ? n : "undefined"
          }`,
          `You can't have "data" and "input" as properties of transactions at the same time, please use either "data" or "input" instead.`
        ),
          (this.code = r4);
      }
    }
    class W8 extends gt {
      constructor(e) {
        super(`The connected Ethereum Node did not respond within ${
          e.numberOfSeconds
        } seconds, please make sure your transaction was properly sent and you are connected to a healthy Node. Be aware that transaction might still be pending or mined!
	Transaction Hash: ${
    e.transactionHash ? e.transactionHash.toString() : "not available"
  }`),
          (this.code = l4);
      }
    }
    function fC(t) {
      return `Please make sure your transaction was properly sent and there no pervious pending transaction for the same account. However, be aware that it might still be mined!
	Transaction Hash: ${t ? t.toString() : "not available"}`;
    }
    class X8 extends gt {
      constructor(e) {
        super(
          `Transaction was not mined within ${e.numberOfSeconds} seconds. ${fC(
            e.transactionHash
          )}`
        ),
          (this.code = n4);
      }
    }
    class pC extends gt {
      constructor(e) {
        super(
          `Transaction started at ${
            e.starterBlockNumber
          } but was not mined within ${e.numberOfBlocks} blocks. ${fC(
            e.transactionHash
          )}`
        ),
          (this.code = c4);
      }
    }
    class j8 extends Et {
      constructor(e) {
        var r, n;
        super(
          `receipt: ${JSON.stringify(e.receipt)}, blockHash: ${
            (r = e.blockHash) === null || r === void 0 ? void 0 : r.toString()
          }, transactionHash: ${
            (n = e.transactionHash) === null || n === void 0
              ? void 0
              : n.toString()
          }`,
          "Receipt missing or blockHash null"
        ),
          (this.code = i4);
      }
    }
    class G8 extends Et {
      constructor(e) {
        super(
          `receipt: ${JSON.stringify(e.receipt)}`,
          "Receipt missing block number"
        ),
          (this.code = s4);
      }
    }
    class I0 extends gt {
      constructor(e) {
        super(`Invalid signature. "${e}"`), (this.code = u4);
      }
    }
    class gC extends Et {
      constructor() {
        super(
          "LocalWalletNotAvailableError",
          "Attempted to index account in local wallet, but no wallet is available"
        ),
          (this.code = a4);
      }
    }
    class Y8 extends gt {
      constructor(e, r) {
        const n = [];
        e.forEach((i) => n.push(i.keyword)),
          super(
            `The following properties are invalid for the transaction type ${r}: ${n.join(
              ", "
            )}`
          ),
          (this.code = m4);
      }
    }
    class qu extends Et {
      constructor(e) {
        super(e, "can not parse as byte data"), (this.code = Y4);
      }
    }
    class T0 extends Et {
      constructor(e) {
        super(e, "can not parse as number data"), (this.code = V4);
      }
    }
    class P0 extends Et {
      constructor(e) {
        super(e, "invalid ethereum address"), (this.code = K4);
      }
    }
    class V8 extends Et {
      constructor(e) {
        super(e, "not a valid string"), (this.code = G4);
      }
    }
    class mC extends Et {
      constructor(e) {
        super(e, "invalid unit"), (this.code = q4);
      }
    }
    class q8 extends Et {
      constructor(e) {
        super(e, "can not be converted to hex"), (this.code = $4);
      }
    }
    class vC extends Et {
      constructor(e) {
        super(e, "value greater than the nibble width"), (this.code = r8);
      }
    }
    class K8 extends Et {
      constructor(e) {
        super(e, "not a valid boolean."), (this.code = Z4);
      }
    }
    class $8 extends Et {
      constructor(e) {
        super(e, "not a valid unsigned integer."), (this.code = Q4);
      }
    }
    class yC extends Et {
      constructor(e) {
        super(e, "invalid size given."), (this.code = J4);
      }
    }
    class bC extends Et {
      constructor(e) {
        super(e, "value is larger than size."), (this.code = e8);
      }
    }
    class Z8 extends Et {
      constructor(e) {
        super(e, "invalid string given"), (this.code = t8);
      }
    }
    const Q8 = (t) =>
        !Array.isArray(t) &&
        t.jsonrpc === "2.0" &&
        !!t &&
        (t.result === void 0 || t.result === null) &&
        "error" in t &&
        (typeof t.id == "number" || typeof t.id == "string"),
      xC = (t) => (Q8(t) ? t.error.message : "");
    class qs extends gt {
      constructor(e, r, n) {
        var i;
        super(
          r ??
            `Returned error: ${
              Array.isArray(e) ? e.map((l) => xC(l)).join(",") : xC(e)
            }`
        ),
          (this.code = _6),
          r ||
            (this.data = Array.isArray(e)
              ? e.map((l) => {
                  var u;
                  return (u = l.error) === null || u === void 0
                    ? void 0
                    : u.data;
                })
              : (i = e == null ? void 0 : e.error) === null || i === void 0
              ? void 0
              : i.data),
          (this.request = n);
        let a;
        "error" in e
          ? (a = e.error)
          : e instanceof Array && (a = e.map((l) => l.error)),
          (this.innerError = a);
      }
      toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), {
          data: this.data,
          request: this.request,
        });
      }
    }
    class ic extends qs {
      constructor(e, r) {
        super(e, void 0, r), (this.code = A6);
        let n;
        "error" in e
          ? (n = e.error)
          : e instanceof Array && (n = e.map((i) => i.error)),
          (this.innerError = n);
      }
    }
    class wC extends gt {
      constructor(e, r) {
        super(
          `Web3Config hardfork doesnt match in defaultHardfork ${e} and common.hardfork ${r}`
        ),
          (this.code = nC);
      }
    }
    class kC extends gt {
      constructor(e, r) {
        super(
          `Web3Config chain doesnt match in defaultHardfork ${e} and common.hardfork ${r}`
        ),
          (this.code = nC);
      }
    }
    const _C = "An Rpc error has occured with a code of *code*",
      In = {
        [Tf]: { message: "Parse error", description: "Invalid JSON" },
        [Pf]: {
          message: "Invalid request",
          description: "JSON is not a valid request object	",
        },
        [Of]: {
          message: "Method not found",
          description: "Method does not exist	",
        },
        [Lf]: {
          message: "Invalid params",
          description: "Invalid method parameters",
        },
        [Mf]: {
          message: "Internal error",
          description: "Internal JSON-RPC error",
        },
        [Rf]: {
          message: "Invalid input",
          description: "Missing or invalid parameters",
        },
        [Nf]: {
          message: "Resource not found",
          description: "Requested resource not found",
        },
        [Bf]: {
          message: "Resource unavailable",
          description: "Requested resource not available",
        },
        [Ff]: {
          message: "Transaction rejected",
          description: "Transaction creation failed",
        },
        [Df]: {
          message: "Method not supported",
          description: "Method is not implemented",
        },
        [zf]: {
          message: "Limit exceeded",
          description: "Request exceeds defined limit",
        },
        [Hf]: {
          message: "JSON-RPC version not supported",
          description: "Version of JSON-RPC protocol is not supported",
        },
        [D4]: {
          name: "User Rejected Request",
          message: "The user rejected the request.",
        },
        [z4]: {
          name: "Unauthorized",
          message:
            "The requested method and/or account has not been authorized by the user.",
        },
        [H4]: {
          name: "Unsupported Method",
          message: "The Provider does not support the requested method.",
        },
        [U4]: {
          name: "Disconnected",
          message: "The Provider is disconnected from all chains.",
        },
        [W4]: {
          name: "Chain Disconnected",
          message: "The Provider is not connected to the requested chain.",
        },
        "0-999": { name: "", message: "Not used." },
        1e3: {
          name: "Normal Closure",
          message:
            "The connection successfully completed the purpose for which it was created.",
        },
        1001: {
          name: "Going Away",
          message:
            "The endpoint is going away, either because of a server failure or because the browser is navigating away from the page that opened the connection.",
        },
        1002: {
          name: "Protocol error",
          message:
            "The endpoint is terminating the connection due to a protocol error.",
        },
        1003: {
          name: "Unsupported Data",
          message:
            "The connection is being terminated because the endpoint received data of a type it cannot accept. (For example, a text-only endpoint received binary data.)",
        },
        1004: {
          name: "Reserved",
          message: "Reserved. A meaning might be defined in the future.",
        },
        1005: {
          name: "No Status Rcvd",
          message:
            "Reserved. Indicates that no status code was provided even though one was expected.",
        },
        1006: {
          name: "Abnormal Closure",
          message:
            "Reserved. Indicates that a connection was closed abnormally (that is, with no close frame being sent) when a status code is expected.",
        },
        1007: {
          name: "Invalid frame payload data",
          message:
            "The endpoint is terminating the connection because a message was received that contained inconsistent data (e.g., non-UTF-8 data within a text message).",
        },
        1008: {
          name: "Policy Violation",
          message:
            "The endpoint is terminating the connection because it received a message that violates its policy. This is a generic status code, used when codes 1003 and 1009 are not suitable.",
        },
        1009: {
          name: "Message Too Big",
          message:
            "The endpoint is terminating the connection because a data frame was received that is too large.",
        },
        1010: {
          name: "Mandatory Ext.",
          message:
            "The client is terminating the connection because it expected the server to negotiate one or more extension, but the server didn't.",
        },
        1011: {
          name: "Internal Error",
          message:
            "The server is terminating the connection because it encountered an unexpected condition that prevented it from fulfilling the request.",
        },
        1012: {
          name: "Service Restart",
          message:
            "The server is terminating the connection because it is restarting.",
        },
        1013: {
          name: "Try Again Later",
          message:
            "The server is terminating the connection due to a temporary condition, e.g. it is overloaded and is casting off some of its clients.",
        },
        1014: {
          name: "Bad Gateway",
          message:
            "The server was acting as a gateway or proxy and received an invalid response from the upstream server. This is similar to 502 HTTP Status Code.",
        },
        1015: {
          name: "TLS handshake",
          message:
            "Reserved. Indicates that the connection was closed due to a failure to perform a TLS handshake (e.g., the server certificate can't be verified).",
        },
        "1016-2999": {
          name: "",
          message:
            "For definition by future revisions of the WebSocket Protocol specification, and for definition by extension specifications.",
        },
        "3000-3999": {
          name: "",
          message:
            "For use by libraries, frameworks, and applications. These status codes are registered directly with IANA. The interpretation of these codes is undefined by the WebSocket protocol.",
        },
        "4000-4999": {
          name: "",
          message:
            "For private use, and thus can't be registered. Such codes can be used by prior agreements between WebSocket applications. The interpretation of these codes is undefined by the WebSocket protocol.",
        },
      };
    class ai extends gt {
      constructor(e, r) {
        super(r ?? _C.replace("*code*", e.error.code.toString())),
          (this.code = e.error.code),
          (this.id = e.id),
          (this.jsonrpc = e.jsonrpc),
          (this.jsonRpcError = e.error);
      }
      toJSON() {
        return Object.assign(Object.assign({}, super.toJSON()), {
          error: this.jsonRpcError,
          id: this.id,
          jsonRpc: this.jsonrpc,
        });
      }
    }
    class J8 extends gt {
      constructor(e, r) {
        var n, i, a, l;
        if (!e) super();
        else if (!((n = In[e]) === null || n === void 0) && n.message)
          super(In[e].message);
        else {
          const u = Object.keys(In).find(
            (p) =>
              typeof p == "string" &&
              e >= parseInt(p.split("-")[0], 10) &&
              e <= parseInt(p.split("-")[1], 10)
          );
          super(
            (a =
              (i = In[u ?? ""]) === null || i === void 0
                ? void 0
                : i.message) !== null && a !== void 0
              ? a
              : _C.replace(
                  "*code*",
                  (l = e == null ? void 0 : e.toString()) !== null &&
                    l !== void 0
                    ? l
                    : '""'
                )
          );
        }
        (this.code = e), (this.data = r);
      }
    }
    class ez extends ai {
      constructor(e) {
        super(e, In[Tf].message), (this.code = Tf);
      }
    }
    class tz extends ai {
      constructor(e) {
        super(e, In[Pf].message), (this.code = Pf);
      }
    }
    class rz extends ai {
      constructor(e) {
        super(e, In[Of].message), (this.code = Of);
      }
    }
    class nz extends ai {
      constructor(e) {
        super(e, In[Lf].message), (this.code = Lf);
      }
    }
    class iz extends ai {
      constructor(e) {
        super(e, In[Mf].message), (this.code = Mf);
      }
    }
    class sz extends ai {
      constructor(e) {
        super(e, In[Rf].message), (this.code = Rf);
      }
    }
    class az extends ai {
      constructor(e) {
        super(e, In[Df].message), (this.code = Df);
      }
    }
    class oz extends ai {
      constructor(e) {
        super(e, In[Bf].message), (this.code = Bf);
      }
    }
    class lz extends ai {
      constructor(e) {
        super(e, In[Nf].message), (this.code = Nf);
      }
    }
    class cz extends ai {
      constructor(e) {
        super(e, In[Hf].message), (this.code = Hf);
      }
    }
    class uz extends ai {
      constructor(e) {
        super(e, In[Ff].message), (this.code = Ff);
      }
    }
    class hz extends ai {
      constructor(e) {
        super(e, In[zf].message), (this.code = zf);
      }
    }
    const Dn = new Map();
    Dn.set(Tf, { error: ez }),
      Dn.set(Pf, { error: tz }),
      Dn.set(Of, { error: rz }),
      Dn.set(Lf, { error: nz }),
      Dn.set(Mf, { error: iz }),
      Dn.set(Rf, { error: sz }),
      Dn.set(Df, { error: az }),
      Dn.set(Bf, { error: oz }),
      Dn.set(Ff, { error: uz }),
      Dn.set(Nf, { error: lz }),
      Dn.set(Hf, { error: cz }),
      Dn.set(zf, { error: hz });
    function O0(t) {
      if (!Number.isSafeInteger(t) || t < 0)
        throw new Error(`Wrong positive integer: ${t}`);
    }
    function dz(t) {
      if (typeof t != "boolean") throw new Error(`Expected boolean, not ${t}`);
    }
    function AC(t, ...e) {
      if (!(t instanceof Uint8Array)) throw new Error("Expected Uint8Array");
      if (e.length > 0 && !e.includes(t.length))
        throw new Error(
          `Expected Uint8Array of length ${e}, not of length=${t.length}`
        );
    }
    function fz(t) {
      if (typeof t != "function" || typeof t.create != "function")
        throw new Error("Hash should be wrapped by utils.wrapConstructor");
      O0(t.outputLen), O0(t.blockLen);
    }
    function pz(t, e = !0) {
      if (t.destroyed) throw new Error("Hash instance has been destroyed");
      if (e && t.finished)
        throw new Error("Hash#digest() has already been called");
    }
    function gz(t, e) {
      AC(t);
      const r = e.outputLen;
      if (t.length < r)
        throw new Error(
          `digestInto() expects output buffer of length at least ${r}`
        );
    }
    const Rr = {
        number: O0,
        bool: dz,
        bytes: AC,
        hash: fz,
        exists: pz,
        output: gz,
      },
      Xf = BigInt(2 ** 32 - 1),
      L0 = BigInt(32);
    function CC(t, e = !1) {
      return e
        ? { h: Number(t & Xf), l: Number((t >> L0) & Xf) }
        : { h: Number((t >> L0) & Xf) | 0, l: Number(t & Xf) | 0 };
    }
    function mz(t, e = !1) {
      let r = new Uint32Array(t.length),
        n = new Uint32Array(t.length);
      for (let i = 0; i < t.length; i++) {
        const { h: a, l } = CC(t[i], e);
        [r[i], n[i]] = [a, l];
      }
      return [r, n];
    }
    const vz = (t, e) => (BigInt(t >>> 0) << L0) | BigInt(e >>> 0),
      yz = (t, e, r) => t >>> r,
      bz = (t, e, r) => (t << (32 - r)) | (e >>> r),
      xz = (t, e, r) => (t >>> r) | (e << (32 - r)),
      wz = (t, e, r) => (t << (32 - r)) | (e >>> r),
      kz = (t, e, r) => (t << (64 - r)) | (e >>> (r - 32)),
      _z = (t, e, r) => (t >>> (r - 32)) | (e << (64 - r)),
      Az = (t, e) => e,
      Cz = (t, e) => t,
      Sz = (t, e, r) => (t << r) | (e >>> (32 - r)),
      Ez = (t, e, r) => (e << r) | (t >>> (32 - r)),
      Iz = (t, e, r) => (e << (r - 32)) | (t >>> (64 - r)),
      Tz = (t, e, r) => (t << (r - 32)) | (e >>> (64 - r));
    function Pz(t, e, r, n) {
      const i = (e >>> 0) + (n >>> 0);
      return { h: (t + r + ((i / 4294967296) | 0)) | 0, l: i | 0 };
    }
    const Oz = (t, e, r) => (t >>> 0) + (e >>> 0) + (r >>> 0),
      Lz = (t, e, r, n) => (e + r + n + ((t / 2 ** 32) | 0)) | 0,
      Mz = (t, e, r, n) => (t >>> 0) + (e >>> 0) + (r >>> 0) + (n >>> 0),
      Rz = (t, e, r, n, i) => (e + r + n + i + ((t / 2 ** 32) | 0)) | 0,
      Nz = (t, e, r, n, i) =>
        (t >>> 0) + (e >>> 0) + (r >>> 0) + (n >>> 0) + (i >>> 0),
      Bz = (t, e, r, n, i, a) => (e + r + n + i + a + ((t / 2 ** 32) | 0)) | 0,
      ft = {
        fromBig: CC,
        split: mz,
        toBig: vz,
        shrSH: yz,
        shrSL: bz,
        rotrSH: xz,
        rotrSL: wz,
        rotrBH: kz,
        rotrBL: _z,
        rotr32H: Az,
        rotr32L: Cz,
        rotlSH: Sz,
        rotlSL: Ez,
        rotlBH: Iz,
        rotlBL: Tz,
        add: Pz,
        add3L: Oz,
        add3H: Lz,
        add4L: Mz,
        add4H: Rz,
        add5H: Bz,
        add5L: Nz,
      },
      jf =
        typeof globalThis == "object" && "crypto" in globalThis
          ? globalThis.crypto
          : void 0,
      SC = (t) => t instanceof Uint8Array,
      Gf = (t) =>
        new Uint32Array(t.buffer, t.byteOffset, Math.floor(t.byteLength / 4)),
      Yf = (t) => new DataView(t.buffer, t.byteOffset, t.byteLength),
      vs = (t, e) => (t << (32 - e)) | (t >>> e);
    if (!(new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68))
      throw new Error("Non little-endian hardware is not supported");
    Array.from({ length: 256 }, (t, e) => e.toString(16).padStart(2, "0"));
    function sc(t) {
      if (typeof t != "string")
        throw new Error(`utf8ToBytes expected string, got ${typeof t}`);
      return new Uint8Array(new TextEncoder().encode(t));
    }
    function Yo(t) {
      if ((typeof t == "string" && (t = sc(t)), !SC(t)))
        throw new Error(`expected Uint8Array, got ${typeof t}`);
      return t;
    }
    function Vf(...t) {
      const e = new Uint8Array(t.reduce((n, i) => n + i.length, 0));
      let r = 0;
      return (
        t.forEach((n) => {
          if (!SC(n)) throw new Error("Uint8Array expected");
          e.set(n, r), (r += n.length);
        }),
        e
      );
    }
    class M0 {
      clone() {
        return this._cloneInto();
      }
    }
    const Fz = (t) =>
      Object.prototype.toString.call(t) === "[object Object]" &&
      t.constructor === Object;
    function EC(t, e) {
      if (e !== void 0 && (typeof e != "object" || !Fz(e)))
        throw new Error("Options should be object or undefined");
      return Object.assign(t, e);
    }
    function Vo(t) {
      const e = (n) => t().update(Yo(n)).digest(),
        r = t();
      return (
        (e.outputLen = r.outputLen),
        (e.blockLen = r.blockLen),
        (e.create = () => t()),
        e
      );
    }
    function Dz(t) {
      const e = (n, i) => t(i).update(Yo(n)).digest(),
        r = t({});
      return (
        (e.outputLen = r.outputLen),
        (e.blockLen = r.blockLen),
        (e.create = (n) => t(n)),
        e
      );
    }
    function IC(t = 32) {
      if (jf && typeof jf.getRandomValues == "function")
        return jf.getRandomValues(new Uint8Array(t));
      throw new Error("crypto.getRandomValues must be defined");
    }
    const [TC, PC, OC] = [[], [], []],
      zz = BigInt(0),
      Ku = BigInt(1),
      Hz = BigInt(2),
      Uz = BigInt(7),
      Wz = BigInt(256),
      Xz = BigInt(113);
    for (let t = 0, e = Ku, r = 1, n = 0; t < 24; t++) {
      ([r, n] = [n, (2 * r + 3 * n) % 5]),
        TC.push(2 * (5 * n + r)),
        PC.push((((t + 1) * (t + 2)) / 2) % 64);
      let i = zz;
      for (let a = 0; a < 7; a++)
        (e = ((e << Ku) ^ ((e >> Uz) * Xz)) % Wz),
          e & Hz && (i ^= Ku << ((Ku << BigInt(a)) - Ku));
      OC.push(i);
    }
    const [jz, Gz] = ft.split(OC, !0),
      LC = (t, e, r) => (r > 32 ? ft.rotlBH(t, e, r) : ft.rotlSH(t, e, r)),
      MC = (t, e, r) => (r > 32 ? ft.rotlBL(t, e, r) : ft.rotlSL(t, e, r));
    function Yz(t, e = 24) {
      const r = new Uint32Array(10);
      for (let n = 24 - e; n < 24; n++) {
        for (let l = 0; l < 10; l++)
          r[l] = t[l] ^ t[l + 10] ^ t[l + 20] ^ t[l + 30] ^ t[l + 40];
        for (let l = 0; l < 10; l += 2) {
          const u = (l + 8) % 10,
            p = (l + 2) % 10,
            m = r[p],
            v = r[p + 1],
            w = LC(m, v, 1) ^ r[u],
            S = MC(m, v, 1) ^ r[u + 1];
          for (let M = 0; M < 50; M += 10) (t[l + M] ^= w), (t[l + M + 1] ^= S);
        }
        let i = t[2],
          a = t[3];
        for (let l = 0; l < 24; l++) {
          const u = PC[l],
            p = LC(i, a, u),
            m = MC(i, a, u),
            v = TC[l];
          (i = t[v]), (a = t[v + 1]), (t[v] = p), (t[v + 1] = m);
        }
        for (let l = 0; l < 50; l += 10) {
          for (let u = 0; u < 10; u++) r[u] = t[l + u];
          for (let u = 0; u < 10; u++)
            t[l + u] ^= ~r[(u + 2) % 10] & r[(u + 4) % 10];
        }
        (t[0] ^= jz[n]), (t[1] ^= Gz[n]);
      }
      r.fill(0);
    }
    class qf extends M0 {
      constructor(e, r, n, i = !1, a = 24) {
        if (
          (super(),
          (this.blockLen = e),
          (this.suffix = r),
          (this.outputLen = n),
          (this.enableXOF = i),
          (this.rounds = a),
          (this.pos = 0),
          (this.posOut = 0),
          (this.finished = !1),
          (this.destroyed = !1),
          Rr.number(n),
          0 >= this.blockLen || this.blockLen >= 200)
        )
          throw new Error("Sha3 supports only keccak-f1600 function");
        (this.state = new Uint8Array(200)), (this.state32 = Gf(this.state));
      }
      keccak() {
        Yz(this.state32, this.rounds), (this.posOut = 0), (this.pos = 0);
      }
      update(e) {
        Rr.exists(this);
        const { blockLen: r, state: n } = this;
        e = Yo(e);
        const i = e.length;
        for (let a = 0; a < i; ) {
          const l = Math.min(r - this.pos, i - a);
          for (let u = 0; u < l; u++) n[this.pos++] ^= e[a++];
          this.pos === r && this.keccak();
        }
        return this;
      }
      finish() {
        if (this.finished) return;
        this.finished = !0;
        const { state: e, suffix: r, pos: n, blockLen: i } = this;
        (e[n] ^= r),
          r & 128 && n === i - 1 && this.keccak(),
          (e[i - 1] ^= 128),
          this.keccak();
      }
      writeInto(e) {
        Rr.exists(this, !1), Rr.bytes(e), this.finish();
        const r = this.state,
          { blockLen: n } = this;
        for (let i = 0, a = e.length; i < a; ) {
          this.posOut >= n && this.keccak();
          const l = Math.min(n - this.posOut, a - i);
          e.set(r.subarray(this.posOut, this.posOut + l), i),
            (this.posOut += l),
            (i += l);
        }
        return e;
      }
      xofInto(e) {
        if (!this.enableXOF)
          throw new Error("XOF is not possible for this instance");
        return this.writeInto(e);
      }
      xof(e) {
        return Rr.number(e), this.xofInto(new Uint8Array(e));
      }
      digestInto(e) {
        if ((Rr.output(e, this), this.finished))
          throw new Error("digest() was already called");
        return this.writeInto(e), this.destroy(), e;
      }
      digest() {
        return this.digestInto(new Uint8Array(this.outputLen));
      }
      destroy() {
        (this.destroyed = !0), this.state.fill(0);
      }
      _cloneInto(e) {
        const {
          blockLen: r,
          suffix: n,
          outputLen: i,
          rounds: a,
          enableXOF: l,
        } = this;
        return (
          e || (e = new qf(r, n, i, l, a)),
          e.state32.set(this.state32),
          (e.pos = this.pos),
          (e.posOut = this.posOut),
          (e.finished = this.finished),
          (e.rounds = a),
          (e.suffix = n),
          (e.outputLen = i),
          (e.enableXOF = l),
          (e.destroyed = this.destroyed),
          e
        );
      }
    }
    const Ga = (t, e, r) => Vo(() => new qf(e, t, r));
    Ga(6, 144, 28),
      Ga(6, 136, 32),
      Ga(6, 104, 48),
      Ga(6, 72, 64),
      Ga(1, 144, 28);
    const RC = Ga(1, 136, 256 / 8);
    Ga(1, 104, 48), Ga(1, 72, 64);
    const NC = (t, e, r) =>
      Dz((n = {}) => new qf(e, t, n.dkLen === void 0 ? r : n.dkLen, !0));
    NC(31, 168, 16), NC(31, 136, 32);
    const Kf = Rr.bytes;
    function BC(t) {
      if (!(t instanceof Uint8Array))
        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof t}`);
      return new TextDecoder().decode(t);
    }
    function Vz(t, e) {
      if (t.length !== e.length) return !1;
      for (let r = 0; r < t.length; r++) if (t[r] !== e[r]) return !1;
      return !0;
    }
    function qz(t) {
      return (e) => (Rr.bytes(e), t(e));
    }
    (() => {
      const t =
          typeof globalThis == "object" && "crypto" in globalThis
            ? globalThis.crypto
            : void 0,
        e =
          typeof module < "u" &&
          typeof module.require == "function" &&
          module.require.bind(module);
      return { node: e && !t ? e("crypto") : void 0, web: t };
    })();
    const Tn = (() => {
      const t = qz(RC);
      return (t.create = RC.create), t;
    })();
    var Yt;
    (function (t) {
      t.assertEqual = (i) => i;
      function e(i) {}
      t.assertIs = e;
      function r(i) {
        throw new Error();
      }
      (t.assertNever = r),
        (t.arrayToEnum = (i) => {
          const a = {};
          for (const l of i) a[l] = l;
          return a;
        }),
        (t.getValidEnumValues = (i) => {
          const a = t.objectKeys(i).filter((u) => typeof i[i[u]] != "number"),
            l = {};
          for (const u of a) l[u] = i[u];
          return t.objectValues(l);
        }),
        (t.objectValues = (i) =>
          t.objectKeys(i).map(function (a) {
            return i[a];
          })),
        (t.objectKeys =
          typeof Object.keys == "function"
            ? (i) => Object.keys(i)
            : (i) => {
                const a = [];
                for (const l in i)
                  Object.prototype.hasOwnProperty.call(i, l) && a.push(l);
                return a;
              }),
        (t.find = (i, a) => {
          for (const l of i) if (a(l)) return l;
        }),
        (t.isInteger =
          typeof Number.isInteger == "function"
            ? (i) => Number.isInteger(i)
            : (i) =>
                typeof i == "number" && isFinite(i) && Math.floor(i) === i);
      function n(i, a = " | ") {
        return i.map((l) => (typeof l == "string" ? `'${l}'` : l)).join(a);
      }
      (t.joinValues = n),
        (t.jsonStringifyReplacer = (i, a) =>
          typeof a == "bigint" ? a.toString() : a);
    })(Yt || (Yt = {}));
    var R0;
    (function (t) {
      t.mergeShapes = (e, r) => ({ ...e, ...r });
    })(R0 || (R0 = {}));
    const Qe = Yt.arrayToEnum([
        "string",
        "nan",
        "number",
        "integer",
        "float",
        "boolean",
        "date",
        "bigint",
        "symbol",
        "function",
        "undefined",
        "null",
        "array",
        "object",
        "unknown",
        "promise",
        "void",
        "never",
        "map",
        "set",
      ]),
      Ya = (t) => {
        switch (typeof t) {
          case "undefined":
            return Qe.undefined;
          case "string":
            return Qe.string;
          case "number":
            return isNaN(t) ? Qe.nan : Qe.number;
          case "boolean":
            return Qe.boolean;
          case "function":
            return Qe.function;
          case "bigint":
            return Qe.bigint;
          case "symbol":
            return Qe.symbol;
          case "object":
            return Array.isArray(t)
              ? Qe.array
              : t === null
              ? Qe.null
              : t.then &&
                typeof t.then == "function" &&
                t.catch &&
                typeof t.catch == "function"
              ? Qe.promise
              : typeof Map < "u" && t instanceof Map
              ? Qe.map
              : typeof Set < "u" && t instanceof Set
              ? Qe.set
              : typeof Date < "u" && t instanceof Date
              ? Qe.date
              : Qe.object;
          default:
            return Qe.unknown;
        }
      },
      qe = Yt.arrayToEnum([
        "invalid_type",
        "invalid_literal",
        "custom",
        "invalid_union",
        "invalid_union_discriminator",
        "invalid_enum_value",
        "unrecognized_keys",
        "invalid_arguments",
        "invalid_return_type",
        "invalid_date",
        "invalid_string",
        "too_small",
        "too_big",
        "invalid_intersection_types",
        "not_multiple_of",
        "not_finite",
      ]),
      Kz = (t) => JSON.stringify(t, null, 2).replace(/"([^"]+)":/g, "$1:");
    class Hi extends Error {
      constructor(e) {
        super(),
          (this.issues = []),
          (this.addIssue = (n) => {
            this.issues = [...this.issues, n];
          }),
          (this.addIssues = (n = []) => {
            this.issues = [...this.issues, ...n];
          });
        const r = new.target.prototype;
        Object.setPrototypeOf
          ? Object.setPrototypeOf(this, r)
          : (this.__proto__ = r),
          (this.name = "ZodError"),
          (this.issues = e);
      }
      get errors() {
        return this.issues;
      }
      format(e) {
        const r =
            e ||
            function (a) {
              return a.message;
            },
          n = { _errors: [] },
          i = (a) => {
            for (const l of a.issues)
              if (l.code === "invalid_union") l.unionErrors.map(i);
              else if (l.code === "invalid_return_type") i(l.returnTypeError);
              else if (l.code === "invalid_arguments") i(l.argumentsError);
              else if (l.path.length === 0) n._errors.push(r(l));
              else {
                let u = n,
                  p = 0;
                for (; p < l.path.length; ) {
                  const m = l.path[p];
                  p === l.path.length - 1
                    ? ((u[m] = u[m] || { _errors: [] }),
                      u[m]._errors.push(r(l)))
                    : (u[m] = u[m] || { _errors: [] }),
                    (u = u[m]),
                    p++;
                }
              }
          };
        return i(this), n;
      }
      toString() {
        return this.message;
      }
      get message() {
        return JSON.stringify(this.issues, Yt.jsonStringifyReplacer, 2);
      }
      get isEmpty() {
        return this.issues.length === 0;
      }
      flatten(e = (r) => r.message) {
        const r = {},
          n = [];
        for (const i of this.issues)
          i.path.length > 0
            ? ((r[i.path[0]] = r[i.path[0]] || []), r[i.path[0]].push(e(i)))
            : n.push(e(i));
        return { formErrors: n, fieldErrors: r };
      }
      get formErrors() {
        return this.flatten();
      }
    }
    Hi.create = (t) => new Hi(t);
    const $u = (t, e) => {
      let r;
      switch (t.code) {
        case qe.invalid_type:
          t.received === Qe.undefined
            ? (r = "Required")
            : (r = `Expected ${t.expected}, received ${t.received}`);
          break;
        case qe.invalid_literal:
          r = `Invalid literal value, expected ${JSON.stringify(
            t.expected,
            Yt.jsonStringifyReplacer
          )}`;
          break;
        case qe.unrecognized_keys:
          r = `Unrecognized key(s) in object: ${Yt.joinValues(t.keys, ", ")}`;
          break;
        case qe.invalid_union:
          r = "Invalid input";
          break;
        case qe.invalid_union_discriminator:
          r = `Invalid discriminator value. Expected ${Yt.joinValues(
            t.options
          )}`;
          break;
        case qe.invalid_enum_value:
          r = `Invalid enum value. Expected ${Yt.joinValues(
            t.options
          )}, received '${t.received}'`;
          break;
        case qe.invalid_arguments:
          r = "Invalid function arguments";
          break;
        case qe.invalid_return_type:
          r = "Invalid function return type";
          break;
        case qe.invalid_date:
          r = "Invalid date";
          break;
        case qe.invalid_string:
          typeof t.validation == "object"
            ? "includes" in t.validation
              ? ((r = `Invalid input: must include "${t.validation.includes}"`),
                typeof t.validation.position == "number" &&
                  (r = `${r} at one or more positions greater than or equal to ${t.validation.position}`))
              : "startsWith" in t.validation
              ? (r = `Invalid input: must start with "${t.validation.startsWith}"`)
              : "endsWith" in t.validation
              ? (r = `Invalid input: must end with "${t.validation.endsWith}"`)
              : Yt.assertNever(t.validation)
            : t.validation !== "regex"
            ? (r = `Invalid ${t.validation}`)
            : (r = "Invalid");
          break;
        case qe.too_small:
          t.type === "array"
            ? (r = `Array must contain ${
                t.exact ? "exactly" : t.inclusive ? "at least" : "more than"
              } ${t.minimum} element(s)`)
            : t.type === "string"
            ? (r = `String must contain ${
                t.exact ? "exactly" : t.inclusive ? "at least" : "over"
              } ${t.minimum} character(s)`)
            : t.type === "number"
            ? (r = `Number must be ${
                t.exact
                  ? "exactly equal to "
                  : t.inclusive
                  ? "greater than or equal to "
                  : "greater than "
              }${t.minimum}`)
            : t.type === "date"
            ? (r = `Date must be ${
                t.exact
                  ? "exactly equal to "
                  : t.inclusive
                  ? "greater than or equal to "
                  : "greater than "
              }${new Date(Number(t.minimum))}`)
            : (r = "Invalid input");
          break;
        case qe.too_big:
          t.type === "array"
            ? (r = `Array must contain ${
                t.exact ? "exactly" : t.inclusive ? "at most" : "less than"
              } ${t.maximum} element(s)`)
            : t.type === "string"
            ? (r = `String must contain ${
                t.exact ? "exactly" : t.inclusive ? "at most" : "under"
              } ${t.maximum} character(s)`)
            : t.type === "number"
            ? (r = `Number must be ${
                t.exact
                  ? "exactly"
                  : t.inclusive
                  ? "less than or equal to"
                  : "less than"
              } ${t.maximum}`)
            : t.type === "bigint"
            ? (r = `BigInt must be ${
                t.exact
                  ? "exactly"
                  : t.inclusive
                  ? "less than or equal to"
                  : "less than"
              } ${t.maximum}`)
            : t.type === "date"
            ? (r = `Date must be ${
                t.exact
                  ? "exactly"
                  : t.inclusive
                  ? "smaller than or equal to"
                  : "smaller than"
              } ${new Date(Number(t.maximum))}`)
            : (r = "Invalid input");
          break;
        case qe.custom:
          r = "Invalid input";
          break;
        case qe.invalid_intersection_types:
          r = "Intersection results could not be merged";
          break;
        case qe.not_multiple_of:
          r = `Number must be a multiple of ${t.multipleOf}`;
          break;
        case qe.not_finite:
          r = "Number must be finite";
          break;
        default:
          (r = e.defaultError), Yt.assertNever(t);
      }
      return { message: r };
    };
    let FC = $u;
    function $z(t) {
      FC = t;
    }
    function $f() {
      return FC;
    }
    const Zf = (t) => {
        const { data: e, path: r, errorMaps: n, issueData: i } = t,
          a = [...r, ...(i.path || [])],
          l = { ...i, path: a };
        let u = "";
        const p = n
          .filter((m) => !!m)
          .slice()
          .reverse();
        for (const m of p) u = m(l, { data: e, defaultError: u }).message;
        return { ...i, path: a, message: i.message || u };
      },
      Zz = [];
    function tt(t, e) {
      const r = Zf({
        issueData: e,
        data: t.data,
        path: t.path,
        errorMaps: [
          t.common.contextualErrorMap,
          t.schemaErrorMap,
          $f(),
          $u,
        ].filter((n) => !!n),
      });
      t.common.issues.push(r);
    }
    class Pn {
      constructor() {
        this.value = "valid";
      }
      dirty() {
        this.value === "valid" && (this.value = "dirty");
      }
      abort() {
        this.value !== "aborted" && (this.value = "aborted");
      }
      static mergeArray(e, r) {
        const n = [];
        for (const i of r) {
          if (i.status === "aborted") return vt;
          i.status === "dirty" && e.dirty(), n.push(i.value);
        }
        return { status: e.value, value: n };
      }
      static async mergeObjectAsync(e, r) {
        const n = [];
        for (const i of r) n.push({ key: await i.key, value: await i.value });
        return Pn.mergeObjectSync(e, n);
      }
      static mergeObjectSync(e, r) {
        const n = {};
        for (const i of r) {
          const { key: a, value: l } = i;
          if (a.status === "aborted" || l.status === "aborted") return vt;
          a.status === "dirty" && e.dirty(),
            l.status === "dirty" && e.dirty(),
            a.value !== "__proto__" &&
              (typeof l.value < "u" || i.alwaysSet) &&
              (n[a.value] = l.value);
        }
        return { status: e.value, value: n };
      }
    }
    const vt = Object.freeze({ status: "aborted" }),
      DC = (t) => ({ status: "dirty", value: t }),
      zn = (t) => ({ status: "valid", value: t }),
      N0 = (t) => t.status === "aborted",
      B0 = (t) => t.status === "dirty",
      Zu = (t) => t.status === "valid",
      Qf = (t) => typeof Promise < "u" && t instanceof Promise;
    var at;
    (function (t) {
      (t.errToObj = (e) => (typeof e == "string" ? { message: e } : e || {})),
        (t.toString = (e) =>
          typeof e == "string" ? e : e == null ? void 0 : e.message);
    })(at || (at = {}));
    class ys {
      constructor(e, r, n, i) {
        (this._cachedPath = []),
          (this.parent = e),
          (this.data = r),
          (this._path = n),
          (this._key = i);
      }
      get path() {
        return (
          this._cachedPath.length ||
            (this._key instanceof Array
              ? this._cachedPath.push(...this._path, ...this._key)
              : this._cachedPath.push(...this._path, this._key)),
          this._cachedPath
        );
      }
    }
    const zC = (t, e) => {
      if (Zu(e)) return { success: !0, data: e.value };
      if (!t.common.issues.length)
        throw new Error("Validation failed but no issues detected.");
      return {
        success: !1,
        get error() {
          if (this._error) return this._error;
          const r = new Hi(t.common.issues);
          return (this._error = r), this._error;
        },
      };
    };
    function bt(t) {
      if (!t) return {};
      const {
        errorMap: e,
        invalid_type_error: r,
        required_error: n,
        description: i,
      } = t;
      if (e && (r || n))
        throw new Error(
          `Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`
        );
      return e
        ? { errorMap: e, description: i }
        : {
            errorMap: (a, l) =>
              a.code !== "invalid_type"
                ? { message: l.defaultError }
                : typeof l.data > "u"
                ? { message: n ?? l.defaultError }
                : { message: r ?? l.defaultError },
            description: i,
          };
    }
    class At {
      constructor(e) {
        (this.spa = this.safeParseAsync),
          (this._def = e),
          (this.parse = this.parse.bind(this)),
          (this.safeParse = this.safeParse.bind(this)),
          (this.parseAsync = this.parseAsync.bind(this)),
          (this.safeParseAsync = this.safeParseAsync.bind(this)),
          (this.spa = this.spa.bind(this)),
          (this.refine = this.refine.bind(this)),
          (this.refinement = this.refinement.bind(this)),
          (this.superRefine = this.superRefine.bind(this)),
          (this.optional = this.optional.bind(this)),
          (this.nullable = this.nullable.bind(this)),
          (this.nullish = this.nullish.bind(this)),
          (this.array = this.array.bind(this)),
          (this.promise = this.promise.bind(this)),
          (this.or = this.or.bind(this)),
          (this.and = this.and.bind(this)),
          (this.transform = this.transform.bind(this)),
          (this.brand = this.brand.bind(this)),
          (this.default = this.default.bind(this)),
          (this.catch = this.catch.bind(this)),
          (this.describe = this.describe.bind(this)),
          (this.pipe = this.pipe.bind(this)),
          (this.readonly = this.readonly.bind(this)),
          (this.isNullable = this.isNullable.bind(this)),
          (this.isOptional = this.isOptional.bind(this));
      }
      get description() {
        return this._def.description;
      }
      _getType(e) {
        return Ya(e.data);
      }
      _getOrReturnCtx(e, r) {
        return (
          r || {
            common: e.parent.common,
            data: e.data,
            parsedType: Ya(e.data),
            schemaErrorMap: this._def.errorMap,
            path: e.path,
            parent: e.parent,
          }
        );
      }
      _processInputParams(e) {
        return {
          status: new Pn(),
          ctx: {
            common: e.parent.common,
            data: e.data,
            parsedType: Ya(e.data),
            schemaErrorMap: this._def.errorMap,
            path: e.path,
            parent: e.parent,
          },
        };
      }
      _parseSync(e) {
        const r = this._parse(e);
        if (Qf(r)) throw new Error("Synchronous parse encountered promise.");
        return r;
      }
      _parseAsync(e) {
        const r = this._parse(e);
        return Promise.resolve(r);
      }
      parse(e, r) {
        const n = this.safeParse(e, r);
        if (n.success) return n.data;
        throw n.error;
      }
      safeParse(e, r) {
        var n;
        const i = {
            common: {
              issues: [],
              async:
                (n = r == null ? void 0 : r.async) !== null && n !== void 0
                  ? n
                  : !1,
              contextualErrorMap: r == null ? void 0 : r.errorMap,
            },
            path: (r == null ? void 0 : r.path) || [],
            schemaErrorMap: this._def.errorMap,
            parent: null,
            data: e,
            parsedType: Ya(e),
          },
          a = this._parseSync({ data: e, path: i.path, parent: i });
        return zC(i, a);
      }
      async parseAsync(e, r) {
        const n = await this.safeParseAsync(e, r);
        if (n.success) return n.data;
        throw n.error;
      }
      async safeParseAsync(e, r) {
        const n = {
            common: {
              issues: [],
              contextualErrorMap: r == null ? void 0 : r.errorMap,
              async: !0,
            },
            path: (r == null ? void 0 : r.path) || [],
            schemaErrorMap: this._def.errorMap,
            parent: null,
            data: e,
            parsedType: Ya(e),
          },
          i = this._parse({ data: e, path: n.path, parent: n }),
          a = await (Qf(i) ? i : Promise.resolve(i));
        return zC(n, a);
      }
      refine(e, r) {
        const n = (i) =>
          typeof r == "string" || typeof r > "u"
            ? { message: r }
            : typeof r == "function"
            ? r(i)
            : r;
        return this._refinement((i, a) => {
          const l = e(i),
            u = () => a.addIssue({ code: qe.custom, ...n(i) });
          return typeof Promise < "u" && l instanceof Promise
            ? l.then((p) => (p ? !0 : (u(), !1)))
            : l
            ? !0
            : (u(), !1);
        });
      }
      refinement(e, r) {
        return this._refinement((n, i) =>
          e(n) ? !0 : (i.addIssue(typeof r == "function" ? r(n, i) : r), !1)
        );
      }
      _refinement(e) {
        return new Xi({
          schema: this,
          typeName: lt.ZodEffects,
          effect: { type: "refinement", refinement: e },
        });
      }
      superRefine(e) {
        return this._refinement(e);
      }
      optional() {
        return $s.create(this, this._def);
      }
      nullable() {
        return Zo.create(this, this._def);
      }
      nullish() {
        return this.nullable().optional();
      }
      array() {
        return Wi.create(this, this._def);
      }
      promise() {
        return cc.create(this, this._def);
      }
      or(e) {
        return th.create([this, e], this._def);
      }
      and(e) {
        return rh.create(this, e, this._def);
      }
      transform(e) {
        return new Xi({
          ...bt(this._def),
          schema: this,
          typeName: lt.ZodEffects,
          effect: { type: "transform", transform: e },
        });
      }
      default(e) {
        const r = typeof e == "function" ? e : () => e;
        return new oh({
          ...bt(this._def),
          innerType: this,
          defaultValue: r,
          typeName: lt.ZodDefault,
        });
      }
      brand() {
        return new UC({
          typeName: lt.ZodBranded,
          type: this,
          ...bt(this._def),
        });
      }
      catch(e) {
        const r = typeof e == "function" ? e : () => e;
        return new ip({
          ...bt(this._def),
          innerType: this,
          catchValue: r,
          typeName: lt.ZodCatch,
        });
      }
      describe(e) {
        const r = this.constructor;
        return new r({ ...this._def, description: e });
      }
      pipe(e) {
        return lh.create(this, e);
      }
      readonly() {
        return ap.create(this);
      }
      isOptional() {
        return this.safeParse(void 0).success;
      }
      isNullable() {
        return this.safeParse(null).success;
      }
    }
    const Qz = /^c[^\s-]{8,}$/i,
      Jz = /^[a-z][a-z0-9]*$/,
      eH = /[0-9A-HJKMNP-TV-Z]{26}/,
      tH =
        /^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,
      rH = /^([A-Z0-9_+-]+\.?)*[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,
      nH = /^(\p{Extended_Pictographic}|\p{Emoji_Component})+$/u,
      iH =
        /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/,
      sH =
        /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,
      aH = (t) =>
        t.precision
          ? t.offset
            ? new RegExp(
                `^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${t.precision}}(([+-]\\d{2}(:?\\d{2})?)|Z)$`
              )
            : new RegExp(
                `^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${t.precision}}Z$`
              )
          : t.precision === 0
          ? t.offset
            ? new RegExp(
                "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(([+-]\\d{2}(:?\\d{2})?)|Z)$"
              )
            : new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$")
          : t.offset
          ? new RegExp(
              "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(([+-]\\d{2}(:?\\d{2})?)|Z)$"
            )
          : new RegExp(
              "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$"
            );
    function oH(t, e) {
      return !!(
        ((e === "v4" || !e) && iH.test(t)) ||
        ((e === "v6" || !e) && sH.test(t))
      );
    }
    class Ui extends At {
      constructor() {
        super(...arguments),
          (this._regex = (e, r, n) =>
            this.refinement((i) => e.test(i), {
              validation: r,
              code: qe.invalid_string,
              ...at.errToObj(n),
            })),
          (this.nonempty = (e) => this.min(1, at.errToObj(e))),
          (this.trim = () =>
            new Ui({
              ...this._def,
              checks: [...this._def.checks, { kind: "trim" }],
            })),
          (this.toLowerCase = () =>
            new Ui({
              ...this._def,
              checks: [...this._def.checks, { kind: "toLowerCase" }],
            })),
          (this.toUpperCase = () =>
            new Ui({
              ...this._def,
              checks: [...this._def.checks, { kind: "toUpperCase" }],
            }));
      }
      _parse(e) {
        if (
          (this._def.coerce && (e.data = String(e.data)),
          this._getType(e) !== Qe.string)
        ) {
          const i = this._getOrReturnCtx(e);
          return (
            tt(i, {
              code: qe.invalid_type,
              expected: Qe.string,
              received: i.parsedType,
            }),
            vt
          );
        }
        const r = new Pn();
        let n;
        for (const i of this._def.checks)
          if (i.kind === "min")
            e.data.length < i.value &&
              ((n = this._getOrReturnCtx(e, n)),
              tt(n, {
                code: qe.too_small,
                minimum: i.value,
                type: "string",
                inclusive: !0,
                exact: !1,
                message: i.message,
              }),
              r.dirty());
          else if (i.kind === "max")
            e.data.length > i.value &&
              ((n = this._getOrReturnCtx(e, n)),
              tt(n, {
                code: qe.too_big,
                maximum: i.value,
                type: "string",
                inclusive: !0,
                exact: !1,
                message: i.message,
              }),
              r.dirty());
          else if (i.kind === "length") {
            const a = e.data.length > i.value,
              l = e.data.length < i.value;
            (a || l) &&
              ((n = this._getOrReturnCtx(e, n)),
              a
                ? tt(n, {
                    code: qe.too_big,
                    maximum: i.value,
                    type: "string",
                    inclusive: !0,
                    exact: !0,
                    message: i.message,
                  })
                : l &&
                  tt(n, {
                    code: qe.too_small,
                    minimum: i.value,
                    type: "string",
                    inclusive: !0,
                    exact: !0,
                    message: i.message,
                  }),
              r.dirty());
          } else if (i.kind === "email")
            rH.test(e.data) ||
              ((n = this._getOrReturnCtx(e, n)),
              tt(n, {
                validation: "email",
                code: qe.invalid_string,
                message: i.message,
              }),
              r.dirty());
          else if (i.kind === "emoji")
            nH.test(e.data) ||
              ((n = this._getOrReturnCtx(e, n)),
              tt(n, {
                validation: "emoji",
                code: qe.invalid_string,
                message: i.message,
              }),
              r.dirty());
          else if (i.kind === "uuid")
            tH.test(e.data) ||
              ((n = this._getOrReturnCtx(e, n)),
              tt(n, {
                validation: "uuid",
                code: qe.invalid_string,
                message: i.message,
              }),
              r.dirty());
          else if (i.kind === "cuid")
            Qz.test(e.data) ||
              ((n = this._getOrReturnCtx(e, n)),
              tt(n, {
                validation: "cuid",
                code: qe.invalid_string,
                message: i.message,
              }),
              r.dirty());
          else if (i.kind === "cuid2")
            Jz.test(e.data) ||
              ((n = this._getOrReturnCtx(e, n)),
              tt(n, {
                validation: "cuid2",
                code: qe.invalid_string,
                message: i.message,
              }),
              r.dirty());
          else if (i.kind === "ulid")
            eH.test(e.data) ||
              ((n = this._getOrReturnCtx(e, n)),
              tt(n, {
                validation: "ulid",
                code: qe.invalid_string,
                message: i.message,
              }),
              r.dirty());
          else if (i.kind === "url")
            try {
              new URL(e.data);
            } catch {
              (n = this._getOrReturnCtx(e, n)),
                tt(n, {
                  validation: "url",
                  code: qe.invalid_string,
                  message: i.message,
                }),
                r.dirty();
            }
          else
            i.kind === "regex"
              ? ((i.regex.lastIndex = 0),
                i.regex.test(e.data) ||
                  ((n = this._getOrReturnCtx(e, n)),
                  tt(n, {
                    validation: "regex",
                    code: qe.invalid_string,
                    message: i.message,
                  }),
                  r.dirty()))
              : i.kind === "trim"
              ? (e.data = e.data.trim())
              : i.kind === "includes"
              ? e.data.includes(i.value, i.position) ||
                ((n = this._getOrReturnCtx(e, n)),
                tt(n, {
                  code: qe.invalid_string,
                  validation: { includes: i.value, position: i.position },
                  message: i.message,
                }),
                r.dirty())
              : i.kind === "toLowerCase"
              ? (e.data = e.data.toLowerCase())
              : i.kind === "toUpperCase"
              ? (e.data = e.data.toUpperCase())
              : i.kind === "startsWith"
              ? e.data.startsWith(i.value) ||
                ((n = this._getOrReturnCtx(e, n)),
                tt(n, {
                  code: qe.invalid_string,
                  validation: { startsWith: i.value },
                  message: i.message,
                }),
                r.dirty())
              : i.kind === "endsWith"
              ? e.data.endsWith(i.value) ||
                ((n = this._getOrReturnCtx(e, n)),
                tt(n, {
                  code: qe.invalid_string,
                  validation: { endsWith: i.value },
                  message: i.message,
                }),
                r.dirty())
              : i.kind === "datetime"
              ? aH(i).test(e.data) ||
                ((n = this._getOrReturnCtx(e, n)),
                tt(n, {
                  code: qe.invalid_string,
                  validation: "datetime",
                  message: i.message,
                }),
                r.dirty())
              : i.kind === "ip"
              ? oH(e.data, i.version) ||
                ((n = this._getOrReturnCtx(e, n)),
                tt(n, {
                  validation: "ip",
                  code: qe.invalid_string,
                  message: i.message,
                }),
                r.dirty())
              : Yt.assertNever(i);
        return { status: r.value, value: e.data };
      }
      _addCheck(e) {
        return new Ui({ ...this._def, checks: [...this._def.checks, e] });
      }
      email(e) {
        return this._addCheck({ kind: "email", ...at.errToObj(e) });
      }
      url(e) {
        return this._addCheck({ kind: "url", ...at.errToObj(e) });
      }
      emoji(e) {
        return this._addCheck({ kind: "emoji", ...at.errToObj(e) });
      }
      uuid(e) {
        return this._addCheck({ kind: "uuid", ...at.errToObj(e) });
      }
      cuid(e) {
        return this._addCheck({ kind: "cuid", ...at.errToObj(e) });
      }
      cuid2(e) {
        return this._addCheck({ kind: "cuid2", ...at.errToObj(e) });
      }
      ulid(e) {
        return this._addCheck({ kind: "ulid", ...at.errToObj(e) });
      }
      ip(e) {
        return this._addCheck({ kind: "ip", ...at.errToObj(e) });
      }
      datetime(e) {
        var r;
        return typeof e == "string"
          ? this._addCheck({
              kind: "datetime",
              precision: null,
              offset: !1,
              message: e,
            })
          : this._addCheck({
              kind: "datetime",
              precision:
                typeof (e == null ? void 0 : e.precision) > "u"
                  ? null
                  : e == null
                  ? void 0
                  : e.precision,
              offset:
                (r = e == null ? void 0 : e.offset) !== null && r !== void 0
                  ? r
                  : !1,
              ...at.errToObj(e == null ? void 0 : e.message),
            });
      }
      regex(e, r) {
        return this._addCheck({ kind: "regex", regex: e, ...at.errToObj(r) });
      }
      includes(e, r) {
        return this._addCheck({
          kind: "includes",
          value: e,
          position: r == null ? void 0 : r.position,
          ...at.errToObj(r == null ? void 0 : r.message),
        });
      }
      startsWith(e, r) {
        return this._addCheck({
          kind: "startsWith",
          value: e,
          ...at.errToObj(r),
        });
      }
      endsWith(e, r) {
        return this._addCheck({
          kind: "endsWith",
          value: e,
          ...at.errToObj(r),
        });
      }
      min(e, r) {
        return this._addCheck({ kind: "min", value: e, ...at.errToObj(r) });
      }
      max(e, r) {
        return this._addCheck({ kind: "max", value: e, ...at.errToObj(r) });
      }
      length(e, r) {
        return this._addCheck({ kind: "length", value: e, ...at.errToObj(r) });
      }
      get isDatetime() {
        return !!this._def.checks.find((e) => e.kind === "datetime");
      }
      get isEmail() {
        return !!this._def.checks.find((e) => e.kind === "email");
      }
      get isURL() {
        return !!this._def.checks.find((e) => e.kind === "url");
      }
      get isEmoji() {
        return !!this._def.checks.find((e) => e.kind === "emoji");
      }
      get isUUID() {
        return !!this._def.checks.find((e) => e.kind === "uuid");
      }
      get isCUID() {
        return !!this._def.checks.find((e) => e.kind === "cuid");
      }
      get isCUID2() {
        return !!this._def.checks.find((e) => e.kind === "cuid2");
      }
      get isULID() {
        return !!this._def.checks.find((e) => e.kind === "ulid");
      }
      get isIP() {
        return !!this._def.checks.find((e) => e.kind === "ip");
      }
      get minLength() {
        let e = null;
        for (const r of this._def.checks)
          r.kind === "min" && (e === null || r.value > e) && (e = r.value);
        return e;
      }
      get maxLength() {
        let e = null;
        for (const r of this._def.checks)
          r.kind === "max" && (e === null || r.value < e) && (e = r.value);
        return e;
      }
    }
    Ui.create = (t) => {
      var e;
      return new Ui({
        checks: [],
        typeName: lt.ZodString,
        coerce:
          (e = t == null ? void 0 : t.coerce) !== null && e !== void 0 ? e : !1,
        ...bt(t),
      });
    };
    function lH(t, e) {
      const r = (t.toString().split(".")[1] || "").length,
        n = (e.toString().split(".")[1] || "").length,
        i = r > n ? r : n,
        a = parseInt(t.toFixed(i).replace(".", "")),
        l = parseInt(e.toFixed(i).replace(".", ""));
      return (a % l) / Math.pow(10, i);
    }
    class Va extends At {
      constructor() {
        super(...arguments),
          (this.min = this.gte),
          (this.max = this.lte),
          (this.step = this.multipleOf);
      }
      _parse(e) {
        if (
          (this._def.coerce && (e.data = Number(e.data)),
          this._getType(e) !== Qe.number)
        ) {
          const i = this._getOrReturnCtx(e);
          return (
            tt(i, {
              code: qe.invalid_type,
              expected: Qe.number,
              received: i.parsedType,
            }),
            vt
          );
        }
        let r;
        const n = new Pn();
        for (const i of this._def.checks)
          i.kind === "int"
            ? Yt.isInteger(e.data) ||
              ((r = this._getOrReturnCtx(e, r)),
              tt(r, {
                code: qe.invalid_type,
                expected: "integer",
                received: "float",
                message: i.message,
              }),
              n.dirty())
            : i.kind === "min"
            ? (i.inclusive ? e.data < i.value : e.data <= i.value) &&
              ((r = this._getOrReturnCtx(e, r)),
              tt(r, {
                code: qe.too_small,
                minimum: i.value,
                type: "number",
                inclusive: i.inclusive,
                exact: !1,
                message: i.message,
              }),
              n.dirty())
            : i.kind === "max"
            ? (i.inclusive ? e.data > i.value : e.data >= i.value) &&
              ((r = this._getOrReturnCtx(e, r)),
              tt(r, {
                code: qe.too_big,
                maximum: i.value,
                type: "number",
                inclusive: i.inclusive,
                exact: !1,
                message: i.message,
              }),
              n.dirty())
            : i.kind === "multipleOf"
            ? lH(e.data, i.value) !== 0 &&
              ((r = this._getOrReturnCtx(e, r)),
              tt(r, {
                code: qe.not_multiple_of,
                multipleOf: i.value,
                message: i.message,
              }),
              n.dirty())
            : i.kind === "finite"
            ? Number.isFinite(e.data) ||
              ((r = this._getOrReturnCtx(e, r)),
              tt(r, { code: qe.not_finite, message: i.message }),
              n.dirty())
            : Yt.assertNever(i);
        return { status: n.value, value: e.data };
      }
      gte(e, r) {
        return this.setLimit("min", e, !0, at.toString(r));
      }
      gt(e, r) {
        return this.setLimit("min", e, !1, at.toString(r));
      }
      lte(e, r) {
        return this.setLimit("max", e, !0, at.toString(r));
      }
      lt(e, r) {
        return this.setLimit("max", e, !1, at.toString(r));
      }
      setLimit(e, r, n, i) {
        return new Va({
          ...this._def,
          checks: [
            ...this._def.checks,
            { kind: e, value: r, inclusive: n, message: at.toString(i) },
          ],
        });
      }
      _addCheck(e) {
        return new Va({ ...this._def, checks: [...this._def.checks, e] });
      }
      int(e) {
        return this._addCheck({ kind: "int", message: at.toString(e) });
      }
      positive(e) {
        return this._addCheck({
          kind: "min",
          value: 0,
          inclusive: !1,
          message: at.toString(e),
        });
      }
      negative(e) {
        return this._addCheck({
          kind: "max",
          value: 0,
          inclusive: !1,
          message: at.toString(e),
        });
      }
      nonpositive(e) {
        return this._addCheck({
          kind: "max",
          value: 0,
          inclusive: !0,
          message: at.toString(e),
        });
      }
      nonnegative(e) {
        return this._addCheck({
          kind: "min",
          value: 0,
          inclusive: !0,
          message: at.toString(e),
        });
      }
      multipleOf(e, r) {
        return this._addCheck({
          kind: "multipleOf",
          value: e,
          message: at.toString(r),
        });
      }
      finite(e) {
        return this._addCheck({ kind: "finite", message: at.toString(e) });
      }
      safe(e) {
        return this._addCheck({
          kind: "min",
          inclusive: !0,
          value: Number.MIN_SAFE_INTEGER,
          message: at.toString(e),
        })._addCheck({
          kind: "max",
          inclusive: !0,
          value: Number.MAX_SAFE_INTEGER,
          message: at.toString(e),
        });
      }
      get minValue() {
        let e = null;
        for (const r of this._def.checks)
          r.kind === "min" && (e === null || r.value > e) && (e = r.value);
        return e;
      }
      get maxValue() {
        let e = null;
        for (const r of this._def.checks)
          r.kind === "max" && (e === null || r.value < e) && (e = r.value);
        return e;
      }
      get isInt() {
        return !!this._def.checks.find(
          (e) =>
            e.kind === "int" ||
            (e.kind === "multipleOf" && Yt.isInteger(e.value))
        );
      }
      get isFinite() {
        let e = null,
          r = null;
        for (const n of this._def.checks) {
          if (
            n.kind === "finite" ||
            n.kind === "int" ||
            n.kind === "multipleOf"
          )
            return !0;
          n.kind === "min"
            ? (r === null || n.value > r) && (r = n.value)
            : n.kind === "max" && (e === null || n.value < e) && (e = n.value);
        }
        return Number.isFinite(r) && Number.isFinite(e);
      }
    }
    Va.create = (t) =>
      new Va({
        checks: [],
        typeName: lt.ZodNumber,
        coerce: (t == null ? void 0 : t.coerce) || !1,
        ...bt(t),
      });
    class qa extends At {
      constructor() {
        super(...arguments), (this.min = this.gte), (this.max = this.lte);
      }
      _parse(e) {
        if (
          (this._def.coerce && (e.data = BigInt(e.data)),
          this._getType(e) !== Qe.bigint)
        ) {
          const i = this._getOrReturnCtx(e);
          return (
            tt(i, {
              code: qe.invalid_type,
              expected: Qe.bigint,
              received: i.parsedType,
            }),
            vt
          );
        }
        let r;
        const n = new Pn();
        for (const i of this._def.checks)
          i.kind === "min"
            ? (i.inclusive ? e.data < i.value : e.data <= i.value) &&
              ((r = this._getOrReturnCtx(e, r)),
              tt(r, {
                code: qe.too_small,
                type: "bigint",
                minimum: i.value,
                inclusive: i.inclusive,
                message: i.message,
              }),
              n.dirty())
            : i.kind === "max"
            ? (i.inclusive ? e.data > i.value : e.data >= i.value) &&
              ((r = this._getOrReturnCtx(e, r)),
              tt(r, {
                code: qe.too_big,
                type: "bigint",
                maximum: i.value,
                inclusive: i.inclusive,
                message: i.message,
              }),
              n.dirty())
            : i.kind === "multipleOf"
            ? e.data % i.value !== BigInt(0) &&
              ((r = this._getOrReturnCtx(e, r)),
              tt(r, {
                code: qe.not_multiple_of,
                multipleOf: i.value,
                message: i.message,
              }),
              n.dirty())
            : Yt.assertNever(i);
        return { status: n.value, value: e.data };
      }
      gte(e, r) {
        return this.setLimit("min", e, !0, at.toString(r));
      }
      gt(e, r) {
        return this.setLimit("min", e, !1, at.toString(r));
      }
      lte(e, r) {
        return this.setLimit("max", e, !0, at.toString(r));
      }
      lt(e, r) {
        return this.setLimit("max", e, !1, at.toString(r));
      }
      setLimit(e, r, n, i) {
        return new qa({
          ...this._def,
          checks: [
            ...this._def.checks,
            { kind: e, value: r, inclusive: n, message: at.toString(i) },
          ],
        });
      }
      _addCheck(e) {
        return new qa({ ...this._def, checks: [...this._def.checks, e] });
      }
      positive(e) {
        return this._addCheck({
          kind: "min",
          value: BigInt(0),
          inclusive: !1,
          message: at.toString(e),
        });
      }
      negative(e) {
        return this._addCheck({
          kind: "max",
          value: BigInt(0),
          inclusive: !1,
          message: at.toString(e),
        });
      }
      nonpositive(e) {
        return this._addCheck({
          kind: "max",
          value: BigInt(0),
          inclusive: !0,
          message: at.toString(e),
        });
      }
      nonnegative(e) {
        return this._addCheck({
          kind: "min",
          value: BigInt(0),
          inclusive: !0,
          message: at.toString(e),
        });
      }
      multipleOf(e, r) {
        return this._addCheck({
          kind: "multipleOf",
          value: e,
          message: at.toString(r),
        });
      }
      get minValue() {
        let e = null;
        for (const r of this._def.checks)
          r.kind === "min" && (e === null || r.value > e) && (e = r.value);
        return e;
      }
      get maxValue() {
        let e = null;
        for (const r of this._def.checks)
          r.kind === "max" && (e === null || r.value < e) && (e = r.value);
        return e;
      }
    }
    qa.create = (t) => {
      var e;
      return new qa({
        checks: [],
        typeName: lt.ZodBigInt,
        coerce:
          (e = t == null ? void 0 : t.coerce) !== null && e !== void 0 ? e : !1,
        ...bt(t),
      });
    };
    class Qu extends At {
      _parse(e) {
        if (
          (this._def.coerce && (e.data = !!e.data),
          this._getType(e) !== Qe.boolean)
        ) {
          const r = this._getOrReturnCtx(e);
          return (
            tt(r, {
              code: qe.invalid_type,
              expected: Qe.boolean,
              received: r.parsedType,
            }),
            vt
          );
        }
        return zn(e.data);
      }
    }
    Qu.create = (t) =>
      new Qu({
        typeName: lt.ZodBoolean,
        coerce: (t == null ? void 0 : t.coerce) || !1,
        ...bt(t),
      });
    class qo extends At {
      _parse(e) {
        if (
          (this._def.coerce && (e.data = new Date(e.data)),
          this._getType(e) !== Qe.date)
        ) {
          const i = this._getOrReturnCtx(e);
          return (
            tt(i, {
              code: qe.invalid_type,
              expected: Qe.date,
              received: i.parsedType,
            }),
            vt
          );
        }
        if (isNaN(e.data.getTime())) {
          const i = this._getOrReturnCtx(e);
          return tt(i, { code: qe.invalid_date }), vt;
        }
        const r = new Pn();
        let n;
        for (const i of this._def.checks)
          i.kind === "min"
            ? e.data.getTime() < i.value &&
              ((n = this._getOrReturnCtx(e, n)),
              tt(n, {
                code: qe.too_small,
                message: i.message,
                inclusive: !0,
                exact: !1,
                minimum: i.value,
                type: "date",
              }),
              r.dirty())
            : i.kind === "max"
            ? e.data.getTime() > i.value &&
              ((n = this._getOrReturnCtx(e, n)),
              tt(n, {
                code: qe.too_big,
                message: i.message,
                inclusive: !0,
                exact: !1,
                maximum: i.value,
                type: "date",
              }),
              r.dirty())
            : Yt.assertNever(i);
        return { status: r.value, value: new Date(e.data.getTime()) };
      }
      _addCheck(e) {
        return new qo({ ...this._def, checks: [...this._def.checks, e] });
      }
      min(e, r) {
        return this._addCheck({
          kind: "min",
          value: e.getTime(),
          message: at.toString(r),
        });
      }
      max(e, r) {
        return this._addCheck({
          kind: "max",
          value: e.getTime(),
          message: at.toString(r),
        });
      }
      get minDate() {
        let e = null;
        for (const r of this._def.checks)
          r.kind === "min" && (e === null || r.value > e) && (e = r.value);
        return e != null ? new Date(e) : null;
      }
      get maxDate() {
        let e = null;
        for (const r of this._def.checks)
          r.kind === "max" && (e === null || r.value < e) && (e = r.value);
        return e != null ? new Date(e) : null;
      }
    }
    qo.create = (t) =>
      new qo({
        checks: [],
        coerce: (t == null ? void 0 : t.coerce) || !1,
        typeName: lt.ZodDate,
        ...bt(t),
      });
    class Jf extends At {
      _parse(e) {
        if (this._getType(e) !== Qe.symbol) {
          const r = this._getOrReturnCtx(e);
          return (
            tt(r, {
              code: qe.invalid_type,
              expected: Qe.symbol,
              received: r.parsedType,
            }),
            vt
          );
        }
        return zn(e.data);
      }
    }
    Jf.create = (t) => new Jf({ typeName: lt.ZodSymbol, ...bt(t) });
    class Ju extends At {
      _parse(e) {
        if (this._getType(e) !== Qe.undefined) {
          const r = this._getOrReturnCtx(e);
          return (
            tt(r, {
              code: qe.invalid_type,
              expected: Qe.undefined,
              received: r.parsedType,
            }),
            vt
          );
        }
        return zn(e.data);
      }
    }
    Ju.create = (t) => new Ju({ typeName: lt.ZodUndefined, ...bt(t) });
    class eh extends At {
      _parse(e) {
        if (this._getType(e) !== Qe.null) {
          const r = this._getOrReturnCtx(e);
          return (
            tt(r, {
              code: qe.invalid_type,
              expected: Qe.null,
              received: r.parsedType,
            }),
            vt
          );
        }
        return zn(e.data);
      }
    }
    eh.create = (t) => new eh({ typeName: lt.ZodNull, ...bt(t) });
    class ac extends At {
      constructor() {
        super(...arguments), (this._any = !0);
      }
      _parse(e) {
        return zn(e.data);
      }
    }
    ac.create = (t) => new ac({ typeName: lt.ZodAny, ...bt(t) });
    class Ko extends At {
      constructor() {
        super(...arguments), (this._unknown = !0);
      }
      _parse(e) {
        return zn(e.data);
      }
    }
    Ko.create = (t) => new Ko({ typeName: lt.ZodUnknown, ...bt(t) });
    class Ks extends At {
      _parse(e) {
        const r = this._getOrReturnCtx(e);
        return (
          tt(r, {
            code: qe.invalid_type,
            expected: Qe.never,
            received: r.parsedType,
          }),
          vt
        );
      }
    }
    Ks.create = (t) => new Ks({ typeName: lt.ZodNever, ...bt(t) });
    class ep extends At {
      _parse(e) {
        if (this._getType(e) !== Qe.undefined) {
          const r = this._getOrReturnCtx(e);
          return (
            tt(r, {
              code: qe.invalid_type,
              expected: Qe.void,
              received: r.parsedType,
            }),
            vt
          );
        }
        return zn(e.data);
      }
    }
    ep.create = (t) => new ep({ typeName: lt.ZodVoid, ...bt(t) });
    class Wi extends At {
      _parse(e) {
        const { ctx: r, status: n } = this._processInputParams(e),
          i = this._def;
        if (r.parsedType !== Qe.array)
          return (
            tt(r, {
              code: qe.invalid_type,
              expected: Qe.array,
              received: r.parsedType,
            }),
            vt
          );
        if (i.exactLength !== null) {
          const l = r.data.length > i.exactLength.value,
            u = r.data.length < i.exactLength.value;
          (l || u) &&
            (tt(r, {
              code: l ? qe.too_big : qe.too_small,
              minimum: u ? i.exactLength.value : void 0,
              maximum: l ? i.exactLength.value : void 0,
              type: "array",
              inclusive: !0,
              exact: !0,
              message: i.exactLength.message,
            }),
            n.dirty());
        }
        if (
          (i.minLength !== null &&
            r.data.length < i.minLength.value &&
            (tt(r, {
              code: qe.too_small,
              minimum: i.minLength.value,
              type: "array",
              inclusive: !0,
              exact: !1,
              message: i.minLength.message,
            }),
            n.dirty()),
          i.maxLength !== null &&
            r.data.length > i.maxLength.value &&
            (tt(r, {
              code: qe.too_big,
              maximum: i.maxLength.value,
              type: "array",
              inclusive: !0,
              exact: !1,
              message: i.maxLength.message,
            }),
            n.dirty()),
          r.common.async)
        )
          return Promise.all(
            [...r.data].map((l, u) =>
              i.type._parseAsync(new ys(r, l, r.path, u))
            )
          ).then((l) => Pn.mergeArray(n, l));
        const a = [...r.data].map((l, u) =>
          i.type._parseSync(new ys(r, l, r.path, u))
        );
        return Pn.mergeArray(n, a);
      }
      get element() {
        return this._def.type;
      }
      min(e, r) {
        return new Wi({
          ...this._def,
          minLength: { value: e, message: at.toString(r) },
        });
      }
      max(e, r) {
        return new Wi({
          ...this._def,
          maxLength: { value: e, message: at.toString(r) },
        });
      }
      length(e, r) {
        return new Wi({
          ...this._def,
          exactLength: { value: e, message: at.toString(r) },
        });
      }
      nonempty(e) {
        return this.min(1, e);
      }
    }
    Wi.create = (t, e) =>
      new Wi({
        type: t,
        minLength: null,
        maxLength: null,
        exactLength: null,
        typeName: lt.ZodArray,
        ...bt(e),
      });
    function oc(t) {
      if (t instanceof Xr) {
        const e = {};
        for (const r in t.shape) {
          const n = t.shape[r];
          e[r] = $s.create(oc(n));
        }
        return new Xr({ ...t._def, shape: () => e });
      } else
        return t instanceof Wi
          ? new Wi({ ...t._def, type: oc(t.element) })
          : t instanceof $s
          ? $s.create(oc(t.unwrap()))
          : t instanceof Zo
          ? Zo.create(oc(t.unwrap()))
          : t instanceof bs
          ? bs.create(t.items.map((e) => oc(e)))
          : t;
    }
    class Xr extends At {
      constructor() {
        super(...arguments),
          (this._cached = null),
          (this.nonstrict = this.passthrough),
          (this.augment = this.extend);
      }
      _getCached() {
        if (this._cached !== null) return this._cached;
        const e = this._def.shape(),
          r = Yt.objectKeys(e);
        return (this._cached = { shape: e, keys: r });
      }
      _parse(e) {
        if (this._getType(e) !== Qe.object) {
          const p = this._getOrReturnCtx(e);
          return (
            tt(p, {
              code: qe.invalid_type,
              expected: Qe.object,
              received: p.parsedType,
            }),
            vt
          );
        }
        const { status: r, ctx: n } = this._processInputParams(e),
          { shape: i, keys: a } = this._getCached(),
          l = [];
        if (
          !(
            this._def.catchall instanceof Ks &&
            this._def.unknownKeys === "strip"
          )
        )
          for (const p in n.data) a.includes(p) || l.push(p);
        const u = [];
        for (const p of a) {
          const m = i[p],
            v = n.data[p];
          u.push({
            key: { status: "valid", value: p },
            value: m._parse(new ys(n, v, n.path, p)),
            alwaysSet: p in n.data,
          });
        }
        if (this._def.catchall instanceof Ks) {
          const p = this._def.unknownKeys;
          if (p === "passthrough")
            for (const m of l)
              u.push({
                key: { status: "valid", value: m },
                value: { status: "valid", value: n.data[m] },
              });
          else if (p === "strict")
            l.length > 0 &&
              (tt(n, { code: qe.unrecognized_keys, keys: l }), r.dirty());
          else if (p !== "strip")
            throw new Error(
              "Internal ZodObject error: invalid unknownKeys value."
            );
        } else {
          const p = this._def.catchall;
          for (const m of l) {
            const v = n.data[m];
            u.push({
              key: { status: "valid", value: m },
              value: p._parse(new ys(n, v, n.path, m)),
              alwaysSet: m in n.data,
            });
          }
        }
        return n.common.async
          ? Promise.resolve()
              .then(async () => {
                const p = [];
                for (const m of u) {
                  const v = await m.key;
                  p.push({
                    key: v,
                    value: await m.value,
                    alwaysSet: m.alwaysSet,
                  });
                }
                return p;
              })
              .then((p) => Pn.mergeObjectSync(r, p))
          : Pn.mergeObjectSync(r, u);
      }
      get shape() {
        return this._def.shape();
      }
      strict(e) {
        return (
          at.errToObj,
          new Xr({
            ...this._def,
            unknownKeys: "strict",
            ...(e !== void 0
              ? {
                  errorMap: (r, n) => {
                    var i, a, l, u;
                    const p =
                      (l =
                        (a = (i = this._def).errorMap) === null || a === void 0
                          ? void 0
                          : a.call(i, r, n).message) !== null && l !== void 0
                        ? l
                        : n.defaultError;
                    return r.code === "unrecognized_keys"
                      ? {
                          message:
                            (u = at.errToObj(e).message) !== null &&
                            u !== void 0
                              ? u
                              : p,
                        }
                      : { message: p };
                  },
                }
              : {}),
          })
        );
      }
      strip() {
        return new Xr({ ...this._def, unknownKeys: "strip" });
      }
      passthrough() {
        return new Xr({ ...this._def, unknownKeys: "passthrough" });
      }
      extend(e) {
        return new Xr({
          ...this._def,
          shape: () => ({ ...this._def.shape(), ...e }),
        });
      }
      merge(e) {
        return new Xr({
          unknownKeys: e._def.unknownKeys,
          catchall: e._def.catchall,
          shape: () => ({ ...this._def.shape(), ...e._def.shape() }),
          typeName: lt.ZodObject,
        });
      }
      setKey(e, r) {
        return this.augment({ [e]: r });
      }
      catchall(e) {
        return new Xr({ ...this._def, catchall: e });
      }
      pick(e) {
        const r = {};
        return (
          Yt.objectKeys(e).forEach((n) => {
            e[n] && this.shape[n] && (r[n] = this.shape[n]);
          }),
          new Xr({ ...this._def, shape: () => r })
        );
      }
      omit(e) {
        const r = {};
        return (
          Yt.objectKeys(this.shape).forEach((n) => {
            e[n] || (r[n] = this.shape[n]);
          }),
          new Xr({ ...this._def, shape: () => r })
        );
      }
      deepPartial() {
        return oc(this);
      }
      partial(e) {
        const r = {};
        return (
          Yt.objectKeys(this.shape).forEach((n) => {
            const i = this.shape[n];
            e && !e[n] ? (r[n] = i) : (r[n] = i.optional());
          }),
          new Xr({ ...this._def, shape: () => r })
        );
      }
      required(e) {
        const r = {};
        return (
          Yt.objectKeys(this.shape).forEach((n) => {
            if (e && !e[n]) r[n] = this.shape[n];
            else {
              let i = this.shape[n];
              for (; i instanceof $s; ) i = i._def.innerType;
              r[n] = i;
            }
          }),
          new Xr({ ...this._def, shape: () => r })
        );
      }
      keyof() {
        return HC(Yt.objectKeys(this.shape));
      }
    }
    (Xr.create = (t, e) =>
      new Xr({
        shape: () => t,
        unknownKeys: "strip",
        catchall: Ks.create(),
        typeName: lt.ZodObject,
        ...bt(e),
      })),
      (Xr.strictCreate = (t, e) =>
        new Xr({
          shape: () => t,
          unknownKeys: "strict",
          catchall: Ks.create(),
          typeName: lt.ZodObject,
          ...bt(e),
        })),
      (Xr.lazycreate = (t, e) =>
        new Xr({
          shape: t,
          unknownKeys: "strip",
          catchall: Ks.create(),
          typeName: lt.ZodObject,
          ...bt(e),
        }));
    class th extends At {
      _parse(e) {
        const { ctx: r } = this._processInputParams(e),
          n = this._def.options;
        function i(a) {
          for (const u of a) if (u.result.status === "valid") return u.result;
          for (const u of a)
            if (u.result.status === "dirty")
              return r.common.issues.push(...u.ctx.common.issues), u.result;
          const l = a.map((u) => new Hi(u.ctx.common.issues));
          return tt(r, { code: qe.invalid_union, unionErrors: l }), vt;
        }
        if (r.common.async)
          return Promise.all(
            n.map(async (a) => {
              const l = {
                ...r,
                common: { ...r.common, issues: [] },
                parent: null,
              };
              return {
                result: await a._parseAsync({
                  data: r.data,
                  path: r.path,
                  parent: l,
                }),
                ctx: l,
              };
            })
          ).then(i);
        {
          let a;
          const l = [];
          for (const p of n) {
            const m = {
                ...r,
                common: { ...r.common, issues: [] },
                parent: null,
              },
              v = p._parseSync({ data: r.data, path: r.path, parent: m });
            if (v.status === "valid") return v;
            v.status === "dirty" && !a && (a = { result: v, ctx: m }),
              m.common.issues.length && l.push(m.common.issues);
          }
          if (a) return r.common.issues.push(...a.ctx.common.issues), a.result;
          const u = l.map((p) => new Hi(p));
          return tt(r, { code: qe.invalid_union, unionErrors: u }), vt;
        }
      }
      get options() {
        return this._def.options;
      }
    }
    th.create = (t, e) =>
      new th({ options: t, typeName: lt.ZodUnion, ...bt(e) });
    const tp = (t) =>
      t instanceof ih
        ? tp(t.schema)
        : t instanceof Xi
        ? tp(t.innerType())
        : t instanceof sh
        ? [t.value]
        : t instanceof Ka
        ? t.options
        : t instanceof ah
        ? Object.keys(t.enum)
        : t instanceof oh
        ? tp(t._def.innerType)
        : t instanceof Ju
        ? [void 0]
        : t instanceof eh
        ? [null]
        : null;
    class rp extends At {
      _parse(e) {
        const { ctx: r } = this._processInputParams(e);
        if (r.parsedType !== Qe.object)
          return (
            tt(r, {
              code: qe.invalid_type,
              expected: Qe.object,
              received: r.parsedType,
            }),
            vt
          );
        const n = this.discriminator,
          i = r.data[n],
          a = this.optionsMap.get(i);
        return a
          ? r.common.async
            ? a._parseAsync({ data: r.data, path: r.path, parent: r })
            : a._parseSync({ data: r.data, path: r.path, parent: r })
          : (tt(r, {
              code: qe.invalid_union_discriminator,
              options: Array.from(this.optionsMap.keys()),
              path: [n],
            }),
            vt);
      }
      get discriminator() {
        return this._def.discriminator;
      }
      get options() {
        return this._def.options;
      }
      get optionsMap() {
        return this._def.optionsMap;
      }
      static create(e, r, n) {
        const i = new Map();
        for (const a of r) {
          const l = tp(a.shape[e]);
          if (!l)
            throw new Error(
              `A discriminator value for key \`${e}\` could not be extracted from all schema options`
            );
          for (const u of l) {
            if (i.has(u))
              throw new Error(
                `Discriminator property ${String(
                  e
                )} has duplicate value ${String(u)}`
              );
            i.set(u, a);
          }
        }
        return new rp({
          typeName: lt.ZodDiscriminatedUnion,
          discriminator: e,
          options: r,
          optionsMap: i,
          ...bt(n),
        });
      }
    }
    function F0(t, e) {
      const r = Ya(t),
        n = Ya(e);
      if (t === e) return { valid: !0, data: t };
      if (r === Qe.object && n === Qe.object) {
        const i = Yt.objectKeys(e),
          a = Yt.objectKeys(t).filter((u) => i.indexOf(u) !== -1),
          l = { ...t, ...e };
        for (const u of a) {
          const p = F0(t[u], e[u]);
          if (!p.valid) return { valid: !1 };
          l[u] = p.data;
        }
        return { valid: !0, data: l };
      } else if (r === Qe.array && n === Qe.array) {
        if (t.length !== e.length) return { valid: !1 };
        const i = [];
        for (let a = 0; a < t.length; a++) {
          const l = t[a],
            u = e[a],
            p = F0(l, u);
          if (!p.valid) return { valid: !1 };
          i.push(p.data);
        }
        return { valid: !0, data: i };
      } else
        return r === Qe.date && n === Qe.date && +t == +e
          ? { valid: !0, data: t }
          : { valid: !1 };
    }
    class rh extends At {
      _parse(e) {
        const { status: r, ctx: n } = this._processInputParams(e),
          i = (a, l) => {
            if (N0(a) || N0(l)) return vt;
            const u = F0(a.value, l.value);
            return u.valid
              ? ((B0(a) || B0(l)) && r.dirty(),
                { status: r.value, value: u.data })
              : (tt(n, { code: qe.invalid_intersection_types }), vt);
          };
        return n.common.async
          ? Promise.all([
              this._def.left._parseAsync({
                data: n.data,
                path: n.path,
                parent: n,
              }),
              this._def.right._parseAsync({
                data: n.data,
                path: n.path,
                parent: n,
              }),
            ]).then(([a, l]) => i(a, l))
          : i(
              this._def.left._parseSync({
                data: n.data,
                path: n.path,
                parent: n,
              }),
              this._def.right._parseSync({
                data: n.data,
                path: n.path,
                parent: n,
              })
            );
      }
    }
    rh.create = (t, e, r) =>
      new rh({ left: t, right: e, typeName: lt.ZodIntersection, ...bt(r) });
    class bs extends At {
      _parse(e) {
        const { status: r, ctx: n } = this._processInputParams(e);
        if (n.parsedType !== Qe.array)
          return (
            tt(n, {
              code: qe.invalid_type,
              expected: Qe.array,
              received: n.parsedType,
            }),
            vt
          );
        if (n.data.length < this._def.items.length)
          return (
            tt(n, {
              code: qe.too_small,
              minimum: this._def.items.length,
              inclusive: !0,
              exact: !1,
              type: "array",
            }),
            vt
          );
        !this._def.rest &&
          n.data.length > this._def.items.length &&
          (tt(n, {
            code: qe.too_big,
            maximum: this._def.items.length,
            inclusive: !0,
            exact: !1,
            type: "array",
          }),
          r.dirty());
        const i = [...n.data]
          .map((a, l) => {
            const u = this._def.items[l] || this._def.rest;
            return u ? u._parse(new ys(n, a, n.path, l)) : null;
          })
          .filter((a) => !!a);
        return n.common.async
          ? Promise.all(i).then((a) => Pn.mergeArray(r, a))
          : Pn.mergeArray(r, i);
      }
      get items() {
        return this._def.items;
      }
      rest(e) {
        return new bs({ ...this._def, rest: e });
      }
    }
    bs.create = (t, e) => {
      if (!Array.isArray(t))
        throw new Error(
          "You must pass an array of schemas to z.tuple([ ... ])"
        );
      return new bs({ items: t, typeName: lt.ZodTuple, rest: null, ...bt(e) });
    };
    class nh extends At {
      get keySchema() {
        return this._def.keyType;
      }
      get valueSchema() {
        return this._def.valueType;
      }
      _parse(e) {
        const { status: r, ctx: n } = this._processInputParams(e);
        if (n.parsedType !== Qe.object)
          return (
            tt(n, {
              code: qe.invalid_type,
              expected: Qe.object,
              received: n.parsedType,
            }),
            vt
          );
        const i = [],
          a = this._def.keyType,
          l = this._def.valueType;
        for (const u in n.data)
          i.push({
            key: a._parse(new ys(n, u, n.path, u)),
            value: l._parse(new ys(n, n.data[u], n.path, u)),
          });
        return n.common.async
          ? Pn.mergeObjectAsync(r, i)
          : Pn.mergeObjectSync(r, i);
      }
      get element() {
        return this._def.valueType;
      }
      static create(e, r, n) {
        return r instanceof At
          ? new nh({
              keyType: e,
              valueType: r,
              typeName: lt.ZodRecord,
              ...bt(n),
            })
          : new nh({
              keyType: Ui.create(),
              valueType: e,
              typeName: lt.ZodRecord,
              ...bt(r),
            });
      }
    }
    class np extends At {
      get keySchema() {
        return this._def.keyType;
      }
      get valueSchema() {
        return this._def.valueType;
      }
      _parse(e) {
        const { status: r, ctx: n } = this._processInputParams(e);
        if (n.parsedType !== Qe.map)
          return (
            tt(n, {
              code: qe.invalid_type,
              expected: Qe.map,
              received: n.parsedType,
            }),
            vt
          );
        const i = this._def.keyType,
          a = this._def.valueType,
          l = [...n.data.entries()].map(([u, p], m) => ({
            key: i._parse(new ys(n, u, n.path, [m, "key"])),
            value: a._parse(new ys(n, p, n.path, [m, "value"])),
          }));
        if (n.common.async) {
          const u = new Map();
          return Promise.resolve().then(async () => {
            for (const p of l) {
              const m = await p.key,
                v = await p.value;
              if (m.status === "aborted" || v.status === "aborted") return vt;
              (m.status === "dirty" || v.status === "dirty") && r.dirty(),
                u.set(m.value, v.value);
            }
            return { status: r.value, value: u };
          });
        } else {
          const u = new Map();
          for (const p of l) {
            const m = p.key,
              v = p.value;
            if (m.status === "aborted" || v.status === "aborted") return vt;
            (m.status === "dirty" || v.status === "dirty") && r.dirty(),
              u.set(m.value, v.value);
          }
          return { status: r.value, value: u };
        }
      }
    }
    np.create = (t, e, r) =>
      new np({ valueType: e, keyType: t, typeName: lt.ZodMap, ...bt(r) });
    class $o extends At {
      _parse(e) {
        const { status: r, ctx: n } = this._processInputParams(e);
        if (n.parsedType !== Qe.set)
          return (
            tt(n, {
              code: qe.invalid_type,
              expected: Qe.set,
              received: n.parsedType,
            }),
            vt
          );
        const i = this._def;
        i.minSize !== null &&
          n.data.size < i.minSize.value &&
          (tt(n, {
            code: qe.too_small,
            minimum: i.minSize.value,
            type: "set",
            inclusive: !0,
            exact: !1,
            message: i.minSize.message,
          }),
          r.dirty()),
          i.maxSize !== null &&
            n.data.size > i.maxSize.value &&
            (tt(n, {
              code: qe.too_big,
              maximum: i.maxSize.value,
              type: "set",
              inclusive: !0,
              exact: !1,
              message: i.maxSize.message,
            }),
            r.dirty());
        const a = this._def.valueType;
        function l(p) {
          const m = new Set();
          for (const v of p) {
            if (v.status === "aborted") return vt;
            v.status === "dirty" && r.dirty(), m.add(v.value);
          }
          return { status: r.value, value: m };
        }
        const u = [...n.data.values()].map((p, m) =>
          a._parse(new ys(n, p, n.path, m))
        );
        return n.common.async ? Promise.all(u).then((p) => l(p)) : l(u);
      }
      min(e, r) {
        return new $o({
          ...this._def,
          minSize: { value: e, message: at.toString(r) },
        });
      }
      max(e, r) {
        return new $o({
          ...this._def,
          maxSize: { value: e, message: at.toString(r) },
        });
      }
      size(e, r) {
        return this.min(e, r).max(e, r);
      }
      nonempty(e) {
        return this.min(1, e);
      }
    }
    $o.create = (t, e) =>
      new $o({
        valueType: t,
        minSize: null,
        maxSize: null,
        typeName: lt.ZodSet,
        ...bt(e),
      });
    class lc extends At {
      constructor() {
        super(...arguments), (this.validate = this.implement);
      }
      _parse(e) {
        const { ctx: r } = this._processInputParams(e);
        if (r.parsedType !== Qe.function)
          return (
            tt(r, {
              code: qe.invalid_type,
              expected: Qe.function,
              received: r.parsedType,
            }),
            vt
          );
        function n(u, p) {
          return Zf({
            data: u,
            path: r.path,
            errorMaps: [
              r.common.contextualErrorMap,
              r.schemaErrorMap,
              $f(),
              $u,
            ].filter((m) => !!m),
            issueData: { code: qe.invalid_arguments, argumentsError: p },
          });
        }
        function i(u, p) {
          return Zf({
            data: u,
            path: r.path,
            errorMaps: [
              r.common.contextualErrorMap,
              r.schemaErrorMap,
              $f(),
              $u,
            ].filter((m) => !!m),
            issueData: { code: qe.invalid_return_type, returnTypeError: p },
          });
        }
        const a = { errorMap: r.common.contextualErrorMap },
          l = r.data;
        if (this._def.returns instanceof cc) {
          const u = this;
          return zn(async function (...p) {
            const m = new Hi([]),
              v = await u._def.args.parseAsync(p, a).catch((S) => {
                throw (m.addIssue(n(p, S)), m);
              }),
              w = await Reflect.apply(l, this, v);
            return await u._def.returns._def.type
              .parseAsync(w, a)
              .catch((S) => {
                throw (m.addIssue(i(w, S)), m);
              });
          });
        } else {
          const u = this;
          return zn(function (...p) {
            const m = u._def.args.safeParse(p, a);
            if (!m.success) throw new Hi([n(p, m.error)]);
            const v = Reflect.apply(l, this, m.data),
              w = u._def.returns.safeParse(v, a);
            if (!w.success) throw new Hi([i(v, w.error)]);
            return w.data;
          });
        }
      }
      parameters() {
        return this._def.args;
      }
      returnType() {
        return this._def.returns;
      }
      args(...e) {
        return new lc({ ...this._def, args: bs.create(e).rest(Ko.create()) });
      }
      returns(e) {
        return new lc({ ...this._def, returns: e });
      }
      implement(e) {
        return this.parse(e);
      }
      strictImplement(e) {
        return this.parse(e);
      }
      static create(e, r, n) {
        return new lc({
          args: e || bs.create([]).rest(Ko.create()),
          returns: r || Ko.create(),
          typeName: lt.ZodFunction,
          ...bt(n),
        });
      }
    }
    class ih extends At {
      get schema() {
        return this._def.getter();
      }
      _parse(e) {
        const { ctx: r } = this._processInputParams(e);
        return this._def
          .getter()
          ._parse({ data: r.data, path: r.path, parent: r });
      }
    }
    ih.create = (t, e) => new ih({ getter: t, typeName: lt.ZodLazy, ...bt(e) });
    class sh extends At {
      _parse(e) {
        if (e.data !== this._def.value) {
          const r = this._getOrReturnCtx(e);
          return (
            tt(r, {
              received: r.data,
              code: qe.invalid_literal,
              expected: this._def.value,
            }),
            vt
          );
        }
        return { status: "valid", value: e.data };
      }
      get value() {
        return this._def.value;
      }
    }
    sh.create = (t, e) =>
      new sh({ value: t, typeName: lt.ZodLiteral, ...bt(e) });
    function HC(t, e) {
      return new Ka({ values: t, typeName: lt.ZodEnum, ...bt(e) });
    }
    class Ka extends At {
      _parse(e) {
        if (typeof e.data != "string") {
          const r = this._getOrReturnCtx(e),
            n = this._def.values;
          return (
            tt(r, {
              expected: Yt.joinValues(n),
              received: r.parsedType,
              code: qe.invalid_type,
            }),
            vt
          );
        }
        if (this._def.values.indexOf(e.data) === -1) {
          const r = this._getOrReturnCtx(e),
            n = this._def.values;
          return (
            tt(r, {
              received: r.data,
              code: qe.invalid_enum_value,
              options: n,
            }),
            vt
          );
        }
        return zn(e.data);
      }
      get options() {
        return this._def.values;
      }
      get enum() {
        const e = {};
        for (const r of this._def.values) e[r] = r;
        return e;
      }
      get Values() {
        const e = {};
        for (const r of this._def.values) e[r] = r;
        return e;
      }
      get Enum() {
        const e = {};
        for (const r of this._def.values) e[r] = r;
        return e;
      }
      extract(e) {
        return Ka.create(e);
      }
      exclude(e) {
        return Ka.create(this.options.filter((r) => !e.includes(r)));
      }
    }
    Ka.create = HC;
    class ah extends At {
      _parse(e) {
        const r = Yt.getValidEnumValues(this._def.values),
          n = this._getOrReturnCtx(e);
        if (n.parsedType !== Qe.string && n.parsedType !== Qe.number) {
          const i = Yt.objectValues(r);
          return (
            tt(n, {
              expected: Yt.joinValues(i),
              received: n.parsedType,
              code: qe.invalid_type,
            }),
            vt
          );
        }
        if (r.indexOf(e.data) === -1) {
          const i = Yt.objectValues(r);
          return (
            tt(n, {
              received: n.data,
              code: qe.invalid_enum_value,
              options: i,
            }),
            vt
          );
        }
        return zn(e.data);
      }
      get enum() {
        return this._def.values;
      }
    }
    ah.create = (t, e) =>
      new ah({ values: t, typeName: lt.ZodNativeEnum, ...bt(e) });
    class cc extends At {
      unwrap() {
        return this._def.type;
      }
      _parse(e) {
        const { ctx: r } = this._processInputParams(e);
        if (r.parsedType !== Qe.promise && r.common.async === !1)
          return (
            tt(r, {
              code: qe.invalid_type,
              expected: Qe.promise,
              received: r.parsedType,
            }),
            vt
          );
        const n =
          r.parsedType === Qe.promise ? r.data : Promise.resolve(r.data);
        return zn(
          n.then((i) =>
            this._def.type.parseAsync(i, {
              path: r.path,
              errorMap: r.common.contextualErrorMap,
            })
          )
        );
      }
    }
    cc.create = (t, e) =>
      new cc({ type: t, typeName: lt.ZodPromise, ...bt(e) });
    class Xi extends At {
      innerType() {
        return this._def.schema;
      }
      sourceType() {
        return this._def.schema._def.typeName === lt.ZodEffects
          ? this._def.schema.sourceType()
          : this._def.schema;
      }
      _parse(e) {
        const { status: r, ctx: n } = this._processInputParams(e),
          i = this._def.effect || null,
          a = {
            addIssue: (l) => {
              tt(n, l), l.fatal ? r.abort() : r.dirty();
            },
            get path() {
              return n.path;
            },
          };
        if (((a.addIssue = a.addIssue.bind(a)), i.type === "preprocess")) {
          const l = i.transform(n.data, a);
          return n.common.issues.length
            ? { status: "dirty", value: n.data }
            : n.common.async
            ? Promise.resolve(l).then((u) =>
                this._def.schema._parseAsync({
                  data: u,
                  path: n.path,
                  parent: n,
                })
              )
            : this._def.schema._parseSync({ data: l, path: n.path, parent: n });
        }
        if (i.type === "refinement") {
          const l = (u) => {
            const p = i.refinement(u, a);
            if (n.common.async) return Promise.resolve(p);
            if (p instanceof Promise)
              throw new Error(
                "Async refinement encountered during synchronous parse operation. Use .parseAsync instead."
              );
            return u;
          };
          if (n.common.async === !1) {
            const u = this._def.schema._parseSync({
              data: n.data,
              path: n.path,
              parent: n,
            });
            return u.status === "aborted"
              ? vt
              : (u.status === "dirty" && r.dirty(),
                l(u.value),
                { status: r.value, value: u.value });
          } else
            return this._def.schema
              ._parseAsync({ data: n.data, path: n.path, parent: n })
              .then((u) =>
                u.status === "aborted"
                  ? vt
                  : (u.status === "dirty" && r.dirty(),
                    l(u.value).then(() => ({
                      status: r.value,
                      value: u.value,
                    })))
              );
        }
        if (i.type === "transform")
          if (n.common.async === !1) {
            const l = this._def.schema._parseSync({
              data: n.data,
              path: n.path,
              parent: n,
            });
            if (!Zu(l)) return l;
            const u = i.transform(l.value, a);
            if (u instanceof Promise)
              throw new Error(
                "Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead."
              );
            return { status: r.value, value: u };
          } else
            return this._def.schema
              ._parseAsync({ data: n.data, path: n.path, parent: n })
              .then((l) =>
                Zu(l)
                  ? Promise.resolve(i.transform(l.value, a)).then((u) => ({
                      status: r.value,
                      value: u,
                    }))
                  : l
              );
        Yt.assertNever(i);
      }
    }
    (Xi.create = (t, e, r) =>
      new Xi({ schema: t, typeName: lt.ZodEffects, effect: e, ...bt(r) })),
      (Xi.createWithPreprocess = (t, e, r) =>
        new Xi({
          schema: e,
          effect: { type: "preprocess", transform: t },
          typeName: lt.ZodEffects,
          ...bt(r),
        }));
    class $s extends At {
      _parse(e) {
        return this._getType(e) === Qe.undefined
          ? zn(void 0)
          : this._def.innerType._parse(e);
      }
      unwrap() {
        return this._def.innerType;
      }
    }
    $s.create = (t, e) =>
      new $s({ innerType: t, typeName: lt.ZodOptional, ...bt(e) });
    class Zo extends At {
      _parse(e) {
        return this._getType(e) === Qe.null
          ? zn(null)
          : this._def.innerType._parse(e);
      }
      unwrap() {
        return this._def.innerType;
      }
    }
    Zo.create = (t, e) =>
      new Zo({ innerType: t, typeName: lt.ZodNullable, ...bt(e) });
    class oh extends At {
      _parse(e) {
        const { ctx: r } = this._processInputParams(e);
        let n = r.data;
        return (
          r.parsedType === Qe.undefined && (n = this._def.defaultValue()),
          this._def.innerType._parse({ data: n, path: r.path, parent: r })
        );
      }
      removeDefault() {
        return this._def.innerType;
      }
    }
    oh.create = (t, e) =>
      new oh({
        innerType: t,
        typeName: lt.ZodDefault,
        defaultValue:
          typeof e.default == "function" ? e.default : () => e.default,
        ...bt(e),
      });
    class ip extends At {
      _parse(e) {
        const { ctx: r } = this._processInputParams(e),
          n = { ...r, common: { ...r.common, issues: [] } },
          i = this._def.innerType._parse({
            data: n.data,
            path: n.path,
            parent: { ...n },
          });
        return Qf(i)
          ? i.then((a) => ({
              status: "valid",
              value:
                a.status === "valid"
                  ? a.value
                  : this._def.catchValue({
                      get error() {
                        return new Hi(n.common.issues);
                      },
                      input: n.data,
                    }),
            }))
          : {
              status: "valid",
              value:
                i.status === "valid"
                  ? i.value
                  : this._def.catchValue({
                      get error() {
                        return new Hi(n.common.issues);
                      },
                      input: n.data,
                    }),
            };
      }
      removeCatch() {
        return this._def.innerType;
      }
    }
    ip.create = (t, e) =>
      new ip({
        innerType: t,
        typeName: lt.ZodCatch,
        catchValue: typeof e.catch == "function" ? e.catch : () => e.catch,
        ...bt(e),
      });
    class sp extends At {
      _parse(e) {
        if (this._getType(e) !== Qe.nan) {
          const r = this._getOrReturnCtx(e);
          return (
            tt(r, {
              code: qe.invalid_type,
              expected: Qe.nan,
              received: r.parsedType,
            }),
            vt
          );
        }
        return { status: "valid", value: e.data };
      }
    }
    sp.create = (t) => new sp({ typeName: lt.ZodNaN, ...bt(t) });
    const cH = Symbol("zod_brand");
    class UC extends At {
      _parse(e) {
        const { ctx: r } = this._processInputParams(e),
          n = r.data;
        return this._def.type._parse({ data: n, path: r.path, parent: r });
      }
      unwrap() {
        return this._def.type;
      }
    }
    class lh extends At {
      _parse(e) {
        const { status: r, ctx: n } = this._processInputParams(e);
        if (n.common.async)
          return (async () => {
            const i = await this._def.in._parseAsync({
              data: n.data,
              path: n.path,
              parent: n,
            });
            return i.status === "aborted"
              ? vt
              : i.status === "dirty"
              ? (r.dirty(), DC(i.value))
              : this._def.out._parseAsync({
                  data: i.value,
                  path: n.path,
                  parent: n,
                });
          })();
        {
          const i = this._def.in._parseSync({
            data: n.data,
            path: n.path,
            parent: n,
          });
          return i.status === "aborted"
            ? vt
            : i.status === "dirty"
            ? (r.dirty(), { status: "dirty", value: i.value })
            : this._def.out._parseSync({
                data: i.value,
                path: n.path,
                parent: n,
              });
        }
      }
      static create(e, r) {
        return new lh({ in: e, out: r, typeName: lt.ZodPipeline });
      }
    }
    class ap extends At {
      _parse(e) {
        const r = this._def.innerType._parse(e);
        return Zu(r) && (r.value = Object.freeze(r.value)), r;
      }
    }
    ap.create = (t, e) =>
      new ap({ innerType: t, typeName: lt.ZodReadonly, ...bt(e) });
    const WC = (t, e = {}, r) =>
        t
          ? ac.create().superRefine((n, i) => {
              var a, l;
              if (!t(n)) {
                const u =
                    typeof e == "function"
                      ? e(n)
                      : typeof e == "string"
                      ? { message: e }
                      : e,
                  p =
                    (l = (a = u.fatal) !== null && a !== void 0 ? a : r) !==
                      null && l !== void 0
                      ? l
                      : !0,
                  m = typeof u == "string" ? { message: u } : u;
                i.addIssue({ code: "custom", ...m, fatal: p });
              }
            })
          : ac.create(),
      uH = { object: Xr.lazycreate };
    var lt;
    (function (t) {
      (t.ZodString = "ZodString"),
        (t.ZodNumber = "ZodNumber"),
        (t.ZodNaN = "ZodNaN"),
        (t.ZodBigInt = "ZodBigInt"),
        (t.ZodBoolean = "ZodBoolean"),
        (t.ZodDate = "ZodDate"),
        (t.ZodSymbol = "ZodSymbol"),
        (t.ZodUndefined = "ZodUndefined"),
        (t.ZodNull = "ZodNull"),
        (t.ZodAny = "ZodAny"),
        (t.ZodUnknown = "ZodUnknown"),
        (t.ZodNever = "ZodNever"),
        (t.ZodVoid = "ZodVoid"),
        (t.ZodArray = "ZodArray"),
        (t.ZodObject = "ZodObject"),
        (t.ZodUnion = "ZodUnion"),
        (t.ZodDiscriminatedUnion = "ZodDiscriminatedUnion"),
        (t.ZodIntersection = "ZodIntersection"),
        (t.ZodTuple = "ZodTuple"),
        (t.ZodRecord = "ZodRecord"),
        (t.ZodMap = "ZodMap"),
        (t.ZodSet = "ZodSet"),
        (t.ZodFunction = "ZodFunction"),
        (t.ZodLazy = "ZodLazy"),
        (t.ZodLiteral = "ZodLiteral"),
        (t.ZodEnum = "ZodEnum"),
        (t.ZodEffects = "ZodEffects"),
        (t.ZodNativeEnum = "ZodNativeEnum"),
        (t.ZodOptional = "ZodOptional"),
        (t.ZodNullable = "ZodNullable"),
        (t.ZodDefault = "ZodDefault"),
        (t.ZodCatch = "ZodCatch"),
        (t.ZodPromise = "ZodPromise"),
        (t.ZodBranded = "ZodBranded"),
        (t.ZodPipeline = "ZodPipeline"),
        (t.ZodReadonly = "ZodReadonly");
    })(lt || (lt = {}));
    const hH = (t, e = { message: `Input not instance of ${t.name}` }) =>
        WC((r) => r instanceof t, e),
      XC = Ui.create,
      jC = Va.create,
      dH = sp.create,
      fH = qa.create,
      GC = Qu.create,
      pH = qo.create,
      gH = Jf.create,
      mH = Ju.create,
      vH = eh.create,
      yH = ac.create,
      bH = Ko.create,
      xH = Ks.create,
      wH = ep.create,
      kH = Wi.create,
      _H = Xr.create,
      AH = Xr.strictCreate,
      CH = th.create,
      SH = rp.create,
      EH = rh.create,
      IH = bs.create,
      TH = nh.create,
      PH = np.create,
      OH = $o.create,
      LH = lc.create,
      MH = ih.create,
      RH = sh.create,
      NH = Ka.create,
      BH = ah.create,
      FH = cc.create,
      YC = Xi.create,
      DH = $s.create,
      zH = Zo.create,
      HH = Xi.createWithPreprocess,
      UH = lh.create;
    var xs = Object.freeze({
      __proto__: null,
      defaultErrorMap: $u,
      setErrorMap: $z,
      getErrorMap: $f,
      makeIssue: Zf,
      EMPTY_PATH: Zz,
      addIssueToContext: tt,
      ParseStatus: Pn,
      INVALID: vt,
      DIRTY: DC,
      OK: zn,
      isAborted: N0,
      isDirty: B0,
      isValid: Zu,
      isAsync: Qf,
      get util() {
        return Yt;
      },
      get objectUtil() {
        return R0;
      },
      ZodParsedType: Qe,
      getParsedType: Ya,
      ZodType: At,
      ZodString: Ui,
      ZodNumber: Va,
      ZodBigInt: qa,
      ZodBoolean: Qu,
      ZodDate: qo,
      ZodSymbol: Jf,
      ZodUndefined: Ju,
      ZodNull: eh,
      ZodAny: ac,
      ZodUnknown: Ko,
      ZodNever: Ks,
      ZodVoid: ep,
      ZodArray: Wi,
      ZodObject: Xr,
      ZodUnion: th,
      ZodDiscriminatedUnion: rp,
      ZodIntersection: rh,
      ZodTuple: bs,
      ZodRecord: nh,
      ZodMap: np,
      ZodSet: $o,
      ZodFunction: lc,
      ZodLazy: ih,
      ZodLiteral: sh,
      ZodEnum: Ka,
      ZodNativeEnum: ah,
      ZodPromise: cc,
      ZodEffects: Xi,
      ZodTransformer: Xi,
      ZodOptional: $s,
      ZodNullable: Zo,
      ZodDefault: oh,
      ZodCatch: ip,
      ZodNaN: sp,
      BRAND: cH,
      ZodBranded: UC,
      ZodPipeline: lh,
      ZodReadonly: ap,
      custom: WC,
      Schema: At,
      ZodSchema: At,
      late: uH,
      get ZodFirstPartyTypeKind() {
        return lt;
      },
      coerce: {
        string: (t) => Ui.create({ ...t, coerce: !0 }),
        number: (t) => Va.create({ ...t, coerce: !0 }),
        boolean: (t) => Qu.create({ ...t, coerce: !0 }),
        bigint: (t) => qa.create({ ...t, coerce: !0 }),
        date: (t) => qo.create({ ...t, coerce: !0 }),
      },
      any: yH,
      array: kH,
      bigint: fH,
      boolean: GC,
      date: pH,
      discriminatedUnion: SH,
      effect: YC,
      enum: NH,
      function: LH,
      instanceof: hH,
      intersection: EH,
      lazy: MH,
      literal: RH,
      map: PH,
      nan: dH,
      nativeEnum: BH,
      never: xH,
      null: vH,
      nullable: zH,
      number: jC,
      object: _H,
      oboolean: () => GC().optional(),
      onumber: () => jC().optional(),
      optional: DH,
      ostring: () => XC().optional(),
      pipeline: UH,
      preprocess: HH,
      promise: FH,
      record: TH,
      set: OH,
      strictObject: AH,
      string: XC,
      symbol: gH,
      transformer: YC,
      tuple: IH,
      undefined: mH,
      union: CH,
      unknown: bH,
      void: wH,
      NEVER: vt,
      ZodIssueCode: qe,
      quotelessJson: Kz,
      ZodError: Hi,
    });
    const WH = (t) => (t.message ? t.message : "unspecified error");
    class uc extends gt {
      constructor(e) {
        super(),
          (this.code = n8),
          (this.errors = e),
          (super.message = `Web3 validator found ${e.length} error[s]:
${this._compileErrors().join(`
`)}`);
      }
      _compileErrors() {
        return this.errors.map(WH);
      }
    }
    const XH = ["bool", "int", "uint", "bytes", "string", "address", "tuple"],
      VC = (t) => typeof t == "object" && "type" in t && "name" in t,
      D0 = (t) => typeof t == "string",
      rr = (t) => typeof t == "string" && /^((-)?0x[0-9a-f]+|(0x))$/i.test(t);
    function qC(t, e) {
      return !(
        typeof t != "string" ||
        !t.match(/^0x[0-9A-Fa-f]*$/) ||
        (typeof e < "u" && e > 0 && t.length !== 2 + 2 * e)
      );
    }
    const z0 = (t) =>
      typeof t == "number" ||
      typeof t == "bigint" ||
      (typeof t == "string" && /^((-0x|0x|-)?[0-9a-f]+|(0x))$/i.test(t));
    function H0(t) {
      if (typeof t != "string")
        throw new Error(
          `[isHexPrefixed] input must be type 'string', received type ${typeof t}`
        );
      return t.startsWith("0x");
    }
    const U0 = function (t) {
        for (const [e, r] of Object.entries(t))
          if (r !== void 0 && r.length > 0 && r[0] === 0)
            throw new Error(
              `${e} cannot have leading zeroes, received: ${r.toString()}`
            );
      },
      jH = [
        "hex",
        "number",
        "blockNumber",
        "blockNumberOrTag",
        "filter",
        "bloom",
      ],
      Qo = (t) => {
        let e = t.replace(/ /, ""),
          r,
          n = !1,
          i = [];
        if (
          (t.includes("[") &&
            ((e = e.slice(0, e.indexOf("["))),
            (i = [...t.matchAll(/(?:\[(\d*)\])/g)]
              .map((a) => parseInt(a[1], 10))
              .map((a) => (Number.isNaN(a) ? -1 : a))),
            (n = i.length > 0)),
          XH.includes(e))
        )
          return { baseType: e, isArray: n, baseTypeSize: r, arraySizes: i };
        if (e.startsWith("int"))
          (r = parseInt(e.substring(3), 10)), (e = "int");
        else if (e.startsWith("uint"))
          (r = parseInt(t.substring(4), 10)), (e = "uint");
        else if (e.startsWith("bytes"))
          (r = parseInt(e.substring(5), 10)), (e = "bytes");
        else
          return {
            baseType: void 0,
            isArray: !1,
            baseTypeSize: void 0,
            arraySizes: i,
          };
        return { baseType: e, isArray: n, baseTypeSize: r, arraySizes: i };
      },
      W0 = (t, e = {}) => {
        if (Object.keys(e).includes("type"))
          throw new uc([
            {
              keyword: "eth",
              message: 'Either "eth" or "type" can be presented in schema',
              params: { eth: t },
              instancePath: "",
              schemaPath: "",
            },
          ]);
        const { baseType: r, baseTypeSize: n } = Qo(t);
        if (!r && !jH.includes(t))
          throw new uc([
            {
              keyword: "eth",
              message: `Eth data type "${t}" is not valid`,
              params: { eth: t },
              instancePath: "",
              schemaPath: "",
            },
          ]);
        if (r) {
          if (r === "tuple")
            throw new Error('"tuple" type is not implemented directly.');
          return { format: `${r}${n ?? ""}`, required: !0 };
        }
        return t ? { format: t, required: !0 } : {};
      },
      op = (t, e = "/0") => {
        const r = {
          type: "array",
          items: [],
          maxItems: t.length,
          minItems: t.length,
        };
        for (const [n, i] of t.entries()) {
          let a,
            l,
            u = [];
          VC(i)
            ? ((a = i.type), (l = i.name), (u = i.components))
            : typeof i == "string"
            ? ((a = i), (l = `${e}/${n}`))
            : Array.isArray(i) &&
              (i[0] &&
              typeof i[0] == "string" &&
              i[0].startsWith("tuple") &&
              !Array.isArray(i[0]) &&
              i[1] &&
              Array.isArray(i[1])
                ? ((a = i[0]), (l = `${e}/${n}`), (u = i[1]))
                : ((a = "tuple"), (l = `${e}/${n}`), (u = i)));
          const { baseType: p, isArray: m, arraySizes: v } = Qo(a);
          let w,
            S = r;
          for (let M = v.length - 1; M > 0; M -= 1)
            (w = { type: "array", items: [], maxItems: v[M], minItems: v[M] }),
              v[M] < 0 && (delete w.maxItems, delete w.minItems),
              (S.items = w),
              (S = w);
          if (p === "tuple" && !m) {
            const M = op(u, l);
            (M.$id = l), S.items.push(M);
          } else if (p === "tuple" && m) {
            const M = v[0],
              D = {
                $id: l,
                type: "array",
                items: op(u, l),
                maxItems: M,
                minItems: M,
              };
            M < 0 && (delete D.maxItems, delete D.minItems), S.items.push(D);
          } else if (m) {
            const M = v[0],
              D = {
                type: "array",
                $id: l,
                items: W0(String(p)),
                minItems: M,
                maxItems: M,
              };
            M < 0 && (delete D.maxItems, delete D.minItems), S.items.push(D);
          } else
            Array.isArray(S.items)
              ? S.items.push(Object.assign({ $id: l }, W0(a)))
              : S.items.items.push(Object.assign({ $id: l }, W0(a)));
        }
        return r;
      },
      X0 = (t) => op(t),
      j0 = (t, e) => (e === 1 ? t : j0(t[0], e - 1)),
      ch = (t, e, r) => {
        const n = [];
        for (const [i, a] of t.entries()) {
          let l,
            u,
            p = [];
          VC(a)
            ? ((l = a.type), (u = a.name), (p = a.components))
            : typeof a == "string"
            ? (l = a)
            : Array.isArray(a) &&
              (a[1] && Array.isArray(a[1])
                ? ((l = a[0]), (p = a[1]))
                : ((l = "tuple"), (p = a)));
          const { baseType: m, isArray: v, arraySizes: w } = Qo(l),
            S = Array.isArray(e) ? e[i] : e[u];
          if (m === "tuple" && !v) n.push(ch(p, S, r));
          else if (m === "tuple" && v) {
            const M = [];
            for (const D of S)
              if (w.length > 1) {
                const z = j0(D, w.length - 1),
                  V = [];
                for (const j of z) V.push(ch(p, j, r));
                M.push(V);
              } else M.push(ch(p, D, r));
            n.push(M);
          } else n.push(S);
        }
        return (r = r ?? []), r.push(...n), r;
      },
      KC = (t) => {
        if (t >= 48 && t <= 57) return t - 48;
        if (t >= 65 && t <= 70) return t - 55;
        if (t >= 97 && t <= 102) return t - 87;
        throw new Error(`Invalid code point: ${t}`);
      },
      lp = (t) => {
        if (!rr(t)) throw new Error("Invalid hex string");
        const [e, r] = t.startsWith("-") ? [!0, t.slice(1)] : [!1, t],
          n = BigInt(r);
        return n > Number.MAX_SAFE_INTEGER
          ? e
            ? -n
            : n
          : n < Number.MIN_SAFE_INTEGER
          ? n
          : e
          ? -1 * Number(n)
          : Number(n);
      },
      cp = (t) => {
        if ((typeof t == "number" || typeof t == "bigint") && t < 0)
          return `-0x${t.toString(16).slice(1)}`;
        if ((typeof t == "number" || typeof t == "bigint") && t >= 0)
          return `0x${t.toString(16)}`;
        if (typeof t == "string" && rr(t)) {
          const [e, r] = t.startsWith("-") ? [!0, t.slice(1)] : [!1, t],
            n = r.split(/^(-)?0(x|X)/).slice(-1)[0];
          return `${e ? "-" : ""}0x${n.replace(/^0+/, "").toLowerCase()}`;
        }
        if (typeof t == "string" && !rr(t)) return cp(BigInt(t));
        throw new T0(t);
      },
      up = (t, e, r = "0") => {
        if (typeof t == "string" && !rr(t)) return t.padStart(e, r);
        const n = typeof t == "string" && rr(t) ? t : cp(t),
          [i, a] = n.startsWith("-") ? ["-0x", n.slice(3)] : ["0x", n.slice(2)];
        return `${i}${a.padStart(e, r)}`;
      };
    function hp(t) {
      let e = "0x";
      for (const r of t) {
        const n = r.toString(16);
        e += n.length === 1 ? `0${n}` : n;
      }
      return e;
    }
    function dp(t) {
      let e;
      if (
        (t.toLowerCase().startsWith("0x") ? (e = t.slice(2)) : (e = t),
        e.length % 2 !== 0)
      )
        throw new qu(`hex string has odd length: ${t}`);
      const r = new Uint8Array(Math.ceil(e.length / 2));
      for (let n = 0; n < r.length; n += 1) {
        const i = parseInt(e.substring(n * 2, n * 2 + 2), 16);
        r[n] = i;
      }
      return r;
    }
    const $C = Object.freeze(
        Object.defineProperty(
          {
            __proto__: null,
            abiSchemaToJsonSchema: op,
            codePointToInt: KC,
            ethAbiToJsonSchema: X0,
            fetchArrayElement: j0,
            hexToNumber: lp,
            hexToUint8Array: dp,
            numberToHex: cp,
            padLeft: up,
            parseBaseType: Qo,
            transformJsonDataToAbiFormat: ch,
            uint8ArrayToHexString: hp,
          },
          Symbol.toStringTag,
          { value: "Module" }
        )
      ),
      ZC = (t) => {
        if (!/^(0x)?[0-9a-f]{40}$/i.test(t)) return !1;
        const e = t.slice(2),
          r = sc(e.toLowerCase()),
          n = hp(Tn(r)).slice(2);
        for (let i = 0; i < 40; i += 1)
          if (
            (parseInt(n[i], 16) > 7 && e[i].toUpperCase() !== e[i]) ||
            (parseInt(n[i], 16) <= 7 && e[i].toLowerCase() !== e[i])
          )
            return !1;
        return !0;
      },
      ji = (t, e = !0) => {
        if (typeof t != "string" && !(t instanceof Uint8Array)) return !1;
        let r;
        return (
          t instanceof Uint8Array
            ? (r = hp(t))
            : typeof t == "string" && !rr(t)
            ? (r = t.toLowerCase().startsWith("0x") ? t : `0x${t}`)
            : (r = t),
          /^(0x)?[0-9a-f]{40}$/i.test(r)
            ? /^(0x|0X)?[0-9a-f]{40}$/.test(r) ||
              /^(0x|0X)?[0-9A-F]{40}$/.test(r)
              ? !0
              : e
              ? ZC(r)
              : !0
            : !1
        );
      };
    var bi;
    (function (t) {
      (t.NUMBER = "NUMBER_NUMBER"),
        (t.HEX = "NUMBER_HEX"),
        (t.STR = "NUMBER_STR"),
        (t.BIGINT = "NUMBER_BIGINT");
    })(bi || (bi = {}));
    var Zs;
    (function (t) {
      (t.HEX = "BYTES_HEX"), (t.UINT8ARRAY = "BYTES_UINT8ARRAY");
    })(Zs || (Zs = {}));
    const nt = { number: bi.BIGINT, bytes: Zs.HEX },
      pt = { number: bi.HEX, bytes: Zs.HEX };
    var Qs;
    (function (t) {
      (t.EARLIEST = "earliest"),
        (t.LATEST = "latest"),
        (t.PENDING = "pending"),
        (t.SAFE = "safe"),
        (t.FINALIZED = "finalized");
    })(Qs || (Qs = {}));
    var uh;
    (function (t) {
      (t.chainstart = "chainstart"),
        (t.frontier = "frontier"),
        (t.homestead = "homestead"),
        (t.dao = "dao"),
        (t.tangerineWhistle = "tangerineWhistle"),
        (t.spuriousDragon = "spuriousDragon"),
        (t.byzantium = "byzantium"),
        (t.constantinople = "constantinople"),
        (t.petersburg = "petersburg"),
        (t.istanbul = "istanbul"),
        (t.muirGlacier = "muirGlacier"),
        (t.berlin = "berlin"),
        (t.london = "london"),
        (t.altair = "altair"),
        (t.arrowGlacier = "arrowGlacier"),
        (t.grayGlacier = "grayGlacier"),
        (t.bellatrix = "bellatrix"),
        (t.merge = "merge"),
        (t.capella = "capella"),
        (t.shanghai = "shanghai");
    })(uh || (uh = {}));
    const G0 = Object.getPrototypeOf(Uint8Array);
    var GH =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    const QC = Symbol.for("web3/base-provider");
    class hh {
      static isWeb3Provider(e) {
        return e instanceof hh || !!(e && e[QC]);
      }
      get [QC]() {
        return !0;
      }
      send(e, r) {
        this.request(e)
          .then((n) => {
            r(null, n);
          })
          .catch((n) => {
            r(n);
          });
      }
      sendAsync(e) {
        return GH(this, void 0, void 0, function* () {
          return this.request(e);
        });
      }
    }
    class YH extends Array {
      constructor(e) {
        super(), (this._accountProvider = e);
      }
    }
    const Jo = (t, e = { abiType: "uint" }) => {
        if (
          !["number", "string", "bigint"].includes(typeof t) ||
          (typeof t == "string" && t.length === 0)
        )
          return !1;
        let r;
        if (e != null && e.abiType) {
          const { baseTypeSize: i } = Qo(e.abiType);
          i && (r = i);
        } else e.bitSize && (r = e.bitSize);
        const n = BigInt(2) ** BigInt(r ?? 256) - BigInt(1);
        try {
          const i = typeof t == "string" && rr(t) ? BigInt(lp(t)) : BigInt(t);
          return i >= 0 && i <= n;
        } catch {
          return !1;
        }
      },
      fp = (t, e = { abiType: "int" }) => {
        if (
          !["number", "string", "bigint"].includes(typeof t) ||
          (typeof t == "number" && t > Number.MAX_SAFE_INTEGER)
        )
          return !1;
        let r;
        if (e != null && e.abiType) {
          const { baseTypeSize: a, baseType: l } = Qo(e.abiType);
          if (l !== "int") return !1;
          a && (r = a);
        } else e.bitSize && (r = e.bitSize);
        const n = BigInt(2) ** BigInt((r ?? 256) - 1),
          i = BigInt(-1) * BigInt(2) ** BigInt((r ?? 256) - 1);
        try {
          const a = typeof t == "string" && rr(t) ? BigInt(lp(t)) : BigInt(t);
          return a >= i && a <= n;
        } catch {
          return !1;
        }
      },
      JC = (t) =>
        !!(
          fp(t) ||
          (typeof t == "string" &&
            /[0-9.]/.test(t) &&
            t.indexOf(".") === t.lastIndexOf(".")) ||
          typeof t == "number"
        ),
      eS = (t) => Jo(t),
      un = (t) => Object.values(Qs).includes(t),
      Y0 = (t) => un(t) || eS(t),
      hc = (t) =>
        typeof t != "string" || !/^(0x)?[0-9a-f]{512}$/i.test(t)
          ? !1
          : !!(
              /^(0x)?[0-9a-f]{512}$/.test(t) || /^(0x)?[0-9A-F]{512}$/.test(t)
            ),
      pp = (t, e) => {
        if ((typeof e == "string" && !rr(e)) || !hc(t)) return !1;
        const r = typeof e == "string" ? dp(e) : e,
          n = hp(Tn(r)).slice(2);
        for (let i = 0; i < 12; i += 4) {
          const a =
              ((parseInt(n.slice(i, i + 2), 16) << 8) +
                parseInt(n.slice(i + 2, i + 4), 16)) &
              2047,
            l = KC(t.charCodeAt(t.length - 1 - Math.floor(a / 4))),
            u = 1 << a % 4;
          if ((l & u) !== u) return !1;
        }
        return !0;
      },
      VH = (t, e) => {
        if (!hc(t) || !ji(e)) return !1;
        const r = up(e, 64);
        return pp(t, r);
      },
      qH = (t, e) => (!hc(t) || !ji(e) ? !1 : pp(t, e)),
      KH = (t) =>
        ["number", "string", "boolean"].includes(typeof t)
          ? typeof t == "boolean"
            ? !0
            : typeof t == "string" && !rr(t)
            ? t === "1" || t === "0"
            : typeof t == "string" && rr(t)
            ? t === "0x1" || t === "0x0"
            : t === 1 || t === 0
          : !1,
      el = (t, e = { abiType: "bytes" }) => {
        if (
          (typeof t != "string" &&
            !Array.isArray(t) &&
            !(t instanceof Uint8Array)) ||
          (typeof t == "string" && rr(t) && t.startsWith("-")) ||
          (typeof t == "string" && !rr(t))
        )
          return !1;
        let r;
        if (typeof t == "string") {
          if (t.length % 2 !== 0) return !1;
          r = dp(t);
        } else if (Array.isArray(t)) {
          if (t.some((n) => n < 0 || n > 255 || !Number.isInteger(n)))
            return !1;
          r = new Uint8Array(t);
        } else r = t;
        if (e != null && e.abiType) {
          const { baseTypeSize: n } = Qo(e.abiType);
          return n ? r.length === n : !0;
        }
        return e != null && e.size
          ? r.length === (e == null ? void 0 : e.size)
          : !0;
      },
      Fe = (t) => t == null,
      dc = (t) =>
        typeof t == "object" &&
        !Fe(t) &&
        !Array.isArray(t) &&
        !(t instanceof G0),
      gp = (t) =>
        typeof t != "string" || !/^(0x)?[0-9a-f]{64}$/i.test(t)
          ? !1
          : !!(/^(0x)?[0-9a-f]{64}$/.test(t) || /^(0x)?[0-9A-F]{64}$/.test(t)),
      $H = (t, e) => (!hc(t) || !gp(e) ? !1 : pp(t, e)),
      ZH = (t) => {
        const e = ["fromBlock", "toBlock", "address", "topics", "blockHash"];
        if (
          Fe(t) ||
          typeof t != "object" ||
          !Object.keys(t).every((r) => e.includes(r)) ||
          (!Fe(t.fromBlock) && !Y0(t.fromBlock)) ||
          (!Fe(t.toBlock) && !Y0(t.toBlock))
        )
          return !1;
        if (!Fe(t.address)) {
          if (Array.isArray(t.address)) {
            if (!t.address.every((r) => ji(r))) return !1;
          } else if (!ji(t.address)) return !1;
        }
        return !(
          !Fe(t.topics) &&
          !t.topics.every((r) =>
            Fe(r) ? !0 : Array.isArray(r) ? r.every((n) => gp(n)) : !!gp(r)
          )
        );
      },
      fc = {
        address: (t) => ji(t),
        bloom: (t) => hc(t),
        blockNumber: (t) => eS(t),
        blockTag: (t) => un(t),
        blockNumberOrTag: (t) => Y0(t),
        bool: (t) => KH(t),
        bytes: (t) => el(t),
        filter: (t) => ZH(t),
        hex: (t) => rr(t),
        uint: (t) => Jo(t),
        int: (t) => fp(t),
        number: (t) => JC(t),
        string: (t) => D0(t),
      };
    for (let t = 3; t <= 8; t += 1) {
      const e = 2 ** t;
      (fc[`int${e}`] = (r) => fp(r, { bitSize: e })),
        (fc[`uint${e}`] = (r) => Jo(r, { bitSize: e }));
    }
    for (let t = 1; t <= 32; t += 1)
      fc[`bytes${t}`] = (e) => el(e, { size: t });
    fc.bytes256 = fc.bytes;
    const dh = (t) => {
      if (
        (!(t != null && t.type) ||
          (t == null ? void 0 : t.type) === "object") &&
        t != null &&
        t.properties
      ) {
        const e = {};
        for (const r of Object.keys(t.properties)) {
          const n = dh(t.properties[r]);
          n && (e[r] = n);
        }
        return Array.isArray(t.required)
          ? xs
              .object(e)
              .partial()
              .required(
                t.required.reduce(
                  (r, n) => Object.assign(Object.assign({}, r), { [n]: !0 }),
                  {}
                )
              )
          : xs.object(e).partial();
      }
      if ((t == null ? void 0 : t.type) === "array" && t != null && t.items) {
        if (Array.isArray(t.items) && t.items.length > 0) {
          const e = [];
          for (const r of t.items) {
            const n = dh(r);
            n && e.push(n);
          }
          return xs.tuple(e);
        }
        return xs.array(dh(t.items));
      }
      return t.oneOf && Array.isArray(t.oneOf)
        ? xs.union(t.oneOf.map((e) => dh(e)))
        : t != null && t.format
        ? xs
            .any()
            .refine(fc[t.format], (e) => ({
              params: { value: e, format: t.format },
            }))
        : t != null &&
          t.type &&
          (t == null ? void 0 : t.type) !== "object" &&
          typeof xs[String(t.type)] == "function"
        ? xs[String(t.type)]()
        : xs.object({ data: xs.any() }).partial();
    };
    class pc {
      static factory() {
        return (
          pc.validatorInstance || (pc.validatorInstance = new pc()),
          pc.validatorInstance
        );
      }
      validate(e, r, n) {
        var i, a;
        const l = dh(e).safeParse(r);
        if (!l.success) {
          const u = this.convertErrors(
            (a = (i = l.error) === null || i === void 0 ? void 0 : i.issues) !==
              null && a !== void 0
              ? a
              : []
          );
          if (u) {
            if (n != null && n.silent) return u;
            throw new uc(u);
          }
        }
      }
      convertErrors(e) {
        if (e && Array.isArray(e) && e.length > 0)
          return e.map((r) => {
            var n;
            let i, a, l, u;
            u = r.path.join("/");
            const p = String(r.path[r.path.length - 1]),
              m = r.path.join("/");
            if (r.code === qe.too_big)
              (a = "maxItems"),
                (u = `${m}/maxItems`),
                (l = { limit: r.maximum }),
                (i = `must NOT have more than ${r.maximum} items`);
            else if (r.code === qe.too_small)
              (a = "minItems"),
                (u = `${m}/minItems`),
                (l = { limit: r.minimum }),
                (i = `must NOT have fewer than ${r.minimum} items`);
            else if (r.code === qe.custom) {
              const { value: v, format: w } =
                (n = r.params) !== null && n !== void 0 ? n : {};
              typeof v > "u"
                ? (i = `value at "/${u}" is required`)
                : (i = `value "${
                    typeof v == "object" ? JSON.stringify(v) : v
                  }" at "/${u}" must pass "${w}" validation`),
                (l = { value: v });
            }
            return {
              keyword: a ?? p,
              instancePath: m ? `/${m}` : "",
              schemaPath: u ? `#${u}` : "#",
              params: l ?? { value: r.message },
              message: i ?? r.message,
            };
          });
      }
    }
    class QH {
      constructor() {
        this._validator = pc.factory();
      }
      validateJSONSchema(e, r, n) {
        return this._validator.validate(e, r, n);
      }
      validate(e, r, n = { silent: !1 }) {
        var i, a;
        const l = X0(e);
        if (
          !(
            Array.isArray(l.items) &&
            ((i = l.items) === null || i === void 0 ? void 0 : i.length) ===
              0 &&
            r.length === 0
          )
        ) {
          if (
            Array.isArray(l.items) &&
            ((a = l.items) === null || a === void 0 ? void 0 : a.length) ===
              0 &&
            r.length !== 0
          )
            throw new uc([
              {
                instancePath: "/0",
                schemaPath: "/",
                keyword: "required",
                message: "empty schema against data can not be validated",
                params: r,
              },
            ]);
          return this._validator.validate(l, r, n);
        }
      }
    }
    const ct = new QH(),
      JH = BigInt(10),
      Nr = (t) => JH ** BigInt(t),
      V0 = {
        noether: BigInt("0"),
        wei: BigInt(1),
        kwei: Nr(3),
        Kwei: Nr(3),
        babbage: Nr(3),
        femtoether: Nr(3),
        mwei: Nr(6),
        Mwei: Nr(6),
        lovelace: Nr(6),
        picoether: Nr(6),
        gwei: Nr(9),
        Gwei: Nr(9),
        shannon: Nr(9),
        nanoether: Nr(9),
        nano: Nr(9),
        szabo: Nr(12),
        microether: Nr(12),
        micro: Nr(12),
        finney: Nr(15),
        milliether: Nr(15),
        milli: Nr(15),
        ether: Nr(18),
        kether: Nr(21),
        grand: Nr(21),
        mether: Nr(24),
        gether: Nr(27),
        tether: Nr(30),
      },
      Js = (t) => {
        if ((ct.validate(["bytes"], [t]), t instanceof Uint8Array)) return t;
        if (Array.isArray(t)) return new Uint8Array(t);
        if (typeof t == "string") return dp(t);
        throw new qu(t);
      },
      { uint8ArrayToHexString: eU } = $C,
      Pt = (t) => eU(Js(t)),
      Cr = (t) =>
        typeof t == "string" && t.slice(0, 2).toLowerCase() !== "0x"
          ? Js(`0x${t}`)
          : Js(t),
      fh = (t) => (ct.validate(["hex"], [t]), lp(t)),
      tU = fh,
      oi = (t, e) => {
        typeof t != "bigint" && ct.validate(["int"], [t]);
        let r = cp(t);
        return (
          e &&
            (!r.startsWith("-") && r.length % 2 === 1
              ? (r = "0x0".concat(r.slice(2)))
              : r.length % 2 === 0 &&
                r.startsWith("-") &&
                (r = "-0x0".concat(r.slice(3)))),
          r
        );
      },
      rU = oi,
      nU = (t) => fh(t).toString(),
      Gi = (t) => {
        ct.validate(["string"], [t]);
        let e = t.replace(/^(?:\u0000)/, "");
        return (
          (e = e.replace(/(?:\u0000)$/, "")), Pt(new TextEncoder().encode(e))
        );
      },
      tS = Gi,
      iU = Gi,
      q0 = (t) => BC(Cr(t)),
      sU = (t) =>
        typeof t == "string" ? q0(t) : (ct.validate(["bytes"], [t]), BC(t)),
      aU = q0,
      rS = (t) => {
        ct.validate(["string"], [t]);
        let e = "";
        for (let r = 0; r < t.length; r += 1) {
          const n = t.charCodeAt(r).toString(16);
          e += n.length % 2 !== 0 ? `0${n}` : n;
        }
        return `0x${e}`;
      },
      oU = rS,
      nS = (t) => new TextDecoder("ascii").decode(Cr(t)),
      lU = nS,
      Yi = (t, e) => {
        if (typeof t == "string" && ji(t))
          return e ? "address" : `0x${t.toLowerCase().replace(/^0x/i, "")}`;
        if (typeof t == "boolean") return e ? "bool" : t ? "0x01" : "0x00";
        if (typeof t == "number")
          return e ? (t < 0 ? "int256" : "uint256") : oi(t);
        if (typeof t == "bigint") return e ? "bigint" : oi(t);
        if (typeof t == "object" && t)
          return e ? "string" : Gi(JSON.stringify(t));
        if (typeof t == "string") {
          if (t.startsWith("-0x") || t.startsWith("-0X"))
            return e ? "int256" : oi(t);
          if (rr(t)) return e ? "bytes" : t;
          if (z0(t) && !fp(t)) return e ? "bytes" : `0x${t}`;
          if (!Number.isFinite(t)) return e ? "string" : Gi(t);
        }
        throw new q8(t);
      },
      li = (t) => {
        if (typeof t == "number") return t;
        if (typeof t == "bigint")
          return t >= Number.MIN_SAFE_INTEGER && t <= Number.MAX_SAFE_INTEGER
            ? Number(t)
            : t;
        if (typeof t == "string" && rr(t)) return fh(t);
        try {
          return li(BigInt(t));
        } catch {
          throw new T0(t);
        }
      },
      gc = (t) => {
        if (typeof t == "number") return BigInt(t);
        if (typeof t == "bigint") return t;
        if (typeof t == "string" && z0(t)) return BigInt(t);
        throw new T0(t);
      },
      iS = (t, e) => {
        const r = V0[e];
        if (!r) throw new mC(e);
        const n = String(li(t)),
          i = r.toString().length - 1;
        if (i <= 0) return n.toString();
        const a = n.padStart(i, "0"),
          l = a.slice(0, -i),
          u = a.slice(-i).replace(/\.?0+$/, "");
        return l === "" ? `0.${u}` : u === "" ? l : `${l}.${u}`;
      },
      cU = (t, e) => {
        ct.validate(["number"], [t]);
        const r = V0[e];
        if (!r) throw new mC(e);
        const [n, i] = String(typeof t == "string" && !rr(t) ? t : li(t))
            .split(".")
            .concat(""),
          a = BigInt(`${n}${i}`) * r,
          l = r.toString().length - 1,
          u = Math.min(i.length, l);
        return u === 0
          ? a.toString()
          : a.toString().padStart(u, "0").slice(0, -u);
      },
      ea = (t) => {
        if (!ji(t, !1)) throw new P0(t);
        const e = t.toLowerCase().replace(/^0x/i, ""),
          r = Pt(Tn(sc(e)));
        if (
          Fe(r) ||
          r ===
            "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
        )
          return "";
        let n = "0x";
        const i = r.replace(/^0x/i, "");
        for (let a = 0; a < e.length; a += 1)
          parseInt(i[a], 16) > 7 ? (n += e[a].toUpperCase()) : (n += e[a]);
        return n;
      },
      uU = rr,
      hU = z0,
      dU = ZC,
      fU = ji,
      pU = hc,
      gU = pp,
      mU = VH,
      vU = qH,
      yU = gp,
      bU = $H,
      xU = (t, e) => {
        const r = typeof t == "string" && un(t),
          n = typeof e == "string" && un(e);
        if (
          t === e ||
          ((t === "earliest" || t === 0) && (e === "earliest" || e === 0))
        )
          return 0;
        if (t === "earliest" && e > 0) return -1;
        if (e === "earliest" && t > 0) return 1;
        if (r && n) {
          const l = {
            [Qs.EARLIEST]: 1,
            [Qs.FINALIZED]: 2,
            [Qs.SAFE]: 3,
            [Qs.LATEST]: 4,
            [Qs.PENDING]: 5,
          };
          return l[t] < l[e] ? -1 : 1;
        }
        if ((r && !n) || (!r && n))
          throw new Z8(
            "Cannot compare blocktag with provided non-blocktag input."
          );
        const i = BigInt(t),
          a = BigInt(e);
        return i < a ? -1 : i === a ? 0 : 1;
      },
      Ct = Fe,
      sS = (t) =>
        typeof t == "object" &&
        !Fe(t) &&
        !Array.isArray(t) &&
        !(t instanceof G0),
      $a = (t, ...e) => {
        const r = t;
        if (!sS(r)) return r;
        for (const n of e)
          for (const i in n)
            sS(n[i])
              ? (r[i] || (r[i] = {}), $a(r[i], n[i]))
              : !Fe(n[i]) &&
                Object.hasOwnProperty.call(n, i) &&
                (Array.isArray(n[i]) || n[i] instanceof G0
                  ? (r[i] = n[i].slice(0))
                  : (r[i] = n[i]));
        return r;
      },
      ph = (t, e, r = "0") =>
        typeof t == "string"
          ? rr(t)
            ? up(t, e, r)
            : t.padStart(e, r)
          : (ct.validate(["int"], [t]), up(t, e, r)),
      aS = (t, e, r = "0") => {
        if (typeof t == "string" && !rr(t)) return t.padEnd(e, r);
        ct.validate(["int"], [t]);
        const n = typeof t == "string" && rr(t) ? t : oi(t),
          i = n.startsWith("-") ? 3 : 2;
        return n.padEnd(e + i, r);
      },
      K0 = aS,
      mc = ph,
      oS = (t, e = 64) => {
        ct.validate(["int"], [t]);
        const r = li(t);
        if (r >= 0) return ph(Yi(r), e);
        const n = BigInt(2) ** BigInt(e * 4);
        if (-r >= n) throw new vC(`value: ${t}, nibbleWidth: ${e}`);
        const i = BigInt(r) + n;
        return ph(oi(i), e);
      },
      wU = (t, e = 64) => {
        ct.validate(["int"], [t]);
        const r = li(t);
        if (r < 0) return r;
        const n = Math.ceil(Math.log(Number(r)) / Math.log(2));
        if (n > e * 4) throw new vC(`value: "${t}", nibbleWidth: "${e}"`);
        if (e * 4 !== n) return r;
        const i = BigInt(2) ** (BigInt(e) * BigInt(4));
        return li(BigInt(r) - i);
      };
    function Vi(...t) {
      const e = t.reduce((i, a) => i + a.length, 0),
        r = new Uint8Array(e);
      let n = 0;
      for (const i of t) r.set(i, n), (n += i.length);
      return r;
    }
    function mp(t, e) {
      if (t === e) return !0;
      if (t.byteLength !== e.byteLength) return !1;
      for (let r = 0; r < t.byteLength; r += 1) if (t[r] !== e[r]) return !1;
      return !0;
    }
    const { parseBaseType: kU } = $C,
      tl = (t) =>
        typeof t == "object" && !Fe(t) && "number" in t && "bytes" in t,
      _U = (t, e, r = []) => {
        let n = Object.assign({}, t),
          i;
        for (const a of e) {
          if (n.oneOf && i) {
            const l = r.find(function (u) {
              return this === u[0];
            }, i ?? "");
            l && l[0] === i && (n = n.oneOf[l[1]]);
          }
          if (!n.properties && !n.items) return;
          if (n.properties) n = n.properties[a];
          else if (n.items && n.items.properties) {
            const l = n.items.properties;
            if (!l) return;
            n = l[a];
          } else
            n.items && dc(n.items)
              ? (n = n.items)
              : n.items &&
                Array.isArray(n.items) &&
                (n = n.items[parseInt(a, 10)]);
          n && a && (i = a);
        }
        return n;
      },
      gh = (t, e, r) => {
        try {
          const { baseType: n, baseTypeSize: i } = kU(e);
          if (n === "int" || n === "uint")
            switch (r.number) {
              case bi.NUMBER:
                return Number(gc(t));
              case bi.HEX:
                return oi(gc(t));
              case bi.STR:
                return gc(t).toString();
              case bi.BIGINT:
                return gc(t);
              default:
                throw new _0(`Invalid format: ${String(r.number)}`);
            }
          if (n === "bytes") {
            let a;
            switch (
              (i
                ? typeof t == "string"
                  ? (a = ph(t, i * 2))
                  : t instanceof Uint8Array &&
                    (a = Vi(new Uint8Array(i - t.length), t))
                : (a = t),
              r.bytes)
            ) {
              case Zs.HEX:
                return Pt(Js(a));
              case Zs.UINT8ARRAY:
                return Js(a);
              default:
                throw new _0(`Invalid format: ${String(r.bytes)}`);
            }
          }
        } catch {
          return t;
        }
        return t;
      },
      vp = (t, e, r, n, i = []) => {
        var a, l;
        if (!dc(t) && !Array.isArray(t))
          return gh(t, e == null ? void 0 : e.format, n);
        const u = t;
        for (const [p, m] of Object.entries(u)) {
          r.push(p);
          const v = _U(e, r, i);
          if (Fe(v)) {
            delete u[p], r.pop();
            continue;
          }
          if (dc(m)) {
            vp(m, e, r, n), r.pop();
            continue;
          }
          if (Array.isArray(m)) {
            let w = v;
            if (
              ((v == null ? void 0 : v.oneOf) !== void 0 &&
                v.oneOf.forEach((S, M) => {
                  var D, z;
                  !Array.isArray(v == null ? void 0 : v.items) &&
                    ((typeof m[0] == "object" &&
                      ((D = S == null ? void 0 : S.items) === null ||
                      D === void 0
                        ? void 0
                        : D.type) === "object") ||
                      (typeof m[0] == "string" &&
                        ((z = S == null ? void 0 : S.items) === null ||
                        z === void 0
                          ? void 0
                          : z.type) !== "object")) &&
                    ((w = S), i.push([p, M]));
                }),
              Fe(w == null ? void 0 : w.items))
            ) {
              delete u[p], r.pop();
              continue;
            }
            if (dc(w.items) && !Fe(w.items.format)) {
              for (let S = 0; S < m.length; S += 1)
                u[p][S] = gh(
                  m[S],
                  (a = w == null ? void 0 : w.items) === null || a === void 0
                    ? void 0
                    : a.format,
                  n
                );
              r.pop();
              continue;
            }
            if (
              !Array.isArray(w == null ? void 0 : w.items) &&
              ((l = w == null ? void 0 : w.items) === null || l === void 0
                ? void 0
                : l.type) === "object"
            ) {
              for (const S of m) vp(S, e, r, n, i);
              r.pop();
              continue;
            }
            if (Array.isArray(w == null ? void 0 : w.items)) {
              for (let S = 0; S < m.length; S += 1)
                u[p][S] = gh(m[S], w.items[S].format, n);
              r.pop();
              continue;
            }
          }
          (u[p] = gh(m, v.format, n)), r.pop();
        }
        return u;
      },
      Ye = (t, e, r) => {
        let n;
        dc(e) ? (n = $a({}, e)) : Array.isArray(e) ? (n = [...e]) : (n = e);
        const i = dc(t) ? t : X0(t);
        if (!i.properties && !i.items && !i.format)
          throw new _0("Invalid json schema for formatting");
        return vp(n, i, [], r);
      },
      lS = "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
      mh = (t) => {
        let e;
        typeof t == "string"
          ? t.startsWith("0x") && rr(t)
            ? (e = Cr(t))
            : (e = sc(t))
          : (e = t);
        const r = Pt(Tn(e));
        return r === lS ? void 0 : r;
      },
      ci = (t) => {
        const e = mh(t);
        return Fe(e) ? lS : e;
      },
      vh = (t) => {
        let e;
        return (
          typeof t == "bigint" || typeof t == "number"
            ? (e = sc(t.toString()))
            : Array.isArray(t)
            ? (e = new Uint8Array(t))
            : typeof t == "string" && !rr(t)
            ? (e = sc(t))
            : (e = Js(t)),
          Pt(Tn(e))
        );
      },
      AU = (t) => {
        if (Array.isArray(t))
          throw new Error("Autodetection of array types is not supported.");
        let e, r;
        return (
          typeof t == "object" &&
          ("t" in t || "type" in t) &&
          ("v" in t || "value" in t)
            ? ((e = "t" in t ? t.t : t.type), (r = "v" in t ? t.v : t.value))
            : ((e = Yi(t, !0)),
              (r = Yi(t)),
              !e.startsWith("int") && !e.startsWith("uint") && (e = "bytes")),
          (e.startsWith("int") || e.startsWith("uint")) &&
            typeof r == "string" &&
            !/^(-)?0x/i.test(r) &&
            (r = gc(r)),
          [e, r]
        );
      },
      CU = (t) =>
        t.startsWith("int[")
          ? `int256${t.slice(3)}`
          : t === "int"
          ? "int256"
          : t.startsWith("uint[")
          ? `uint256'${t.slice(4)}`
          : t === "uint"
          ? "uint256"
          : t,
      $0 = (t, e) => {
        const r = /^(\d+).*$/.exec(t.slice(e));
        return r ? parseInt(r[1], 10) : 0;
      },
      cS = (t) => t.toString(2).length,
      uS = (t, e) => {
        const r = e.toString();
        if (t === "string") {
          if (typeof e == "string") return Gi(e);
          throw new V8(e);
        }
        if (t === "bool" || t === "boolean") {
          if (typeof e == "boolean") return e ? "01" : "00";
          throw new K8(e);
        }
        if (t === "address") {
          if (!ji(r)) throw new P0(r);
          return r;
        }
        const n = CU(t);
        if (t.startsWith("uint")) {
          const i = $0(n, 4);
          if (i % 8 || i < 8 || i > 256) throw new yC(r);
          const a = li(r);
          if (cS(a) > i) throw new bC(r);
          if (a < BigInt(0)) throw new $8(r);
          return i ? mc(a.toString(16), (i / 8) * 2) : a.toString(16);
        }
        if (t.startsWith("int")) {
          const i = $0(n, 3);
          if (i % 8 || i < 8 || i > 256) throw new yC(t);
          const a = li(r);
          if (cS(a) > i) throw new bC(r);
          return a < BigInt(0)
            ? oS(a.toString(), (i / 8) * 2)
            : i
            ? mc(a.toString(16), i / 4)
            : a.toString(16);
        }
        if (n === "bytes") {
          if (r.replace(/^0x/i, "").length % 2 !== 0) throw new qu(r);
          return r;
        }
        if (t.startsWith("bytes")) {
          if (r.replace(/^0x/i, "").length % 2 !== 0) throw new qu(r);
          const i = $0(t, 5);
          if (!i || i < 1 || i > 64 || i < r.replace(/^0x/i, "").length / 2)
            throw new qu(r);
          return K0(r, i * 2);
        }
        return "";
      },
      hS = (t) => {
        const [e, r] = AU(t);
        return Array.isArray(r)
          ? r.map((n) => uS(e, n).replace("0x", "")).join("")
          : uS(e, r).replace("0x", "");
      },
      Z0 = (...t) =>
        `0x${Array.prototype.slice.call(t).map(hS).join("").toLowerCase()}`,
      SU = (...t) => mh(Z0(...t)),
      EU = (...t) => ci(Z0(...t)),
      IU = (t) =>
        mh(`0x${(typeof t == "number" ? t.toString() : t).padStart(64, "0")}`);
    function TU(t) {
      return IC(t);
    }
    const yh = (t) => TU(t),
      PU = (t) => Pt(yh(t));
    var yp =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    function dS(t) {
      return (
        (typeof t == "object" || typeof t == "function") &&
        typeof t.then == "function"
      );
    }
    function Q0(t, e, r) {
      return yp(this, void 0, void 0, function* () {
        let n;
        const i = yield Promise.race([
          t instanceof Promise ? t : t(),
          new Promise((a, l) => {
            n = setTimeout(() => (r ? l(r) : a(void 0)), e);
          }),
        ]);
        if ((n && clearTimeout(n), i instanceof Error)) throw i;
        return i;
      });
    }
    function fS(t, e) {
      return yp(this, void 0, void 0, function* () {
        const r = Q0(t, e);
        let n;
        const i = new Promise((l, u) => {
            n = setInterval(() => {
              yp(this, void 0, void 0, function* () {
                try {
                  const p = yield Q0(t, e);
                  Fe(p) || (clearInterval(n), l(p));
                } catch (p) {
                  clearInterval(n), u(p);
                }
              });
            }, e);
          }),
          a = yield r;
        return Fe(a) ? i : (n && clearInterval(n), a);
      });
    }
    function J0(t, e) {
      let r;
      const n = new Promise((i, a) => {
        r = setTimeout(() => {
          a(e);
        }, t);
      });
      return [r, n];
    }
    function pS(t, e) {
      let r;
      const n = new Promise((i, a) => {
        r = setInterval(() => {
          yp(this, void 0, void 0, function* () {
            const l = yield t();
            l && (clearInterval(r), a(l));
          });
        }, e);
      });
      return [r, n];
    }
    const ey = () => {
        const t = yh(16);
        (t[6] = (t[6] & 15) | 64), (t[8] = (t[8] & 63) | 128);
        const e = Pt(t);
        return [
          e.substring(2, 10),
          e.substring(10, 14),
          e.substring(14, 18),
          e.substring(18, 22),
          e.substring(22, 34),
        ].join("-");
      },
      ty = (t) => {
        const e = t.error.code;
        return Dn.has(e) || (e >= -32099 && e <= -32e3);
      },
      ta = (t) =>
        !Array.isArray(t) &&
        !!t &&
        t.jsonrpc === "2.0" &&
        "result" in t &&
        Fe(t.error) &&
        (typeof t.id == "number" || typeof t.id == "string"),
      ra = (t) =>
        !Array.isArray(t) &&
        t.jsonrpc === "2.0" &&
        !!t &&
        Fe(t.result) &&
        "error" in t &&
        (typeof t.id == "number" || typeof t.id == "string"),
      bp = (t) =>
        !Array.isArray(t) &&
        !!t &&
        t.jsonrpc === "2.0" &&
        !Fe(t.params) &&
        !Fe(t.method),
      gS = (t) =>
        !Array.isArray(t) &&
        !!t &&
        t.jsonrpc === "2.0" &&
        "id" in t &&
        "result" in t,
      xp = (t) => ta(t) || ra(t),
      ry = (t) => (Array.isArray(t) ? t.every(xp) : xp(t)),
      bh = (t) => Array.isArray(t) && t.length > 0 && ry(t);
    let wp;
    const mS = (t) => {
        wp = t;
      },
      rl = (t) => {
        var e, r, n, i;
        return (
          typeof wp < "u" && (wp += 1),
          {
            jsonrpc: (e = t.jsonrpc) !== null && e !== void 0 ? e : "2.0",
            id:
              (n = (r = t.id) !== null && r !== void 0 ? r : wp) !== null &&
              n !== void 0
                ? n
                : ey(),
            method: t.method,
            params: (i = t.params) !== null && i !== void 0 ? i : void 0,
          }
        );
      },
      ny = (t) => t.map((e) => rl(e)),
      qi = (t) => Array.isArray(t) && t.length > 0,
      OU = Object.freeze(
        Object.defineProperty(
          {
            __proto__: null,
            isBatchRequest: qi,
            isBatchResponse: bh,
            isResponseRpcError: ty,
            isResponseWithError: ra,
            isResponseWithNotification: bp,
            isResponseWithResult: ta,
            isSubscriptionResult: gS,
            isValidResponse: ry,
            setRequestIdStart: mS,
            toBatchPayload: ny,
            toPayload: rl,
            validateResponse: xp,
          },
          Symbol.toStringTag,
          { value: "Module" }
        )
      );
    var iy =
        (globalThis && globalThis.__awaiter) ||
        function (t, e, r, n) {
          function i(a) {
            return a instanceof r
              ? a
              : new r(function (l) {
                  l(a);
                });
          }
          return new (r || (r = Promise))(function (a, l) {
            function u(v) {
              try {
                m(n.next(v));
              } catch (w) {
                l(w);
              }
            }
            function p(v) {
              try {
                m(n.throw(v));
              } catch (w) {
                l(w);
              }
            }
            function m(v) {
              v.done ? a(v.value) : i(v.value).then(u, p);
            }
            m((n = n.apply(t, e || [])).next());
          });
        },
      vS;
    class kp {
      constructor(
        { timeout: e, eagerStart: r, timeoutMessage: n } = {
          timeout: 0,
          eagerStart: !1,
          timeoutMessage: "DeferredPromise timed out",
        }
      ) {
        (this[vS] = "Promise"),
          (this._state = "pending"),
          (this._promise = new Promise((i, a) => {
            (this._resolve = i), (this._reject = a);
          })),
          (this._timeoutMessage = n),
          (this._timeoutInterval = e),
          r && this.startTimer();
      }
      get state() {
        return this._state;
      }
      then(e, r) {
        return iy(this, void 0, void 0, function* () {
          return this._promise.then(e, r);
        });
      }
      catch(e) {
        return iy(this, void 0, void 0, function* () {
          return this._promise.catch(e);
        });
      }
      finally(e) {
        return iy(this, void 0, void 0, function* () {
          return this._promise.finally(e);
        });
      }
      resolve(e) {
        this._resolve(e), (this._state = "fulfilled"), this._clearTimeout();
      }
      reject(e) {
        this._reject(e), (this._state = "rejected"), this._clearTimeout();
      }
      startTimer() {
        this._timeoutInterval &&
          this._timeoutInterval > 0 &&
          (this._timeoutId = setTimeout(
            this._checkTimeout.bind(this),
            this._timeoutInterval
          ));
      }
      _checkTimeout() {
        this._state === "pending" &&
          this._timeoutId &&
          this.reject(new lC(this._timeoutMessage));
      }
      _clearTimeout() {
        this._timeoutId && clearTimeout(this._timeoutId);
      }
    }
    vS = Symbol.toStringTag;
    class yS {
      constructor(e, r) {
        (this.eventEmitter = e), (this.autoReconnect = r);
      }
      clearQueues() {
        typeof this._clearQueues == "function" && this._clearQueues();
      }
      onError(e) {
        this._clearQueues = e;
      }
      parseResponse(e) {
        const r = [];
        return (
          e
            .replace(/\}[\n\r]?\{/g, "}|--|{")
            .replace(/\}\][\n\r]?\[\{/g, "}]|--|[{")
            .replace(/\}[\n\r]?\[\{/g, "}|--|[{")
            .replace(/\}\][\n\r]?\{/g, "}]|--|{")
            .split("|--|")
            .forEach((n) => {
              let i = n;
              this.lastChunk && (i = this.lastChunk + i);
              let a;
              try {
                a = JSON.parse(i);
              } catch {
                (this.lastChunk = i),
                  this.lastChunkTimeout && clearTimeout(this.lastChunkTimeout),
                  (this.lastChunkTimeout = setTimeout(() => {
                    this.autoReconnect ||
                      (this.clearQueues(),
                      this.eventEmitter.emit(
                        "error",
                        new ic({
                          id: 1,
                          jsonrpc: "2.0",
                          error: { code: 2, message: "Chunk timeout" },
                        })
                      ));
                  }, 15e3));
                return;
              }
              clearTimeout(this.lastChunkTimeout),
                (this.lastChunk = void 0),
                a && r.push(a);
            }),
          r
        );
      }
    }
    var sy = { exports: {} },
      vc = typeof Reflect == "object" ? Reflect : null,
      bS =
        vc && typeof vc.apply == "function"
          ? vc.apply
          : function (t, e, r) {
              return Function.prototype.apply.call(t, e, r);
            },
      _p;
    vc && typeof vc.ownKeys == "function"
      ? (_p = vc.ownKeys)
      : Object.getOwnPropertySymbols
      ? (_p = function (t) {
          return Object.getOwnPropertyNames(t).concat(
            Object.getOwnPropertySymbols(t)
          );
        })
      : (_p = function (t) {
          return Object.getOwnPropertyNames(t);
        });
    function LU(t) {
      console && console.warn && console.warn(t);
    }
    var xS =
      Number.isNaN ||
      function (t) {
        return t !== t;
      };
    function ar() {
      ar.init.call(this);
    }
    (sy.exports = ar),
      (sy.exports.once = BU),
      (ar.EventEmitter = ar),
      (ar.prototype._events = void 0),
      (ar.prototype._eventsCount = 0),
      (ar.prototype._maxListeners = void 0);
    var wS = 10;
    function Ap(t) {
      if (typeof t != "function")
        throw new TypeError(
          'The "listener" argument must be of type Function. Received type ' +
            typeof t
        );
    }
    Object.defineProperty(ar, "defaultMaxListeners", {
      enumerable: !0,
      get: function () {
        return wS;
      },
      set: function (t) {
        if (typeof t != "number" || t < 0 || xS(t))
          throw new RangeError(
            'The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' +
              t +
              "."
          );
        wS = t;
      },
    }),
      (ar.init = function () {
        (this._events === void 0 ||
          this._events === Object.getPrototypeOf(this)._events) &&
          ((this._events = Object.create(null)), (this._eventsCount = 0)),
          (this._maxListeners = this._maxListeners || void 0);
      }),
      (ar.prototype.setMaxListeners = function (t) {
        if (typeof t != "number" || t < 0 || xS(t))
          throw new RangeError(
            'The value of "n" is out of range. It must be a non-negative number. Received ' +
              t +
              "."
          );
        return (this._maxListeners = t), this;
      });
    function kS(t) {
      return t._maxListeners === void 0
        ? ar.defaultMaxListeners
        : t._maxListeners;
    }
    (ar.prototype.getMaxListeners = function () {
      return kS(this);
    }),
      (ar.prototype.emit = function (t) {
        for (var e = [], r = 1; r < arguments.length; r++) e.push(arguments[r]);
        var n = t === "error",
          i = this._events;
        if (i !== void 0) n = n && i.error === void 0;
        else if (!n) return !1;
        if (n) {
          var a;
          if ((e.length > 0 && (a = e[0]), a instanceof Error)) throw a;
          var l = new Error(
            "Unhandled error." + (a ? " (" + a.message + ")" : "")
          );
          throw ((l.context = a), l);
        }
        var u = i[t];
        if (u === void 0) return !1;
        if (typeof u == "function") bS(u, this, e);
        else
          for (var p = u.length, m = ES(u, p), r = 0; r < p; ++r)
            bS(m[r], this, e);
        return !0;
      });
    function _S(t, e, r, n) {
      var i, a, l;
      if (
        (Ap(r),
        (a = t._events),
        a === void 0
          ? ((a = t._events = Object.create(null)), (t._eventsCount = 0))
          : (a.newListener !== void 0 &&
              (t.emit("newListener", e, r.listener ? r.listener : r),
              (a = t._events)),
            (l = a[e])),
        l === void 0)
      )
        (l = a[e] = r), ++t._eventsCount;
      else if (
        (typeof l == "function"
          ? (l = a[e] = n ? [r, l] : [l, r])
          : n
          ? l.unshift(r)
          : l.push(r),
        (i = kS(t)),
        i > 0 && l.length > i && !l.warned)
      ) {
        l.warned = !0;
        var u = new Error(
          "Possible EventEmitter memory leak detected. " +
            l.length +
            " " +
            String(e) +
            " listeners added. Use emitter.setMaxListeners() to increase limit"
        );
        (u.name = "MaxListenersExceededWarning"),
          (u.emitter = t),
          (u.type = e),
          (u.count = l.length),
          LU(u);
      }
      return t;
    }
    (ar.prototype.addListener = function (t, e) {
      return _S(this, t, e, !1);
    }),
      (ar.prototype.on = ar.prototype.addListener),
      (ar.prototype.prependListener = function (t, e) {
        return _S(this, t, e, !0);
      });
    function MU() {
      if (!this.fired)
        return (
          this.target.removeListener(this.type, this.wrapFn),
          (this.fired = !0),
          arguments.length === 0
            ? this.listener.call(this.target)
            : this.listener.apply(this.target, arguments)
        );
    }
    function AS(t, e, r) {
      var n = { fired: !1, wrapFn: void 0, target: t, type: e, listener: r },
        i = MU.bind(n);
      return (i.listener = r), (n.wrapFn = i), i;
    }
    (ar.prototype.once = function (t, e) {
      return Ap(e), this.on(t, AS(this, t, e)), this;
    }),
      (ar.prototype.prependOnceListener = function (t, e) {
        return Ap(e), this.prependListener(t, AS(this, t, e)), this;
      }),
      (ar.prototype.removeListener = function (t, e) {
        var r, n, i, a, l;
        if ((Ap(e), (n = this._events), n === void 0)) return this;
        if (((r = n[t]), r === void 0)) return this;
        if (r === e || r.listener === e)
          --this._eventsCount === 0
            ? (this._events = Object.create(null))
            : (delete n[t],
              n.removeListener &&
                this.emit("removeListener", t, r.listener || e));
        else if (typeof r != "function") {
          for (i = -1, a = r.length - 1; a >= 0; a--)
            if (r[a] === e || r[a].listener === e) {
              (l = r[a].listener), (i = a);
              break;
            }
          if (i < 0) return this;
          i === 0 ? r.shift() : RU(r, i),
            r.length === 1 && (n[t] = r[0]),
            n.removeListener !== void 0 &&
              this.emit("removeListener", t, l || e);
        }
        return this;
      }),
      (ar.prototype.off = ar.prototype.removeListener),
      (ar.prototype.removeAllListeners = function (t) {
        var e, r, n;
        if (((r = this._events), r === void 0)) return this;
        if (r.removeListener === void 0)
          return (
            arguments.length === 0
              ? ((this._events = Object.create(null)), (this._eventsCount = 0))
              : r[t] !== void 0 &&
                (--this._eventsCount === 0
                  ? (this._events = Object.create(null))
                  : delete r[t]),
            this
          );
        if (arguments.length === 0) {
          var i = Object.keys(r),
            a;
          for (n = 0; n < i.length; ++n)
            (a = i[n]), a !== "removeListener" && this.removeAllListeners(a);
          return (
            this.removeAllListeners("removeListener"),
            (this._events = Object.create(null)),
            (this._eventsCount = 0),
            this
          );
        }
        if (((e = r[t]), typeof e == "function")) this.removeListener(t, e);
        else if (e !== void 0)
          for (n = e.length - 1; n >= 0; n--) this.removeListener(t, e[n]);
        return this;
      });
    function CS(t, e, r) {
      var n = t._events;
      if (n === void 0) return [];
      var i = n[e];
      return i === void 0
        ? []
        : typeof i == "function"
        ? r
          ? [i.listener || i]
          : [i]
        : r
        ? NU(i)
        : ES(i, i.length);
    }
    (ar.prototype.listeners = function (t) {
      return CS(this, t, !0);
    }),
      (ar.prototype.rawListeners = function (t) {
        return CS(this, t, !1);
      }),
      (ar.listenerCount = function (t, e) {
        return typeof t.listenerCount == "function"
          ? t.listenerCount(e)
          : SS.call(t, e);
      }),
      (ar.prototype.listenerCount = SS);
    function SS(t) {
      var e = this._events;
      if (e !== void 0) {
        var r = e[t];
        if (typeof r == "function") return 1;
        if (r !== void 0) return r.length;
      }
      return 0;
    }
    ar.prototype.eventNames = function () {
      return this._eventsCount > 0 ? _p(this._events) : [];
    };
    function ES(t, e) {
      for (var r = new Array(e), n = 0; n < e; ++n) r[n] = t[n];
      return r;
    }
    function RU(t, e) {
      for (; e + 1 < t.length; e++) t[e] = t[e + 1];
      t.pop();
    }
    function NU(t) {
      for (var e = new Array(t.length), r = 0; r < e.length; ++r)
        e[r] = t[r].listener || t[r];
      return e;
    }
    function BU(t, e) {
      return new Promise(function (r, n) {
        function i(l) {
          t.removeListener(e, a), n(l);
        }
        function a() {
          typeof t.removeListener == "function" && t.removeListener("error", i),
            r([].slice.call(arguments));
        }
        IS(t, e, a, { once: !0 }), e !== "error" && FU(t, i, { once: !0 });
      });
    }
    function FU(t, e, r) {
      typeof t.on == "function" && IS(t, "error", e, r);
    }
    function IS(t, e, r, n) {
      if (typeof t.on == "function") n.once ? t.once(e, r) : t.on(e, r);
      else if (typeof t.addEventListener == "function")
        t.addEventListener(e, function i(a) {
          n.once && t.removeEventListener(e, i), r(a);
        });
      else
        throw new TypeError(
          'The "emitter" argument must be of type EventEmitter. Received type ' +
            typeof t
        );
    }
    var ay = sy.exports,
      TS =
        (globalThis && globalThis.__awaiter) ||
        function (t, e, r, n) {
          function i(a) {
            return a instanceof r
              ? a
              : new r(function (l) {
                  l(a);
                });
          }
          return new (r || (r = Promise))(function (a, l) {
            function u(v) {
              try {
                m(n.next(v));
              } catch (w) {
                l(w);
              }
            }
            function p(v) {
              try {
                m(n.throw(v));
              } catch (w) {
                l(w);
              }
            }
            function m(v) {
              v.done ? a(v.value) : i(v.value).then(u, p);
            }
            m((n = n.apply(t, e || [])).next());
          });
        };
    class PS extends hh {
      constructor() {
        super(...arguments),
          (this._eventEmitter = new ay.EventEmitter()),
          (this._chainId = ""),
          (this._accounts = []);
      }
      _getChainId() {
        var e;
        return TS(this, void 0, void 0, function* () {
          const r = yield this.request(
            rl({ method: "eth_chainId", params: [] })
          );
          return (e = r == null ? void 0 : r.result) !== null && e !== void 0
            ? e
            : "";
        });
      }
      _getAccounts() {
        var e;
        return TS(this, void 0, void 0, function* () {
          const r = yield this.request(
            rl({ method: "eth_accounts", params: [] })
          );
          return (e = r == null ? void 0 : r.result) !== null && e !== void 0
            ? e
            : [];
        });
      }
      _onConnect() {
        Promise.all([
          this._getChainId()
            .then((e) => {
              e !== this._chainId &&
                ((this._chainId = e),
                this._eventEmitter.emit("chainChanged", this._chainId));
            })
            .catch((e) => {
              console.error(e);
            }),
          this._getAccounts()
            .then((e) => {
              (this._accounts.length === e.length &&
                e.every((r) => e.includes(r))) ||
                ((this._accounts = e), this._onAccountsChanged());
            })
            .catch((e) => {
              console.error(e);
            }),
        ])
          .then(() =>
            this._eventEmitter.emit("connect", { chainId: this._chainId })
          )
          .catch((e) => {
            console.error(e);
          });
      }
      _onDisconnect(e, r) {
        this._eventEmitter.emit("disconnect", new J8(e, r));
      }
      _onAccountsChanged() {
        this._eventEmitter.emit("accountsChanged", this._accounts);
      }
    }
    var DU =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    const zU = { autoReconnect: !0, delay: 5e3, maxAttempts: 5 },
      HU = 1e3;
    class OS extends PS {
      constructor(e, r, n) {
        if (
          (super(),
          (this._connectionStatus = "connecting"),
          (this._onMessageHandler = this._onMessage.bind(this)),
          (this._onOpenHandler = this._onConnect.bind(this)),
          (this._onCloseHandler = this._onCloseEvent.bind(this)),
          (this._onErrorHandler = this._onError.bind(this)),
          !this._validateProviderPath(e))
        )
          throw new A0(e);
        (this._socketPath = e),
          (this._socketOptions = r),
          (this._reconnectOptions = Object.assign(
            Object.assign({}, zU),
            n ?? {}
          )),
          (this._pendingRequestsQueue = new Map()),
          (this._sentRequestsQueue = new Map()),
          this._init(),
          this.connect(),
          (this.chunkResponseParser = new yS(
            this._eventEmitter,
            this._reconnectOptions.autoReconnect
          )),
          this.chunkResponseParser.onError(() => {
            this._clearQueues();
          }),
          (this.isReconnecting = !1);
      }
      get SocketConnection() {
        return this._socketConnection;
      }
      _init() {
        this._reconnectAttempts = 0;
      }
      connect() {
        try {
          this._openSocketConnection(),
            (this._connectionStatus = "connecting"),
            this._addSocketListeners();
        } catch (e) {
          if (this.isReconnecting)
            setImmediate(() => {
              this._reconnect();
            });
          else
            throw (
              ((this._connectionStatus = "disconnected"),
              e && e.message
                ? new Yu(
                    `Error while connecting to ${this._socketPath}. Reason: ${e.message}`
                  )
                : new A0(this._socketPath))
            );
        }
      }
      _validateProviderPath(e) {
        return !!e;
      }
      supportsSubscriptions() {
        return !0;
      }
      on(e, r) {
        this._eventEmitter.on(e, r);
      }
      once(e, r) {
        this._eventEmitter.once(e, r);
      }
      removeListener(e, r) {
        this._eventEmitter.removeListener(e, r);
      }
      _onDisconnect(e, r) {
        (this._connectionStatus = "disconnected"), super._onDisconnect(e, r);
      }
      disconnect(e, r) {
        const n = e ?? HU;
        this._removeSocketListeners(),
          this.getStatus() !== "disconnected" &&
            this._closeSocketConnection(n, r),
          this._onDisconnect(n, r);
      }
      removeAllListeners(e) {
        this._eventEmitter.removeAllListeners(e);
      }
      _onError(e) {
        this.isReconnecting
          ? this._reconnect()
          : this._eventEmitter.emit("error", e);
      }
      reset() {
        this._sentRequestsQueue.clear(),
          this._pendingRequestsQueue.clear(),
          this._init(),
          this._removeSocketListeners(),
          this._addSocketListeners();
      }
      _reconnect() {
        this.isReconnecting ||
          ((this.isReconnecting = !0),
          this._sentRequestsQueue.size > 0 &&
            this._sentRequestsQueue.forEach((e, r) => {
              e.deferredPromise.reject(new d8()),
                this._sentRequestsQueue.delete(r);
            }),
          this._reconnectAttempts < this._reconnectOptions.maxAttempts
            ? ((this._reconnectAttempts += 1),
              setTimeout(() => {
                this._removeSocketListeners(),
                  this.connect(),
                  (this.isReconnecting = !1);
              }, this._reconnectOptions.delay))
            : ((this.isReconnecting = !1),
              this._clearQueues(),
              this._removeSocketListeners(),
              this._eventEmitter.emit(
                "error",
                new h8(this._reconnectOptions.maxAttempts)
              )));
      }
      request(e) {
        return DU(this, void 0, void 0, function* () {
          if (Ct(this._socketConnection))
            throw new Error("Connection is undefined");
          this.getStatus() === "disconnected" && this.connect();
          const r = qi(e) ? e[0].id : e.id;
          if (!r) throw new b8("Request Id not defined");
          if (this._sentRequestsQueue.has(r)) throw new f8(r);
          const n = new kp();
          n.catch((a) => {
            this._eventEmitter.emit("error", a);
          });
          const i = { payload: e, deferredPromise: n };
          if (this.getStatus() === "connecting")
            return this._pendingRequestsQueue.set(r, i), i.deferredPromise;
          this._sentRequestsQueue.set(r, i);
          try {
            this._sendToSocket(i.payload);
          } catch (a) {
            this._sentRequestsQueue.delete(r),
              this._eventEmitter.emit("error", a);
          }
          return n;
        });
      }
      _onConnect() {
        (this._connectionStatus = "connected"),
          (this._reconnectAttempts = 0),
          super._onConnect(),
          this._sendPendingRequests();
      }
      _sendPendingRequests() {
        for (const [e, r] of this._pendingRequestsQueue.entries())
          this._sendToSocket(r.payload),
            this._pendingRequestsQueue.delete(e),
            this._sentRequestsQueue.set(e, r);
      }
      _onMessage(e) {
        const r = this._parseResponses(e);
        if (r.length === 0) {
          this._reconnectOptions.autoReconnect && this._reconnect();
          return;
        }
        for (const n of r) {
          if (bp(n) && n.method.endsWith("_subscription")) {
            this._eventEmitter.emit("message", n);
            return;
          }
          const i = bh(n) ? n[0].id : n.id,
            a = this._sentRequestsQueue.get(i);
          if (!a) return;
          (bh(n) || ta(n) || ra(n)) &&
            (this._eventEmitter.emit("message", n),
            a.deferredPromise.resolve(n)),
            this._sentRequestsQueue.delete(i);
        }
      }
      _clearQueues(e) {
        this._pendingRequestsQueue.size > 0 &&
          this._pendingRequestsQueue.forEach((r, n) => {
            r.deferredPromise.reject(new k0(e)),
              this._pendingRequestsQueue.delete(n);
          }),
          this._sentRequestsQueue.size > 0 &&
            this._sentRequestsQueue.forEach((r, n) => {
              r.deferredPromise.reject(new k0(e)),
                this._sentRequestsQueue.delete(n);
            }),
          this._removeSocketListeners();
      }
    }
    const LS = Object.freeze(
      Object.defineProperty(
        {
          __proto__: null,
          ChunkResponseParser: yS,
          Eip1193Provider: PS,
          SocketProvider: OS,
          Web3DeferredPromise: kp,
          asciiToHex: rS,
          bytesToHex: Pt,
          bytesToUint8Array: Js,
          checkAddressCheckSum: dU,
          compareBlockNumbers: xU,
          convert: vp,
          convertScalarValue: gh,
          encodePacked: Z0,
          ethUnitMap: V0,
          format: Ye,
          fromAscii: oU,
          fromDecimal: rU,
          fromTwosComplement: wU,
          fromUtf8: tS,
          fromWei: iS,
          getStorageSlotNumForLongString: IU,
          hexToAscii: nS,
          hexToBytes: Cr,
          hexToNumber: fh,
          hexToNumberString: nU,
          hexToString: aU,
          hexToUtf8: q0,
          isAddress: fU,
          isBatchRequest: qi,
          isBatchResponse: bh,
          isBloom: pU,
          isContractAddressInBloom: vU,
          isDataFormat: tl,
          isHex: hU,
          isHexStrict: uU,
          isInBloom: gU,
          isNullish: Ct,
          isPromise: dS,
          isResponseRpcError: ty,
          isResponseWithError: ra,
          isResponseWithNotification: bp,
          isResponseWithResult: ta,
          isSubscriptionResult: gS,
          isTopic: yU,
          isTopicInBloom: bU,
          isUserEthereumAddressInBloom: mU,
          isValidResponse: ry,
          jsonRpc: OU,
          keccak256: vh,
          keccak256Wrapper: vh,
          leftPad: mc,
          mergeDeep: $a,
          numberToHex: oi,
          padLeft: ph,
          padRight: aS,
          pollTillDefined: fS,
          processSolidityEncodePackedArgs: hS,
          randomBytes: yh,
          randomHex: PU,
          rejectIfConditionAtInterval: pS,
          rejectIfTimeout: J0,
          rightPad: K0,
          setRequestIdStart: mS,
          sha3: mh,
          sha3Raw: ci,
          soliditySha3: SU,
          soliditySha3Raw: EU,
          stringToHex: iU,
          toAscii: lU,
          toBatchPayload: ny,
          toBigInt: gc,
          toChecksumAddress: ea,
          toDecimal: tU,
          toHex: Yi,
          toNumber: li,
          toPayload: rl,
          toTwosComplement: oS,
          toUtf8: sU,
          toWei: cU,
          uint8ArrayConcat: Vi,
          uint8ArrayEquals: mp,
          utf8ToHex: Gi,
          uuidV4: ey,
          validateResponse: xp,
          waitWithTimeout: Q0,
        },
        Symbol.toStringTag,
        { value: "Module" }
      )
    );
    class Cp {
      constructor() {
        this._emitter = new ay.EventEmitter();
      }
      on(e, r) {
        this._emitter.on(e, r);
      }
      once(e, r) {
        this._emitter.once(e, r);
      }
      off(e, r) {
        this._emitter.off(e, r);
      }
      emit(e, r) {
        this._emitter.emit(e, r);
      }
      listenerCount(e) {
        return this._emitter.listenerCount(e);
      }
      listeners(e) {
        return this._emitter.listeners(e);
      }
      eventNames() {
        return this._emitter.eventNames();
      }
      removeAllListeners() {
        return this._emitter.removeAllListeners();
      }
      setMaxListenerWarningThreshold(e) {
        this._emitter.setMaxListeners(e);
      }
      getMaxListeners() {
        return this._emitter.getMaxListeners();
      }
    }
    var yc;
    (function (t) {
      t.CONFIG_CHANGE = "CONFIG_CHANGE";
    })(yc || (yc = {}));
    class UU extends Cp {
      constructor(e) {
        super(),
          (this.config = {
            handleRevert: !1,
            defaultAccount: void 0,
            defaultBlock: "latest",
            transactionBlockTimeout: 50,
            transactionConfirmationBlocks: 24,
            transactionPollingInterval: 1e3,
            transactionPollingTimeout: 75e4,
            transactionReceiptPollingInterval: void 0,
            transactionSendTimeout: 75e4,
            transactionConfirmationPollingInterval: void 0,
            blockHeaderTimeout: 10,
            maxListenersWarningThreshold: 100,
            defaultNetworkId: void 0,
            defaultChain: "mainnet",
            defaultHardfork: "london",
            defaultCommon: void 0,
            defaultTransactionType: "0x0",
            defaultMaxPriorityFeePerGas: Yi(25e8),
            enableExperimentalFeatures: {
              useSubscriptionWhenCheckingBlockTimeout: !1,
              useRpcCallSpecification: !1,
            },
            transactionBuilder: void 0,
            transactionTypeParser: void 0,
          }),
          this.setConfig(e ?? {});
      }
      setConfig(e) {
        Object.assign(this.config, e);
      }
      get handleRevert() {
        return this.config.handleRevert;
      }
      set handleRevert(e) {
        this._triggerConfigChange("handleRevert", e),
          (this.config.handleRevert = e);
      }
      get defaultAccount() {
        return this.config.defaultAccount;
      }
      set defaultAccount(e) {
        this._triggerConfigChange("defaultAccount", e),
          (this.config.defaultAccount = e);
      }
      get defaultBlock() {
        return this.config.defaultBlock;
      }
      set defaultBlock(e) {
        this._triggerConfigChange("defaultBlock", e),
          (this.config.defaultBlock = e);
      }
      get transactionSendTimeout() {
        return this.config.transactionSendTimeout;
      }
      set transactionSendTimeout(e) {
        this._triggerConfigChange("transactionSendTimeout", e),
          (this.config.transactionSendTimeout = e);
      }
      get transactionBlockTimeout() {
        return this.config.transactionBlockTimeout;
      }
      set transactionBlockTimeout(e) {
        this._triggerConfigChange("transactionBlockTimeout", e),
          (this.config.transactionBlockTimeout = e);
      }
      get transactionConfirmationBlocks() {
        return this.config.transactionConfirmationBlocks;
      }
      set transactionConfirmationBlocks(e) {
        this._triggerConfigChange("transactionConfirmationBlocks", e),
          (this.config.transactionConfirmationBlocks = e);
      }
      get transactionPollingInterval() {
        return this.config.transactionPollingInterval;
      }
      set transactionPollingInterval(e) {
        this._triggerConfigChange("transactionPollingInterval", e),
          (this.config.transactionPollingInterval = e),
          (this.transactionReceiptPollingInterval = e),
          (this.transactionConfirmationPollingInterval = e);
      }
      get transactionPollingTimeout() {
        return this.config.transactionPollingTimeout;
      }
      set transactionPollingTimeout(e) {
        this._triggerConfigChange("transactionPollingTimeout", e),
          (this.config.transactionPollingTimeout = e);
      }
      get transactionReceiptPollingInterval() {
        return this.config.transactionReceiptPollingInterval;
      }
      set transactionReceiptPollingInterval(e) {
        this._triggerConfigChange("transactionReceiptPollingInterval", e),
          (this.config.transactionReceiptPollingInterval = e);
      }
      get transactionConfirmationPollingInterval() {
        return this.config.transactionConfirmationPollingInterval;
      }
      set transactionConfirmationPollingInterval(e) {
        this._triggerConfigChange("transactionConfirmationPollingInterval", e),
          (this.config.transactionConfirmationPollingInterval = e);
      }
      get blockHeaderTimeout() {
        return this.config.blockHeaderTimeout;
      }
      set blockHeaderTimeout(e) {
        this._triggerConfigChange("blockHeaderTimeout", e),
          (this.config.blockHeaderTimeout = e);
      }
      get enableExperimentalFeatures() {
        return this.config.enableExperimentalFeatures;
      }
      set enableExperimentalFeatures(e) {
        this._triggerConfigChange("enableExperimentalFeatures", e),
          (this.config.enableExperimentalFeatures = e);
      }
      get maxListenersWarningThreshold() {
        return this.config.maxListenersWarningThreshold;
      }
      set maxListenersWarningThreshold(e) {
        this._triggerConfigChange("maxListenersWarningThreshold", e),
          this.setMaxListenerWarningThreshold(e),
          (this.config.maxListenersWarningThreshold = e);
      }
      get defaultNetworkId() {
        return this.config.defaultNetworkId;
      }
      set defaultNetworkId(e) {
        this._triggerConfigChange("defaultNetworkId", e),
          (this.config.defaultNetworkId = e);
      }
      get defaultChain() {
        return this.config.defaultChain;
      }
      set defaultChain(e) {
        if (
          !Ct(this.config.defaultCommon) &&
          !Ct(this.config.defaultCommon.baseChain) &&
          e !== this.config.defaultCommon.baseChain
        )
          throw new kC(this.config.defaultChain, e);
        this._triggerConfigChange("defaultChain", e),
          (this.config.defaultChain = e);
      }
      get defaultHardfork() {
        return this.config.defaultHardfork;
      }
      set defaultHardfork(e) {
        if (
          !Ct(this.config.defaultCommon) &&
          !Ct(this.config.defaultCommon.hardfork) &&
          e !== this.config.defaultCommon.hardfork
        )
          throw new wC(this.config.defaultCommon.hardfork, e);
        this._triggerConfigChange("defaultHardfork", e),
          (this.config.defaultHardfork = e);
      }
      get defaultCommon() {
        return this.config.defaultCommon;
      }
      set defaultCommon(e) {
        if (
          !Ct(this.config.defaultHardfork) &&
          !Ct(e) &&
          !Ct(e.hardfork) &&
          this.config.defaultHardfork !== e.hardfork
        )
          throw new wC(this.config.defaultHardfork, e.hardfork);
        if (
          !Ct(this.config.defaultChain) &&
          !Ct(e) &&
          !Ct(e.baseChain) &&
          this.config.defaultChain !== e.baseChain
        )
          throw new kC(this.config.defaultChain, e.baseChain);
        this._triggerConfigChange("defaultCommon", e),
          (this.config.defaultCommon = e);
      }
      get defaultTransactionType() {
        return this.config.defaultTransactionType;
      }
      set defaultTransactionType(e) {
        this._triggerConfigChange("defaultTransactionType", e),
          (this.config.defaultTransactionType = e);
      }
      get defaultMaxPriorityFeePerGas() {
        return this.config.defaultMaxPriorityFeePerGas;
      }
      set defaultMaxPriorityFeePerGas(e) {
        this._triggerConfigChange("defaultMaxPriorityFeePerGas", e),
          (this.config.defaultMaxPriorityFeePerGas = e);
      }
      get transactionBuilder() {
        return this.config.transactionBuilder;
      }
      set transactionBuilder(e) {
        this._triggerConfigChange("transactionBuilder", e),
          (this.config.transactionBuilder = e);
      }
      get transactionTypeParser() {
        return this.config.transactionTypeParser;
      }
      set transactionTypeParser(e) {
        this._triggerConfigChange("transactionTypeParser", e),
          (this.config.transactionTypeParser = e);
      }
      _triggerConfigChange(e, r) {
        this.emit(yc.CONFIG_CHANGE, {
          name: e,
          oldValue: this.config[e],
          newValue: r,
        });
      }
    }
    var oy = { exports: {} };
    (function (t, e) {
      var r = typeof self < "u" ? self : So,
        n = (function () {
          function a() {
            (this.fetch = !1), (this.DOMException = r.DOMException);
          }
          return (a.prototype = r), new a();
        })();
      (function (a) {
        (function (l) {
          var u = {
            searchParams: "URLSearchParams" in a,
            iterable: "Symbol" in a && "iterator" in Symbol,
            blob:
              "FileReader" in a &&
              "Blob" in a &&
              (function () {
                try {
                  return new Blob(), !0;
                } catch {
                  return !1;
                }
              })(),
            formData: "FormData" in a,
            arrayBuffer: "ArrayBuffer" in a,
          };
          function p(P) {
            return P && DataView.prototype.isPrototypeOf(P);
          }
          if (u.arrayBuffer)
            var m = [
                "[object Int8Array]",
                "[object Uint8Array]",
                "[object Uint8ClampedArray]",
                "[object Int16Array]",
                "[object Uint16Array]",
                "[object Int32Array]",
                "[object Uint32Array]",
                "[object Float32Array]",
                "[object Float64Array]",
              ],
              v =
                ArrayBuffer.isView ||
                function (P) {
                  return P && m.indexOf(Object.prototype.toString.call(P)) > -1;
                };
          function w(P) {
            if (
              (typeof P != "string" && (P = String(P)),
              /[^a-z0-9\-#$%&'*+.^_`|~]/i.test(P))
            )
              throw new TypeError("Invalid character in header field name");
            return P.toLowerCase();
          }
          function S(P) {
            return typeof P != "string" && (P = String(P)), P;
          }
          function M(P) {
            var L = {
              next: function () {
                var U = P.shift();
                return { done: U === void 0, value: U };
              },
            };
            return (
              u.iterable &&
                (L[Symbol.iterator] = function () {
                  return L;
                }),
              L
            );
          }
          function D(P) {
            (this.map = {}),
              P instanceof D
                ? P.forEach(function (L, U) {
                    this.append(U, L);
                  }, this)
                : Array.isArray(P)
                ? P.forEach(function (L) {
                    this.append(L[0], L[1]);
                  }, this)
                : P &&
                  Object.getOwnPropertyNames(P).forEach(function (L) {
                    this.append(L, P[L]);
                  }, this);
          }
          (D.prototype.append = function (P, L) {
            (P = w(P)), (L = S(L));
            var U = this.map[P];
            this.map[P] = U ? U + ", " + L : L;
          }),
            (D.prototype.delete = function (P) {
              delete this.map[w(P)];
            }),
            (D.prototype.get = function (P) {
              return (P = w(P)), this.has(P) ? this.map[P] : null;
            }),
            (D.prototype.has = function (P) {
              return this.map.hasOwnProperty(w(P));
            }),
            (D.prototype.set = function (P, L) {
              this.map[w(P)] = S(L);
            }),
            (D.prototype.forEach = function (P, L) {
              for (var U in this.map)
                this.map.hasOwnProperty(U) && P.call(L, this.map[U], U, this);
            }),
            (D.prototype.keys = function () {
              var P = [];
              return (
                this.forEach(function (L, U) {
                  P.push(U);
                }),
                M(P)
              );
            }),
            (D.prototype.values = function () {
              var P = [];
              return (
                this.forEach(function (L) {
                  P.push(L);
                }),
                M(P)
              );
            }),
            (D.prototype.entries = function () {
              var P = [];
              return (
                this.forEach(function (L, U) {
                  P.push([U, L]);
                }),
                M(P)
              );
            }),
            u.iterable && (D.prototype[Symbol.iterator] = D.prototype.entries);
          function z(P) {
            if (P.bodyUsed)
              return Promise.reject(new TypeError("Already read"));
            P.bodyUsed = !0;
          }
          function V(P) {
            return new Promise(function (L, U) {
              (P.onload = function () {
                L(P.result);
              }),
                (P.onerror = function () {
                  U(P.error);
                });
            });
          }
          function j(P) {
            var L = new FileReader(),
              U = V(L);
            return L.readAsArrayBuffer(P), U;
          }
          function B(P) {
            var L = new FileReader(),
              U = V(L);
            return L.readAsText(P), U;
          }
          function ae(P) {
            for (
              var L = new Uint8Array(P), U = new Array(L.length), Y = 0;
              Y < L.length;
              Y++
            )
              U[Y] = String.fromCharCode(L[Y]);
            return U.join("");
          }
          function re(P) {
            if (P.slice) return P.slice(0);
            var L = new Uint8Array(P.byteLength);
            return L.set(new Uint8Array(P)), L.buffer;
          }
          function K() {
            return (
              (this.bodyUsed = !1),
              (this._initBody = function (P) {
                (this._bodyInit = P),
                  P
                    ? typeof P == "string"
                      ? (this._bodyText = P)
                      : u.blob && Blob.prototype.isPrototypeOf(P)
                      ? (this._bodyBlob = P)
                      : u.formData && FormData.prototype.isPrototypeOf(P)
                      ? (this._bodyFormData = P)
                      : u.searchParams &&
                        URLSearchParams.prototype.isPrototypeOf(P)
                      ? (this._bodyText = P.toString())
                      : u.arrayBuffer && u.blob && p(P)
                      ? ((this._bodyArrayBuffer = re(P.buffer)),
                        (this._bodyInit = new Blob([this._bodyArrayBuffer])))
                      : u.arrayBuffer &&
                        (ArrayBuffer.prototype.isPrototypeOf(P) || v(P))
                      ? (this._bodyArrayBuffer = re(P))
                      : (this._bodyText = P = Object.prototype.toString.call(P))
                    : (this._bodyText = ""),
                  this.headers.get("content-type") ||
                    (typeof P == "string"
                      ? this.headers.set(
                          "content-type",
                          "text/plain;charset=UTF-8"
                        )
                      : this._bodyBlob && this._bodyBlob.type
                      ? this.headers.set("content-type", this._bodyBlob.type)
                      : u.searchParams &&
                        URLSearchParams.prototype.isPrototypeOf(P) &&
                        this.headers.set(
                          "content-type",
                          "application/x-www-form-urlencoded;charset=UTF-8"
                        ));
              }),
              u.blob &&
                ((this.blob = function () {
                  var P = z(this);
                  if (P) return P;
                  if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
                  if (this._bodyArrayBuffer)
                    return Promise.resolve(new Blob([this._bodyArrayBuffer]));
                  if (this._bodyFormData)
                    throw new Error("could not read FormData body as blob");
                  return Promise.resolve(new Blob([this._bodyText]));
                }),
                (this.arrayBuffer = function () {
                  return this._bodyArrayBuffer
                    ? z(this) || Promise.resolve(this._bodyArrayBuffer)
                    : this.blob().then(j);
                })),
              (this.text = function () {
                var P = z(this);
                if (P) return P;
                if (this._bodyBlob) return B(this._bodyBlob);
                if (this._bodyArrayBuffer)
                  return Promise.resolve(ae(this._bodyArrayBuffer));
                if (this._bodyFormData)
                  throw new Error("could not read FormData body as text");
                return Promise.resolve(this._bodyText);
              }),
              u.formData &&
                (this.formData = function () {
                  return this.text().then(_e);
                }),
              (this.json = function () {
                return this.text().then(JSON.parse);
              }),
              this
            );
          }
          var fe = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
          function ye(P) {
            var L = P.toUpperCase();
            return fe.indexOf(L) > -1 ? L : P;
          }
          function pe(P, L) {
            L = L || {};
            var U = L.body;
            if (P instanceof pe) {
              if (P.bodyUsed) throw new TypeError("Already read");
              (this.url = P.url),
                (this.credentials = P.credentials),
                L.headers || (this.headers = new D(P.headers)),
                (this.method = P.method),
                (this.mode = P.mode),
                (this.signal = P.signal),
                !U &&
                  P._bodyInit != null &&
                  ((U = P._bodyInit), (P.bodyUsed = !0));
            } else this.url = String(P);
            if (
              ((this.credentials =
                L.credentials || this.credentials || "same-origin"),
              (L.headers || !this.headers) && (this.headers = new D(L.headers)),
              (this.method = ye(L.method || this.method || "GET")),
              (this.mode = L.mode || this.mode || null),
              (this.signal = L.signal || this.signal),
              (this.referrer = null),
              (this.method === "GET" || this.method === "HEAD") && U)
            )
              throw new TypeError("Body not allowed for GET or HEAD requests");
            this._initBody(U);
          }
          pe.prototype.clone = function () {
            return new pe(this, { body: this._bodyInit });
          };
          function _e(P) {
            var L = new FormData();
            return (
              P.trim()
                .split("&")
                .forEach(function (U) {
                  if (U) {
                    var Y = U.split("="),
                      ie = Y.shift().replace(/\+/g, " "),
                      le = Y.join("=").replace(/\+/g, " ");
                    L.append(decodeURIComponent(ie), decodeURIComponent(le));
                  }
                }),
              L
            );
          }
          function be(P) {
            var L = new D(),
              U = P.replace(/\r?\n[\t ]+/g, " ");
            return (
              U.split(/\r?\n/).forEach(function (Y) {
                var ie = Y.split(":"),
                  le = ie.shift().trim();
                if (le) {
                  var J = ie.join(":").trim();
                  L.append(le, J);
                }
              }),
              L
            );
          }
          K.call(pe.prototype);
          function Ce(P, L) {
            L || (L = {}),
              (this.type = "default"),
              (this.status = L.status === void 0 ? 200 : L.status),
              (this.ok = this.status >= 200 && this.status < 300),
              (this.statusText = "statusText" in L ? L.statusText : "OK"),
              (this.headers = new D(L.headers)),
              (this.url = L.url || ""),
              this._initBody(P);
          }
          K.call(Ce.prototype),
            (Ce.prototype.clone = function () {
              return new Ce(this._bodyInit, {
                status: this.status,
                statusText: this.statusText,
                headers: new D(this.headers),
                url: this.url,
              });
            }),
            (Ce.error = function () {
              var P = new Ce(null, { status: 0, statusText: "" });
              return (P.type = "error"), P;
            });
          var ke = [301, 302, 303, 307, 308];
          (Ce.redirect = function (P, L) {
            if (ke.indexOf(L) === -1)
              throw new RangeError("Invalid status code");
            return new Ce(null, { status: L, headers: { location: P } });
          }),
            (l.DOMException = a.DOMException);
          try {
            new l.DOMException();
          } catch {
            (l.DOMException = function (P, L) {
              (this.message = P), (this.name = L);
              var U = Error(P);
              this.stack = U.stack;
            }),
              (l.DOMException.prototype = Object.create(Error.prototype)),
              (l.DOMException.prototype.constructor = l.DOMException);
          }
          function E(P, L) {
            return new Promise(function (U, Y) {
              var ie = new pe(P, L);
              if (ie.signal && ie.signal.aborted)
                return Y(new l.DOMException("Aborted", "AbortError"));
              var le = new XMLHttpRequest();
              function J() {
                le.abort();
              }
              (le.onload = function () {
                var T = {
                  status: le.status,
                  statusText: le.statusText,
                  headers: be(le.getAllResponseHeaders() || ""),
                };
                T.url =
                  "responseURL" in le
                    ? le.responseURL
                    : T.headers.get("X-Request-URL");
                var Z = "response" in le ? le.response : le.responseText;
                U(new Ce(Z, T));
              }),
                (le.onerror = function () {
                  Y(new TypeError("Network request failed"));
                }),
                (le.ontimeout = function () {
                  Y(new TypeError("Network request failed"));
                }),
                (le.onabort = function () {
                  Y(new l.DOMException("Aborted", "AbortError"));
                }),
                le.open(ie.method, ie.url, !0),
                ie.credentials === "include"
                  ? (le.withCredentials = !0)
                  : ie.credentials === "omit" && (le.withCredentials = !1),
                "responseType" in le && u.blob && (le.responseType = "blob"),
                ie.headers.forEach(function (T, Z) {
                  le.setRequestHeader(Z, T);
                }),
                ie.signal &&
                  (ie.signal.addEventListener("abort", J),
                  (le.onreadystatechange = function () {
                    le.readyState === 4 &&
                      ie.signal.removeEventListener("abort", J);
                  })),
                le.send(typeof ie._bodyInit > "u" ? null : ie._bodyInit);
            });
          }
          return (
            (E.polyfill = !0),
            a.fetch ||
              ((a.fetch = E),
              (a.Headers = D),
              (a.Request = pe),
              (a.Response = Ce)),
            (l.Headers = D),
            (l.Request = pe),
            (l.Response = Ce),
            (l.fetch = E),
            Object.defineProperty(l, "__esModule", { value: !0 }),
            l
          );
        })({});
      })(n),
        (n.fetch.ponyfill = !0),
        delete n.fetch.polyfill;
      var i = n;
      (e = i.fetch),
        (e.default = i.fetch),
        (e.fetch = i.fetch),
        (e.Headers = i.Headers),
        (e.Request = i.Request),
        (e.Response = i.Response),
        (t.exports = e);
    })(oy, oy.exports);
    var WU = oy.exports;
    const XU = ns(WU);
    var jU =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    class ly extends hh {
      constructor(e, r) {
        if ((super(), !ly.validateClientUrl(e))) throw new A0(e);
        (this.clientUrl = e), (this.httpProviderOptions = r);
      }
      static validateClientUrl(e) {
        return typeof e == "string" ? /^http(s)?:\/\//i.test(e) : !1;
      }
      getStatus() {
        throw new Vs();
      }
      supportsSubscriptions() {
        return !1;
      }
      request(e, r) {
        var n;
        return jU(this, void 0, void 0, function* () {
          const i = Object.assign(
              Object.assign(
                {},
                (n = this.httpProviderOptions) === null || n === void 0
                  ? void 0
                  : n.providerOptions
              ),
              r
            ),
            a = yield XU(
              this.clientUrl,
              Object.assign(Object.assign({}, i), {
                method: "POST",
                headers: Object.assign(Object.assign({}, i.headers), {
                  "Content-Type": "application/json",
                }),
                body: JSON.stringify(e),
              })
            );
          if (!a.ok) throw new qs(yield a.json());
          return yield a.json();
        });
      }
      on() {
        throw new Vs();
      }
      removeListener() {
        throw new Vs();
      }
      once() {
        throw new Vs();
      }
      removeAllListeners() {
        throw new Vs();
      }
      connect() {
        throw new Vs();
      }
      disconnect() {
        throw new Vs();
      }
      reset() {
        throw new Vs();
      }
      reconnect() {
        throw new Vs();
      }
    }
    var bc = null;
    typeof WebSocket < "u"
      ? (bc = WebSocket)
      : typeof MozWebSocket < "u"
      ? (bc = MozWebSocket)
      : typeof Ns < "u"
      ? (bc = Ns.WebSocket || Ns.MozWebSocket)
      : typeof window < "u"
      ? (bc = window.WebSocket || window.MozWebSocket)
      : typeof self < "u" && (bc = self.WebSocket || self.MozWebSocket);
    const GU = bc;
    class YU extends OS {
      constructor(e, r, n) {
        super(e, r, n);
      }
      _validateProviderPath(e) {
        return typeof e == "string" ? /^ws(s)?:\/\//i.test(e) : !1;
      }
      getStatus() {
        if (this._socketConnection && !Ct(this._socketConnection))
          switch (this._socketConnection.readyState) {
            case this._socketConnection.CONNECTING:
              return "connecting";
            case this._socketConnection.OPEN:
              return "connected";
            default:
              return "disconnected";
          }
        return "disconnected";
      }
      _openSocketConnection() {
        this._socketConnection = new GU(
          this._socketPath,
          void 0,
          this._socketOptions && Object.keys(this._socketOptions).length === 0
            ? void 0
            : this._socketOptions
        );
      }
      _closeSocketConnection(e, r) {
        var n;
        (n = this._socketConnection) === null || n === void 0 || n.close(e, r);
      }
      _sendToSocket(e) {
        var r;
        if (this.getStatus() === "disconnected") throw new k0();
        (r = this._socketConnection) === null ||
          r === void 0 ||
          r.send(JSON.stringify(e));
      }
      _parseResponses(e) {
        return this.chunkResponseParser.parseResponse(e.data);
      }
      _addSocketListeners() {
        var e, r, n, i;
        (e = this._socketConnection) === null ||
          e === void 0 ||
          e.addEventListener("open", this._onOpenHandler),
          (r = this._socketConnection) === null ||
            r === void 0 ||
            r.addEventListener("message", this._onMessageHandler),
          (n = this._socketConnection) === null ||
            n === void 0 ||
            n.addEventListener("close", (a) => this._onCloseHandler(a)),
          (i = this._socketConnection) === null ||
            i === void 0 ||
            i.addEventListener("error", this._onErrorHandler);
      }
      _removeSocketListeners() {
        var e, r, n;
        (e = this._socketConnection) === null ||
          e === void 0 ||
          e.removeEventListener("message", this._onMessageHandler),
          (r = this._socketConnection) === null ||
            r === void 0 ||
            r.removeEventListener("open", this._onOpenHandler),
          (n = this._socketConnection) === null ||
            n === void 0 ||
            n.removeEventListener("close", this._onCloseHandler);
      }
      _onCloseEvent(e) {
        var r;
        if (
          this._reconnectOptions.autoReconnect &&
          (![1e3, 1001].includes(e.code) || !e.wasClean)
        ) {
          this._reconnect();
          return;
        }
        this._clearQueues(e),
          this._removeSocketListeners(),
          this._onDisconnect(e.code, e.reason),
          (r = this._socketConnection) === null ||
            r === void 0 ||
            r.removeEventListener("error", this._onErrorHandler);
      }
    }
    const MS = (t) => hh.isWeb3Provider(t),
      RS = (t) =>
        typeof t != "string" &&
        "request" in t &&
        t.request.constructor.name === "Function",
      NS = (t) =>
        typeof t != "string" &&
        "request" in t &&
        t.request.constructor.name === "AsyncFunction",
      BS = (t) => typeof t != "string" && "send" in t,
      FS = (t) => typeof t != "string" && "sendAsync" in t,
      Sp = (t) => t && (MS(t) || NS(t) || RS(t) || FS(t) || BS(t)),
      VU = (t) =>
        t && "supportsSubscriptions" in t
          ? t.supportsSubscriptions()
          : !!(t && typeof t != "string" && "on" in t);
    var cy =
        (globalThis && globalThis.__awaiter) ||
        function (t, e, r, n) {
          function i(a) {
            return a instanceof r
              ? a
              : new r(function (l) {
                  l(a);
                });
          }
          return new (r || (r = Promise))(function (a, l) {
            function u(v) {
              try {
                m(n.next(v));
              } catch (w) {
                l(w);
              }
            }
            function p(v) {
              try {
                m(n.throw(v));
              } catch (w) {
                l(w);
              }
            }
            function m(v) {
              v.done ? a(v.value) : i(v.value).then(u, p);
            }
            m((n = n.apply(t, e || [])).next());
          });
        },
      xc;
    (function (t) {
      (t.PROVIDER_CHANGED = "PROVIDER_CHANGED"),
        (t.BEFORE_PROVIDER_CHANGE = "BEFORE_PROVIDER_CHANGE");
    })(xc || (xc = {}));
    const DS = { HttpProvider: ly, WebsocketProvider: YU };
    class nl extends Cp {
      constructor(e, r) {
        super(),
          Ct(e) || this.setProvider(e),
          (this.useRpcCallSpecification = r);
      }
      static get providers() {
        return DS;
      }
      get provider() {
        return this._provider;
      }
      get providers() {
        return DS;
      }
      setProvider(e) {
        let r;
        if (e && typeof e == "string" && this.providers)
          if (/^http(s)?:\/\//i.test(e)) r = new this.providers.HttpProvider(e);
          else if (/^ws(s)?:\/\//i.test(e))
            r = new this.providers.WebsocketProvider(e);
          else throw new Wf(`Can't autodetect provider for "${e}"`);
        else Ct(e) ? (r = void 0) : (r = e);
        return (
          this.emit(xc.BEFORE_PROVIDER_CHANGE, this._provider),
          (this._provider = r),
          this.emit(xc.PROVIDER_CHANGED, this._provider),
          !0
        );
      }
      send(e) {
        return cy(this, void 0, void 0, function* () {
          const r = yield this._sendRequest(e);
          if (ta(r)) return r.result;
          throw new qs(r);
        });
      }
      sendBatch(e) {
        return cy(this, void 0, void 0, function* () {
          return yield this._sendRequest(e);
        });
      }
      _sendRequest(e) {
        return cy(this, void 0, void 0, function* () {
          const { provider: r } = this;
          if (Ct(r))
            throw new Wf(
              "Provider not available. Use `.setProvider` or `.provider=` to initialize the provider."
            );
          const n = qi(e) ? ny(e) : rl(e);
          if (MS(r)) {
            let i;
            try {
              i = yield r.request(n);
            } catch (a) {
              i = a;
            }
            return this._processJsonRpcResponse(n, i, {
              legacy: !1,
              error: !1,
            });
          }
          if (NS(r))
            return r
              .request(n)
              .then((i) =>
                this._processJsonRpcResponse(n, i, { legacy: !0, error: !1 })
              )
              .catch((i) =>
                this._processJsonRpcResponse(n, i, { legacy: !0, error: !0 })
              );
          if (RS(r))
            return new Promise((i, a) => {
              const l = (m) =>
                  a(
                    this._processJsonRpcResponse(n, m, {
                      legacy: !0,
                      error: !0,
                    })
                  ),
                u = (m) =>
                  i(
                    this._processJsonRpcResponse(n, m, {
                      legacy: !0,
                      error: !1,
                    })
                  ),
                p = r.request(n, (m, v) => (m ? l(m) : u(v)));
              dS(p) && p.then(u).catch(l);
            });
          if (BS(r))
            return new Promise((i, a) => {
              r.send(n, (l, u) => {
                if (l)
                  return a(
                    this._processJsonRpcResponse(n, l, {
                      legacy: !0,
                      error: !0,
                    })
                  );
                if (Ct(u))
                  throw new qs("", 'Got a "nullish" response from provider.');
                return i(
                  this._processJsonRpcResponse(n, u, { legacy: !0, error: !1 })
                );
              });
            });
          if (FS(r))
            return r
              .sendAsync(n)
              .then((i) =>
                this._processJsonRpcResponse(n, i, { legacy: !0, error: !1 })
              )
              .catch((i) =>
                this._processJsonRpcResponse(n, i, { legacy: !0, error: !0 })
              );
          throw new Wf(
            "Provider does not have a request or send method to use."
          );
        });
      }
      _processJsonRpcResponse(e, r, { legacy: n, error: i }) {
        if (Ct(r)) return this._buildResponse(e, null, i);
        if (ra(r)) {
          if (this.useRpcCallSpecification && ty(r)) {
            const a = r;
            if (Dn.get(a.error.code)) {
              const l = Dn.get(a.error.code).error;
              throw new l(a);
            } else throw new ai(a);
          } else if (!nl._isReverted(r)) throw new ic(r, e);
        }
        if (ta(r)) return r;
        if (r instanceof Error) throw (nl._isReverted(r), r);
        if ((!n && qi(e) && bh(r)) || (n && !i && qi(e))) return r;
        if (n && i && qi(e)) throw r;
        if (n && !ra(r) && !ta(r)) return this._buildResponse(e, r, i);
        throw qi(e) && !Array.isArray(r)
          ? new qs(r, "Got normal response for a batch request.")
          : !qi(e) && Array.isArray(r)
          ? new qs(r, "Got batch response for a normal request.")
          : (ra(r) || ta(r)) && !qi(e) && r.id && e.id !== r.id
          ? new ic(r)
          : new qs(r, "Invalid response");
      }
      static _isReverted(e) {
        let r;
        if (
          (ra(e) ? (r = e.error) : e instanceof Error && (r = e),
          r == null ? void 0 : r.message.includes("revert"))
        )
          throw new Ys(r);
        return !1;
      }
      _buildResponse(e, r, n) {
        const i = {
          jsonrpc: "2.0",
          id: qi(e) ? e[0].id : "id" in e ? e.id : null,
        };
        return n
          ? Object.assign(Object.assign({}, i), { error: r })
          : Object.assign(Object.assign({}, i), { result: r });
      }
    }
    var xh =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    class uy {
      constructor(e, r, n = !1) {
        (this.requestManager = e),
          (this.registeredSubscriptions = r),
          (this.tolerateUnlinkedSubscription = n),
          (this._subscriptions = new Map()),
          this.requestManager.on(xc.BEFORE_PROVIDER_CHANGE, () =>
            xh(this, void 0, void 0, function* () {
              yield this.unsubscribe();
            })
          ),
          this.requestManager.on(xc.PROVIDER_CHANGED, () => {
            this.clear(), this.listenToProviderEvents();
          }),
          this.listenToProviderEvents();
      }
      listenToProviderEvents() {
        const e = this.requestManager.provider;
        !this.requestManager.provider ||
          (typeof (e == null ? void 0 : e.supportsSubscriptions) ==
            "function" &&
            !(e != null && e.supportsSubscriptions())) ||
          (typeof this.requestManager.provider.on == "function" &&
            (typeof this.requestManager.provider.request == "function"
              ? this.requestManager.provider.on("message", (r) =>
                  this.messageListener(r)
                )
              : e.on("data", (r) => this.messageListener(r))));
      }
      messageListener(e) {
        var r, n, i;
        if (!e)
          throw new zi(
            "Should not call messageListener with no data. Type was"
          );
        const a =
          ((r = e.params) === null || r === void 0 ? void 0 : r.subscription) ||
          ((n = e.data) === null || n === void 0 ? void 0 : n.subscription) ||
          ((i = e.id) === null || i === void 0 ? void 0 : i.toString(16));
        if (a) {
          const l = this._subscriptions.get(a);
          l == null || l.processSubscriptionData(e);
        }
      }
      subscribe(e, r, n = nt) {
        return xh(this, void 0, void 0, function* () {
          const i = this.registeredSubscriptions[e];
          if (!i) throw new zi("Invalid subscription type");
          const a = new i(r ?? void 0, {
            subscriptionManager: this,
            returnFormat: n,
          });
          return yield this.addSubscription(a), a;
        });
      }
      get subscriptions() {
        return this._subscriptions;
      }
      addSubscription(e) {
        return xh(this, void 0, void 0, function* () {
          if (!this.requestManager.provider)
            throw new Wf("Provider not available");
          if (!this.supportsSubscriptions())
            throw new zi("The current provider does not support subscriptions");
          if (e.id && this._subscriptions.has(e.id))
            throw new zi(`Subscription with id "${e.id}" already exists`);
          if ((yield e.sendSubscriptionRequest(), Ct(e.id)))
            throw new zi("Subscription is not subscribed yet.");
          return this._subscriptions.set(e.id, e), e.id;
        });
      }
      removeSubscription(e) {
        return xh(this, void 0, void 0, function* () {
          const { id: r } = e;
          if (Ct(r))
            throw new zi(
              "Subscription is not subscribed yet. Or, had already been unsubscribed but not through the Subscription Manager."
            );
          if (!this._subscriptions.has(r) && !this.tolerateUnlinkedSubscription)
            throw new zi(
              `Subscription with id "${r.toString()}" does not exists`
            );
          return (
            yield e.sendUnsubscribeRequest(), this._subscriptions.delete(r), r
          );
        });
      }
      unsubscribe(e) {
        return xh(this, void 0, void 0, function* () {
          const r = [];
          for (const [n, i] of this.subscriptions.entries())
            (!e || (typeof e == "function" && e({ id: n, sub: i }))) &&
              r.push(this.removeSubscription(i));
          return Promise.all(r);
        });
      }
      clear() {
        this._subscriptions.clear();
      }
      supportsSubscriptions() {
        return Ct(this.requestManager.provider)
          ? !1
          : VU(this.requestManager.provider);
      }
    }
    var wh =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    class kh extends Cp {
      constructor(e, r) {
        var n;
        super(), (this.args = e);
        const { requestManager: i } = r,
          { subscriptionManager: a } = r;
        if (i && a)
          throw new zi(
            "Only requestManager or subscriptionManager should be provided at Subscription constructor"
          );
        if (!i && !a)
          throw new zi(
            "Either requestManager or subscriptionManager should be provided at Subscription constructor"
          );
        i
          ? (this._subscriptionManager = new uy(i, {}, !0))
          : (this._subscriptionManager = a),
          (this._returnFormat =
            (n = r == null ? void 0 : r.returnFormat) !== null && n !== void 0
              ? n
              : nt);
      }
      get id() {
        return this._id;
      }
      get lastBlock() {
        return this._lastBlock;
      }
      subscribe() {
        return wh(this, void 0, void 0, function* () {
          return this._subscriptionManager.addSubscription(this);
        });
      }
      processSubscriptionData(e) {
        var r, n;
        e != null && e.data
          ? this._processSubscriptionResult(
              (n =
                (r = e == null ? void 0 : e.data) === null || r === void 0
                  ? void 0
                  : r.result) !== null && n !== void 0
                ? n
                : e == null
                ? void 0
                : e.data
            )
          : e &&
            bp(e) &&
            this._processSubscriptionResult(
              e == null ? void 0 : e.params.result
            );
      }
      sendSubscriptionRequest() {
        return wh(this, void 0, void 0, function* () {
          return (
            (this._id = yield this._subscriptionManager.requestManager.send({
              method: "eth_subscribe",
              params: this._buildSubscriptionParams(),
            })),
            this.emit("connected", this._id),
            this._id
          );
        });
      }
      get returnFormat() {
        return this._returnFormat;
      }
      get subscriptionManager() {
        return this._subscriptionManager;
      }
      resubscribe() {
        return wh(this, void 0, void 0, function* () {
          yield this.unsubscribe(), yield this.subscribe();
        });
      }
      unsubscribe() {
        return wh(this, void 0, void 0, function* () {
          this.id && (yield this._subscriptionManager.removeSubscription(this));
        });
      }
      sendUnsubscribeRequest() {
        return wh(this, void 0, void 0, function* () {
          yield this._subscriptionManager.requestManager.send({
            method: "eth_unsubscribe",
            params: [this.id],
          }),
            (this._id = void 0);
        });
      }
      formatSubscriptionResult(e) {
        return e;
      }
      _processSubscriptionResult(e) {
        this.emit("data", this.formatSubscriptionResult(e));
      }
      _processSubscriptionError(e) {
        this.emit("error", e);
      }
      _buildSubscriptionParams() {
        throw new Error("Implement in the child class");
      }
    }
    var zS =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    const qU = 1e3;
    class KU {
      constructor(e) {
        (this._requestManager = e), (this._requests = new Map());
      }
      get requests() {
        return [...this._requests.values()].map((e) => e.payload);
      }
      add(e) {
        const r = rl(e),
          n = new kp();
        return this._requests.set(r.id, { payload: r, promise: n }), n;
      }
      execute(e) {
        var r;
        return zS(this, void 0, void 0, function* () {
          if (this.requests.length === 0) return Promise.resolve([]);
          const n = new kp({
            timeout:
              (r = e == null ? void 0 : e.timeout) !== null && r !== void 0
                ? r
                : qU,
            eagerStart: !0,
            timeoutMessage: "Batch request timeout",
          });
          return (
            this._processBatchRequest(n).catch((i) => n.reject(i)),
            n.catch((i) => {
              i instanceof lC &&
                this._abortAllRequests("Batch request timeout"),
                n.reject(i);
            }),
            n
          );
        });
      }
      _processBatchRequest(e) {
        var r, n;
        return zS(this, void 0, void 0, function* () {
          const i = yield this._requestManager.sendBatch(
            [...this._requests.values()].map((u) => u.payload)
          );
          if (i.length !== this._requests.size)
            throw (
              (this._abortAllRequests("Invalid batch response"),
              new qs(
                i,
                `Batch request size mismatch the results size. Requests: ${this._requests.size}, Responses: ${i.length}`
              ))
            );
          const a = this.requests
              .map((u) => u.id)
              .map(Number)
              .sort((u, p) => u - p),
            l = i
              .map((u) => u.id)
              .map(Number)
              .sort((u, p) => u - p);
          if (JSON.stringify(a) !== JSON.stringify(l))
            throw (
              (this._abortAllRequests("Invalid batch response"),
              new qs(
                i,
                `Batch request mismatch the results. Requests: [${a.join()}], Responses: [${l.join()}]`
              ))
            );
          for (const u of i)
            ta(u)
              ? (r = this._requests.get(u.id)) === null ||
                r === void 0 ||
                r.promise.resolve(u.result)
              : ra(u) &&
                ((n = this._requests.get(u.id)) === null ||
                  n === void 0 ||
                  n.promise.reject(u.error));
          e.resolve(i);
        });
      }
      _abortAllRequests(e) {
        for (const { promise: r } of this._requests.values())
          r.reject(new v8(e));
      }
    }
    var $U =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    class ws extends UU {
      constructor(e) {
        var r;
        if (
          (super(),
          (this.providers = nl.providers),
          Ct(e) || (typeof e == "string" && e.trim() !== "") || Sp(e))
        ) {
          (this._requestManager = new nl(e)),
            (this._subscriptionManager = new uy(this._requestManager, {}));
          return;
        }
        const {
          config: n,
          provider: i,
          requestManager: a,
          subscriptionManager: l,
          registeredSubscriptions: u,
          accountProvider: p,
          wallet: m,
        } = e;
        this.setConfig(n ?? {}),
          (this._requestManager =
            a ??
            new nl(
              i,
              (r = n == null ? void 0 : n.enableExperimentalFeatures) ===
                null || r === void 0
                ? void 0
                : r.useSubscriptionWhenCheckingBlockTimeout
            )),
          l
            ? (this._subscriptionManager = l)
            : (this._subscriptionManager = new uy(
                this.requestManager,
                u ?? {}
              )),
          p && (this._accountProvider = p),
          m && (this._wallet = m);
      }
      get requestManager() {
        return this._requestManager;
      }
      get subscriptionManager() {
        return this._subscriptionManager;
      }
      get wallet() {
        return this._wallet;
      }
      get accountProvider() {
        return this._accountProvider;
      }
      static fromContextObject(...e) {
        return new this(...e.reverse());
      }
      getContextObject() {
        var e;
        return {
          config: this.config,
          provider: this.provider,
          requestManager: this.requestManager,
          subscriptionManager: this.subscriptionManager,
          registeredSubscriptions:
            (e = this.subscriptionManager) === null || e === void 0
              ? void 0
              : e.registeredSubscriptions,
          providers: this.providers,
          wallet: this.wallet,
          accountProvider: this.accountProvider,
        };
      }
      use(e, ...r) {
        const n = new e(...r, this.getContextObject());
        return (
          this.on(yc.CONFIG_CHANGE, (i) => {
            n.setConfig({ [i.name]: i.newValue });
          }),
          n
        );
      }
      link(e) {
        this.setConfig(e.config),
          (this._requestManager = e.requestManager),
          (this.provider = e.provider),
          (this._subscriptionManager = e.subscriptionManager),
          (this._wallet = e.wallet),
          (this._accountProvider = e._accountProvider),
          e.on(yc.CONFIG_CHANGE, (r) => {
            this.setConfig({ [r.name]: r.newValue });
          });
      }
      registerPlugin(e) {
        if (this[e.pluginNamespace] !== void 0) throw new y8(e.pluginNamespace);
        const r = { [e.pluginNamespace]: e };
        r[e.pluginNamespace].link(this), Object.assign(this, r);
      }
      get provider() {
        return this.currentProvider;
      }
      set provider(e) {
        this.requestManager.setProvider(e);
      }
      get currentProvider() {
        return this.requestManager.provider;
      }
      set currentProvider(e) {
        this.requestManager.setProvider(e);
      }
      get givenProvider() {
        return ws.givenProvider;
      }
      setProvider(e) {
        return (this.provider = e), !0;
      }
      get BatchRequest() {
        return KU.bind(void 0, this._requestManager);
      }
      extend(e) {
        var r;
        return (
          e.property && !this[e.property] && (this[e.property] = {}),
          (r = e.methods) === null ||
            r === void 0 ||
            r.forEach((n) => {
              const i = (...a) =>
                $U(this, void 0, void 0, function* () {
                  return this.requestManager.send({
                    method: n.call,
                    params: a,
                  });
                });
              e.property ? (this[e.property][n.name] = i) : (this[n.name] = i);
            }),
          this
        );
      }
    }
    ws.providers = nl.providers;
    class rn {
      constructor(e) {
        if (
          ((this.toAddress = () => {
            if (this.isDirect()) {
              const r = this._iban.slice(4),
                n = rn._parseInt(r, 36),
                i = mc(n, 40);
              return ea(i);
            }
            throw new Error(
              "Iban is indirect and cannot be converted. Must be length of 34 or 35"
            );
          }),
          rn.isIndirect(e) || rn.isDirect(e))
        )
          this._iban = e;
        else throw new Error("Invalid IBAN was provided");
      }
      static isDirect(e) {
        return e.length === 34 || e.length === 35;
      }
      isDirect() {
        return rn.isDirect(this._iban);
      }
      static isIndirect(e) {
        return e.length === 20;
      }
      isIndirect() {
        return rn.isIndirect(this._iban);
      }
      static isValid(e) {
        return (
          /^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(e) &&
          rn._mod9710(rn._iso13616Prepare(e)) === 1
        );
      }
      isValid() {
        return rn.isValid(this._iban);
      }
      static fromBban(e) {
        const r = "XE",
          n = `0${(
            98 - this._mod9710(this._iso13616Prepare(`${r}00${e}`))
          ).toString()}`.slice(-2);
        return new rn(`${r}${n}${e}`);
      }
      static createIndirect(e) {
        return rn.fromBban(`ETH${e.institution}${e.identifier}`);
      }
      static fromAddress(e) {
        if (!ji(e)) throw new P0(e);
        const r = BigInt(fh(e)).toString(36),
          n = mc(r, 15);
        return rn.fromBban(n.toUpperCase());
      }
      static toIban(e) {
        return rn.fromAddress(e).toString();
      }
      client() {
        return this.isIndirect() ? this._iban.slice(11) : "";
      }
      checksum() {
        return this._iban.slice(2, 4);
      }
      institution() {
        return this.isIndirect() ? this._iban.slice(7, 11) : "";
      }
      toString() {
        return this._iban;
      }
    }
    (rn._iso13616Prepare = (t) => {
      const e = "A".charCodeAt(0),
        r = "Z".charCodeAt(0),
        n = t.toUpperCase();
      return `${n.slice(4)}${n.slice(0, 4)}`
        .split("")
        .map((i) => {
          const a = i.charCodeAt(0);
          return a >= e && a <= r ? a - e + 10 : i;
        })
        .join("");
    }),
      (rn._parseInt = (t, e) =>
        [...t].reduce(
          (r, n) => BigInt(parseInt(n, e)) + BigInt(e) * r,
          BigInt(0)
        )),
      (rn._mod9710 = (t) => {
        let e = t,
          r;
        for (; e.length > 2; )
          (r = e.slice(0, 9)),
            (e = `${(parseInt(r, 10) % 97).toString()}${e.slice(r.length)}`);
        return parseInt(e, 10) % 97;
      }),
      (rn.toAddress = (t) => new rn(t).toAddress());
    var hy =
        (globalThis && globalThis.__awaiter) ||
        function (t, e, r, n) {
          function i(a) {
            return a instanceof r
              ? a
              : new r(function (l) {
                  l(a);
                });
          }
          return new (r || (r = Promise))(function (a, l) {
            function u(v) {
              try {
                m(n.next(v));
              } catch (w) {
                l(w);
              }
            }
            function p(v) {
              try {
                m(n.throw(v));
              } catch (w) {
                l(w);
              }
            }
            function m(v) {
              v.done ? a(v.value) : i(v.value).then(u, p);
            }
            m((n = n.apply(t, e || [])).next());
          });
        },
      HS;
    class US extends Cp {
      constructor(e) {
        super(), (this[HS] = "Promise"), (this._promise = new Promise(e));
      }
      then(e, r) {
        return hy(this, void 0, void 0, function* () {
          return this._promise.then(e, r);
        });
      }
      catch(e) {
        return hy(this, void 0, void 0, function* () {
          return this._promise.catch(e);
        });
      }
      finally(e) {
        return hy(this, void 0, void 0, function* () {
          return this._promise.finally(e);
        });
      }
      on(e, r) {
        return super.on(e, r), this;
      }
      once(e, r) {
        return super.once(e, r), this;
      }
    }
    (HS = Symbol.toStringTag),
      (function (t, e) {
        if (t.setImmediate) return;
        var r = 1,
          n = {},
          i = !1,
          a = t.document,
          l;
        function u(B) {
          typeof B != "function" && (B = new Function("" + B));
          for (
            var ae = new Array(arguments.length - 1), re = 0;
            re < ae.length;
            re++
          )
            ae[re] = arguments[re + 1];
          var K = { callback: B, args: ae };
          return (n[r] = K), l(r), r++;
        }
        function p(B) {
          delete n[B];
        }
        function m(B) {
          var ae = B.callback,
            re = B.args;
          switch (re.length) {
            case 0:
              ae();
              break;
            case 1:
              ae(re[0]);
              break;
            case 2:
              ae(re[0], re[1]);
              break;
            case 3:
              ae(re[0], re[1], re[2]);
              break;
            default:
              ae.apply(e, re);
              break;
          }
        }
        function v(B) {
          if (i) setTimeout(v, 0, B);
          else {
            var ae = n[B];
            if (ae) {
              i = !0;
              try {
                m(ae);
              } finally {
                p(B), (i = !1);
              }
            }
          }
        }
        function w() {
          l = function (B) {
            Rs.nextTick(function () {
              v(B);
            });
          };
        }
        function S() {
          if (t.postMessage && !t.importScripts) {
            var B = !0,
              ae = t.onmessage;
            return (
              (t.onmessage = function () {
                B = !1;
              }),
              t.postMessage("", "*"),
              (t.onmessage = ae),
              B
            );
          }
        }
        function M() {
          var B = "setImmediate$" + Math.random() + "$",
            ae = function (re) {
              re.source === t &&
                typeof re.data == "string" &&
                re.data.indexOf(B) === 0 &&
                v(+re.data.slice(B.length));
            };
          t.addEventListener
            ? t.addEventListener("message", ae, !1)
            : t.attachEvent("onmessage", ae),
            (l = function (re) {
              t.postMessage(B + re, "*");
            });
        }
        function D() {
          var B = new MessageChannel();
          (B.port1.onmessage = function (ae) {
            var re = ae.data;
            v(re);
          }),
            (l = function (ae) {
              B.port2.postMessage(ae);
            });
        }
        function z() {
          var B = a.documentElement;
          l = function (ae) {
            var re = a.createElement("script");
            (re.onreadystatechange = function () {
              v(ae),
                (re.onreadystatechange = null),
                B.removeChild(re),
                (re = null);
            }),
              B.appendChild(re);
          };
        }
        function V() {
          l = function (B) {
            setTimeout(v, 0, B);
          };
        }
        var j = Object.getPrototypeOf && Object.getPrototypeOf(t);
        (j = j && j.setTimeout ? j : t),
          {}.toString.call(t.process) === "[object process]"
            ? w()
            : S()
            ? M()
            : t.MessageChannel
            ? D()
            : a && "onreadystatechange" in a.createElement("script")
            ? z()
            : V(),
          (j.setImmediate = u),
          (j.clearImmediate = p);
      })(typeof self > "u" ? So : self);
    var xt =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    function ZU(t) {
      return xt(this, void 0, void 0, function* () {
        return t.send({ method: "eth_protocolVersion", params: [] });
      });
    }
    function WS(t) {
      return xt(this, void 0, void 0, function* () {
        return t.send({ method: "eth_syncing", params: [] });
      });
    }
    function QU(t) {
      return xt(this, void 0, void 0, function* () {
        return t.send({ method: "eth_coinbase", params: [] });
      });
    }
    function JU(t) {
      return xt(this, void 0, void 0, function* () {
        return t.send({ method: "eth_mining", params: [] });
      });
    }
    function e7(t) {
      return xt(this, void 0, void 0, function* () {
        return t.send({ method: "eth_hashrate", params: [] });
      });
    }
    function t7(t) {
      return xt(this, void 0, void 0, function* () {
        return t.send({ method: "eth_gasPrice", params: [] });
      });
    }
    function r7(t) {
      return xt(this, void 0, void 0, function* () {
        return t.send({ method: "eth_accounts", params: [] });
      });
    }
    function n7(t) {
      return xt(this, void 0, void 0, function* () {
        return t.send({ method: "eth_blockNumber", params: [] });
      });
    }
    function i7(t, e, r) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["address", "blockNumberOrTag"], [e, r]),
          t.send({ method: "eth_getBalance", params: [e, r] })
        );
      });
    }
    function s7(t, e, r, n) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["address", "hex", "blockNumberOrTag"], [e, r, n]),
          t.send({ method: "eth_getStorageAt", params: [e, r, n] })
        );
      });
    }
    function a7(t, e, r) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["address", "blockNumberOrTag"], [e, r]),
          t.send({ method: "eth_getTransactionCount", params: [e, r] })
        );
      });
    }
    function o7(t, e) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["bytes32"], [e]),
          t.send({ method: "eth_getBlockTransactionCountByHash", params: [e] })
        );
      });
    }
    function l7(t, e) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["blockNumberOrTag"], [e]),
          t.send({
            method: "eth_getBlockTransactionCountByNumber",
            params: [e],
          })
        );
      });
    }
    function c7(t, e) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["bytes32"], [e]),
          t.send({ method: "eth_getUncleCountByBlockHash", params: [e] })
        );
      });
    }
    function u7(t, e) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["blockNumberOrTag"], [e]),
          t.send({ method: "eth_getUncleCountByBlockNumber", params: [e] })
        );
      });
    }
    function h7(t, e, r) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["address", "blockNumberOrTag"], [e, r]),
          t.send({ method: "eth_getCode", params: [e, r] })
        );
      });
    }
    function d7(t, e, r) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["address", "hex"], [e, r]),
          t.send({ method: "eth_sign", params: [e, r] })
        );
      });
    }
    function f7(t, e) {
      return xt(this, void 0, void 0, function* () {
        return t.send({ method: "eth_signTransaction", params: [e] });
      });
    }
    function p7(t, e) {
      return xt(this, void 0, void 0, function* () {
        return t.send({ method: "eth_sendTransaction", params: [e] });
      });
    }
    function XS(t, e) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["hex"], [e]),
          t.send({ method: "eth_sendRawTransaction", params: [e] })
        );
      });
    }
    function g7(t, e, r) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["blockNumberOrTag"], [r]),
          t.send({ method: "eth_call", params: [e, r] })
        );
      });
    }
    function m7(t, e, r) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["blockNumberOrTag"], [r]),
          t.send({ method: "eth_estimateGas", params: [e, r] })
        );
      });
    }
    function v7(t, e, r) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["bytes32", "bool"], [e, r]),
          t.send({ method: "eth_getBlockByHash", params: [e, r] })
        );
      });
    }
    function jS(t, e, r) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["blockNumberOrTag", "bool"], [e, r]),
          t.send({ method: "eth_getBlockByNumber", params: [e, r] })
        );
      });
    }
    function y7(t, e) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["bytes32"], [e]),
          t.send({ method: "eth_getTransactionByHash", params: [e] })
        );
      });
    }
    function b7(t, e, r) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["bytes32", "hex"], [e, r]),
          t.send({
            method: "eth_getTransactionByBlockHashAndIndex",
            params: [e, r],
          })
        );
      });
    }
    function x7(t, e, r) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["blockNumberOrTag", "hex"], [e, r]),
          t.send({
            method: "eth_getTransactionByBlockNumberAndIndex",
            params: [e, r],
          })
        );
      });
    }
    function w7(t, e) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["bytes32"], [e]),
          t.send({ method: "eth_getTransactionReceipt", params: [e] })
        );
      });
    }
    function k7(t, e, r) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["bytes32", "hex"], [e, r]),
          t.send({ method: "eth_getUncleByBlockHashAndIndex", params: [e, r] })
        );
      });
    }
    function _7(t, e, r) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["blockNumberOrTag", "hex"], [e, r]),
          t.send({
            method: "eth_getUncleByBlockNumberAndIndex",
            params: [e, r],
          })
        );
      });
    }
    function A7(t, e) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["filter"], [e]),
          t.send({ method: "eth_getLogs", params: [e] })
        );
      });
    }
    function C7(t) {
      return xt(this, void 0, void 0, function* () {
        return t.send({ method: "eth_getWork", params: [] });
      });
    }
    function S7(t, e, r, n) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["bytes8", "bytes32", "bytes32"], [e, r, n]),
          t.send({ method: "eth_submitWork", params: [e, r, n] })
        );
      });
    }
    function E7(t, e, r, n) {
      return xt(this, void 0, void 0, function* () {
        ct.validate(["hex", "blockNumberOrTag"], [e, r]);
        for (const i of n) ct.validate(["number"], [i]);
        return t.send({ method: "eth_feeHistory", params: [e, r, n] });
      });
    }
    function I7(t) {
      return xt(this, void 0, void 0, function* () {
        return t.send({ method: "eth_pendingTransactions", params: [] });
      });
    }
    function T7(t) {
      return xt(this, void 0, void 0, function* () {
        return t.send({ method: "eth_requestAccounts", params: [] });
      });
    }
    function P7(t) {
      return xt(this, void 0, void 0, function* () {
        return t.send({ method: "eth_chainId", params: [] });
      });
    }
    function O7(t, e, r, n) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["address", "bytes32[]", "blockNumberOrTag"], [e, r, n]),
          t.send({ method: "eth_getProof", params: [e, r, n] })
        );
      });
    }
    function L7(t) {
      return xt(this, void 0, void 0, function* () {
        return t.send({ method: "web3_clientVersion", params: [] });
      });
    }
    function M7(t, e, r) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["blockNumberOrTag"], [r]),
          t.send({ method: "eth_createAccessList", params: [e, r] })
        );
      });
    }
    function R7(t, e, r, n = !1) {
      return xt(this, void 0, void 0, function* () {
        return (
          ct.validate(["address"], [e]),
          t.send({
            method: `eth_signTypedData${n ? "" : "_v4"}`,
            params: [e, r],
          })
        );
      });
    }
    var dy =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    function N7(t) {
      return dy(this, void 0, void 0, function* () {
        return t.send({ method: "net_version", params: [] });
      });
    }
    function B7(t) {
      return dy(this, void 0, void 0, function* () {
        return t.send({ method: "net_peerCount", params: [] });
      });
    }
    function F7(t) {
      return dy(this, void 0, void 0, function* () {
        return t.send({ method: "net_listening", params: [] });
      });
    }
    var na =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    const D7 = (t) =>
        na(void 0, void 0, void 0, function* () {
          return t.send({ method: "personal_listAccounts", params: [] });
        }),
      z7 = (t, e) =>
        na(void 0, void 0, void 0, function* () {
          return t.send({ method: "personal_newAccount", params: [e] });
        }),
      H7 = (t, e, r, n) =>
        na(void 0, void 0, void 0, function* () {
          return t.send({
            method: "personal_unlockAccount",
            params: [e, r, n],
          });
        }),
      U7 = (t, e) =>
        na(void 0, void 0, void 0, function* () {
          return t.send({ method: "personal_lockAccount", params: [e] });
        }),
      W7 = (t, e, r) =>
        na(void 0, void 0, void 0, function* () {
          return t.send({ method: "personal_importRawKey", params: [e, r] });
        }),
      X7 = (t, e, r) =>
        na(void 0, void 0, void 0, function* () {
          return t.send({ method: "personal_sendTransaction", params: [e, r] });
        }),
      j7 = (t, e, r) =>
        na(void 0, void 0, void 0, function* () {
          return t.send({ method: "personal_signTransaction", params: [e, r] });
        }),
      G7 = (t, e, r, n) =>
        na(void 0, void 0, void 0, function* () {
          return t.send({ method: "personal_sign", params: [e, r, n] });
        }),
      Y7 = (t, e, r) =>
        na(void 0, void 0, void 0, function* () {
          return t.send({ method: "personal_ecRecover", params: [e, r] });
        });
    var wc =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    class Ep extends YH {
      constructor() {
        super(...arguments),
          (this._addressMap = new Map()),
          (this._defaultKeyName = "web3js_wallet");
      }
      static getStorage() {
        let e;
        try {
          e = window.localStorage;
          const r = "__storage_test__";
          return e.setItem(r, r), e.removeItem(r), e;
        } catch (r) {
          return r &&
            (r.code === 22 ||
              r.code === 1014 ||
              r.name === "QuotaExceededError" ||
              r.name === "NS_ERROR_DOM_QUOTA_REACHED") &&
            !Fe(e) &&
            e.length !== 0
            ? e
            : void 0;
        }
      }
      create(e) {
        for (let r = 0; r < e; r += 1) this.add(this._accountProvider.create());
        return this;
      }
      add(e) {
        var r;
        if (typeof e == "string")
          return this.add(this._accountProvider.privateKeyToAccount(e));
        let n = this.length;
        return (
          this.get(e.address) &&
            (console.warn(`Account ${e.address.toLowerCase()} already exists.`),
            (n =
              (r = this._addressMap.get(e.address.toLowerCase())) !== null &&
              r !== void 0
                ? r
                : n)),
          this._addressMap.set(e.address.toLowerCase(), n),
          (this[n] = e),
          this
        );
      }
      get(e) {
        if (typeof e == "string") {
          const r = this._addressMap.get(e.toLowerCase());
          return Fe(r) ? void 0 : this[r];
        }
        return this[e];
      }
      remove(e) {
        if (typeof e == "string") {
          const r = this._addressMap.get(e.toLowerCase());
          return Fe(r)
            ? !1
            : (this._addressMap.delete(e.toLowerCase()), this.splice(r, 1), !0);
        }
        return this[e] ? (this.splice(e, 1), !0) : !1;
      }
      clear() {
        return this._addressMap.clear(), (this.length = 0), this;
      }
      encrypt(e, r) {
        return wc(this, void 0, void 0, function* () {
          return Promise.all(
            this.map((n) =>
              wc(this, void 0, void 0, function* () {
                return n.encrypt(e, r);
              })
            )
          );
        });
      }
      decrypt(e, r, n) {
        return wc(this, void 0, void 0, function* () {
          const i = yield Promise.all(
            e.map((a) =>
              wc(this, void 0, void 0, function* () {
                return this._accountProvider.decrypt(a, r, n);
              })
            )
          );
          for (const a of i) this.add(a);
          return this;
        });
      }
      save(e, r) {
        return wc(this, void 0, void 0, function* () {
          const n = Ep.getStorage();
          if (!n) throw new Error("Local storage not available.");
          return (
            n.setItem(
              r ?? this._defaultKeyName,
              JSON.stringify(yield this.encrypt(e))
            ),
            !0
          );
        });
      }
      load(e, r) {
        return wc(this, void 0, void 0, function* () {
          const n = Ep.getStorage();
          if (!n) throw new Error("Local storage not available.");
          const i = n.getItem(r ?? this._defaultKeyName);
          return i && (yield this.decrypt(JSON.parse(i) || [], e)), this;
        });
      }
    }
    const ks = { web: jf };
    function GS(t, e, r) {
      if (!r.startsWith("aes-"))
        throw new Error(`AES submodule doesn't support mode ${r}`);
      if (e.length !== 16) throw new Error("AES: wrong IV length");
      if (
        (r.startsWith("aes-128") && t.length !== 16) ||
        (r.startsWith("aes-256") && t.length !== 32)
      )
        throw new Error("AES: wrong key length");
    }
    async function YS(t, e, r) {
      if (!ks.web) throw new Error("Browser crypto not available.");
      let n;
      if (
        (["aes-128-cbc", "aes-256-cbc"].includes(t) && (n = "cbc"),
        ["aes-128-ctr", "aes-256-ctr"].includes(t) && (n = "ctr"),
        !n)
      )
        throw new Error("AES: unsupported mode");
      return [
        await ks.web.subtle.importKey(
          "raw",
          e,
          { name: `AES-${n.toUpperCase()}`, length: e.length * 8 },
          !0,
          ["encrypt", "decrypt"]
        ),
        { name: `aes-${n}`, iv: r, counter: r, length: 128 },
      ];
    }
    async function fy(t, e, r, n = "aes-128-ctr", i = !0) {
      if ((GS(e, r, n), ks.web)) {
        const [a, l] = await YS(n, e, r),
          u = await ks.web.subtle.encrypt(l, a, t);
        let p = new Uint8Array(u);
        return (
          !i &&
            l.name === "aes-cbc" &&
            !(t.length % 16) &&
            (p = p.slice(0, -16)),
          p
        );
      } else if (ks.node) {
        const a = ks.node.createCipheriv(n, e, r);
        return a.setAutoPadding(i), Vf(a.update(t), a.final());
      } else throw new Error("The environment doesn't have AES module");
    }
    async function V7(t, e, r, n) {
      const i = t.slice(-16);
      for (let a = 0; a < 16; a++) i[a] ^= r[a] ^ 16;
      return (await fy(i, e, r, n)).slice(0, 16);
    }
    async function q7(t, e, r, n = "aes-128-ctr", i = !0) {
      if ((GS(e, r, n), ks.web)) {
        const [a, l] = await YS(n, e, r);
        if (!i && l.name === "aes-cbc") {
          const m = await V7(t, e, r, n);
          t = Vf(t, m);
        }
        const u = await ks.web.subtle.decrypt(l, a, t),
          p = new Uint8Array(u);
        if (l.name === "aes-cbc") {
          const m = await fy(p, e, r, n);
          if (!Vz(m, t)) throw new Error("AES: wrong padding");
        }
        return p;
      } else if (ks.node) {
        const a = ks.node.createDecipheriv(n, e, r);
        return a.setAutoPadding(i), Vf(a.update(t), a.final());
      } else throw new Error("The environment doesn't have AES module");
    }
    class VS extends M0 {
      constructor(e, r) {
        super(), (this.finished = !1), (this.destroyed = !1), Rr.hash(e);
        const n = Yo(r);
        if (((this.iHash = e.create()), typeof this.iHash.update != "function"))
          throw new Error(
            "Expected instance of class which extends utils.Hash"
          );
        (this.blockLen = this.iHash.blockLen),
          (this.outputLen = this.iHash.outputLen);
        const i = this.blockLen,
          a = new Uint8Array(i);
        a.set(n.length > i ? e.create().update(n).digest() : n);
        for (let l = 0; l < a.length; l++) a[l] ^= 54;
        this.iHash.update(a), (this.oHash = e.create());
        for (let l = 0; l < a.length; l++) a[l] ^= 106;
        this.oHash.update(a), a.fill(0);
      }
      update(e) {
        return Rr.exists(this), this.iHash.update(e), this;
      }
      digestInto(e) {
        Rr.exists(this),
          Rr.bytes(e, this.outputLen),
          (this.finished = !0),
          this.iHash.digestInto(e),
          this.oHash.update(e),
          this.oHash.digestInto(e),
          this.destroy();
      }
      digest() {
        const e = new Uint8Array(this.oHash.outputLen);
        return this.digestInto(e), e;
      }
      _cloneInto(e) {
        e || (e = Object.create(Object.getPrototypeOf(this), {}));
        const {
          oHash: r,
          iHash: n,
          finished: i,
          destroyed: a,
          blockLen: l,
          outputLen: u,
        } = this;
        return (
          (e = e),
          (e.finished = i),
          (e.destroyed = a),
          (e.blockLen = l),
          (e.outputLen = u),
          (e.oHash = r._cloneInto(e.oHash)),
          (e.iHash = n._cloneInto(e.iHash)),
          e
        );
      }
      destroy() {
        (this.destroyed = !0), this.oHash.destroy(), this.iHash.destroy();
      }
    }
    const py = (t, e, r) => new VS(t, e).update(r).digest();
    py.create = (t, e) => new VS(t, e);
    function K7(t, e, r, n) {
      Rr.hash(t);
      const i = EC({ dkLen: 32, asyncTick: 10 }, n),
        { c: a, dkLen: l, asyncTick: u } = i;
      if ((Rr.number(a), Rr.number(l), Rr.number(u), a < 1))
        throw new Error("PBKDF2: iterations (c) should be >= 1");
      const p = Yo(e),
        m = Yo(r),
        v = new Uint8Array(l),
        w = py.create(t, p),
        S = w._cloneInto().update(m);
      return { c: a, dkLen: l, asyncTick: u, DK: v, PRF: w, PRFSalt: S };
    }
    function $7(t, e, r, n, i) {
      return t.destroy(), e.destroy(), n && n.destroy(), i.fill(0), r;
    }
    function gy(t, e, r, n) {
      const { c: i, dkLen: a, DK: l, PRF: u, PRFSalt: p } = K7(t, e, r, n);
      let m;
      const v = new Uint8Array(4),
        w = Yf(v),
        S = new Uint8Array(u.outputLen);
      for (let M = 1, D = 0; D < a; M++, D += u.outputLen) {
        const z = l.subarray(D, D + u.outputLen);
        w.setInt32(0, M, !1),
          (m = p._cloneInto(m)).update(v).digestInto(S),
          z.set(S.subarray(0, z.length));
        for (let V = 1; V < i; V++) {
          u._cloneInto(m).update(S).digestInto(S);
          for (let j = 0; j < z.length; j++) z[j] ^= S[j];
        }
      }
      return $7(u, p, l, m, S);
    }
    function Z7(t, e, r, n) {
      if (typeof t.setBigUint64 == "function") return t.setBigUint64(e, r, n);
      const i = BigInt(32),
        a = BigInt(4294967295),
        l = Number((r >> i) & a),
        u = Number(r & a),
        p = n ? 4 : 0,
        m = n ? 0 : 4;
      t.setUint32(e + p, l, n), t.setUint32(e + m, u, n);
    }
    class qS extends M0 {
      constructor(e, r, n, i) {
        super(),
          (this.blockLen = e),
          (this.outputLen = r),
          (this.padOffset = n),
          (this.isLE = i),
          (this.finished = !1),
          (this.length = 0),
          (this.pos = 0),
          (this.destroyed = !1),
          (this.buffer = new Uint8Array(e)),
          (this.view = Yf(this.buffer));
      }
      update(e) {
        Rr.exists(this);
        const { view: r, buffer: n, blockLen: i } = this;
        e = Yo(e);
        const a = e.length;
        for (let l = 0; l < a; ) {
          const u = Math.min(i - this.pos, a - l);
          if (u === i) {
            const p = Yf(e);
            for (; i <= a - l; l += i) this.process(p, l);
            continue;
          }
          n.set(e.subarray(l, l + u), this.pos),
            (this.pos += u),
            (l += u),
            this.pos === i && (this.process(r, 0), (this.pos = 0));
        }
        return (this.length += e.length), this.roundClean(), this;
      }
      digestInto(e) {
        Rr.exists(this), Rr.output(e, this), (this.finished = !0);
        const { buffer: r, view: n, blockLen: i, isLE: a } = this;
        let { pos: l } = this;
        (r[l++] = 128),
          this.buffer.subarray(l).fill(0),
          this.padOffset > i - l && (this.process(n, 0), (l = 0));
        for (let w = l; w < i; w++) r[w] = 0;
        Z7(n, i - 8, BigInt(this.length * 8), a), this.process(n, 0);
        const u = Yf(e),
          p = this.outputLen;
        if (p % 4)
          throw new Error("_sha2: outputLen should be aligned to 32bit");
        const m = p / 4,
          v = this.get();
        if (m > v.length) throw new Error("_sha2: outputLen bigger than state");
        for (let w = 0; w < m; w++) u.setUint32(4 * w, v[w], a);
      }
      digest() {
        const { buffer: e, outputLen: r } = this;
        this.digestInto(e);
        const n = e.slice(0, r);
        return this.destroy(), n;
      }
      _cloneInto(e) {
        e || (e = new this.constructor()), e.set(...this.get());
        const {
          blockLen: r,
          buffer: n,
          length: i,
          finished: a,
          destroyed: l,
          pos: u,
        } = this;
        return (
          (e.length = i),
          (e.pos = u),
          (e.finished = a),
          (e.destroyed = l),
          i % r && e.buffer.set(n),
          e
        );
      }
    }
    const Q7 = (t, e, r) => (t & e) ^ (~t & r),
      J7 = (t, e, r) => (t & e) ^ (t & r) ^ (e & r),
      eW = new Uint32Array([
        1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993,
        2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987,
        1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774,
        264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986,
        2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711,
        113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291,
        1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411,
        3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344,
        430227734, 506948616, 659060556, 883997877, 958139571, 1322822218,
        1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424,
        2428436474, 2756734187, 3204031479, 3329325298,
      ]),
      Za = new Uint32Array([
        1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924,
        528734635, 1541459225,
      ]),
      Qa = new Uint32Array(64);
    class KS extends qS {
      constructor() {
        super(64, 32, 8, !1),
          (this.A = Za[0] | 0),
          (this.B = Za[1] | 0),
          (this.C = Za[2] | 0),
          (this.D = Za[3] | 0),
          (this.E = Za[4] | 0),
          (this.F = Za[5] | 0),
          (this.G = Za[6] | 0),
          (this.H = Za[7] | 0);
      }
      get() {
        const { A: e, B: r, C: n, D: i, E: a, F: l, G: u, H: p } = this;
        return [e, r, n, i, a, l, u, p];
      }
      set(e, r, n, i, a, l, u, p) {
        (this.A = e | 0),
          (this.B = r | 0),
          (this.C = n | 0),
          (this.D = i | 0),
          (this.E = a | 0),
          (this.F = l | 0),
          (this.G = u | 0),
          (this.H = p | 0);
      }
      process(e, r) {
        for (let w = 0; w < 16; w++, r += 4) Qa[w] = e.getUint32(r, !1);
        for (let w = 16; w < 64; w++) {
          const S = Qa[w - 15],
            M = Qa[w - 2],
            D = vs(S, 7) ^ vs(S, 18) ^ (S >>> 3),
            z = vs(M, 17) ^ vs(M, 19) ^ (M >>> 10);
          Qa[w] = (z + Qa[w - 7] + D + Qa[w - 16]) | 0;
        }
        let { A: n, B: i, C: a, D: l, E: u, F: p, G: m, H: v } = this;
        for (let w = 0; w < 64; w++) {
          const S = vs(u, 6) ^ vs(u, 11) ^ vs(u, 25),
            M = (v + S + Q7(u, p, m) + eW[w] + Qa[w]) | 0,
            D = ((vs(n, 2) ^ vs(n, 13) ^ vs(n, 22)) + J7(n, i, a)) | 0;
          (v = m),
            (m = p),
            (p = u),
            (u = (l + M) | 0),
            (l = a),
            (a = i),
            (i = n),
            (n = (M + D) | 0);
        }
        (n = (n + this.A) | 0),
          (i = (i + this.B) | 0),
          (a = (a + this.C) | 0),
          (l = (l + this.D) | 0),
          (u = (u + this.E) | 0),
          (p = (p + this.F) | 0),
          (m = (m + this.G) | 0),
          (v = (v + this.H) | 0),
          this.set(n, i, a, l, u, p, m, v);
      }
      roundClean() {
        Qa.fill(0);
      }
      destroy() {
        this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
      }
    }
    class tW extends KS {
      constructor() {
        super(),
          (this.A = -1056596264),
          (this.B = 914150663),
          (this.C = 812702999),
          (this.D = -150054599),
          (this.E = -4191439),
          (this.F = 1750603025),
          (this.G = 1694076839),
          (this.H = -1090891868),
          (this.outputLen = 28);
      }
    }
    const Ip = Vo(() => new KS());
    Vo(() => new tW());
    const [rW, nW] = ft.split(
        [
          "0x428a2f98d728ae22",
          "0x7137449123ef65cd",
          "0xb5c0fbcfec4d3b2f",
          "0xe9b5dba58189dbbc",
          "0x3956c25bf348b538",
          "0x59f111f1b605d019",
          "0x923f82a4af194f9b",
          "0xab1c5ed5da6d8118",
          "0xd807aa98a3030242",
          "0x12835b0145706fbe",
          "0x243185be4ee4b28c",
          "0x550c7dc3d5ffb4e2",
          "0x72be5d74f27b896f",
          "0x80deb1fe3b1696b1",
          "0x9bdc06a725c71235",
          "0xc19bf174cf692694",
          "0xe49b69c19ef14ad2",
          "0xefbe4786384f25e3",
          "0x0fc19dc68b8cd5b5",
          "0x240ca1cc77ac9c65",
          "0x2de92c6f592b0275",
          "0x4a7484aa6ea6e483",
          "0x5cb0a9dcbd41fbd4",
          "0x76f988da831153b5",
          "0x983e5152ee66dfab",
          "0xa831c66d2db43210",
          "0xb00327c898fb213f",
          "0xbf597fc7beef0ee4",
          "0xc6e00bf33da88fc2",
          "0xd5a79147930aa725",
          "0x06ca6351e003826f",
          "0x142929670a0e6e70",
          "0x27b70a8546d22ffc",
          "0x2e1b21385c26c926",
          "0x4d2c6dfc5ac42aed",
          "0x53380d139d95b3df",
          "0x650a73548baf63de",
          "0x766a0abb3c77b2a8",
          "0x81c2c92e47edaee6",
          "0x92722c851482353b",
          "0xa2bfe8a14cf10364",
          "0xa81a664bbc423001",
          "0xc24b8b70d0f89791",
          "0xc76c51a30654be30",
          "0xd192e819d6ef5218",
          "0xd69906245565a910",
          "0xf40e35855771202a",
          "0x106aa07032bbd1b8",
          "0x19a4c116b8d2d0c8",
          "0x1e376c085141ab53",
          "0x2748774cdf8eeb99",
          "0x34b0bcb5e19b48a8",
          "0x391c0cb3c5c95a63",
          "0x4ed8aa4ae3418acb",
          "0x5b9cca4f7763e373",
          "0x682e6ff3d6b2b8a3",
          "0x748f82ee5defb2fc",
          "0x78a5636f43172f60",
          "0x84c87814a1f0ab72",
          "0x8cc702081a6439ec",
          "0x90befffa23631e28",
          "0xa4506cebde82bde9",
          "0xbef9a3f7b2c67915",
          "0xc67178f2e372532b",
          "0xca273eceea26619c",
          "0xd186b8c721c0c207",
          "0xeada7dd6cde0eb1e",
          "0xf57d4f7fee6ed178",
          "0x06f067aa72176fba",
          "0x0a637dc5a2c898a6",
          "0x113f9804bef90dae",
          "0x1b710b35131c471b",
          "0x28db77f523047d84",
          "0x32caab7b40c72493",
          "0x3c9ebe0a15c9bebc",
          "0x431d67c49c100d4c",
          "0x4cc5d4becb3e42b6",
          "0x597f299cfc657e2a",
          "0x5fcb6fab3ad6faec",
          "0x6c44198c4a475817",
        ].map((t) => BigInt(t))
      ),
      Ja = new Uint32Array(80),
      eo = new Uint32Array(80);
    class Tp extends qS {
      constructor() {
        super(128, 64, 16, !1),
          (this.Ah = 1779033703),
          (this.Al = -205731576),
          (this.Bh = -1150833019),
          (this.Bl = -2067093701),
          (this.Ch = 1013904242),
          (this.Cl = -23791573),
          (this.Dh = -1521486534),
          (this.Dl = 1595750129),
          (this.Eh = 1359893119),
          (this.El = -1377402159),
          (this.Fh = -1694144372),
          (this.Fl = 725511199),
          (this.Gh = 528734635),
          (this.Gl = -79577749),
          (this.Hh = 1541459225),
          (this.Hl = 327033209);
      }
      get() {
        const {
          Ah: e,
          Al: r,
          Bh: n,
          Bl: i,
          Ch: a,
          Cl: l,
          Dh: u,
          Dl: p,
          Eh: m,
          El: v,
          Fh: w,
          Fl: S,
          Gh: M,
          Gl: D,
          Hh: z,
          Hl: V,
        } = this;
        return [e, r, n, i, a, l, u, p, m, v, w, S, M, D, z, V];
      }
      set(e, r, n, i, a, l, u, p, m, v, w, S, M, D, z, V) {
        (this.Ah = e | 0),
          (this.Al = r | 0),
          (this.Bh = n | 0),
          (this.Bl = i | 0),
          (this.Ch = a | 0),
          (this.Cl = l | 0),
          (this.Dh = u | 0),
          (this.Dl = p | 0),
          (this.Eh = m | 0),
          (this.El = v | 0),
          (this.Fh = w | 0),
          (this.Fl = S | 0),
          (this.Gh = M | 0),
          (this.Gl = D | 0),
          (this.Hh = z | 0),
          (this.Hl = V | 0);
      }
      process(e, r) {
        for (let ae = 0; ae < 16; ae++, r += 4)
          (Ja[ae] = e.getUint32(r)), (eo[ae] = e.getUint32((r += 4)));
        for (let ae = 16; ae < 80; ae++) {
          const re = Ja[ae - 15] | 0,
            K = eo[ae - 15] | 0,
            fe = ft.rotrSH(re, K, 1) ^ ft.rotrSH(re, K, 8) ^ ft.shrSH(re, K, 7),
            ye = ft.rotrSL(re, K, 1) ^ ft.rotrSL(re, K, 8) ^ ft.shrSL(re, K, 7),
            pe = Ja[ae - 2] | 0,
            _e = eo[ae - 2] | 0,
            be =
              ft.rotrSH(pe, _e, 19) ^
              ft.rotrBH(pe, _e, 61) ^
              ft.shrSH(pe, _e, 6),
            Ce =
              ft.rotrSL(pe, _e, 19) ^
              ft.rotrBL(pe, _e, 61) ^
              ft.shrSL(pe, _e, 6),
            ke = ft.add4L(ye, Ce, eo[ae - 7], eo[ae - 16]),
            E = ft.add4H(ke, fe, be, Ja[ae - 7], Ja[ae - 16]);
          (Ja[ae] = E | 0), (eo[ae] = ke | 0);
        }
        let {
          Ah: n,
          Al: i,
          Bh: a,
          Bl: l,
          Ch: u,
          Cl: p,
          Dh: m,
          Dl: v,
          Eh: w,
          El: S,
          Fh: M,
          Fl: D,
          Gh: z,
          Gl: V,
          Hh: j,
          Hl: B,
        } = this;
        for (let ae = 0; ae < 80; ae++) {
          const re =
              ft.rotrSH(w, S, 14) ^ ft.rotrSH(w, S, 18) ^ ft.rotrBH(w, S, 41),
            K = ft.rotrSL(w, S, 14) ^ ft.rotrSL(w, S, 18) ^ ft.rotrBL(w, S, 41),
            fe = (w & M) ^ (~w & z),
            ye = (S & D) ^ (~S & V),
            pe = ft.add5L(B, K, ye, nW[ae], eo[ae]),
            _e = ft.add5H(pe, j, re, fe, rW[ae], Ja[ae]),
            be = pe | 0,
            Ce =
              ft.rotrSH(n, i, 28) ^ ft.rotrBH(n, i, 34) ^ ft.rotrBH(n, i, 39),
            ke =
              ft.rotrSL(n, i, 28) ^ ft.rotrBL(n, i, 34) ^ ft.rotrBL(n, i, 39),
            E = (n & a) ^ (n & u) ^ (a & u),
            P = (i & l) ^ (i & p) ^ (l & p);
          (j = z | 0),
            (B = V | 0),
            (z = M | 0),
            (V = D | 0),
            (M = w | 0),
            (D = S | 0),
            ({ h: w, l: S } = ft.add(m | 0, v | 0, _e | 0, be | 0)),
            (m = u | 0),
            (v = p | 0),
            (u = a | 0),
            (p = l | 0),
            (a = n | 0),
            (l = i | 0);
          const L = ft.add3L(be, ke, P);
          (n = ft.add3H(L, _e, Ce, E)), (i = L | 0);
        }
        ({ h: n, l: i } = ft.add(this.Ah | 0, this.Al | 0, n | 0, i | 0)),
          ({ h: a, l } = ft.add(this.Bh | 0, this.Bl | 0, a | 0, l | 0)),
          ({ h: u, l: p } = ft.add(this.Ch | 0, this.Cl | 0, u | 0, p | 0)),
          ({ h: m, l: v } = ft.add(this.Dh | 0, this.Dl | 0, m | 0, v | 0)),
          ({ h: w, l: S } = ft.add(this.Eh | 0, this.El | 0, w | 0, S | 0)),
          ({ h: M, l: D } = ft.add(this.Fh | 0, this.Fl | 0, M | 0, D | 0)),
          ({ h: z, l: V } = ft.add(this.Gh | 0, this.Gl | 0, z | 0, V | 0)),
          ({ h: j, l: B } = ft.add(this.Hh | 0, this.Hl | 0, j | 0, B | 0)),
          this.set(n, i, a, l, u, p, m, v, w, S, M, D, z, V, j, B);
      }
      roundClean() {
        Ja.fill(0), eo.fill(0);
      }
      destroy() {
        this.buffer.fill(0),
          this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
      }
    }
    class iW extends Tp {
      constructor() {
        super(),
          (this.Ah = -1942145080),
          (this.Al = 424955298),
          (this.Bh = 1944164710),
          (this.Bl = -1982016298),
          (this.Ch = 502970286),
          (this.Cl = 855612546),
          (this.Dh = 1738396948),
          (this.Dl = 1479516111),
          (this.Eh = 258812777),
          (this.El = 2077511080),
          (this.Fh = 2011393907),
          (this.Fl = 79989058),
          (this.Gh = 1067287976),
          (this.Gl = 1780299464),
          (this.Hh = 286451373),
          (this.Hl = -1848208735),
          (this.outputLen = 28);
      }
    }
    class sW extends Tp {
      constructor() {
        super(),
          (this.Ah = 573645204),
          (this.Al = -64227540),
          (this.Bh = -1621794909),
          (this.Bl = -934517566),
          (this.Ch = 596883563),
          (this.Cl = 1867755857),
          (this.Dh = -1774684391),
          (this.Dl = 1497426621),
          (this.Eh = -1775747358),
          (this.El = -1467023389),
          (this.Fh = -1101128155),
          (this.Fl = 1401305490),
          (this.Gh = 721525244),
          (this.Gl = 746961066),
          (this.Hh = 246885852),
          (this.Hl = -2117784414),
          (this.outputLen = 32);
      }
    }
    class aW extends Tp {
      constructor() {
        super(),
          (this.Ah = -876896931),
          (this.Al = -1056596264),
          (this.Bh = 1654270250),
          (this.Bl = 914150663),
          (this.Ch = -1856437926),
          (this.Cl = 812702999),
          (this.Dh = 355462360),
          (this.Dl = -150054599),
          (this.Eh = 1731405415),
          (this.El = -4191439),
          (this.Fh = -1900787065),
          (this.Fl = 1750603025),
          (this.Gh = -619958771),
          (this.Gl = 1694076839),
          (this.Hh = 1203062813),
          (this.Hl = -1090891868),
          (this.outputLen = 48);
      }
    }
    const oW = Vo(() => new Tp());
    Vo(() => new iW()), Vo(() => new sW()), Vo(() => new aW());
    function $S(t, e, r, n, i) {
      if (!["sha256", "sha512"].includes(i))
        throw new Error("Only sha256 and sha512 are supported");
      return (
        Kf(t), Kf(e), gy(i === "sha256" ? Ip : oW, t, e, { c: r, dkLen: n })
      );
    }
    const Vt = (t, e) => (t << e) | (t >>> (32 - e));
    function ZS(t, e, r, n, i, a) {
      let l = t[e++] ^ r[n++],
        u = t[e++] ^ r[n++],
        p = t[e++] ^ r[n++],
        m = t[e++] ^ r[n++],
        v = t[e++] ^ r[n++],
        w = t[e++] ^ r[n++],
        S = t[e++] ^ r[n++],
        M = t[e++] ^ r[n++],
        D = t[e++] ^ r[n++],
        z = t[e++] ^ r[n++],
        V = t[e++] ^ r[n++],
        j = t[e++] ^ r[n++],
        B = t[e++] ^ r[n++],
        ae = t[e++] ^ r[n++],
        re = t[e++] ^ r[n++],
        K = t[e++] ^ r[n++],
        fe = l,
        ye = u,
        pe = p,
        _e = m,
        be = v,
        Ce = w,
        ke = S,
        E = M,
        P = D,
        L = z,
        U = V,
        Y = j,
        ie = B,
        le = ae,
        J = re,
        T = K;
      for (let Z = 0; Z < 8; Z += 2)
        (be ^= Vt((fe + ie) | 0, 7)),
          (P ^= Vt((be + fe) | 0, 9)),
          (ie ^= Vt((P + be) | 0, 13)),
          (fe ^= Vt((ie + P) | 0, 18)),
          (L ^= Vt((Ce + ye) | 0, 7)),
          (le ^= Vt((L + Ce) | 0, 9)),
          (ye ^= Vt((le + L) | 0, 13)),
          (Ce ^= Vt((ye + le) | 0, 18)),
          (J ^= Vt((U + ke) | 0, 7)),
          (pe ^= Vt((J + U) | 0, 9)),
          (ke ^= Vt((pe + J) | 0, 13)),
          (U ^= Vt((ke + pe) | 0, 18)),
          (_e ^= Vt((T + Y) | 0, 7)),
          (E ^= Vt((_e + T) | 0, 9)),
          (Y ^= Vt((E + _e) | 0, 13)),
          (T ^= Vt((Y + E) | 0, 18)),
          (ye ^= Vt((fe + _e) | 0, 7)),
          (pe ^= Vt((ye + fe) | 0, 9)),
          (_e ^= Vt((pe + ye) | 0, 13)),
          (fe ^= Vt((_e + pe) | 0, 18)),
          (ke ^= Vt((Ce + be) | 0, 7)),
          (E ^= Vt((ke + Ce) | 0, 9)),
          (be ^= Vt((E + ke) | 0, 13)),
          (Ce ^= Vt((be + E) | 0, 18)),
          (Y ^= Vt((U + L) | 0, 7)),
          (P ^= Vt((Y + U) | 0, 9)),
          (L ^= Vt((P + Y) | 0, 13)),
          (U ^= Vt((L + P) | 0, 18)),
          (ie ^= Vt((T + J) | 0, 7)),
          (le ^= Vt((ie + T) | 0, 9)),
          (J ^= Vt((le + ie) | 0, 13)),
          (T ^= Vt((J + le) | 0, 18));
      (i[a++] = (l + fe) | 0),
        (i[a++] = (u + ye) | 0),
        (i[a++] = (p + pe) | 0),
        (i[a++] = (m + _e) | 0),
        (i[a++] = (v + be) | 0),
        (i[a++] = (w + Ce) | 0),
        (i[a++] = (S + ke) | 0),
        (i[a++] = (M + E) | 0),
        (i[a++] = (D + P) | 0),
        (i[a++] = (z + L) | 0),
        (i[a++] = (V + U) | 0),
        (i[a++] = (j + Y) | 0),
        (i[a++] = (B + ie) | 0),
        (i[a++] = (ae + le) | 0),
        (i[a++] = (re + J) | 0),
        (i[a++] = (K + T) | 0);
    }
    function my(t, e, r, n, i) {
      let a = n + 0,
        l = n + 16 * i;
      for (let u = 0; u < 16; u++) r[l + u] = t[e + (2 * i - 1) * 16 + u];
      for (let u = 0; u < i; u++, a += 16, e += 16)
        ZS(r, l, t, e, r, a), u > 0 && (l += 16), ZS(r, a, t, (e += 16), r, l);
    }
    function lW(t, e, r) {
      const n = EC({ dkLen: 32, asyncTick: 10, maxmem: 1073742848 }, r),
        {
          N: i,
          r: a,
          p: l,
          dkLen: u,
          asyncTick: p,
          maxmem: m,
          onProgress: v,
        } = n;
      if (
        (Rr.number(i),
        Rr.number(a),
        Rr.number(l),
        Rr.number(u),
        Rr.number(p),
        Rr.number(m),
        v !== void 0 && typeof v != "function")
      )
        throw new Error("progressCb should be function");
      const w = 128 * a,
        S = w / 4;
      if (i <= 1 || i & (i - 1) || i >= 2 ** (w / 8) || i > 4294967296)
        throw new Error(
          "Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32"
        );
      if (l < 0 || l > 137438953440 / w)
        throw new Error(
          "Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)"
        );
      if (u < 0 || u > 137438953440)
        throw new Error(
          "Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32"
        );
      const M = w * (i + l);
      if (M > m)
        throw new Error(
          `Scrypt: parameters too large, ${M} (128 * r * (N + p)) > ${m} (maxmem)`
        );
      const D = gy(Ip, t, e, { c: 1, dkLen: w * l }),
        z = Gf(D),
        V = Gf(new Uint8Array(w * i)),
        j = Gf(new Uint8Array(w));
      let B = () => {};
      if (v) {
        const ae = 2 * i * l,
          re = Math.max(Math.floor(ae / 1e4), 1);
        let K = 0;
        B = () => {
          K++, v && (!(K % re) || K === ae) && v(K / ae);
        };
      }
      return {
        N: i,
        r: a,
        p: l,
        dkLen: u,
        blockSize32: S,
        V,
        B32: z,
        B: D,
        tmp: j,
        blockMixCb: B,
        asyncTick: p,
      };
    }
    function cW(t, e, r, n, i) {
      const a = gy(Ip, t, r, { c: 1, dkLen: e });
      return r.fill(0), n.fill(0), i.fill(0), a;
    }
    function uW(t, e, r) {
      const {
        N: n,
        r: i,
        p: a,
        dkLen: l,
        blockSize32: u,
        V: p,
        B32: m,
        B: v,
        tmp: w,
        blockMixCb: S,
      } = lW(t, e, r);
      for (let M = 0; M < a; M++) {
        const D = u * M;
        for (let z = 0; z < u; z++) p[z] = m[D + z];
        for (let z = 0, V = 0; z < n - 1; z++) my(p, V, p, (V += u), i), S();
        my(p, (n - 1) * u, m, D, i), S();
        for (let z = 0; z < n; z++) {
          const V = m[D + u - 16] % n;
          for (let j = 0; j < u; j++) w[j] = m[D + j] ^ p[V * u + j];
          my(w, 0, m, D, i), S();
        }
      }
      return cW(t, l, v, p, w);
    }
    function QS(t, e, r, n, i, a, l) {
      return (
        Kf(t), Kf(e), uW(t, e, { N: r, r: i, p: n, dkLen: a, onProgress: l })
      );
    }
    const JS = BigInt(0),
      Pp = BigInt(1),
      hW = BigInt(2),
      Op = (t) => t instanceof Uint8Array,
      dW = Array.from({ length: 256 }, (t, e) =>
        e.toString(16).padStart(2, "0")
      );
    function kc(t) {
      if (!Op(t)) throw new Error("Uint8Array expected");
      let e = "";
      for (let r = 0; r < t.length; r++) e += dW[t[r]];
      return e;
    }
    function e2(t) {
      const e = t.toString(16);
      return e.length & 1 ? `0${e}` : e;
    }
    function vy(t) {
      if (typeof t != "string")
        throw new Error("hex string expected, got " + typeof t);
      return BigInt(t === "" ? "0" : `0x${t}`);
    }
    function _c(t) {
      if (typeof t != "string")
        throw new Error("hex string expected, got " + typeof t);
      const e = t.length;
      if (e % 2)
        throw new Error(
          "padded hex string expected, got unpadded hex of length " + e
        );
      const r = new Uint8Array(e / 2);
      for (let n = 0; n < r.length; n++) {
        const i = n * 2,
          a = t.slice(i, i + 2),
          l = Number.parseInt(a, 16);
        if (Number.isNaN(l) || l < 0) throw new Error("Invalid byte sequence");
        r[n] = l;
      }
      return r;
    }
    function il(t) {
      return vy(kc(t));
    }
    function yy(t) {
      if (!Op(t)) throw new Error("Uint8Array expected");
      return vy(kc(Uint8Array.from(t).reverse()));
    }
    function Ac(t, e) {
      return _c(t.toString(16).padStart(e * 2, "0"));
    }
    function t2(t, e) {
      return Ac(t, e).reverse();
    }
    function fW(t) {
      return _c(e2(t));
    }
    function xi(t, e, r) {
      let n;
      if (typeof e == "string")
        try {
          n = _c(e);
        } catch (a) {
          throw new Error(
            `${t} must be valid hex string, got "${e}". Cause: ${a}`
          );
        }
      else if (Op(e)) n = Uint8Array.from(e);
      else throw new Error(`${t} must be hex string or Uint8Array`);
      const i = n.length;
      if (typeof r == "number" && i !== r)
        throw new Error(`${t} expected ${r} bytes, got ${i}`);
      return n;
    }
    function _h(...t) {
      const e = new Uint8Array(t.reduce((n, i) => n + i.length, 0));
      let r = 0;
      return (
        t.forEach((n) => {
          if (!Op(n)) throw new Error("Uint8Array expected");
          e.set(n, r), (r += n.length);
        }),
        e
      );
    }
    function pW(t, e) {
      if (t.length !== e.length) return !1;
      for (let r = 0; r < t.length; r++) if (t[r] !== e[r]) return !1;
      return !0;
    }
    function gW(t) {
      if (typeof t != "string")
        throw new Error(`utf8ToBytes expected string, got ${typeof t}`);
      return new Uint8Array(new TextEncoder().encode(t));
    }
    function mW(t) {
      let e;
      for (e = 0; t > JS; t >>= Pp, e += 1);
      return e;
    }
    function vW(t, e) {
      return (t >> BigInt(e)) & Pp;
    }
    const yW = (t, e, r) => t | ((r ? Pp : JS) << BigInt(e)),
      by = (t) => (hW << BigInt(t - 1)) - Pp,
      xy = (t) => new Uint8Array(t),
      r2 = (t) => Uint8Array.from(t);
    function n2(t, e, r) {
      if (typeof t != "number" || t < 2)
        throw new Error("hashLen must be a number");
      if (typeof e != "number" || e < 2)
        throw new Error("qByteLen must be a number");
      if (typeof r != "function") throw new Error("hmacFn must be a function");
      let n = xy(t),
        i = xy(t),
        a = 0;
      const l = () => {
          n.fill(1), i.fill(0), (a = 0);
        },
        u = (...v) => r(i, n, ...v),
        p = (v = xy()) => {
          (i = u(r2([0]), v)),
            (n = u()),
            v.length !== 0 && ((i = u(r2([1]), v)), (n = u()));
        },
        m = () => {
          if (a++ >= 1e3) throw new Error("drbg: tried 1000 values");
          let v = 0;
          const w = [];
          for (; v < e; ) {
            n = u();
            const S = n.slice();
            w.push(S), (v += n.length);
          }
          return _h(...w);
        };
      return (v, w) => {
        l(), p(v);
        let S;
        for (; !(S = w(m())); ) p();
        return l(), S;
      };
    }
    const bW = {
      bigint: (t) => typeof t == "bigint",
      function: (t) => typeof t == "function",
      boolean: (t) => typeof t == "boolean",
      string: (t) => typeof t == "string",
      isSafeInteger: (t) => Number.isSafeInteger(t),
      array: (t) => Array.isArray(t),
      field: (t, e) => e.Fp.isValid(t),
      hash: (t) => typeof t == "function" && Number.isSafeInteger(t.outputLen),
    };
    function Ah(t, e, r = {}) {
      const n = (i, a, l) => {
        const u = bW[a];
        if (typeof u != "function")
          throw new Error(`Invalid validator "${a}", expected function`);
        const p = t[i];
        if (!(l && p === void 0) && !u(p, t))
          throw new Error(
            `Invalid param ${String(i)}=${p} (${typeof p}), expected ${a}`
          );
      };
      for (const [i, a] of Object.entries(e)) n(i, a, !1);
      for (const [i, a] of Object.entries(r)) n(i, a, !0);
      return t;
    }
    const xW = Object.freeze(
        Object.defineProperty(
          {
            __proto__: null,
            bitGet: vW,
            bitLen: mW,
            bitMask: by,
            bitSet: yW,
            bytesToHex: kc,
            bytesToNumberBE: il,
            bytesToNumberLE: yy,
            concatBytes: _h,
            createHmacDrbg: n2,
            ensureBytes: xi,
            equalBytes: pW,
            hexToBytes: _c,
            hexToNumber: vy,
            numberToBytesBE: Ac,
            numberToBytesLE: t2,
            numberToHexUnpadded: e2,
            numberToVarBytesBE: fW,
            utf8ToBytes: gW,
            validateObject: Ah,
          },
          Symbol.toStringTag,
          { value: "Module" }
        )
      ),
      hn = BigInt(0),
      Qr = BigInt(1),
      sl = BigInt(2),
      wW = BigInt(3),
      wy = BigInt(4),
      i2 = BigInt(5),
      s2 = BigInt(8);
    BigInt(9), BigInt(16);
    function qn(t, e) {
      const r = t % e;
      return r >= hn ? r : e + r;
    }
    function kW(t, e, r) {
      if (r <= hn || e < hn) throw new Error("Expected power/modulo > 0");
      if (r === Qr) return hn;
      let n = Qr;
      for (; e > hn; )
        e & Qr && (n = (n * t) % r), (t = (t * t) % r), (e >>= Qr);
      return n;
    }
    function wi(t, e, r) {
      let n = t;
      for (; e-- > hn; ) (n *= n), (n %= r);
      return n;
    }
    function ky(t, e) {
      if (t === hn || e <= hn)
        throw new Error(
          `invert: expected positive integers, got n=${t} mod=${e}`
        );
      let r = qn(t, e),
        n = e,
        i = hn,
        a = Qr;
      for (; r !== hn; ) {
        const l = n / r,
          u = n % r,
          p = i - a * l;
        (n = r), (r = u), (i = a), (a = p);
      }
      if (n !== Qr) throw new Error("invert: does not exist");
      return qn(i, e);
    }
    function _W(t) {
      const e = (t - Qr) / sl;
      let r, n, i;
      for (r = t - Qr, n = 0; r % sl === hn; r /= sl, n++);
      for (i = sl; i < t && kW(i, e, t) !== t - Qr; i++);
      if (n === 1) {
        const l = (t + Qr) / wy;
        return function (u, p) {
          const m = u.pow(p, l);
          if (!u.eql(u.sqr(m), p)) throw new Error("Cannot find square root");
          return m;
        };
      }
      const a = (r + Qr) / sl;
      return function (l, u) {
        if (l.pow(u, e) === l.neg(l.ONE))
          throw new Error("Cannot find square root");
        let p = n,
          m = l.pow(l.mul(l.ONE, i), r),
          v = l.pow(u, a),
          w = l.pow(u, r);
        for (; !l.eql(w, l.ONE); ) {
          if (l.eql(w, l.ZERO)) return l.ZERO;
          let S = 1;
          for (let D = l.sqr(w); S < p && !l.eql(D, l.ONE); S++) D = l.sqr(D);
          const M = l.pow(m, Qr << BigInt(p - S - 1));
          (m = l.sqr(M)), (v = l.mul(v, M)), (w = l.mul(w, m)), (p = S);
        }
        return v;
      };
    }
    function AW(t) {
      if (t % wy === wW) {
        const e = (t + Qr) / wy;
        return function (r, n) {
          const i = r.pow(n, e);
          if (!r.eql(r.sqr(i), n)) throw new Error("Cannot find square root");
          return i;
        };
      }
      if (t % s2 === i2) {
        const e = (t - i2) / s2;
        return function (r, n) {
          const i = r.mul(n, sl),
            a = r.pow(i, e),
            l = r.mul(n, a),
            u = r.mul(r.mul(l, sl), a),
            p = r.mul(l, r.sub(u, r.ONE));
          if (!r.eql(r.sqr(p), n)) throw new Error("Cannot find square root");
          return p;
        };
      }
      return _W(t);
    }
    const CW = [
      "create",
      "isValid",
      "is0",
      "neg",
      "inv",
      "sqrt",
      "sqr",
      "eql",
      "add",
      "sub",
      "mul",
      "pow",
      "div",
      "addN",
      "subN",
      "mulN",
      "sqrN",
    ];
    function SW(t) {
      const e = {
          ORDER: "bigint",
          MASK: "bigint",
          BYTES: "isSafeInteger",
          BITS: "isSafeInteger",
        },
        r = CW.reduce((n, i) => ((n[i] = "function"), n), e);
      return Ah(t, r);
    }
    function EW(t, e, r) {
      if (r < hn) throw new Error("Expected power > 0");
      if (r === hn) return t.ONE;
      if (r === Qr) return e;
      let n = t.ONE,
        i = e;
      for (; r > hn; ) r & Qr && (n = t.mul(n, i)), (i = t.sqr(i)), (r >>= Qr);
      return n;
    }
    function IW(t, e) {
      const r = new Array(e.length),
        n = e.reduce(
          (a, l, u) => (t.is0(l) ? a : ((r[u] = a), t.mul(a, l))),
          t.ONE
        ),
        i = t.inv(n);
      return (
        e.reduceRight(
          (a, l, u) => (t.is0(l) ? a : ((r[u] = t.mul(a, r[u])), t.mul(a, l))),
          i
        ),
        r
      );
    }
    function _y(t, e) {
      const r = e !== void 0 ? e : t.toString(2).length,
        n = Math.ceil(r / 8);
      return { nBitLength: r, nByteLength: n };
    }
    function TW(t, e, r = !1, n = {}) {
      if (t <= hn) throw new Error(`Expected Fp ORDER > 0, got ${t}`);
      const { nBitLength: i, nByteLength: a } = _y(t, e);
      if (a > 2048)
        throw new Error("Field lengths over 2048 bytes are not supported");
      const l = AW(t),
        u = Object.freeze({
          ORDER: t,
          BITS: i,
          BYTES: a,
          MASK: by(i),
          ZERO: hn,
          ONE: Qr,
          create: (p) => qn(p, t),
          isValid: (p) => {
            if (typeof p != "bigint")
              throw new Error(
                `Invalid field element: expected bigint, got ${typeof p}`
              );
            return hn <= p && p < t;
          },
          is0: (p) => p === hn,
          isOdd: (p) => (p & Qr) === Qr,
          neg: (p) => qn(-p, t),
          eql: (p, m) => p === m,
          sqr: (p) => qn(p * p, t),
          add: (p, m) => qn(p + m, t),
          sub: (p, m) => qn(p - m, t),
          mul: (p, m) => qn(p * m, t),
          pow: (p, m) => EW(u, p, m),
          div: (p, m) => qn(p * ky(m, t), t),
          sqrN: (p) => p * p,
          addN: (p, m) => p + m,
          subN: (p, m) => p - m,
          mulN: (p, m) => p * m,
          inv: (p) => ky(p, t),
          sqrt: n.sqrt || ((p) => l(u, p)),
          invertBatch: (p) => IW(u, p),
          cmov: (p, m, v) => (v ? m : p),
          toBytes: (p) => (r ? t2(p, a) : Ac(p, a)),
          fromBytes: (p) => {
            if (p.length !== a)
              throw new Error(`Fp.fromBytes: expected ${a}, got ${p.length}`);
            return r ? yy(p) : il(p);
          },
        });
      return Object.freeze(u);
    }
    function PW(t, e, r = !1) {
      t = xi("privateHash", t);
      const n = t.length,
        i = _y(e).nByteLength + 8;
      if (i < 24 || n < i || n > 1024)
        throw new Error(
          `hashToPrivateScalar: expected ${i}-1024 bytes of input, got ${n}`
        );
      const a = r ? yy(t) : il(t);
      return qn(a, e - Qr) + Qr;
    }
    const OW = BigInt(0),
      Ay = BigInt(1);
    function LW(t, e) {
      const r = (i, a) => {
          const l = a.negate();
          return i ? l : a;
        },
        n = (i) => {
          const a = Math.ceil(e / i) + 1,
            l = 2 ** (i - 1);
          return { windows: a, windowSize: l };
        };
      return {
        constTimeNegate: r,
        unsafeLadder(i, a) {
          let l = t.ZERO,
            u = i;
          for (; a > OW; )
            a & Ay && (l = l.add(u)), (u = u.double()), (a >>= Ay);
          return l;
        },
        precomputeWindow(i, a) {
          const { windows: l, windowSize: u } = n(a),
            p = [];
          let m = i,
            v = m;
          for (let w = 0; w < l; w++) {
            (v = m), p.push(v);
            for (let S = 1; S < u; S++) (v = v.add(m)), p.push(v);
            m = v.double();
          }
          return p;
        },
        wNAF(i, a, l) {
          const { windows: u, windowSize: p } = n(i);
          let m = t.ZERO,
            v = t.BASE;
          const w = BigInt(2 ** i - 1),
            S = 2 ** i,
            M = BigInt(i);
          for (let D = 0; D < u; D++) {
            const z = D * p;
            let V = Number(l & w);
            (l >>= M), V > p && ((V -= S), (l += Ay));
            const j = z,
              B = z + Math.abs(V) - 1,
              ae = D % 2 !== 0,
              re = V < 0;
            V === 0 ? (v = v.add(r(ae, a[j]))) : (m = m.add(r(re, a[B])));
          }
          return { p: m, f: v };
        },
        wNAFCached(i, a, l, u) {
          const p = i._WINDOW_SIZE || 1;
          let m = a.get(i);
          return (
            m || ((m = this.precomputeWindow(i, p)), p !== 1 && a.set(i, u(m))),
            this.wNAF(p, m, l)
          );
        },
      };
    }
    function a2(t) {
      return (
        SW(t.Fp),
        Ah(
          t,
          { n: "bigint", h: "bigint", Gx: "field", Gy: "field" },
          { nBitLength: "isSafeInteger", nByteLength: "isSafeInteger" }
        ),
        Object.freeze({ ..._y(t.n, t.nBitLength), ...t, p: t.Fp.ORDER })
      );
    }
    function MW(t) {
      const e = a2(t);
      Ah(
        e,
        { a: "field", b: "field" },
        {
          allowedPrivateKeyLengths: "array",
          wrapPrivateKey: "boolean",
          isTorsionFree: "function",
          clearCofactor: "function",
          allowInfinityPoint: "boolean",
          fromBytes: "function",
          toBytes: "function",
        }
      );
      const { endo: r, Fp: n, a: i } = e;
      if (r) {
        if (!n.eql(i, n.ZERO))
          throw new Error(
            "Endomorphism can only be defined for Koblitz curves that have a=0"
          );
        if (
          typeof r != "object" ||
          typeof r.beta != "bigint" ||
          typeof r.splitScalar != "function"
        )
          throw new Error(
            "Expected endomorphism with beta: bigint and splitScalar: function"
          );
      }
      return Object.freeze({ ...e });
    }
    const { bytesToNumberBE: RW, hexToBytes: NW } = xW,
      al = {
        Err: class extends Error {
          constructor(t = "") {
            super(t);
          }
        },
        _parseInt(t) {
          const { Err: e } = al;
          if (t.length < 2 || t[0] !== 2)
            throw new e("Invalid signature integer tag");
          const r = t[1],
            n = t.subarray(2, r + 2);
          if (!r || n.length !== r)
            throw new e("Invalid signature integer: wrong length");
          if (n[0] & 128) throw new e("Invalid signature integer: negative");
          if (n[0] === 0 && !(n[1] & 128))
            throw new e("Invalid signature integer: unnecessary leading zero");
          return { d: RW(n), l: t.subarray(r + 2) };
        },
        toSig(t) {
          const { Err: e } = al,
            r = typeof t == "string" ? NW(t) : t;
          if (!(r instanceof Uint8Array)) throw new Error("ui8a expected");
          let n = r.length;
          if (n < 2 || r[0] != 48) throw new e("Invalid signature tag");
          if (r[1] !== n - 2)
            throw new e("Invalid signature: incorrect length");
          const { d: i, l: a } = al._parseInt(r.subarray(2)),
            { d: l, l: u } = al._parseInt(a);
          if (u.length)
            throw new e("Invalid signature: left bytes after parsing");
          return { r: i, s: l };
        },
        hexFromSig(t) {
          const e = (m) => (Number.parseInt(m[0], 16) & 8 ? "00" + m : m),
            r = (m) => {
              const v = m.toString(16);
              return v.length & 1 ? `0${v}` : v;
            },
            n = e(r(t.s)),
            i = e(r(t.r)),
            a = n.length / 2,
            l = i.length / 2,
            u = r(a),
            p = r(l);
          return `30${r(l + a + 4)}02${p}${i}02${u}${n}`;
        },
      },
      ia = BigInt(0),
      ki = BigInt(1);
    BigInt(2);
    const o2 = BigInt(3);
    BigInt(4);
    function BW(t) {
      const e = MW(t),
        { Fp: r } = e,
        n =
          e.toBytes ||
          ((D, z, V) => {
            const j = z.toAffine();
            return _h(Uint8Array.from([4]), r.toBytes(j.x), r.toBytes(j.y));
          }),
        i =
          e.fromBytes ||
          ((D) => {
            const z = D.subarray(1),
              V = r.fromBytes(z.subarray(0, r.BYTES)),
              j = r.fromBytes(z.subarray(r.BYTES, 2 * r.BYTES));
            return { x: V, y: j };
          });
      function a(D) {
        const { a: z, b: V } = e,
          j = r.sqr(D),
          B = r.mul(j, D);
        return r.add(r.add(B, r.mul(D, z)), V);
      }
      if (!r.eql(r.sqr(e.Gy), a(e.Gx)))
        throw new Error("bad generator point: equation left != right");
      function l(D) {
        return typeof D == "bigint" && ia < D && D < e.n;
      }
      function u(D) {
        if (!l(D))
          throw new Error("Expected valid bigint: 0 < bigint < curve.n");
      }
      function p(D) {
        const {
          allowedPrivateKeyLengths: z,
          nByteLength: V,
          wrapPrivateKey: j,
          n: B,
        } = e;
        if (z && typeof D != "bigint") {
          if (
            (D instanceof Uint8Array && (D = kc(D)),
            typeof D != "string" || !z.includes(D.length))
          )
            throw new Error("Invalid key");
          D = D.padStart(V * 2, "0");
        }
        let ae;
        try {
          ae = typeof D == "bigint" ? D : il(xi("private key", D, V));
        } catch {
          throw new Error(
            `private key must be ${V} bytes, hex or bigint, not ${typeof D}`
          );
        }
        return j && (ae = qn(ae, B)), u(ae), ae;
      }
      const m = new Map();
      function v(D) {
        if (!(D instanceof w)) throw new Error("ProjectivePoint expected");
      }
      class w {
        constructor(z, V, j) {
          if (
            ((this.px = z),
            (this.py = V),
            (this.pz = j),
            z == null || !r.isValid(z))
          )
            throw new Error("x required");
          if (V == null || !r.isValid(V)) throw new Error("y required");
          if (j == null || !r.isValid(j)) throw new Error("z required");
        }
        static fromAffine(z) {
          const { x: V, y: j } = z || {};
          if (!z || !r.isValid(V) || !r.isValid(j))
            throw new Error("invalid affine point");
          if (z instanceof w) throw new Error("projective point not allowed");
          const B = (ae) => r.eql(ae, r.ZERO);
          return B(V) && B(j) ? w.ZERO : new w(V, j, r.ONE);
        }
        get x() {
          return this.toAffine().x;
        }
        get y() {
          return this.toAffine().y;
        }
        static normalizeZ(z) {
          const V = r.invertBatch(z.map((j) => j.pz));
          return z.map((j, B) => j.toAffine(V[B])).map(w.fromAffine);
        }
        static fromHex(z) {
          const V = w.fromAffine(i(xi("pointHex", z)));
          return V.assertValidity(), V;
        }
        static fromPrivateKey(z) {
          return w.BASE.multiply(p(z));
        }
        _setWindowSize(z) {
          (this._WINDOW_SIZE = z), m.delete(this);
        }
        assertValidity() {
          if (this.is0()) {
            if (e.allowInfinityPoint) return;
            throw new Error("bad point: ZERO");
          }
          const { x: z, y: V } = this.toAffine();
          if (!r.isValid(z) || !r.isValid(V))
            throw new Error("bad point: x or y not FE");
          const j = r.sqr(V),
            B = a(z);
          if (!r.eql(j, B))
            throw new Error("bad point: equation left != right");
          if (!this.isTorsionFree())
            throw new Error("bad point: not in prime-order subgroup");
        }
        hasEvenY() {
          const { y: z } = this.toAffine();
          if (r.isOdd) return !r.isOdd(z);
          throw new Error("Field doesn't support isOdd");
        }
        equals(z) {
          v(z);
          const { px: V, py: j, pz: B } = this,
            { px: ae, py: re, pz: K } = z,
            fe = r.eql(r.mul(V, K), r.mul(ae, B)),
            ye = r.eql(r.mul(j, K), r.mul(re, B));
          return fe && ye;
        }
        negate() {
          return new w(this.px, r.neg(this.py), this.pz);
        }
        double() {
          const { a: z, b: V } = e,
            j = r.mul(V, o2),
            { px: B, py: ae, pz: re } = this;
          let K = r.ZERO,
            fe = r.ZERO,
            ye = r.ZERO,
            pe = r.mul(B, B),
            _e = r.mul(ae, ae),
            be = r.mul(re, re),
            Ce = r.mul(B, ae);
          return (
            (Ce = r.add(Ce, Ce)),
            (ye = r.mul(B, re)),
            (ye = r.add(ye, ye)),
            (K = r.mul(z, ye)),
            (fe = r.mul(j, be)),
            (fe = r.add(K, fe)),
            (K = r.sub(_e, fe)),
            (fe = r.add(_e, fe)),
            (fe = r.mul(K, fe)),
            (K = r.mul(Ce, K)),
            (ye = r.mul(j, ye)),
            (be = r.mul(z, be)),
            (Ce = r.sub(pe, be)),
            (Ce = r.mul(z, Ce)),
            (Ce = r.add(Ce, ye)),
            (ye = r.add(pe, pe)),
            (pe = r.add(ye, pe)),
            (pe = r.add(pe, be)),
            (pe = r.mul(pe, Ce)),
            (fe = r.add(fe, pe)),
            (be = r.mul(ae, re)),
            (be = r.add(be, be)),
            (pe = r.mul(be, Ce)),
            (K = r.sub(K, pe)),
            (ye = r.mul(be, _e)),
            (ye = r.add(ye, ye)),
            (ye = r.add(ye, ye)),
            new w(K, fe, ye)
          );
        }
        add(z) {
          v(z);
          const { px: V, py: j, pz: B } = this,
            { px: ae, py: re, pz: K } = z;
          let fe = r.ZERO,
            ye = r.ZERO,
            pe = r.ZERO;
          const _e = e.a,
            be = r.mul(e.b, o2);
          let Ce = r.mul(V, ae),
            ke = r.mul(j, re),
            E = r.mul(B, K),
            P = r.add(V, j),
            L = r.add(ae, re);
          (P = r.mul(P, L)),
            (L = r.add(Ce, ke)),
            (P = r.sub(P, L)),
            (L = r.add(V, B));
          let U = r.add(ae, K);
          return (
            (L = r.mul(L, U)),
            (U = r.add(Ce, E)),
            (L = r.sub(L, U)),
            (U = r.add(j, B)),
            (fe = r.add(re, K)),
            (U = r.mul(U, fe)),
            (fe = r.add(ke, E)),
            (U = r.sub(U, fe)),
            (pe = r.mul(_e, L)),
            (fe = r.mul(be, E)),
            (pe = r.add(fe, pe)),
            (fe = r.sub(ke, pe)),
            (pe = r.add(ke, pe)),
            (ye = r.mul(fe, pe)),
            (ke = r.add(Ce, Ce)),
            (ke = r.add(ke, Ce)),
            (E = r.mul(_e, E)),
            (L = r.mul(be, L)),
            (ke = r.add(ke, E)),
            (E = r.sub(Ce, E)),
            (E = r.mul(_e, E)),
            (L = r.add(L, E)),
            (Ce = r.mul(ke, L)),
            (ye = r.add(ye, Ce)),
            (Ce = r.mul(U, L)),
            (fe = r.mul(P, fe)),
            (fe = r.sub(fe, Ce)),
            (Ce = r.mul(P, ke)),
            (pe = r.mul(U, pe)),
            (pe = r.add(pe, Ce)),
            new w(fe, ye, pe)
          );
        }
        subtract(z) {
          return this.add(z.negate());
        }
        is0() {
          return this.equals(w.ZERO);
        }
        wNAF(z) {
          return M.wNAFCached(this, m, z, (V) => {
            const j = r.invertBatch(V.map((B) => B.pz));
            return V.map((B, ae) => B.toAffine(j[ae])).map(w.fromAffine);
          });
        }
        multiplyUnsafe(z) {
          const V = w.ZERO;
          if (z === ia) return V;
          if ((u(z), z === ki)) return this;
          const { endo: j } = e;
          if (!j) return M.unsafeLadder(this, z);
          let { k1neg: B, k1: ae, k2neg: re, k2: K } = j.splitScalar(z),
            fe = V,
            ye = V,
            pe = this;
          for (; ae > ia || K > ia; )
            ae & ki && (fe = fe.add(pe)),
              K & ki && (ye = ye.add(pe)),
              (pe = pe.double()),
              (ae >>= ki),
              (K >>= ki);
          return (
            B && (fe = fe.negate()),
            re && (ye = ye.negate()),
            (ye = new w(r.mul(ye.px, j.beta), ye.py, ye.pz)),
            fe.add(ye)
          );
        }
        multiply(z) {
          u(z);
          let V = z,
            j,
            B;
          const { endo: ae } = e;
          if (ae) {
            const { k1neg: re, k1: K, k2neg: fe, k2: ye } = ae.splitScalar(V);
            let { p: pe, f: _e } = this.wNAF(K),
              { p: be, f: Ce } = this.wNAF(ye);
            (pe = M.constTimeNegate(re, pe)),
              (be = M.constTimeNegate(fe, be)),
              (be = new w(r.mul(be.px, ae.beta), be.py, be.pz)),
              (j = pe.add(be)),
              (B = _e.add(Ce));
          } else {
            const { p: re, f: K } = this.wNAF(V);
            (j = re), (B = K);
          }
          return w.normalizeZ([j, B])[0];
        }
        multiplyAndAddUnsafe(z, V, j) {
          const B = w.BASE,
            ae = (K, fe) =>
              fe === ia || fe === ki || !K.equals(B)
                ? K.multiplyUnsafe(fe)
                : K.multiply(fe),
            re = ae(this, V).add(ae(z, j));
          return re.is0() ? void 0 : re;
        }
        toAffine(z) {
          const { px: V, py: j, pz: B } = this,
            ae = this.is0();
          z == null && (z = ae ? r.ONE : r.inv(B));
          const re = r.mul(V, z),
            K = r.mul(j, z),
            fe = r.mul(B, z);
          if (ae) return { x: r.ZERO, y: r.ZERO };
          if (!r.eql(fe, r.ONE)) throw new Error("invZ was invalid");
          return { x: re, y: K };
        }
        isTorsionFree() {
          const { h: z, isTorsionFree: V } = e;
          if (z === ki) return !0;
          if (V) return V(w, this);
          throw new Error(
            "isTorsionFree() has not been declared for the elliptic curve"
          );
        }
        clearCofactor() {
          const { h: z, clearCofactor: V } = e;
          return z === ki ? this : V ? V(w, this) : this.multiplyUnsafe(e.h);
        }
        toRawBytes(z = !0) {
          return this.assertValidity(), n(w, this, z);
        }
        toHex(z = !0) {
          return kc(this.toRawBytes(z));
        }
      }
      (w.BASE = new w(e.Gx, e.Gy, r.ONE)),
        (w.ZERO = new w(r.ZERO, r.ONE, r.ZERO));
      const S = e.nBitLength,
        M = LW(w, e.endo ? Math.ceil(S / 2) : S);
      return {
        CURVE: e,
        ProjectivePoint: w,
        normPrivateKeyToScalar: p,
        weierstrassEquation: a,
        isWithinCurveOrder: l,
      };
    }
    function FW(t) {
      const e = a2(t);
      return (
        Ah(
          e,
          { hash: "hash", hmac: "function", randomBytes: "function" },
          { bits2int: "function", bits2int_modN: "function", lowS: "boolean" }
        ),
        Object.freeze({ lowS: !0, ...e })
      );
    }
    function DW(t) {
      const e = FW(t),
        { Fp: r, n } = e,
        i = r.BYTES + 1,
        a = 2 * r.BYTES + 1;
      function l(L) {
        return ia < L && L < r.ORDER;
      }
      function u(L) {
        return qn(L, n);
      }
      function p(L) {
        return ky(L, n);
      }
      const {
          ProjectivePoint: m,
          normPrivateKeyToScalar: v,
          weierstrassEquation: w,
          isWithinCurveOrder: S,
        } = BW({
          ...e,
          toBytes(L, U, Y) {
            const ie = U.toAffine(),
              le = r.toBytes(ie.x),
              J = _h;
            return Y
              ? J(Uint8Array.from([U.hasEvenY() ? 2 : 3]), le)
              : J(Uint8Array.from([4]), le, r.toBytes(ie.y));
          },
          fromBytes(L) {
            const U = L.length,
              Y = L[0],
              ie = L.subarray(1);
            if (U === i && (Y === 2 || Y === 3)) {
              const le = il(ie);
              if (!l(le)) throw new Error("Point is not on curve");
              const J = w(le);
              let T = r.sqrt(J);
              const Z = (T & ki) === ki;
              return ((Y & 1) === 1) !== Z && (T = r.neg(T)), { x: le, y: T };
            } else if (U === a && Y === 4) {
              const le = r.fromBytes(ie.subarray(0, r.BYTES)),
                J = r.fromBytes(ie.subarray(r.BYTES, 2 * r.BYTES));
              return { x: le, y: J };
            } else
              throw new Error(
                `Point of length ${U} was invalid. Expected ${i} compressed bytes or ${a} uncompressed bytes`
              );
          },
        }),
        M = (L) => kc(Ac(L, e.nByteLength));
      function D(L) {
        const U = n >> ki;
        return L > U;
      }
      function z(L) {
        return D(L) ? u(-L) : L;
      }
      const V = (L, U, Y) => il(L.slice(U, Y));
      class j {
        constructor(U, Y, ie) {
          (this.r = U),
            (this.s = Y),
            (this.recovery = ie),
            this.assertValidity();
        }
        static fromCompact(U) {
          const Y = e.nByteLength;
          return (
            (U = xi("compactSignature", U, Y * 2)),
            new j(V(U, 0, Y), V(U, Y, 2 * Y))
          );
        }
        static fromDER(U) {
          const { r: Y, s: ie } = al.toSig(xi("DER", U));
          return new j(Y, ie);
        }
        assertValidity() {
          if (!S(this.r)) throw new Error("r must be 0 < r < CURVE.n");
          if (!S(this.s)) throw new Error("s must be 0 < s < CURVE.n");
        }
        addRecoveryBit(U) {
          return new j(this.r, this.s, U);
        }
        recoverPublicKey(U) {
          const { r: Y, s: ie, recovery: le } = this,
            J = ye(xi("msgHash", U));
          if (le == null || ![0, 1, 2, 3].includes(le))
            throw new Error("recovery id invalid");
          const T = le === 2 || le === 3 ? Y + e.n : Y;
          if (T >= r.ORDER) throw new Error("recovery id 2 or 3 invalid");
          const Z = le & 1 ? "03" : "02",
            Oe = m.fromHex(Z + M(T)),
            Me = p(T),
            X = u(-J * Me),
            Ee = u(ie * Me),
            me = m.BASE.multiplyAndAddUnsafe(Oe, X, Ee);
          if (!me) throw new Error("point at infinify");
          return me.assertValidity(), me;
        }
        hasHighS() {
          return D(this.s);
        }
        normalizeS() {
          return this.hasHighS()
            ? new j(this.r, u(-this.s), this.recovery)
            : this;
        }
        toDERRawBytes() {
          return _c(this.toDERHex());
        }
        toDERHex() {
          return al.hexFromSig({ r: this.r, s: this.s });
        }
        toCompactRawBytes() {
          return _c(this.toCompactHex());
        }
        toCompactHex() {
          return M(this.r) + M(this.s);
        }
      }
      const B = {
        isValidPrivateKey(L) {
          try {
            return v(L), !0;
          } catch {
            return !1;
          }
        },
        normPrivateKeyToScalar: v,
        randomPrivateKey: () => {
          const L = e.randomBytes(r.BYTES + 8),
            U = PW(L, n);
          return Ac(U, e.nByteLength);
        },
        precompute(L = 8, U = m.BASE) {
          return U._setWindowSize(L), U.multiply(BigInt(3)), U;
        },
      };
      function ae(L, U = !0) {
        return m.fromPrivateKey(L).toRawBytes(U);
      }
      function re(L) {
        const U = L instanceof Uint8Array,
          Y = typeof L == "string",
          ie = (U || Y) && L.length;
        return U
          ? ie === i || ie === a
          : Y
          ? ie === 2 * i || ie === 2 * a
          : L instanceof m;
      }
      function K(L, U, Y = !0) {
        if (re(L)) throw new Error("first arg must be private key");
        if (!re(U)) throw new Error("second arg must be public key");
        return m.fromHex(U).multiply(v(L)).toRawBytes(Y);
      }
      const fe =
          e.bits2int ||
          function (L) {
            const U = il(L),
              Y = L.length * 8 - e.nBitLength;
            return Y > 0 ? U >> BigInt(Y) : U;
          },
        ye =
          e.bits2int_modN ||
          function (L) {
            return u(fe(L));
          },
        pe = by(e.nBitLength);
      function _e(L) {
        if (typeof L != "bigint") throw new Error("bigint expected");
        if (!(ia <= L && L < pe))
          throw new Error(`bigint expected < 2^${e.nBitLength}`);
        return Ac(L, e.nByteLength);
      }
      function be(L, U, Y = Ce) {
        if (["recovered", "canonical"].some((Se) => Se in Y))
          throw new Error("sign() legacy options not supported");
        const { hash: ie, randomBytes: le } = e;
        let { lowS: J, prehash: T, extraEntropy: Z } = Y;
        J == null && (J = !0),
          (L = xi("msgHash", L)),
          T && (L = xi("prehashed msgHash", ie(L)));
        const Oe = ye(L),
          Me = v(U),
          X = [_e(Me), _e(Oe)];
        if (Z != null) {
          const Se = Z === !0 ? le(r.BYTES) : Z;
          X.push(xi("extraEntropy", Se, r.BYTES));
        }
        const Ee = _h(...X),
          me = Oe;
        function xe(Se) {
          const Ie = fe(Se);
          if (!S(Ie)) return;
          const Ne = p(Ie),
            oe = m.BASE.multiply(Ie).toAffine(),
            W = u(oe.x);
          if (W === ia) return;
          const Q = u(Ne * u(me + W * Me));
          if (Q === ia) return;
          let ge = (oe.x === W ? 0 : 2) | Number(oe.y & ki),
            I = Q;
          return J && D(Q) && ((I = z(Q)), (ge ^= 1)), new j(W, I, ge);
        }
        return { seed: Ee, k2sig: xe };
      }
      const Ce = { lowS: e.lowS, prehash: !1 },
        ke = { lowS: e.lowS, prehash: !1 };
      function E(L, U, Y = Ce) {
        const { seed: ie, k2sig: le } = be(L, U, Y),
          J = e;
        return n2(J.hash.outputLen, J.nByteLength, J.hmac)(ie, le);
      }
      m.BASE._setWindowSize(8);
      function P(L, U, Y, ie = ke) {
        var Ne;
        const le = L;
        if (((U = xi("msgHash", U)), (Y = xi("publicKey", Y)), "strict" in ie))
          throw new Error("options.strict was renamed to lowS");
        const { lowS: J, prehash: T } = ie;
        let Z, Oe;
        try {
          if (typeof le == "string" || le instanceof Uint8Array)
            try {
              Z = j.fromDER(le);
            } catch (oe) {
              if (!(oe instanceof al.Err)) throw oe;
              Z = j.fromCompact(le);
            }
          else if (
            typeof le == "object" &&
            typeof le.r == "bigint" &&
            typeof le.s == "bigint"
          ) {
            const { r: oe, s: W } = le;
            Z = new j(oe, W);
          } else throw new Error("PARSE");
          Oe = m.fromHex(Y);
        } catch (oe) {
          if (oe.message === "PARSE")
            throw new Error(
              "signature must be Signature instance, Uint8Array or hex string"
            );
          return !1;
        }
        if (J && Z.hasHighS()) return !1;
        T && (U = e.hash(U));
        const { r: Me, s: X } = Z,
          Ee = ye(U),
          me = p(X),
          xe = u(Ee * me),
          Se = u(Me * me),
          Ie =
            (Ne = m.BASE.multiplyAndAddUnsafe(Oe, xe, Se)) == null
              ? void 0
              : Ne.toAffine();
        return Ie ? u(Ie.x) === Me : !1;
      }
      return {
        CURVE: e,
        getPublicKey: ae,
        getSharedSecret: K,
        sign: E,
        verify: P,
        ProjectivePoint: m,
        Signature: j,
        utils: B,
      };
    }
    function zW(t) {
      return {
        hash: t,
        hmac: (e, ...r) => py(t, e, Vf(...r)),
        randomBytes: IC,
      };
    }
    function HW(t, e) {
      const r = (n) => DW({ ...t, ...zW(n) });
      return Object.freeze({ ...r(e), create: r });
    }
    const l2 = BigInt(
        "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"
      ),
      c2 = BigInt(
        "0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"
      ),
      UW = BigInt(1),
      Cy = BigInt(2),
      u2 = (t, e) => (t + e / Cy) / e;
    function WW(t) {
      const e = l2,
        r = BigInt(3),
        n = BigInt(6),
        i = BigInt(11),
        a = BigInt(22),
        l = BigInt(23),
        u = BigInt(44),
        p = BigInt(88),
        m = (t * t * t) % e,
        v = (m * m * t) % e,
        w = (wi(v, r, e) * v) % e,
        S = (wi(w, r, e) * v) % e,
        M = (wi(S, Cy, e) * m) % e,
        D = (wi(M, i, e) * M) % e,
        z = (wi(D, a, e) * D) % e,
        V = (wi(z, u, e) * z) % e,
        j = (wi(V, p, e) * V) % e,
        B = (wi(j, u, e) * z) % e,
        ae = (wi(B, r, e) * v) % e,
        re = (wi(ae, l, e) * D) % e,
        K = (wi(re, n, e) * m) % e,
        fe = wi(K, Cy, e);
      if (!Sy.eql(Sy.sqr(fe), t)) throw new Error("Cannot find square root");
      return fe;
    }
    const Sy = TW(l2, void 0, void 0, { sqrt: WW }),
      Ey = HW(
        {
          a: BigInt(0),
          b: BigInt(7),
          Fp: Sy,
          n: c2,
          Gx: BigInt(
            "55066263022277343669578718895168534326250603453777594175500187360389116729240"
          ),
          Gy: BigInt(
            "32670510020758816978083085130507043184471273380659243275938904335757337482424"
          ),
          h: BigInt(1),
          lowS: !0,
          endo: {
            beta: BigInt(
              "0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"
            ),
            splitScalar: (t) => {
              const e = c2,
                r = BigInt("0x3086d221a7d46bcde86c90e49284eb15"),
                n = -UW * BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),
                i = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),
                a = r,
                l = BigInt("0x100000000000000000000000000000000"),
                u = u2(a * t, e),
                p = u2(-n * t, e);
              let m = qn(t - u * r - p * i, e),
                v = qn(-u * n - p * a, e);
              const w = m > l,
                S = v > l;
              if ((w && (m = e - m), S && (v = e - v), m > l || v > l))
                throw new Error("splitScalar: Endomorphism failed, k=" + t);
              return { k1neg: w, k1: m, k2neg: S, k2: v };
            },
          },
        },
        Ip
      );
    BigInt(0), Ey.ProjectivePoint;
    const XW = Object.freeze(
      Object.defineProperty(
        { __proto__: null, secp256k1: Ey },
        Symbol.toStringTag,
        { value: "Module" }
      )
    );
    var Iy;
    const to = (Iy = Ey) !== null && Iy !== void 0 ? Iy : XW,
      h2 = BigInt("0xffffffffffffffff"),
      Ch = BigInt(
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      ),
      jW = to.CURVE.n,
      GW = jW / BigInt(2),
      YW = {
        type: "object",
        required: ["crypto", "id", "version", "address"],
        properties: {
          crypto: {
            type: "object",
            required: [
              "cipher",
              "ciphertext",
              "cipherparams",
              "kdf",
              "kdfparams",
              "mac",
            ],
            properties: {
              cipher: { type: "string" },
              ciphertext: { type: "string" },
              cipherparams: { type: "object" },
              kdf: { type: "string" },
              kdfparams: { type: "object" },
              salt: { type: "string" },
              mac: { type: "string" },
            },
          },
          id: { type: "string" },
          version: { type: "number" },
          address: { type: "string" },
        },
      };
    var Lp;
    (function (t) {
      (t[(t.Mainnet = 1)] = "Mainnet"),
        (t[(t.Goerli = 5)] = "Goerli"),
        (t[(t.Sepolia = 11155111)] = "Sepolia");
    })(Lp || (Lp = {}));
    var Sr;
    (function (t) {
      (t.Chainstart = "chainstart"),
        (t.Homestead = "homestead"),
        (t.Dao = "dao"),
        (t.TangerineWhistle = "tangerineWhistle"),
        (t.SpuriousDragon = "spuriousDragon"),
        (t.Byzantium = "byzantium"),
        (t.Constantinople = "constantinople"),
        (t.Petersburg = "petersburg"),
        (t.Istanbul = "istanbul"),
        (t.MuirGlacier = "muirGlacier"),
        (t.Berlin = "berlin"),
        (t.London = "london"),
        (t.ArrowGlacier = "arrowGlacier"),
        (t.GrayGlacier = "grayGlacier"),
        (t.MergeForkIdTransition = "mergeForkIdTransition"),
        (t.Merge = "merge"),
        (t.Shanghai = "shanghai"),
        (t.ShardingForkDev = "shardingFork");
    })(Sr || (Sr = {}));
    var d2;
    (function (t) {
      (t.ProofOfStake = "pos"),
        (t.ProofOfWork = "pow"),
        (t.ProofOfAuthority = "poa");
    })(d2 || (d2 = {}));
    var f2;
    (function (t) {
      (t.Ethash = "ethash"), (t.Clique = "clique"), (t.Casper = "casper");
    })(f2 || (f2 = {}));
    var On;
    (function (t) {
      (t.PolygonMainnet = "polygon-mainnet"),
        (t.PolygonMumbai = "polygon-mumbai"),
        (t.ArbitrumRinkebyTestnet = "arbitrum-rinkeby-testnet"),
        (t.ArbitrumOne = "arbitrum-one"),
        (t.xDaiChain = "x-dai-chain"),
        (t.OptimisticKovan = "optimistic-kovan"),
        (t.OptimisticEthereum = "optimistic-ethereum");
    })(On || (On = {}));
    var _i;
    (function (t) {
      (t[(t.Number = 0)] = "Number"),
        (t[(t.BigInt = 1)] = "BigInt"),
        (t[(t.Uint8Array = 2)] = "Uint8Array"),
        (t[(t.PrefixedHexString = 3)] = "PrefixedHexString");
    })(_i || (_i = {}));
    const p2 = (t) => {
      if (typeof t != "string")
        throw new Error(
          `[stripHexPrefix] input must be type 'string', received ${typeof t}`
        );
      return H0(t) ? t.slice(2) : t;
    };
    function VW(t) {
      return !t || t === "0x0"
        ? "0x0000000000000000"
        : H0(t)
        ? `0x${p2(t).padStart(16, "0")}`
        : `0x${t.padStart(16, "0")}`;
    }
    const g2 = function (t) {
      if (!Number.isSafeInteger(t) || t < 0)
        throw new Error(`Received an invalid integer type: ${t}`);
      return `0x${t.toString(16)}`;
    };
    function qW(t, e = !0) {
      var r, n;
      const {
        name: i,
        config: a,
        difficulty: l,
        mixHash: u,
        gasLimit: p,
        coinbase: m,
        baseFeePerGas: v,
      } = t;
      let { extraData: w, timestamp: S, nonce: M } = t;
      const D = Number(S),
        { chainId: z } = a;
      if (
        (w === "" && (w = "0x"),
        H0(S) || (S = g2(parseInt(S))),
        M.length !== 18 && (M = VW(M)),
        a.eip155Block !== a.eip158Block)
      )
        throw new Error(
          "EIP155 block number must equal EIP 158 block number since both are part of SpuriousDragon hardfork and the client only supports activating the full hardfork"
        );
      const V = {
          name: i,
          chainId: z,
          networkId: z,
          genesis: {
            timestamp: S,
            gasLimit: parseInt(p),
            difficulty: parseInt(l),
            nonce: M,
            extraData: w,
            mixHash: u,
            coinbase: m,
            baseFeePerGas: v,
          },
          hardfork: void 0,
          hardforks: [],
          bootstrapNodes: [],
          consensus:
            a.clique !== void 0
              ? {
                  type: "poa",
                  algorithm: "clique",
                  clique: {
                    period:
                      (r = a.clique.period) !== null && r !== void 0
                        ? r
                        : a.clique.blockperiodseconds,
                    epoch:
                      (n = a.clique.epoch) !== null && n !== void 0
                        ? n
                        : a.clique.epochlength,
                  },
                }
              : { type: "pow", algorithm: "ethash", ethash: {} },
        },
        j = {
          [Sr.Homestead]: { name: "homesteadBlock" },
          [Sr.Dao]: { name: "daoForkBlock" },
          [Sr.TangerineWhistle]: { name: "eip150Block" },
          [Sr.SpuriousDragon]: { name: "eip155Block" },
          [Sr.Byzantium]: { name: "byzantiumBlock" },
          [Sr.Constantinople]: { name: "constantinopleBlock" },
          [Sr.Petersburg]: { name: "petersburgBlock" },
          [Sr.Istanbul]: { name: "istanbulBlock" },
          [Sr.MuirGlacier]: { name: "muirGlacierBlock" },
          [Sr.Berlin]: { name: "berlinBlock" },
          [Sr.London]: { name: "londonBlock" },
          [Sr.MergeForkIdTransition]: { name: "mergeForkBlock", postMerge: e },
          [Sr.Shanghai]: {
            name: "shanghaiTime",
            postMerge: !0,
            isTimestamp: !0,
          },
          [Sr.ShardingForkDev]: {
            name: "shardingForkTime",
            postMerge: !0,
            isTimestamp: !0,
          },
        },
        B = Object.keys(j).reduce((K, fe) => ((K[j[fe].name] = fe), K), {}),
        ae = Object.keys(a).filter(
          (K) => B[K] !== void 0 && a[K] !== void 0 && a[K] !== null
        );
      if (
        ((V.hardforks = ae
          .map((K) => ({
            name: B[K],
            block:
              j[B[K]].isTimestamp === !0 || typeof a[K] != "number"
                ? null
                : a[K],
            timestamp:
              j[B[K]].isTimestamp === !0 && typeof a[K] == "number"
                ? a[K]
                : void 0,
          }))
          .filter((K) => K.block !== null || K.timestamp !== void 0)),
        V.hardforks.sort((K, fe) => {
          var ye, pe;
          return (
            ((ye = K.block) !== null && ye !== void 0 ? ye : 1 / 0) -
            ((pe = fe.block) !== null && pe !== void 0 ? pe : 1 / 0)
          );
        }),
        V.hardforks.sort((K, fe) => {
          var ye, pe;
          return (
            ((ye = K.timestamp) !== null && ye !== void 0 ? ye : D) -
            ((pe = fe.timestamp) !== null && pe !== void 0 ? pe : D)
          );
        }),
        a.terminalTotalDifficulty !== void 0)
      ) {
        const K = {
            name: Sr.Merge,
            ttd: a.terminalTotalDifficulty,
            block: null,
          },
          fe = V.hardforks.findIndex((ye) => {
            var pe;
            return (
              ((pe = j[ye.name]) === null || pe === void 0
                ? void 0
                : pe.postMerge) === !0
            );
          });
        fe !== -1 ? V.hardforks.splice(fe, 0, K) : V.hardforks.push(K);
      }
      const re = V.hardforks.length > 0 ? V.hardforks.slice(-1)[0] : void 0;
      return (
        (V.hardfork = re == null ? void 0 : re.name),
        V.hardforks.unshift({ name: Sr.Chainstart, block: 0 }),
        V
      );
    }
    function KW(t, e, r) {
      try {
        if (
          ["config", "difficulty", "gasLimit", "alloc"].some((n) => !(n in t))
        )
          throw new Error(
            "Invalid format, expected geth genesis fields missing"
          );
        return e !== void 0 && (t.name = e), qW(t, r);
      } catch (n) {
        throw new Error(`Error parsing parameters file: ${n.message}`);
      }
    }
    function m2(t) {
      let e = t;
      if (typeof e != "string")
        throw new Error(
          `[padToEven] value must be type 'string', received ${typeof e}`
        );
      return e.length % 2 && (e = `0${e}`), e;
    }
    const $W = function (t) {
        const e = g2(t);
        return Cr(`0x${m2(e.slice(2))}`);
      },
      Dr = function (t) {
        if (t == null) return new Uint8Array();
        if (t instanceof Uint8Array) return t;
        if (Array.isArray(t)) return Uint8Array.from(t);
        if (typeof t == "string") {
          if (!qC(t))
            throw new Error(
              `Cannot convert string to Uint8Array. only supports 0x-prefixed hex strings and this string was given: ${t}`
            );
          return Cr(m2(p2(t)));
        }
        if (typeof t == "number") return Dr(oi(t));
        if (typeof t == "bigint") {
          if (t < BigInt(0))
            throw new Error(
              `Cannot convert negative bigint to Uint8Array. Given: ${t}`
            );
          let e = t.toString(16);
          return e.length % 2 && (e = `0${e}`), Dr(`0x${e}`);
        }
        if (t.toArray) return Uint8Array.from(t.toArray());
        throw new Error("invalid type");
      };
    function pr(t) {
      const e = Pt(t);
      return BigInt(e === "0x" ? 0 : e);
    }
    function ZW(t) {
      return Dr(`0x${t.toString(16)}`);
    }
    const v2 = function (t) {
        return new Uint8Array(t).fill(0);
      },
      QW = function (t, e, r) {
        const n = v2(e);
        return r
          ? t.length < e
            ? (n.set(t), n)
            : t.subarray(0, e)
          : t.length < e
          ? (n.set(t, e - t.length), n)
          : t.subarray(-e);
      };
    function Ty(t) {
      if (!(t instanceof Uint8Array)) {
        const e = `This method only supports Uint8Array but input was: ${t}`;
        throw new Error(e);
      }
    }
    const y2 = function (t, e) {
      return Ty(t), QW(t, e, !1);
    };
    function JW(t) {
      let e = t[0];
      for (; t.length > 0 && e.toString() === "0"; )
        (t = t.slice(1)), (e = t[0]);
      return t;
    }
    const Mp = function (t) {
        return Ty(t), JW(t);
      },
      zr = (t) => `0x${t.toString(16)}`;
    function zt(t) {
      return Mp(ZW(t));
    }
    function e9(t, e) {
      return t === BigInt(0) || t === BigInt(1)
        ? t
        : e === void 0
        ? t - BigInt(27)
        : t - (e * BigInt(2) + BigInt(35));
    }
    function t9(t) {
      return t === BigInt(0) || t === BigInt(1);
    }
    const Py = function (t, e, r, n, i) {
      const a = e9(e, i);
      if (!t9(a)) throw new Error("Invalid signature v value");
      return new to.Signature(pr(r), pr(n))
        .addRecoveryBit(Number(a))
        .recoverPublicKey(t)
        .toRawBytes(!1)
        .slice(1);
    };
    function Cc(t, e) {
      if (t === null) return null;
      if (t === void 0) return;
      if (typeof t == "string" && !qC(t))
        throw new Error(
          `A string must be provided with a 0x-prefix, given: ${t}`
        );
      if (typeof t == "number" && !Number.isSafeInteger(t))
        throw new Error(
          "The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)"
        );
      const r = Dr(t);
      switch (e) {
        case _i.Uint8Array:
          return r;
        case _i.BigInt:
          return pr(r);
        case _i.Number: {
          const n = pr(r);
          if (n > BigInt(Number.MAX_SAFE_INTEGER))
            throw new Error(
              "The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)"
            );
          return Number(n);
        }
        case _i.PrefixedHexString:
          return Pt(r);
        default:
          throw new Error("unknown outputType");
      }
    }
    var sa = {};
    Object.defineProperty(sa, "__esModule", { value: !0 });
    var ui = (sa.RLP = sa.utils = sa.decode = sa.encode = void 0);
    function Oy(t) {
      if (Array.isArray(t)) {
        const r = [];
        let n = 0;
        for (let i = 0; i < t.length; i++) {
          const a = Oy(t[i]);
          r.push(a), (n += a.length);
        }
        return My(x2(n, 192), ...r);
      }
      const e = S2(t);
      return e.length === 1 && e[0] < 128 ? e : My(x2(e.length, 128), e);
    }
    sa.encode = Oy;
    function Sc(t, e, r) {
      if (r > t.length)
        throw new Error(
          "invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds"
        );
      return t.slice(e, r);
    }
    function b2(t) {
      if (t[0] === 0) throw new Error("invalid RLP: extra zeros");
      return _2(k2(t));
    }
    function x2(t, e) {
      if (t < 56) return Uint8Array.from([t + e]);
      const r = Ry(t),
        n = r.length / 2,
        i = Ry(e + 55 + n);
      return Uint8Array.from(Rp(i + r));
    }
    function w2(t, e = !1) {
      if (typeof t > "u" || t === null || t.length === 0)
        return Uint8Array.from([]);
      const r = S2(t),
        n = Ly(r);
      if (e) return n;
      if (n.remainder.length !== 0)
        throw new Error("invalid RLP: remainder must be zero");
      return n.data;
    }
    sa.decode = w2;
    function Ly(t) {
      let e, r, n, i, a;
      const l = [],
        u = t[0];
      if (u <= 127) return { data: t.slice(0, 1), remainder: t.slice(1) };
      if (u <= 183) {
        if (
          ((e = u - 127),
          u === 128 ? (n = Uint8Array.from([])) : (n = Sc(t, 1, e)),
          e === 2 && n[0] < 128)
        )
          throw new Error(
            "invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed"
          );
        return { data: n, remainder: t.slice(e) };
      } else if (u <= 191) {
        if (((r = u - 182), t.length - 1 < r))
          throw new Error("invalid RLP: not enough bytes for string length");
        if (((e = b2(Sc(t, 1, r))), e <= 55))
          throw new Error(
            "invalid RLP: expected string length to be greater than 55"
          );
        return (n = Sc(t, r, e + r)), { data: n, remainder: t.slice(e + r) };
      } else if (u <= 247) {
        for (e = u - 191, i = Sc(t, 1, e); i.length; )
          (a = Ly(i)), l.push(a.data), (i = a.remainder);
        return { data: l, remainder: t.slice(e) };
      } else {
        if (((r = u - 246), (e = b2(Sc(t, 1, r))), e < 56))
          throw new Error("invalid RLP: encoded list too short");
        const p = r + e;
        if (p > t.length)
          throw new Error("invalid RLP: total length is larger than the data");
        for (i = Sc(t, r, p); i.length; )
          (a = Ly(i)), l.push(a.data), (i = a.remainder);
        return { data: l, remainder: t.slice(p) };
      }
    }
    const r9 = Array.from({ length: 256 }, (t, e) =>
      e.toString(16).padStart(2, "0")
    );
    function k2(t) {
      let e = "";
      for (let r = 0; r < t.length; r++) e += r9[t[r]];
      return e;
    }
    function _2(t) {
      const e = Number.parseInt(t, 16);
      if (Number.isNaN(e)) throw new Error("Invalid byte sequence");
      return e;
    }
    function Rp(t) {
      if (typeof t != "string")
        throw new TypeError("hexToBytes: expected string, got " + typeof t);
      if (t.length % 2)
        throw new Error("hexToBytes: received invalid unpadded hex");
      const e = new Uint8Array(t.length / 2);
      for (let r = 0; r < e.length; r++) {
        const n = r * 2;
        e[r] = _2(t.slice(n, n + 2));
      }
      return e;
    }
    function My(...t) {
      if (t.length === 1) return t[0];
      const e = t.reduce((n, i) => n + i.length, 0),
        r = new Uint8Array(e);
      for (let n = 0, i = 0; n < t.length; n++) {
        const a = t[n];
        r.set(a, i), (i += a.length);
      }
      return r;
    }
    function A2(t) {
      return new TextEncoder().encode(t);
    }
    function Ry(t) {
      if (t < 0)
        throw new Error("Invalid integer as argument, must be unsigned!");
      const e = t.toString(16);
      return e.length % 2 ? `0${e}` : e;
    }
    function n9(t) {
      return t.length % 2 ? `0${t}` : t;
    }
    function C2(t) {
      return t.length >= 2 && t[0] === "0" && t[1] === "x";
    }
    function i9(t) {
      return typeof t != "string" ? t : C2(t) ? t.slice(2) : t;
    }
    function S2(t) {
      if (t instanceof Uint8Array) return t;
      if (typeof t == "string") return C2(t) ? Rp(n9(i9(t))) : A2(t);
      if (typeof t == "number" || typeof t == "bigint")
        return t ? Rp(Ry(t)) : Uint8Array.from([]);
      if (t == null) return Uint8Array.from([]);
      throw new Error("toBytes: received unsupported type " + typeof t);
    }
    (sa.utils = {
      bytesToHex: k2,
      concatBytes: My,
      hexToBytes: Rp,
      utf8ToBytes: A2,
    }),
      (ui = sa.RLP = { encode: Oy, decode: w2 });
    var E2 = {};
    (function (t) {
      (function (e) {
        e(typeof DO_NOT_EXPORT_CRC > "u" ? t : {});
      })(function (e) {
        e.version = "1.2.2";
        function r() {
          for (var pe = 0, _e = new Array(256), be = 0; be != 256; ++be)
            (pe = be),
              (pe = pe & 1 ? -306674912 ^ (pe >>> 1) : pe >>> 1),
              (pe = pe & 1 ? -306674912 ^ (pe >>> 1) : pe >>> 1),
              (pe = pe & 1 ? -306674912 ^ (pe >>> 1) : pe >>> 1),
              (pe = pe & 1 ? -306674912 ^ (pe >>> 1) : pe >>> 1),
              (pe = pe & 1 ? -306674912 ^ (pe >>> 1) : pe >>> 1),
              (pe = pe & 1 ? -306674912 ^ (pe >>> 1) : pe >>> 1),
              (pe = pe & 1 ? -306674912 ^ (pe >>> 1) : pe >>> 1),
              (pe = pe & 1 ? -306674912 ^ (pe >>> 1) : pe >>> 1),
              (_e[be] = pe);
          return typeof Int32Array < "u" ? new Int32Array(_e) : _e;
        }
        var n = r();
        function i(pe) {
          var _e = 0,
            be = 0,
            Ce = 0,
            ke =
              typeof Int32Array < "u" ? new Int32Array(4096) : new Array(4096);
          for (Ce = 0; Ce != 256; ++Ce) ke[Ce] = pe[Ce];
          for (Ce = 0; Ce != 256; ++Ce)
            for (be = pe[Ce], _e = 256 + Ce; _e < 4096; _e += 256)
              be = ke[_e] = (be >>> 8) ^ pe[be & 255];
          var E = [];
          for (Ce = 1; Ce != 16; ++Ce)
            E[Ce - 1] =
              typeof Int32Array < "u"
                ? ke.subarray(Ce * 256, Ce * 256 + 256)
                : ke.slice(Ce * 256, Ce * 256 + 256);
          return E;
        }
        var a = i(n),
          l = a[0],
          u = a[1],
          p = a[2],
          m = a[3],
          v = a[4],
          w = a[5],
          S = a[6],
          M = a[7],
          D = a[8],
          z = a[9],
          V = a[10],
          j = a[11],
          B = a[12],
          ae = a[13],
          re = a[14];
        function K(pe, _e) {
          for (var be = _e ^ -1, Ce = 0, ke = pe.length; Ce < ke; )
            be = (be >>> 8) ^ n[(be ^ pe.charCodeAt(Ce++)) & 255];
          return ~be;
        }
        function fe(pe, _e) {
          for (var be = _e ^ -1, Ce = pe.length - 15, ke = 0; ke < Ce; )
            be =
              re[pe[ke++] ^ (be & 255)] ^
              ae[pe[ke++] ^ ((be >> 8) & 255)] ^
              B[pe[ke++] ^ ((be >> 16) & 255)] ^
              j[pe[ke++] ^ (be >>> 24)] ^
              V[pe[ke++]] ^
              z[pe[ke++]] ^
              D[pe[ke++]] ^
              M[pe[ke++]] ^
              S[pe[ke++]] ^
              w[pe[ke++]] ^
              v[pe[ke++]] ^
              m[pe[ke++]] ^
              p[pe[ke++]] ^
              u[pe[ke++]] ^
              l[pe[ke++]] ^
              n[pe[ke++]];
          for (Ce += 15; ke < Ce; ) be = (be >>> 8) ^ n[(be ^ pe[ke++]) & 255];
          return ~be;
        }
        function ye(pe, _e) {
          for (
            var be = _e ^ -1, Ce = 0, ke = pe.length, E = 0, P = 0;
            Ce < ke;

          )
            (E = pe.charCodeAt(Ce++)),
              E < 128
                ? (be = (be >>> 8) ^ n[(be ^ E) & 255])
                : E < 2048
                ? ((be = (be >>> 8) ^ n[(be ^ (192 | ((E >> 6) & 31))) & 255]),
                  (be = (be >>> 8) ^ n[(be ^ (128 | (E & 63))) & 255]))
                : E >= 55296 && E < 57344
                ? ((E = (E & 1023) + 64),
                  (P = pe.charCodeAt(Ce++) & 1023),
                  (be = (be >>> 8) ^ n[(be ^ (240 | ((E >> 8) & 7))) & 255]),
                  (be = (be >>> 8) ^ n[(be ^ (128 | ((E >> 2) & 63))) & 255]),
                  (be =
                    (be >>> 8) ^
                    n[(be ^ (128 | ((P >> 6) & 15) | ((E & 3) << 4))) & 255]),
                  (be = (be >>> 8) ^ n[(be ^ (128 | (P & 63))) & 255]))
                : ((be = (be >>> 8) ^ n[(be ^ (224 | ((E >> 12) & 15))) & 255]),
                  (be = (be >>> 8) ^ n[(be ^ (128 | ((E >> 6) & 63))) & 255]),
                  (be = (be >>> 8) ^ n[(be ^ (128 | (E & 63))) & 255]));
          return ~be;
        }
        (e.table = n), (e.bstr = K), (e.buf = fe), (e.str = ye);
      });
    })(E2);
    const s9 = ns(E2),
      a9 = {
        name: "goerli",
        chainId: 5,
        networkId: 5,
        defaultHardfork: "merge",
        consensus: {
          type: "poa",
          algorithm: "clique",
          clique: { period: 15, epoch: 3e4 },
        },
        comment: "Cross-client PoA test network",
        url: "https://github.com/goerli/testnet",
        genesis: {
          timestamp: "0x5c51a607",
          gasLimit: 10485760,
          difficulty: 1,
          nonce: "0x0000000000000000",
          extraData:
            "0x22466c6578692069732061207468696e6722202d204166726900000000000000e0a2bd4258d2768837baa26a28fe71dc079f84c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        },
        hardforks: [
          { name: "chainstart", block: 0, forkHash: "0xa3f5ab08" },
          { name: "homestead", block: 0, forkHash: "0xa3f5ab08" },
          { name: "tangerineWhistle", block: 0, forkHash: "0xa3f5ab08" },
          { name: "spuriousDragon", block: 0, forkHash: "0xa3f5ab08" },
          { name: "byzantium", block: 0, forkHash: "0xa3f5ab08" },
          { name: "constantinople", block: 0, forkHash: "0xa3f5ab08" },
          { name: "petersburg", block: 0, forkHash: "0xa3f5ab08" },
          { name: "istanbul", block: 1561651, forkHash: "0xc25efa5c" },
          { name: "berlin", block: 4460644, forkHash: "0x757a1c47" },
          { name: "london", block: 5062605, forkHash: "0xb8c6299d" },
          {
            "//_comment":
              "The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://goerli.etherscan.io/block/7382818",
            name: "merge",
            ttd: "10790000",
            block: 7382819,
            forkHash: "0xb8c6299d",
          },
          { name: "mergeForkIdTransition", block: null, forkHash: null },
          { name: "shanghai", block: null, forkHash: null },
        ],
        bootstrapNodes: [],
        dnsNetworks: [
          "enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.goerli.ethdisco.net",
        ],
      },
      o9 = {
        name: "mainnet",
        chainId: 1,
        networkId: 1,
        defaultHardfork: "merge",
        consensus: { type: "pow", algorithm: "ethash", ethash: {} },
        comment: "The Ethereum main chain",
        url: "https://ethstats.net/",
        genesis: {
          gasLimit: 5e3,
          difficulty: 17179869184,
          nonce: "0x0000000000000042",
          extraData:
            "0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa",
        },
        hardforks: [
          { name: "chainstart", block: 0, forkHash: "0xfc64ec04" },
          { name: "homestead", block: 115e4, forkHash: "0x97c2c34c" },
          { name: "dao", block: 192e4, forkHash: "0x91d1f948" },
          { name: "tangerineWhistle", block: 2463e3, forkHash: "0x7a64da13" },
          { name: "spuriousDragon", block: 2675e3, forkHash: "0x3edd5b10" },
          { name: "byzantium", block: 437e4, forkHash: "0xa00bc324" },
          { name: "constantinople", block: 728e4, forkHash: "0x668db0af" },
          { name: "petersburg", block: 728e4, forkHash: "0x668db0af" },
          { name: "istanbul", block: 9069e3, forkHash: "0x879d6e30" },
          { name: "muirGlacier", block: 92e5, forkHash: "0xe029e991" },
          { name: "berlin", block: 12244e3, forkHash: "0x0eb440f6" },
          { name: "london", block: 12965e3, forkHash: "0xb715077d" },
          { name: "arrowGlacier", block: 13773e3, forkHash: "0x20c327fc" },
          { name: "grayGlacier", block: 1505e4, forkHash: "0xf0afd0e3" },
          {
            "//_comment":
              "The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://etherscan.io/block/15537393",
            name: "merge",
            ttd: "58750000000000000000000",
            block: 15537394,
            forkHash: "0xf0afd0e3",
          },
          { name: "mergeForkIdTransition", block: null, forkHash: null },
          { name: "shanghai", block: null, forkHash: null },
        ],
        bootstrapNodes: [],
        dnsNetworks: [
          "enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.mainnet.ethdisco.net",
        ],
      },
      l9 = {
        name: "sepolia",
        chainId: 11155111,
        networkId: 11155111,
        defaultHardfork: "merge",
        consensus: { type: "pow", algorithm: "ethash", ethash: {} },
        comment: "PoW test network to replace Ropsten",
        url: "https://github.com/ethereum/go-ethereum/pull/23730",
        genesis: {
          timestamp: "0x6159af19",
          gasLimit: 3e7,
          difficulty: 131072,
          nonce: "0x0000000000000000",
          extraData:
            "0x5365706f6c69612c20417468656e732c204174746963612c2047726565636521",
        },
        hardforks: [
          { name: "chainstart", block: 0, forkHash: "0xfe3366e7" },
          { name: "homestead", block: 0, forkHash: "0xfe3366e7" },
          { name: "tangerineWhistle", block: 0, forkHash: "0xfe3366e7" },
          { name: "spuriousDragon", block: 0, forkHash: "0xfe3366e7" },
          { name: "byzantium", block: 0, forkHash: "0xfe3366e7" },
          { name: "constantinople", block: 0, forkHash: "0xfe3366e7" },
          { name: "petersburg", block: 0, forkHash: "0xfe3366e7" },
          { name: "istanbul", block: 0, forkHash: "0xfe3366e7" },
          { name: "muirGlacier", block: 0, forkHash: "0xfe3366e7" },
          { name: "berlin", block: 0, forkHash: "0xfe3366e7" },
          { name: "london", block: 0, forkHash: "0xfe3366e7" },
          {
            "//_comment":
              "The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://sepolia.etherscan.io/block/1450408",
            name: "merge",
            ttd: "17000000000000000",
            block: 1450409,
            forkHash: "0xfe3366e7",
          },
          {
            name: "mergeForkIdTransition",
            block: 1735371,
            forkHash: "0xb96cbd13",
          },
          {
            name: "shanghai",
            block: null,
            timestamp: "1677557088",
            forkHash: "0xf7f9bc08",
          },
        ],
        bootstrapNodes: [],
        dnsNetworks: [
          "enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.sepolia.ethdisco.net",
        ],
      },
      c9 = {
        name: "EIP-1153",
        number: 1153,
        comment: "Transient Storage",
        url: "https://eips.ethereum.org/EIPS/eip-1153",
        status: "Review",
        minimumHardfork: "chainstart",
        requiredEIPs: [],
        gasConfig: {},
        gasPrices: {
          tstore: { v: 100, d: "Base fee of the TSTORE opcode" },
          tload: { v: 100, d: "Base fee of the TLOAD opcode" },
        },
        vm: {},
        pow: {},
      },
      u9 = {
        name: "EIP-1559",
        number: 1559,
        comment: "Fee market change for ETH 1.0 chain",
        url: "https://eips.ethereum.org/EIPS/eip-1559",
        status: "Final",
        minimumHardfork: "berlin",
        requiredEIPs: [2930],
        gasConfig: {
          baseFeeMaxChangeDenominator: {
            v: 8,
            d: "Maximum base fee change denominator",
          },
          elasticityMultiplier: {
            v: 2,
            d: "Maximum block gas target elasticity",
          },
          initialBaseFee: {
            v: 1e9,
            d: "Initial base fee on first EIP1559 block",
          },
        },
        gasPrices: {},
        vm: {},
        pow: {},
      },
      h9 = {
        name: "EIP-2315",
        number: 2315,
        comment: "Simple subroutines for the EVM",
        url: "https://eips.ethereum.org/EIPS/eip-2315",
        status: "Draft",
        minimumHardfork: "istanbul",
        gasConfig: {},
        gasPrices: {
          beginsub: { v: 2, d: "Base fee of the BEGINSUB opcode" },
          returnsub: { v: 5, d: "Base fee of the RETURNSUB opcode" },
          jumpsub: { v: 10, d: "Base fee of the JUMPSUB opcode" },
        },
        vm: {},
        pow: {},
      },
      d9 = {
        name: "EIP-2537",
        number: 2537,
        comment: "BLS12-381 precompiles",
        url: "https://eips.ethereum.org/EIPS/eip-2537",
        status: "Draft",
        minimumHardfork: "chainstart",
        gasConfig: {},
        gasPrices: {
          Bls12381G1AddGas: {
            v: 600,
            d: "Gas cost of a single BLS12-381 G1 addition precompile-call",
          },
          Bls12381G1MulGas: {
            v: 12e3,
            d: "Gas cost of a single BLS12-381 G1 multiplication precompile-call",
          },
          Bls12381G2AddGas: {
            v: 4500,
            d: "Gas cost of a single BLS12-381 G2 addition precompile-call",
          },
          Bls12381G2MulGas: {
            v: 55e3,
            d: "Gas cost of a single BLS12-381 G2 multiplication precompile-call",
          },
          Bls12381PairingBaseGas: {
            v: 115e3,
            d: "Base gas cost of BLS12-381 pairing check",
          },
          Bls12381PairingPerPairGas: {
            v: 23e3,
            d: "Per-pair gas cost of BLS12-381 pairing check",
          },
          Bls12381MapG1Gas: {
            v: 5500,
            d: "Gas cost of BLS12-381 map field element to G1",
          },
          Bls12381MapG2Gas: {
            v: 11e4,
            d: "Gas cost of BLS12-381 map field element to G2",
          },
          Bls12381MultiExpGasDiscount: {
            v: [
              [1, 1200],
              [2, 888],
              [3, 764],
              [4, 641],
              [5, 594],
              [6, 547],
              [7, 500],
              [8, 453],
              [9, 438],
              [10, 423],
              [11, 408],
              [12, 394],
              [13, 379],
              [14, 364],
              [15, 349],
              [16, 334],
              [17, 330],
              [18, 326],
              [19, 322],
              [20, 318],
              [21, 314],
              [22, 310],
              [23, 306],
              [24, 302],
              [25, 298],
              [26, 294],
              [27, 289],
              [28, 285],
              [29, 281],
              [30, 277],
              [31, 273],
              [32, 269],
              [33, 268],
              [34, 266],
              [35, 265],
              [36, 263],
              [37, 262],
              [38, 260],
              [39, 259],
              [40, 257],
              [41, 256],
              [42, 254],
              [43, 253],
              [44, 251],
              [45, 250],
              [46, 248],
              [47, 247],
              [48, 245],
              [49, 244],
              [50, 242],
              [51, 241],
              [52, 239],
              [53, 238],
              [54, 236],
              [55, 235],
              [56, 233],
              [57, 232],
              [58, 231],
              [59, 229],
              [60, 228],
              [61, 226],
              [62, 225],
              [63, 223],
              [64, 222],
              [65, 221],
              [66, 220],
              [67, 219],
              [68, 219],
              [69, 218],
              [70, 217],
              [71, 216],
              [72, 216],
              [73, 215],
              [74, 214],
              [75, 213],
              [76, 213],
              [77, 212],
              [78, 211],
              [79, 211],
              [80, 210],
              [81, 209],
              [82, 208],
              [83, 208],
              [84, 207],
              [85, 206],
              [86, 205],
              [87, 205],
              [88, 204],
              [89, 203],
              [90, 202],
              [91, 202],
              [92, 201],
              [93, 200],
              [94, 199],
              [95, 199],
              [96, 198],
              [97, 197],
              [98, 196],
              [99, 196],
              [100, 195],
              [101, 194],
              [102, 193],
              [103, 193],
              [104, 192],
              [105, 191],
              [106, 191],
              [107, 190],
              [108, 189],
              [109, 188],
              [110, 188],
              [111, 187],
              [112, 186],
              [113, 185],
              [114, 185],
              [115, 184],
              [116, 183],
              [117, 182],
              [118, 182],
              [119, 181],
              [120, 180],
              [121, 179],
              [122, 179],
              [123, 178],
              [124, 177],
              [125, 176],
              [126, 176],
              [127, 175],
              [128, 174],
            ],
            d: "Discount gas costs of calls to the MultiExp precompiles with `k` (point, scalar) pair",
          },
        },
        vm: {},
        pow: {},
      },
      f9 = {
        name: "EIP-2565",
        number: 2565,
        comment: "ModExp gas cost",
        url: "https://eips.ethereum.org/EIPS/eip-2565",
        status: "Final",
        minimumHardfork: "byzantium",
        gasConfig: {},
        gasPrices: {
          modexpGquaddivisor: {
            v: 3,
            d: "Gquaddivisor from modexp precompile for gas calculation",
          },
        },
        vm: {},
        pow: {},
      },
      p9 = {
        name: "EIP-2718",
        comment: "Typed Transaction Envelope",
        url: "https://eips.ethereum.org/EIPS/eip-2718",
        status: "Final",
        minimumHardfork: "chainstart",
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {},
      },
      g9 = {
        name: "EIP-2929",
        comment: "Gas cost increases for state access opcodes",
        url: "https://eips.ethereum.org/EIPS/eip-2929",
        status: "Final",
        minimumHardfork: "chainstart",
        gasConfig: {},
        gasPrices: {
          coldsload: {
            v: 2100,
            d: "Gas cost of the first read of storage from a given location (per transaction)",
          },
          coldaccountaccess: {
            v: 2600,
            d: "Gas cost of the first read of a given address (per transaction)",
          },
          warmstorageread: {
            v: 100,
            d: "Gas cost of reading storage locations which have already loaded 'cold'",
          },
          sstoreCleanGasEIP2200: {
            v: 2900,
            d: "Once per SSTORE operation from clean non-zero to something else",
          },
          sstoreNoopGasEIP2200: {
            v: 100,
            d: "Once per SSTORE operation if the value doesn't change",
          },
          sstoreDirtyGasEIP2200: {
            v: 100,
            d: "Once per SSTORE operation if a dirty value is changed",
          },
          sstoreInitRefundEIP2200: {
            v: 19900,
            d: "Once per SSTORE operation for resetting to the original zero value",
          },
          sstoreCleanRefundEIP2200: {
            v: 4900,
            d: "Once per SSTORE operation for resetting to the original non-zero value",
          },
          call: { v: 0, d: "Base fee of the CALL opcode" },
          callcode: { v: 0, d: "Base fee of the CALLCODE opcode" },
          delegatecall: { v: 0, d: "Base fee of the DELEGATECALL opcode" },
          staticcall: { v: 0, d: "Base fee of the STATICCALL opcode" },
          balance: { v: 0, d: "Base fee of the BALANCE opcode" },
          extcodesize: { v: 0, d: "Base fee of the EXTCODESIZE opcode" },
          extcodecopy: { v: 0, d: "Base fee of the EXTCODECOPY opcode" },
          extcodehash: { v: 0, d: "Base fee of the EXTCODEHASH opcode" },
          sload: { v: 0, d: "Base fee of the SLOAD opcode" },
          sstore: { v: 0, d: "Base fee of the SSTORE opcode" },
        },
        vm: {},
        pow: {},
      },
      m9 = {
        name: "EIP-2930",
        comment: "Optional access lists",
        url: "https://eips.ethereum.org/EIPS/eip-2930",
        status: "Final",
        minimumHardfork: "istanbul",
        requiredEIPs: [2718, 2929],
        gasConfig: {},
        gasPrices: {
          accessListStorageKeyCost: {
            v: 1900,
            d: "Gas cost per storage key in an Access List transaction",
          },
          accessListAddressCost: {
            v: 2400,
            d: "Gas cost per storage key in an Access List transaction",
          },
        },
        vm: {},
        pow: {},
      },
      v9 = {
        name: "EIP-3198",
        number: 3198,
        comment: "BASEFEE opcode",
        url: "https://eips.ethereum.org/EIPS/eip-3198",
        status: "Final",
        minimumHardfork: "london",
        gasConfig: {},
        gasPrices: { basefee: { v: 2, d: "Gas cost of the BASEFEE opcode" } },
        vm: {},
        pow: {},
      },
      y9 = {
        name: "EIP-3529",
        comment: "Reduction in refunds",
        url: "https://eips.ethereum.org/EIPS/eip-3529",
        status: "Final",
        minimumHardfork: "berlin",
        requiredEIPs: [2929],
        gasConfig: {
          maxRefundQuotient: {
            v: 5,
            d: "Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)",
          },
        },
        gasPrices: {
          selfdestructRefund: {
            v: 0,
            d: "Refunded following a selfdestruct operation",
          },
          sstoreClearRefundEIP2200: {
            v: 4800,
            d: "Once per SSTORE operation for clearing an originally existing storage slot",
          },
        },
        vm: {},
        pow: {},
      },
      b9 = {
        name: "EIP-3540",
        number: 3540,
        comment: "EVM Object Format (EOF) v1",
        url: "https://eips.ethereum.org/EIPS/eip-3540",
        status: "Review",
        minimumHardfork: "london",
        requiredEIPs: [3541],
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {},
      },
      x9 = {
        name: "EIP-3541",
        comment: "Reject new contracts starting with the 0xEF byte",
        url: "https://eips.ethereum.org/EIPS/eip-3541",
        status: "Final",
        minimumHardfork: "berlin",
        requiredEIPs: [],
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {},
      },
      w9 = {
        name: "EIP-3554",
        comment: "Reduction in refunds",
        url: "Difficulty Bomb Delay to December 1st 2021",
        status: "Final",
        minimumHardfork: "muirGlacier",
        requiredEIPs: [],
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {
          difficultyBombDelay: {
            v: 95e5,
            d: "the amount of blocks to delay the difficulty bomb with",
          },
        },
      },
      k9 = {
        name: "EIP-3607",
        number: 3607,
        comment: "Reject transactions from senders with deployed code",
        url: "https://eips.ethereum.org/EIPS/eip-3607",
        status: "Final",
        minimumHardfork: "chainstart",
        requiredEIPs: [],
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {},
      },
      _9 = {
        name: "EIP-3651",
        number: 3198,
        comment: "Warm COINBASE",
        url: "https://eips.ethereum.org/EIPS/eip-3651",
        status: "Review",
        minimumHardfork: "london",
        requiredEIPs: [2929],
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {},
      },
      A9 = {
        name: "EIP-3670",
        number: 3670,
        comment: "EOF - Code Validation",
        url: "https://eips.ethereum.org/EIPS/eip-3670",
        status: "Review",
        minimumHardfork: "london",
        requiredEIPs: [3540],
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {},
      },
      C9 = {
        name: "EIP-3675",
        number: 3675,
        comment: "Upgrade consensus to Proof-of-Stake",
        url: "https://eips.ethereum.org/EIPS/eip-3675",
        status: "Final",
        minimumHardfork: "london",
        requiredEIPs: [],
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {},
      },
      S9 = {
        name: "EIP-3855",
        number: 3855,
        comment: "PUSH0 instruction",
        url: "https://eips.ethereum.org/EIPS/eip-3855",
        status: "Review",
        minimumHardfork: "chainstart",
        requiredEIPs: [],
        gasConfig: {},
        gasPrices: { push0: { v: 2, d: "Base fee of the PUSH0 opcode" } },
        vm: {},
        pow: {},
      },
      E9 = {
        name: "EIP-3860",
        number: 3860,
        comment: "Limit and meter initcode",
        url: "https://eips.ethereum.org/EIPS/eip-3860",
        status: "Review",
        minimumHardfork: "spuriousDragon",
        requiredEIPs: [],
        gasConfig: {},
        gasPrices: {
          initCodeWordCost: {
            v: 2,
            d: "Gas to pay for each word (32 bytes) of initcode when creating a contract",
          },
        },
        vm: {
          maxInitCodeSize: {
            v: 49152,
            d: "Maximum length of initialization code when creating a contract",
          },
        },
        pow: {},
      },
      I9 = {
        name: "EIP-4345",
        number: 4345,
        comment: "Difficulty Bomb Delay to June 2022",
        url: "https://eips.ethereum.org/EIPS/eip-4345",
        status: "Final",
        minimumHardfork: "london",
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {
          difficultyBombDelay: {
            v: 107e5,
            d: "the amount of blocks to delay the difficulty bomb with",
          },
        },
      },
      T9 = {
        name: "EIP-4399",
        number: 4399,
        comment: "Supplant DIFFICULTY opcode with PREVRANDAO",
        url: "https://eips.ethereum.org/EIPS/eip-4399",
        status: "Review",
        minimumHardfork: "london",
        requiredEIPs: [],
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {},
      },
      P9 = {
        name: "EIP-5133",
        number: 5133,
        comment: "Delaying Difficulty Bomb to mid-September 2022",
        url: "https://eips.ethereum.org/EIPS/eip-5133",
        status: "Draft",
        minimumHardfork: "grayGlacier",
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {
          difficultyBombDelay: {
            v: 114e5,
            d: "the amount of blocks to delay the difficulty bomb with",
          },
        },
      },
      Ec = {
        1153: c9,
        1559: u9,
        2315: h9,
        2537: d9,
        2565: f9,
        2718: p9,
        2929: g9,
        2930: m9,
        3198: v9,
        3529: y9,
        3540: b9,
        3541: x9,
        3554: w9,
        3607: k9,
        3651: _9,
        3670: A9,
        3675: C9,
        3855: S9,
        3860: E9,
        4345: I9,
        4399: T9,
        5133: P9,
      },
      O9 = {
        name: "chainstart",
        comment: "Start of the Ethereum main chain",
        url: "",
        status: "",
        gasConfig: {
          minGasLimit: { v: 5e3, d: "Minimum the gas limit may ever be" },
          gasLimitBoundDivisor: {
            v: 1024,
            d: "The bound divisor of the gas limit, used in update calculations",
          },
          maxRefundQuotient: {
            v: 2,
            d: "Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)",
          },
        },
        gasPrices: {
          base: {
            v: 2,
            d: "Gas base cost, used e.g. for ChainID opcode (Istanbul)",
          },
          tierStep: {
            v: [0, 2, 3, 5, 8, 10, 20],
            d: "Once per operation, for a selection of them",
          },
          exp: { v: 10, d: "Base fee of the EXP opcode" },
          expByte: {
            v: 10,
            d: "Times ceil(log256(exponent)) for the EXP instruction",
          },
          sha3: { v: 30, d: "Base fee of the SHA3 opcode" },
          sha3Word: { v: 6, d: "Once per word of the SHA3 operation's data" },
          sload: { v: 50, d: "Base fee of the SLOAD opcode" },
          sstoreSet: {
            v: 2e4,
            d: "Once per SSTORE operation if the zeroness changes from zero",
          },
          sstoreReset: {
            v: 5e3,
            d: "Once per SSTORE operation if the zeroness does not change from zero",
          },
          sstoreRefund: {
            v: 15e3,
            d: "Once per SSTORE operation if the zeroness changes to zero",
          },
          jumpdest: { v: 1, d: "Base fee of the JUMPDEST opcode" },
          log: { v: 375, d: "Base fee of the LOG opcode" },
          logData: { v: 8, d: "Per byte in a LOG* operation's data" },
          logTopic: {
            v: 375,
            d: "Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas",
          },
          create: { v: 32e3, d: "Base fee of the CREATE opcode" },
          call: { v: 40, d: "Base fee of the CALL opcode" },
          callStipend: { v: 2300, d: "Free gas given at beginning of call" },
          callValueTransfer: {
            v: 9e3,
            d: "Paid for CALL when the value transfor is non-zero",
          },
          callNewAccount: {
            v: 25e3,
            d: "Paid for CALL when the destination address didn't exist prior",
          },
          selfdestructRefund: {
            v: 24e3,
            d: "Refunded following a selfdestruct operation",
          },
          memory: {
            v: 3,
            d: "Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL",
          },
          quadCoeffDiv: {
            v: 512,
            d: "Divisor for the quadratic particle of the memory cost equation",
          },
          createData: { v: 200, d: "" },
          tx: {
            v: 21e3,
            d: "Per transaction. NOTE: Not payable on data of calls between transactions",
          },
          txCreation: { v: 32e3, d: "The cost of creating a contract via tx" },
          txDataZero: {
            v: 4,
            d: "Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions",
          },
          txDataNonZero: {
            v: 68,
            d: "Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions",
          },
          copy: {
            v: 3,
            d: "Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added",
          },
          ecRecover: { v: 3e3, d: "" },
          sha256: { v: 60, d: "" },
          sha256Word: { v: 12, d: "" },
          ripemd160: { v: 600, d: "" },
          ripemd160Word: { v: 120, d: "" },
          identity: { v: 15, d: "" },
          identityWord: { v: 3, d: "" },
          stop: { v: 0, d: "Base fee of the STOP opcode" },
          add: { v: 3, d: "Base fee of the ADD opcode" },
          mul: { v: 5, d: "Base fee of the MUL opcode" },
          sub: { v: 3, d: "Base fee of the SUB opcode" },
          div: { v: 5, d: "Base fee of the DIV opcode" },
          sdiv: { v: 5, d: "Base fee of the SDIV opcode" },
          mod: { v: 5, d: "Base fee of the MOD opcode" },
          smod: { v: 5, d: "Base fee of the SMOD opcode" },
          addmod: { v: 8, d: "Base fee of the ADDMOD opcode" },
          mulmod: { v: 8, d: "Base fee of the MULMOD opcode" },
          signextend: { v: 5, d: "Base fee of the SIGNEXTEND opcode" },
          lt: { v: 3, d: "Base fee of the LT opcode" },
          gt: { v: 3, d: "Base fee of the GT opcode" },
          slt: { v: 3, d: "Base fee of the SLT opcode" },
          sgt: { v: 3, d: "Base fee of the SGT opcode" },
          eq: { v: 3, d: "Base fee of the EQ opcode" },
          iszero: { v: 3, d: "Base fee of the ISZERO opcode" },
          and: { v: 3, d: "Base fee of the AND opcode" },
          or: { v: 3, d: "Base fee of the OR opcode" },
          xor: { v: 3, d: "Base fee of the XOR opcode" },
          not: { v: 3, d: "Base fee of the NOT opcode" },
          byte: { v: 3, d: "Base fee of the BYTE opcode" },
          address: { v: 2, d: "Base fee of the ADDRESS opcode" },
          balance: { v: 20, d: "Base fee of the BALANCE opcode" },
          origin: { v: 2, d: "Base fee of the ORIGIN opcode" },
          caller: { v: 2, d: "Base fee of the CALLER opcode" },
          callvalue: { v: 2, d: "Base fee of the CALLVALUE opcode" },
          calldataload: { v: 3, d: "Base fee of the CALLDATALOAD opcode" },
          calldatasize: { v: 2, d: "Base fee of the CALLDATASIZE opcode" },
          calldatacopy: { v: 3, d: "Base fee of the CALLDATACOPY opcode" },
          codesize: { v: 2, d: "Base fee of the CODESIZE opcode" },
          codecopy: { v: 3, d: "Base fee of the CODECOPY opcode" },
          gasprice: { v: 2, d: "Base fee of the GASPRICE opcode" },
          extcodesize: { v: 20, d: "Base fee of the EXTCODESIZE opcode" },
          extcodecopy: { v: 20, d: "Base fee of the EXTCODECOPY opcode" },
          blockhash: { v: 20, d: "Base fee of the BLOCKHASH opcode" },
          coinbase: { v: 2, d: "Base fee of the COINBASE opcode" },
          timestamp: { v: 2, d: "Base fee of the TIMESTAMP opcode" },
          number: { v: 2, d: "Base fee of the NUMBER opcode" },
          difficulty: { v: 2, d: "Base fee of the DIFFICULTY opcode" },
          gaslimit: { v: 2, d: "Base fee of the GASLIMIT opcode" },
          pop: { v: 2, d: "Base fee of the POP opcode" },
          mload: { v: 3, d: "Base fee of the MLOAD opcode" },
          mstore: { v: 3, d: "Base fee of the MSTORE opcode" },
          mstore8: { v: 3, d: "Base fee of the MSTORE8 opcode" },
          sstore: { v: 0, d: "Base fee of the SSTORE opcode" },
          jump: { v: 8, d: "Base fee of the JUMP opcode" },
          jumpi: { v: 10, d: "Base fee of the JUMPI opcode" },
          pc: { v: 2, d: "Base fee of the PC opcode" },
          msize: { v: 2, d: "Base fee of the MSIZE opcode" },
          gas: { v: 2, d: "Base fee of the GAS opcode" },
          push: { v: 3, d: "Base fee of the PUSH opcode" },
          dup: { v: 3, d: "Base fee of the DUP opcode" },
          swap: { v: 3, d: "Base fee of the SWAP opcode" },
          callcode: { v: 40, d: "Base fee of the CALLCODE opcode" },
          return: { v: 0, d: "Base fee of the RETURN opcode" },
          invalid: { v: 0, d: "Base fee of the INVALID opcode" },
          selfdestruct: { v: 0, d: "Base fee of the SELFDESTRUCT opcode" },
        },
        vm: {
          stackLimit: { v: 1024, d: "Maximum size of VM stack allowed" },
          callCreateDepth: { v: 1024, d: "Maximum depth of call/create stack" },
          maxExtraDataSize: {
            v: 32,
            d: "Maximum size extra data may be after Genesis",
          },
        },
        pow: {
          minimumDifficulty: {
            v: 131072,
            d: "The minimum that the difficulty may ever be",
          },
          difficultyBoundDivisor: {
            v: 2048,
            d: "The bound divisor of the difficulty, used in the update calculations",
          },
          durationLimit: {
            v: 13,
            d: "The decision boundary on the blocktime duration used to determine whether difficulty should go up or not",
          },
          epochDuration: { v: 3e4, d: "Duration between proof-of-work epochs" },
          timebombPeriod: {
            v: 1e5,
            d: "Exponential difficulty timebomb period",
          },
          minerReward: {
            v: "5000000000000000000",
            d: "the amount a miner get rewarded for mining a block",
          },
          difficultyBombDelay: {
            v: 0,
            d: "the amount of blocks to delay the difficulty bomb with",
          },
        },
      },
      L9 = {
        name: "dao",
        comment: "DAO rescue hardfork",
        url: "https://eips.ethereum.org/EIPS/eip-779",
        status: "Final",
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {},
      },
      M9 = {
        name: "homestead",
        comment: "Homestead hardfork with protocol and network changes",
        url: "https://eips.ethereum.org/EIPS/eip-606",
        status: "Final",
        gasConfig: {},
        gasPrices: {
          delegatecall: { v: 40, d: "Base fee of the DELEGATECALL opcode" },
        },
        vm: {},
        pow: {},
      },
      R9 = {
        name: "tangerineWhistle",
        comment: "Hardfork with gas cost changes for IO-heavy operations",
        url: "https://eips.ethereum.org/EIPS/eip-608",
        status: "Final",
        gasConfig: {},
        gasPrices: {
          sload: { v: 200, d: "Once per SLOAD operation" },
          call: {
            v: 700,
            d: "Once per CALL operation & message call transaction",
          },
          extcodesize: { v: 700, d: "Base fee of the EXTCODESIZE opcode" },
          extcodecopy: { v: 700, d: "Base fee of the EXTCODECOPY opcode" },
          balance: { v: 400, d: "Base fee of the BALANCE opcode" },
          delegatecall: { v: 700, d: "Base fee of the DELEGATECALL opcode" },
          callcode: { v: 700, d: "Base fee of the CALLCODE opcode" },
          selfdestruct: { v: 5e3, d: "Base fee of the SELFDESTRUCT opcode" },
        },
        vm: {},
        pow: {},
      },
      N9 = {
        name: "spuriousDragon",
        comment:
          "HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit",
        url: "https://eips.ethereum.org/EIPS/eip-607",
        status: "Final",
        gasConfig: {},
        gasPrices: {
          expByte: {
            v: 50,
            d: "Times ceil(log256(exponent)) for the EXP instruction",
          },
        },
        vm: { maxCodeSize: { v: 24576, d: "Maximum length of contract code" } },
        pow: {},
      },
      B9 = {
        name: "byzantium",
        comment:
          "Hardfork with new precompiles, instructions and other protocol changes",
        url: "https://eips.ethereum.org/EIPS/eip-609",
        status: "Final",
        gasConfig: {},
        gasPrices: {
          modexpGquaddivisor: {
            v: 20,
            d: "Gquaddivisor from modexp precompile for gas calculation",
          },
          ecAdd: { v: 500, d: "Gas costs for curve addition precompile" },
          ecMul: { v: 4e4, d: "Gas costs for curve multiplication precompile" },
          ecPairing: {
            v: 1e5,
            d: "Base gas costs for curve pairing precompile",
          },
          ecPairingWord: {
            v: 8e4,
            d: "Gas costs regarding curve pairing precompile input length",
          },
          revert: { v: 0, d: "Base fee of the REVERT opcode" },
          staticcall: { v: 700, d: "Base fee of the STATICCALL opcode" },
          returndatasize: { v: 2, d: "Base fee of the RETURNDATASIZE opcode" },
          returndatacopy: { v: 3, d: "Base fee of the RETURNDATACOPY opcode" },
        },
        vm: {},
        pow: {
          minerReward: {
            v: "3000000000000000000",
            d: "the amount a miner get rewarded for mining a block",
          },
          difficultyBombDelay: {
            v: 3e6,
            d: "the amount of blocks to delay the difficulty bomb with",
          },
        },
      },
      F9 = {
        name: "constantinople",
        comment:
          "Postponed hardfork including EIP-1283 (SSTORE gas metering changes)",
        url: "https://eips.ethereum.org/EIPS/eip-1013",
        status: "Final",
        gasConfig: {},
        gasPrices: {
          netSstoreNoopGas: {
            v: 200,
            d: "Once per SSTORE operation if the value doesn't change",
          },
          netSstoreInitGas: {
            v: 2e4,
            d: "Once per SSTORE operation from clean zero",
          },
          netSstoreCleanGas: {
            v: 5e3,
            d: "Once per SSTORE operation from clean non-zero",
          },
          netSstoreDirtyGas: {
            v: 200,
            d: "Once per SSTORE operation from dirty",
          },
          netSstoreClearRefund: {
            v: 15e3,
            d: "Once per SSTORE operation for clearing an originally existing storage slot",
          },
          netSstoreResetRefund: {
            v: 4800,
            d: "Once per SSTORE operation for resetting to the original non-zero value",
          },
          netSstoreResetClearRefund: {
            v: 19800,
            d: "Once per SSTORE operation for resetting to the original zero value",
          },
          shl: { v: 3, d: "Base fee of the SHL opcode" },
          shr: { v: 3, d: "Base fee of the SHR opcode" },
          sar: { v: 3, d: "Base fee of the SAR opcode" },
          extcodehash: { v: 400, d: "Base fee of the EXTCODEHASH opcode" },
          create2: { v: 32e3, d: "Base fee of the CREATE2 opcode" },
        },
        vm: {},
        pow: {
          minerReward: {
            v: "2000000000000000000",
            d: "The amount a miner gets rewarded for mining a block",
          },
          difficultyBombDelay: {
            v: 5e6,
            d: "the amount of blocks to delay the difficulty bomb with",
          },
        },
      },
      D9 = {
        name: "petersburg",
        comment:
          "Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople",
        url: "https://eips.ethereum.org/EIPS/eip-1716",
        status: "Final",
        gasConfig: {},
        gasPrices: {
          netSstoreNoopGas: { v: null, d: "Removed along EIP-1283" },
          netSstoreInitGas: { v: null, d: "Removed along EIP-1283" },
          netSstoreCleanGas: { v: null, d: "Removed along EIP-1283" },
          netSstoreDirtyGas: { v: null, d: "Removed along EIP-1283" },
          netSstoreClearRefund: { v: null, d: "Removed along EIP-1283" },
          netSstoreResetRefund: { v: null, d: "Removed along EIP-1283" },
          netSstoreResetClearRefund: { v: null, d: "Removed along EIP-1283" },
        },
        vm: {},
        pow: {},
      },
      z9 = {
        name: "istanbul",
        comment:
          "HF targeted for December 2019 following the Constantinople/Petersburg HF",
        url: "https://eips.ethereum.org/EIPS/eip-1679",
        status: "Final",
        gasConfig: {},
        gasPrices: {
          blake2Round: {
            v: 1,
            d: "Gas cost per round for the Blake2 F precompile",
          },
          ecAdd: { v: 150, d: "Gas costs for curve addition precompile" },
          ecMul: { v: 6e3, d: "Gas costs for curve multiplication precompile" },
          ecPairing: {
            v: 45e3,
            d: "Base gas costs for curve pairing precompile",
          },
          ecPairingWord: {
            v: 34e3,
            d: "Gas costs regarding curve pairing precompile input length",
          },
          txDataNonZero: {
            v: 16,
            d: "Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions",
          },
          sstoreSentryGasEIP2200: {
            v: 2300,
            d: "Minimum gas required to be present for an SSTORE call, not consumed",
          },
          sstoreNoopGasEIP2200: {
            v: 800,
            d: "Once per SSTORE operation if the value doesn't change",
          },
          sstoreDirtyGasEIP2200: {
            v: 800,
            d: "Once per SSTORE operation if a dirty value is changed",
          },
          sstoreInitGasEIP2200: {
            v: 2e4,
            d: "Once per SSTORE operation from clean zero to non-zero",
          },
          sstoreInitRefundEIP2200: {
            v: 19200,
            d: "Once per SSTORE operation for resetting to the original zero value",
          },
          sstoreCleanGasEIP2200: {
            v: 5e3,
            d: "Once per SSTORE operation from clean non-zero to something else",
          },
          sstoreCleanRefundEIP2200: {
            v: 4200,
            d: "Once per SSTORE operation for resetting to the original non-zero value",
          },
          sstoreClearRefundEIP2200: {
            v: 15e3,
            d: "Once per SSTORE operation for clearing an originally existing storage slot",
          },
          balance: { v: 700, d: "Base fee of the BALANCE opcode" },
          extcodehash: { v: 700, d: "Base fee of the EXTCODEHASH opcode" },
          chainid: { v: 2, d: "Base fee of the CHAINID opcode" },
          selfbalance: { v: 5, d: "Base fee of the SELFBALANCE opcode" },
          sload: { v: 800, d: "Base fee of the SLOAD opcode" },
        },
        vm: {},
        pow: {},
      },
      H9 = {
        name: "muirGlacier",
        comment: "HF to delay the difficulty bomb",
        url: "https://eips.ethereum.org/EIPS/eip-2384",
        status: "Final",
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {
          difficultyBombDelay: {
            v: 9e6,
            d: "the amount of blocks to delay the difficulty bomb with",
          },
        },
      },
      U9 = {
        name: "berlin",
        comment: "HF targeted for July 2020 following the Muir Glacier HF",
        url: "https://eips.ethereum.org/EIPS/eip-2070",
        status: "Final",
        eips: [2565, 2929, 2718, 2930],
      },
      W9 = {
        name: "london",
        comment: "HF targeted for July 2021 following the Berlin fork",
        url: "https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/london.md",
        status: "Final",
        eips: [1559, 3198, 3529, 3541],
      },
      X9 = {
        name: "shanghai",
        comment:
          "Next feature hardfork after the merge hardfork having withdrawals, warm coinbase, push0, limit/meter initcode",
        url: "https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/shanghai.md",
        status: "Final",
        eips: [3651, 3855, 3860, 4895],
      },
      j9 = {
        name: "arrowGlacier",
        comment: "HF to delay the difficulty bomb",
        url: "https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/arrow-glacier.md",
        status: "Final",
        eips: [4345],
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {},
      },
      G9 = {
        name: "grayGlacier",
        comment: "Delaying the difficulty bomb to Mid September 2022",
        url: "https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/gray-glacier.md",
        status: "Draft",
        eips: [5133],
        gasConfig: {},
        gasPrices: {},
        vm: {},
        pow: {},
      },
      Y9 = {
        name: "mergeForkIdTransition",
        comment: "Pre-merge hardfork to fork off non-upgraded clients",
        url: "https://eips.ethereum.org/EIPS/eip-3675",
        status: "Draft",
        eips: [],
      },
      V9 = {
        name: "merge",
        comment:
          "Hardfork to upgrade the consensus mechanism to Proof-of-Stake",
        url: "https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/merge.md",
        status: "Final",
        consensus: { type: "pos", algorithm: "casper", casper: {} },
        eips: [3675, 4399],
      },
      q9 = {
        chainstart: O9,
        homestead: M9,
        dao: L9,
        tangerineWhistle: R9,
        spuriousDragon: N9,
        byzantium: B9,
        constantinople: F9,
        petersburg: D9,
        istanbul: z9,
        muirGlacier: H9,
        berlin: U9,
        london: W9,
        shanghai: X9,
        arrowGlacier: j9,
        grayGlacier: G9,
        mergeForkIdTransition: Y9,
        merge: V9,
      },
      { buf: K9 } = s9;
    class dn extends ay.EventEmitter {
      constructor(e) {
        var r, n;
        super(),
          (this._eips = []),
          (this._customChains =
            (r = e.customChains) !== null && r !== void 0 ? r : []),
          (this._chainParams = this.setChain(e.chain)),
          (this.DEFAULT_HARDFORK =
            (n = this._chainParams.defaultHardfork) !== null && n !== void 0
              ? n
              : Sr.Merge),
          (this.HARDFORK_CHANGES = this.hardforks().map((i) => [
            i.name,
            q9[i.name],
          ])),
          (this._hardfork = this.DEFAULT_HARDFORK),
          e.hardfork !== void 0 && this.setHardfork(e.hardfork),
          e.eips && this.setEIPs(e.eips);
      }
      static custom(e, r = {}) {
        var n;
        const i = (n = r.baseChain) !== null && n !== void 0 ? n : "mainnet",
          a = Object.assign({}, dn._getChainParams(i));
        if (((a.name = "custom-chain"), typeof e != "string"))
          return new dn(
            Object.assign({ chain: Object.assign(Object.assign({}, a), e) }, r)
          );
        if (e === On.PolygonMainnet)
          return dn.custom(
            { name: On.PolygonMainnet, chainId: 137, networkId: 137 },
            r
          );
        if (e === On.PolygonMumbai)
          return dn.custom(
            { name: On.PolygonMumbai, chainId: 80001, networkId: 80001 },
            r
          );
        if (e === On.ArbitrumRinkebyTestnet)
          return dn.custom(
            {
              name: On.ArbitrumRinkebyTestnet,
              chainId: 421611,
              networkId: 421611,
            },
            r
          );
        if (e === On.ArbitrumOne)
          return dn.custom(
            { name: On.ArbitrumOne, chainId: 42161, networkId: 42161 },
            r
          );
        if (e === On.xDaiChain)
          return dn.custom(
            { name: On.xDaiChain, chainId: 100, networkId: 100 },
            r
          );
        if (e === On.OptimisticKovan)
          return dn.custom(
            { name: On.OptimisticKovan, chainId: 69, networkId: 69 },
            Object.assign({ hardfork: Sr.Berlin }, r)
          );
        if (e === On.OptimisticEthereum)
          return dn.custom(
            { name: On.OptimisticEthereum, chainId: 10, networkId: 10 },
            Object.assign({ hardfork: Sr.Berlin }, r)
          );
        throw new Error(`Custom chain ${e} not supported`);
      }
      static fromGethGenesis(
        e,
        {
          chain: r,
          eips: n,
          genesisHash: i,
          hardfork: a,
          mergeForkIdPostMerge: l,
        }
      ) {
        var u;
        const p = KW(e, r, l),
          m = new dn({
            chain: (u = p.name) !== null && u !== void 0 ? u : "custom",
            customChains: [p],
            eips: n,
            hardfork: a ?? p.hardfork,
          });
        return i !== void 0 && m.setForkHashes(i), m;
      }
      static isSupportedChainId(e) {
        return !!this._getInitializedChains().names[e.toString()];
      }
      static _getChainParams(e, r) {
        let n = e;
        const i = this._getInitializedChains(r);
        if (typeof n == "number" || typeof n == "bigint") {
          if (((n = n.toString()), i.names[n])) {
            const a = i.names[n];
            return i[a];
          }
          throw new Error(`Chain with ID ${n} not supported`);
        }
        if (i[n] !== void 0) return i[n];
        throw new Error(`Chain with name ${n} not supported`);
      }
      setChain(e) {
        if (
          typeof e == "number" ||
          typeof e == "bigint" ||
          typeof e == "string"
        )
          this._chainParams = dn._getChainParams(e, this._customChains);
        else if (typeof e == "object") {
          if (this._customChains.length > 0)
            throw new Error(
              "Chain must be a string, number, or bigint when initialized with customChains passed in"
            );
          const r = ["networkId", "genesis", "hardforks", "bootstrapNodes"];
          for (const n of r)
            if (!(n in e))
              throw new Error(`Missing required chain parameter: ${n}`);
          this._chainParams = e;
        } else throw new Error("Wrong input format");
        for (const r of this.hardforks())
          if (r.block === void 0)
            throw new Error("Hardfork cannot have undefined block number");
        return this._chainParams;
      }
      setHardfork(e) {
        let r = !1;
        for (const n of this.HARDFORK_CHANGES)
          n[0] === e &&
            (this._hardfork !== e &&
              ((this._hardfork = e), this.emit("hardforkChanged", e)),
            (r = !0));
        if (!r) throw new Error(`Hardfork with name ${e} not supported`);
      }
      getHardforkByBlockNumber(e, r, n) {
        const i = Cc(e, _i.BigInt),
          a = Cc(r, _i.BigInt),
          l = Cc(n, _i.Number),
          u = this.hardforks().filter(
            (w) =>
              w.block !== null ||
              (w.ttd !== null && w.ttd !== void 0) ||
              w.timestamp !== void 0
          ),
          p = u.findIndex((w) => w.ttd !== null && w.ttd !== void 0);
        if (
          u.slice(p + 1).findIndex((w) => w.ttd !== null && w.ttd !== void 0) >=
          0
        )
          throw Error("More than one merge hardforks found with ttd specified");
        let m = u.findIndex(
          (w) =>
            (w.block !== null && w.block > i) ||
            (l !== void 0 && Number(w.timestamp) > l)
        );
        if (m === -1) m = u.length;
        else if (m === 0)
          throw Error("Must have at least one hardfork at block 0");
        if (l === void 0) {
          const w = u
            .slice(0, m)
            .reverse()
            .findIndex((S) => S.block !== null || S.ttd !== void 0);
          m -= w;
        }
        if (((m -= 1), u[m].block === null && u[m].timestamp === void 0))
          (a == null || BigInt(u[m].ttd) > a) && (m -= 1);
        else if (p >= 0 && a !== void 0 && a !== null) {
          if (m >= p && BigInt(u[p].ttd) > a)
            throw Error(
              "Maximum HF determined by total difficulty is lower than the block number HF"
            );
          if (m < p && BigInt(u[p].ttd) <= a)
            throw Error(
              "HF determined by block number is lower than the minimum total difficulty HF"
            );
        }
        const v = m;
        for (
          ;
          m < u.length - 1 &&
          !(
            u[m].block !== u[m + 1].block ||
            u[m].timestamp !== u[m + 1].timestamp
          );
          m += 1
        );
        if (l) {
          if (
            u.slice(0, v).reduce((w, S) => {
              var M;
              return Math.max(
                Number((M = S.timestamp) !== null && M !== void 0 ? M : "0"),
                w
              );
            }, 0) > l
          )
            throw Error(
              "Maximum HF determined by timestamp is lower than the block number/ttd HF"
            );
          if (
            u.slice(m + 1).reduce((w, S) => {
              var M;
              return Math.min(
                Number((M = S.timestamp) !== null && M !== void 0 ? M : l),
                w
              );
            }, l) < l
          )
            throw Error(
              "Maximum HF determined by block number/ttd is lower than timestamp HF"
            );
        }
        return u[m].name;
      }
      setHardforkByBlockNumber(e, r, n) {
        const i = this.getHardforkByBlockNumber(e, r, n);
        return this.setHardfork(i), i;
      }
      _getHardfork(e) {
        const r = this.hardforks();
        for (const n of r) if (n.name === e) return n;
        return null;
      }
      setEIPs(e = []) {
        for (const r of e) {
          if (!(r in Ec)) throw new Error(`${r} not supported`);
          const n = this.gteHardfork(Ec[r].minimumHardfork);
          if (!n)
            throw new Error(
              `${r} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${n}`
            );
          if (Ec[r].requiredEIPs !== void 0) {
            for (const i of Ec[r].requiredEIPs)
              if (!(e.includes(i) || this.isActivatedEIP(i)))
                throw new Error(
                  `${r} requires EIP ${i}, but is not included in the EIP list`
                );
          }
        }
        this._eips = e;
      }
      param(e, r) {
        let n;
        for (const i of this._eips)
          if (((n = this.paramByEIP(e, r, i)), n !== void 0)) return n;
        return this.paramByHardfork(e, r, this._hardfork);
      }
      paramByHardfork(e, r, n) {
        let i = null;
        for (const a of this.HARDFORK_CHANGES) {
          if ("eips" in a[1]) {
            const l = a[1].eips;
            for (const u of l) {
              const p = this.paramByEIP(e, r, u);
              i = typeof p == "bigint" ? p : i;
            }
          } else {
            if (a[1][e] === void 0) throw new Error(`Topic ${e} not defined`);
            a[1][e][r] !== void 0 && (i = a[1][e][r].v);
          }
          if (a[0] === n) break;
        }
        return BigInt(i ?? 0);
      }
      paramByEIP(e, r, n) {
        if (!(n in Ec)) throw new Error(`${n} not supported`);
        const i = Ec[n];
        if (!(e in i)) throw new Error(`Topic ${e} not defined`);
        if (i[e][r] === void 0) return;
        const a = i[e][r].v;
        return BigInt(a);
      }
      paramByBlock(e, r, n, i, a) {
        const l = this.getHardforkByBlockNumber(n, i, a);
        return this.paramByHardfork(e, r, l);
      }
      isActivatedEIP(e) {
        if (this.eips().includes(e)) return !0;
        for (const r of this.HARDFORK_CHANGES) {
          const n = r[1];
          if (this.gteHardfork(n.name) && "eips" in n && n.eips.includes(e))
            return !0;
        }
        return !1;
      }
      hardforkIsActiveOnBlock(e, r) {
        const n = Cc(r, _i.BigInt),
          i = e ?? this._hardfork,
          a = this.hardforkBlock(i);
        return typeof a == "bigint" && a !== BigInt(0) && n >= a;
      }
      activeOnBlock(e) {
        return this.hardforkIsActiveOnBlock(null, e);
      }
      hardforkGteHardfork(e, r) {
        const n = e ?? this._hardfork,
          i = this.hardforks();
        let a = -1,
          l = -1,
          u = 0;
        for (const p of i)
          p.name === n && (a = u), p.name === r && (l = u), (u += 1);
        return a >= l && l !== -1;
      }
      gteHardfork(e) {
        return this.hardforkGteHardfork(null, e);
      }
      hardforkBlock(e) {
        var r;
        const n = e ?? this._hardfork,
          i =
            (r = this._getHardfork(n)) === null || r === void 0
              ? void 0
              : r.block;
        return i == null ? null : BigInt(i);
      }
      hardforkTimestamp(e) {
        var r;
        const n = e ?? this._hardfork,
          i =
            (r = this._getHardfork(n)) === null || r === void 0
              ? void 0
              : r.timestamp;
        return i == null ? null : BigInt(i);
      }
      eipBlock(e) {
        for (const r of this.HARDFORK_CHANGES) {
          const n = r[1];
          if ("eips" in n && n.eips.includes(e))
            return this.hardforkBlock(
              typeof r[0] == "number" ? String(r[0]) : r[0]
            );
        }
        return null;
      }
      hardforkTTD(e) {
        var r;
        const n = e ?? this._hardfork,
          i =
            (r = this._getHardfork(n)) === null || r === void 0
              ? void 0
              : r.ttd;
        return i == null ? null : BigInt(i);
      }
      isHardforkBlock(e, r) {
        const n = Cc(e, _i.BigInt),
          i = r ?? this._hardfork,
          a = this.hardforkBlock(i);
        return typeof a == "bigint" && a !== BigInt(0) ? a === n : !1;
      }
      nextHardforkBlockOrTimestamp(e) {
        var r, n;
        const i = e ?? this._hardfork,
          a = this.hardforks();
        let l = a.findIndex((v) => v.name === i);
        if ((i === Sr.Merge && (l -= 1), l < 0)) return null;
        let u = (r = a[l].timestamp) !== null && r !== void 0 ? r : a[l].block;
        u = u != null ? Number(u) : null;
        const p = a.slice(l + 1).find((v) => {
          var w;
          let S = (w = v.timestamp) !== null && w !== void 0 ? w : v.block;
          return (
            (S = S != null ? Number(S) : null),
            v.name !== Sr.Merge && S !== null && S !== void 0 && S !== u
          );
        });
        if (p === void 0) return null;
        const m = (n = p.timestamp) !== null && n !== void 0 ? n : p.block;
        return m == null ? null : BigInt(m);
      }
      nextHardforkBlock(e) {
        const r = e ?? this._hardfork;
        let n = this.hardforkBlock(r);
        if (n === null && r === Sr.Merge) {
          const i = this.hardforks(),
            a = i.findIndex((l) => l.ttd !== null && l.ttd !== void 0);
          if (a < 0) throw Error("Merge hardfork should have been found");
          n = this.hardforkBlock(i[a - 1].name);
        }
        return n === null
          ? null
          : this.hardforks().reduce((i, a) => {
              const l = BigInt(
                a.block === null || (a.ttd !== void 0 && a.ttd !== null)
                  ? 0
                  : a.block
              );
              return l > n && i === null ? l : i;
            }, null);
      }
      isNextHardforkBlock(e, r) {
        const n = Cc(e, _i.BigInt),
          i = r ?? this._hardfork,
          a = this.nextHardforkBlock(i);
        return a === null ? !1 : a === n;
      }
      _calcForkHash(e, r) {
        let n = new Uint8Array(),
          i = 0;
        for (const l of this.hardforks()) {
          const { block: u, timestamp: p, name: m } = l;
          let v = p ?? u;
          if (
            ((v = v !== null ? Number(v) : null),
            typeof v == "number" && v !== 0 && v !== i && m !== Sr.Merge)
          ) {
            const w = Cr(v.toString(16).padStart(16, "0"));
            (n = Vi(n, w)), (i = v);
          }
          if (l.name === e) break;
        }
        const a = Vi(r, n);
        return Pt($W(K9(a) >>> 0));
      }
      forkHash(e, r) {
        const n = e ?? this._hardfork,
          i = this._getHardfork(n);
        if (
          i === null ||
          ((i == null ? void 0 : i.block) === null &&
            (i == null ? void 0 : i.timestamp) === void 0 &&
            (i == null ? void 0 : i.ttd) === void 0)
        ) {
          const a = "No fork hash calculation possible for future hardfork";
          throw new Error(a);
        }
        if (
          (i == null ? void 0 : i.forkHash) !== null &&
          (i == null ? void 0 : i.forkHash) !== void 0
        )
          return i.forkHash;
        if (!r)
          throw new Error("genesisHash required for forkHash calculation");
        return this._calcForkHash(n, r);
      }
      hardforkForForkHash(e) {
        const r = this.hardforks().filter((n) => n.forkHash === e);
        return r.length >= 1 ? r[r.length - 1] : null;
      }
      setForkHashes(e) {
        var r;
        for (const n of this.hardforks()) {
          const i = (r = n.timestamp) !== null && r !== void 0 ? r : n.block;
          (n.forkHash === null || n.forkHash === void 0) &&
            (i != null || typeof n.ttd < "u") &&
            (n.forkHash = this.forkHash(n.name, e));
        }
      }
      genesis() {
        return this._chainParams.genesis;
      }
      hardforks() {
        return this._chainParams.hardforks;
      }
      bootstrapNodes() {
        return this._chainParams.bootstrapNodes;
      }
      dnsNetworks() {
        return this._chainParams.dnsNetworks;
      }
      hardfork() {
        return this._hardfork;
      }
      chainId() {
        return BigInt(this._chainParams.chainId);
      }
      chainName() {
        return this._chainParams.name;
      }
      networkId() {
        return BigInt(this._chainParams.networkId);
      }
      eips() {
        return this._eips;
      }
      consensusType() {
        const e = this.hardfork();
        let r;
        for (const n of this.HARDFORK_CHANGES)
          if (("consensus" in n[1] && (r = n[1].consensus.type), n[0] === e))
            break;
        return r ?? this._chainParams.consensus.type;
      }
      consensusAlgorithm() {
        const e = this.hardfork();
        let r;
        for (const n of this.HARDFORK_CHANGES)
          if (
            ("consensus" in n[1] && (r = n[1].consensus.algorithm), n[0] === e)
          )
            break;
        return r ?? this._chainParams.consensus.algorithm;
      }
      consensusConfig() {
        var e;
        const r = this.hardfork();
        let n;
        for (const i of this.HARDFORK_CHANGES)
          if (
            ("consensus" in i[1] &&
              (n = i[1].consensus[i[1].consensus.algorithm]),
            i[0] === r)
          )
            break;
        return (e =
          n ?? this._chainParams.consensus[this.consensusAlgorithm()]) !==
          null && e !== void 0
          ? e
          : {};
      }
      copy() {
        const e = Object.assign(
          Object.create(Object.getPrototypeOf(this)),
          this
        );
        return e.removeAllListeners(), e;
      }
      static _getInitializedChains(e) {
        const r = {};
        for (const [i, a] of Object.entries(Lp)) r[a] = i.toLowerCase();
        const n = { mainnet: o9, goerli: a9, sepolia: l9 };
        if (e)
          for (const i of e) {
            const { name: a } = i;
            (r[i.chainId.toString()] = a), (n[a] = i);
          }
        return (n.names = r), n;
      }
    }
    var _s;
    (function (t) {
      (t[(t.EIP155ReplayProtection = 155)] = "EIP155ReplayProtection"),
        (t[(t.EIP1559FeeMarket = 1559)] = "EIP1559FeeMarket"),
        (t[(t.EIP2718TypedTransaction = 2718)] = "EIP2718TypedTransaction"),
        (t[(t.EIP2930AccessLists = 2930)] = "EIP2930AccessLists");
    })(_s || (_s = {}));
    function $9(t) {
      if (t.length === 0) return !0;
      const e = t[0];
      return !!Array.isArray(e);
    }
    function Z9(t) {
      return !$9(t);
    }
    class Ic {
      constructor(e) {
        if (e.length !== 20) throw new Error("Invalid address length");
        this.buf = e;
      }
      static zero() {
        return new Ic(v2(20));
      }
      equals(e) {
        return mp(this.buf, e.buf);
      }
      isZero() {
        return this.equals(Ic.zero());
      }
      toString() {
        return Pt(this.buf);
      }
      toArray() {
        return this.buf;
      }
      static publicToAddress(e, r = !1) {
        let n = e;
        if (
          (Ty(n),
          r &&
            n.length !== 64 &&
            (n = to.ProjectivePoint.fromHex(n).toRawBytes(!1).slice(1)),
          n.length !== 64)
        )
          throw new Error("Expected pubKey to be of length 64");
        return Tn(n).slice(-20);
      }
    }
    const Q9 = (t, e) => {
        const r = t.param("vm", "maxInitCodeSize");
        if (r && BigInt(e) > r)
          throw new Error(
            `the initcode size of this transaction is too large: it is ${e} while the max is ${t.param(
              "vm",
              "maxInitCodeSize"
            )}`
          );
      },
      I2 = (t) => {
        let e, r;
        if (Z9(t)) {
          e = t;
          const n = [];
          for (let i = 0; i < t.length; i += 1) {
            const a = t[i],
              l = Dr(a.address),
              u = [];
            for (let p = 0; p < a.storageKeys.length; p += 1)
              u.push(Dr(a.storageKeys[p]));
            n.push([l, u]);
          }
          r = n;
        } else {
          r = t ?? [];
          const n = [];
          for (let i = 0; i < r.length; i += 1) {
            const a = r[i],
              l = Pt(a[0]),
              u = [];
            for (let m = 0; m < a[1].length; m += 1) u.push(Pt(a[1][m]));
            const p = { address: l, storageKeys: u };
            n.push(p);
          }
          e = n;
        }
        return { AccessListJSON: e, accessList: r };
      },
      T2 = (t) => {
        for (let e = 0; e < t.length; e += 1) {
          const r = t[e],
            n = r[0],
            i = r[1];
          if (r[2] !== void 0)
            throw new Error(
              "Access list item cannot have 3 elements. It can only have an address, and an array of storage slots."
            );
          if (n.length !== 20)
            throw new Error(
              "Invalid EIP-2930 transaction: address length should be 20 bytes"
            );
          for (let a = 0; a < i.length; a += 1)
            if (i[a].length !== 32)
              throw new Error(
                "Invalid EIP-2930 transaction: storage slot length should be 32 bytes"
              );
        }
      },
      P2 = (t) => {
        const e = [];
        for (let r = 0; r < t.length; r += 1) {
          const n = t[r],
            i = { address: Pt(y2(n[0], 20)), storageKeys: [] },
            a = n && n[1];
          for (let l = 0; l < a.length; l += 1) {
            const u = a[l];
            i.storageKeys.push(Pt(y2(u, 32)));
          }
          e.push(i);
        }
        return e;
      },
      O2 = (t, e) => {
        const r = e.param("gasPrices", "accessListStorageKeyCost"),
          n = e.param("gasPrices", "accessListAddressCost");
        let i = 0;
        for (let a = 0; a < t.length; a += 1) {
          const l = t[a][1];
          i += l.length;
        }
        return t.length * Number(n) + i * Number(r);
      };
    class Tc {
      constructor(e, r) {
        var n, i;
        (this.cache = { hash: void 0, dataFee: void 0 }),
          (this.activeCapabilities = []),
          (this.DEFAULT_CHAIN = Lp.Mainnet),
          (this.DEFAULT_HARDFORK = Sr.Merge);
        const {
          nonce: a,
          gasLimit: l,
          to: u,
          value: p,
          data: m,
          v,
          r: w,
          s: S,
          type: M,
        } = e;
        (this._type = Number(pr(Dr(M)))), (this.txOptions = r);
        const D = Dr(u === "" ? "0x" : u),
          z = Dr(v === "" ? "0x" : v),
          V = Dr(w === "" ? "0x" : w),
          j = Dr(S === "" ? "0x" : S);
        (this.nonce = pr(Dr(a === "" ? "0x" : a))),
          (this.gasLimit = pr(Dr(l === "" ? "0x" : l))),
          (this.to = D.length > 0 ? new Ic(D) : void 0),
          (this.value = pr(Dr(p === "" ? "0x" : p))),
          (this.data = Dr(m === "" ? "0x" : m)),
          (this.v = z.length > 0 ? pr(z) : void 0),
          (this.r = V.length > 0 ? pr(V) : void 0),
          (this.s = j.length > 0 ? pr(j) : void 0),
          this._validateCannotExceedMaxInteger({
            value: this.value,
            r: this.r,
            s: this.s,
          }),
          this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64),
          this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, !0);
        const B = this.to === void 0 || this.to === null,
          ae =
            (n = r.allowUnlimitedInitCodeSize) !== null && n !== void 0
              ? n
              : !1,
          re = (i = r.common) !== null && i !== void 0 ? i : this._getCommon();
        B && re.isActivatedEIP(3860) && !ae && Q9(re, this.data.length);
      }
      get type() {
        return this._type;
      }
      supports(e) {
        return this.activeCapabilities.includes(e);
      }
      validate(e = !1) {
        const r = [];
        return (
          this.getBaseFee() > this.gasLimit &&
            r.push(
              `gasLimit is too low. given ${
                this.gasLimit
              }, need at least ${this.getBaseFee()}`
            ),
          this.isSigned() &&
            !this.verifySignature() &&
            r.push("Invalid Signature"),
          e ? r : r.length === 0
        );
      }
      _validateYParity() {
        const { v: e } = this;
        if (e !== void 0 && e !== BigInt(0) && e !== BigInt(1)) {
          const r = this._errorMsg(
            "The y-parity of the transaction should either be 0 or 1"
          );
          throw new Error(r);
        }
      }
      _validateHighS() {
        const { s: e } = this;
        if (this.common.gteHardfork("homestead") && e !== void 0 && e > GW) {
          const r = this._errorMsg(
            "Invalid Signature: s-values greater than secp256k1n/2 are considered invalid"
          );
          throw new Error(r);
        }
      }
      getBaseFee() {
        const e = this.common.param("gasPrices", "tx");
        let r = this.getDataFee();
        if (
          (e && (r += e),
          this.common.gteHardfork("homestead") && this.toCreationAddress())
        ) {
          const n = this.common.param("gasPrices", "txCreation");
          n && (r += n);
        }
        return r;
      }
      getDataFee() {
        const e = this.common.param("gasPrices", "txDataZero"),
          r = this.common.param("gasPrices", "txDataNonZero");
        let n = BigInt(0);
        for (let i = 0; i < this.data.length; i += 1)
          this.data[i] === 0 ? (n += e) : (n += r);
        if (
          (this.to === void 0 || this.to === null) &&
          this.common.isActivatedEIP(3860)
        ) {
          const i = BigInt(Math.ceil(this.data.length / 32)),
            a = this.common.param("gasPrices", "initCodeWordCost") * i;
          n += a;
        }
        return n;
      }
      toCreationAddress() {
        return this.to === void 0 || this.to.buf.length === 0;
      }
      isSigned() {
        const { v: e, r, s: n } = this;
        return !(e === void 0 || r === void 0 || n === void 0);
      }
      verifySignature() {
        try {
          const e = this.getSenderPublicKey();
          return Mp(e).length !== 0;
        } catch {
          return !1;
        }
      }
      getSenderAddress() {
        return new Ic(Ic.publicToAddress(this.getSenderPublicKey()));
      }
      sign(e) {
        if (e.length !== 32) {
          const p = this._errorMsg("Private key must be 32 bytes in length.");
          throw new Error(p);
        }
        let r = !1;
        this.type === 0 &&
          this.common.gteHardfork("spuriousDragon") &&
          !this.supports(_s.EIP155ReplayProtection) &&
          (this.activeCapabilities.push(_s.EIP155ReplayProtection), (r = !0));
        const n = this.getMessageToSign(!0),
          { v: i, r: a, s: l } = this._ecsign(n, e),
          u = this._processSignature(i, a, l);
        if (r) {
          const p = this.activeCapabilities.indexOf(_s.EIP155ReplayProtection);
          p > -1 && this.activeCapabilities.splice(p, 1);
        }
        return u;
      }
      _getCommon(e, r) {
        var n;
        if (r !== void 0) {
          const i = pr(Dr(r));
          if (e) {
            if (e.chainId() !== i) {
              const a = this._errorMsg(
                "The chain ID does not match the chain ID of Common"
              );
              throw new Error(a);
            }
            return e.copy();
          }
          return dn.isSupportedChainId(i)
            ? new dn({ chain: i, hardfork: this.DEFAULT_HARDFORK })
            : dn.custom(
                { name: "custom-chain", networkId: i, chainId: i },
                {
                  baseChain: this.DEFAULT_CHAIN,
                  hardfork: this.DEFAULT_HARDFORK,
                }
              );
        }
        return (n = e == null ? void 0 : e.copy()) !== null && n !== void 0
          ? n
          : new dn({
              chain: this.DEFAULT_CHAIN,
              hardfork: this.DEFAULT_HARDFORK,
            });
      }
      _validateCannotExceedMaxInteger(e, r = 256, n = !1) {
        for (const [i, a] of Object.entries(e))
          switch (r) {
            case 64:
              if (n) {
                if (a !== void 0 && a >= h2) {
                  const l = this._errorMsg(
                    `${i} cannot equal or exceed MAX_UINT64 (2^64-1), given ${a}`
                  );
                  throw new Error(l);
                }
              } else if (a !== void 0 && a > h2) {
                const l = this._errorMsg(
                  `${i} cannot exceed MAX_UINT64 (2^64-1), given ${a}`
                );
                throw new Error(l);
              }
              break;
            case 256:
              if (n) {
                if (a !== void 0 && a >= Ch) {
                  const l = this._errorMsg(
                    `${i} cannot equal or exceed MAX_INTEGER (2^256-1), given ${a}`
                  );
                  throw new Error(l);
                }
              } else if (a !== void 0 && a > Ch) {
                const l = this._errorMsg(
                  `${i} cannot exceed MAX_INTEGER (2^256-1), given ${a}`
                );
                throw new Error(l);
              }
              break;
            default: {
              const l = this._errorMsg("unimplemented bits value");
              throw new Error(l);
            }
          }
      }
      static _validateNotArray(e) {
        const r = [
          "nonce",
          "gasPrice",
          "gasLimit",
          "to",
          "value",
          "data",
          "v",
          "r",
          "s",
          "type",
          "baseFee",
          "maxFeePerGas",
          "chainId",
        ];
        for (const [n, i] of Object.entries(e))
          if (r.includes(n) && Array.isArray(i))
            throw new Error(`${n} cannot be an array`);
      }
      _getSharedErrorPostfix() {
        let e = "";
        try {
          e = this.isSigned() ? Pt(this.hash()) : "not available (unsigned)";
        } catch {
          e = "error";
        }
        let r = "";
        try {
          r = this.isSigned().toString();
        } catch {
          e = "error";
        }
        let n = "";
        try {
          n = this.common.hardfork();
        } catch {
          n = "error";
        }
        let i = `tx type=${this.type} hash=${e} nonce=${this.nonce} value=${this.value} `;
        return (i += `signed=${r} hf=${n}`), i;
      }
      _ecsign(e, r, n) {
        const i = to.sign(e, r),
          a = i.toCompactRawBytes(),
          l = a.subarray(0, 32),
          u = a.subarray(32, 64),
          p =
            n === void 0
              ? BigInt(i.recovery + 27)
              : BigInt(i.recovery + 35) + BigInt(n) * BigInt(2);
        return { r: l, s: u, v: p };
      }
    }
    const Ny = 2,
      By = Cr(Ny.toString(16).padStart(2, "0"));
    class ol extends Tc {
      constructor(e, r = {}) {
        var n;
        super(Object.assign(Object.assign({}, e), { type: Ny }), r),
          (this.DEFAULT_HARDFORK = "london");
        const {
          chainId: i,
          accessList: a,
          maxFeePerGas: l,
          maxPriorityFeePerGas: u,
        } = e;
        if (
          ((this.common = this._getCommon(r.common, i)),
          (this.chainId = this.common.chainId()),
          !this.common.isActivatedEIP(1559))
        )
          throw new Error("EIP-1559 not enabled on Common");
        this.activeCapabilities = this.activeCapabilities.concat([
          1559, 2718, 2930,
        ]);
        const p = I2(a ?? []);
        if (
          ((this.accessList = p.accessList),
          (this.AccessListJSON = p.AccessListJSON),
          T2(this.accessList),
          (this.maxFeePerGas = pr(Dr(l === "" ? "0x" : l))),
          (this.maxPriorityFeePerGas = pr(Dr(u === "" ? "0x" : u))),
          this._validateCannotExceedMaxInteger({
            maxFeePerGas: this.maxFeePerGas,
            maxPriorityFeePerGas: this.maxPriorityFeePerGas,
          }),
          Tc._validateNotArray(e),
          this.gasLimit * this.maxFeePerGas > Ch)
        ) {
          const m = this._errorMsg(
            "gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)"
          );
          throw new Error(m);
        }
        if (this.maxFeePerGas < this.maxPriorityFeePerGas) {
          const m = this._errorMsg(
            "maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)"
          );
          throw new Error(m);
        }
        this._validateYParity(),
          this._validateHighS(),
          (!((n = r == null ? void 0 : r.freeze) !== null && n !== void 0) ||
            n) &&
            Object.freeze(this);
      }
      static fromTxData(e, r = {}) {
        return new ol(e, r);
      }
      static fromSerializedTx(e, r = {}) {
        if (!mp(e.subarray(0, 1), By))
          throw new Error(
            `Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${Ny}, received: ${Pt(
              e.subarray(0, 1)
            )}`
          );
        const n = ui.decode(e.subarray(1));
        if (!Array.isArray(n))
          throw new Error("Invalid serialized tx input: must be array");
        return ol.fromValuesArray(n, r);
      }
      static fromValuesArray(e, r = {}) {
        if (e.length !== 9 && e.length !== 12)
          throw new Error(
            "Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx)."
          );
        const [n, i, a, l, u, p, m, v, w, S, M, D] = e;
        return (
          this._validateNotArray({ chainId: n, v: S }),
          U0({
            nonce: i,
            maxPriorityFeePerGas: a,
            maxFeePerGas: l,
            gasLimit: u,
            value: m,
            v: S,
            r: M,
            s: D,
          }),
          new ol(
            {
              chainId: pr(n),
              nonce: i,
              maxPriorityFeePerGas: a,
              maxFeePerGas: l,
              gasLimit: u,
              to: p,
              value: m,
              data: v,
              accessList: w ?? [],
              v: S !== void 0 ? pr(S) : void 0,
              r: M,
              s: D,
            },
            r
          )
        );
      }
      getDataFee() {
        if (
          this.cache.dataFee &&
          this.cache.dataFee.hardfork === this.common.hardfork()
        )
          return this.cache.dataFee.value;
        let e = super.getDataFee();
        return (
          (e += BigInt(O2(this.accessList, this.common))),
          Object.isFrozen(this) &&
            (this.cache.dataFee = {
              value: e,
              hardfork: this.common.hardfork(),
            }),
          e
        );
      }
      getUpfrontCost(e = BigInt(0)) {
        const r = this.maxPriorityFeePerGas,
          n = this.maxFeePerGas - e,
          i = (r < n ? r : n) + e;
        return this.gasLimit * i + this.value;
      }
      raw() {
        return [
          zt(this.chainId),
          zt(this.nonce),
          zt(this.maxPriorityFeePerGas),
          zt(this.maxFeePerGas),
          zt(this.gasLimit),
          this.to !== void 0 ? this.to.buf : Uint8Array.from([]),
          zt(this.value),
          this.data,
          this.accessList,
          this.v !== void 0 ? zt(this.v) : Uint8Array.from([]),
          this.r !== void 0 ? zt(this.r) : Uint8Array.from([]),
          this.s !== void 0 ? zt(this.s) : Uint8Array.from([]),
        ];
      }
      serialize() {
        const e = this.raw();
        return Vi(By, ui.encode(e));
      }
      getMessageToSign(e = !0) {
        const r = this.raw().slice(0, 9),
          n = Vi(By, ui.encode(r));
        return e ? Tn(n) : n;
      }
      hash() {
        if (!this.isSigned()) {
          const e = this._errorMsg(
            "Cannot call hash method if transaction is not signed"
          );
          throw new Error(e);
        }
        return Object.isFrozen(this)
          ? (this.cache.hash || (this.cache.hash = Tn(this.serialize())),
            this.cache.hash)
          : Tn(this.serialize());
      }
      getMessageToVerifySignature() {
        return this.getMessageToSign();
      }
      getSenderPublicKey() {
        if (!this.isSigned()) {
          const a = this._errorMsg(
            "Cannot call this method if transaction is not signed"
          );
          throw new Error(a);
        }
        const e = this.getMessageToVerifySignature(),
          { v: r, r: n, s: i } = this;
        this._validateHighS();
        try {
          return Py(e, r + BigInt(27), zt(n), zt(i));
        } catch {
          const a = this._errorMsg("Invalid Signature");
          throw new Error(a);
        }
      }
      _processSignature(e, r, n) {
        const i = Object.assign(Object.assign({}, this.txOptions), {
          common: this.common,
        });
        return ol.fromTxData(
          {
            chainId: this.chainId,
            nonce: this.nonce,
            maxPriorityFeePerGas: this.maxPriorityFeePerGas,
            maxFeePerGas: this.maxFeePerGas,
            gasLimit: this.gasLimit,
            to: this.to,
            value: this.value,
            data: this.data,
            accessList: this.accessList,
            v: e - BigInt(27),
            r: pr(r),
            s: pr(n),
          },
          i
        );
      }
      toJSON() {
        const e = P2(this.accessList);
        return {
          chainId: zr(this.chainId),
          nonce: zr(this.nonce),
          maxPriorityFeePerGas: zr(this.maxPriorityFeePerGas),
          maxFeePerGas: zr(this.maxFeePerGas),
          gasLimit: zr(this.gasLimit),
          to: this.to !== void 0 ? this.to.toString() : void 0,
          value: zr(this.value),
          data: Pt(this.data),
          accessList: e,
          v: this.v !== void 0 ? zr(this.v) : void 0,
          r: this.r !== void 0 ? zr(this.r) : void 0,
          s: this.s !== void 0 ? zr(this.s) : void 0,
        };
      }
      errorStr() {
        let e = this._getSharedErrorPostfix();
        return (
          (e += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`),
          e
        );
      }
      _errorMsg(e) {
        return `${e} (${this.errorStr()})`;
      }
    }
    const Fy = 1,
      Dy = Cr(Fy.toString(16).padStart(2, "0"));
    class ll extends Tc {
      constructor(e, r = {}) {
        var n;
        super(Object.assign(Object.assign({}, e), { type: Fy }), r),
          (this.DEFAULT_HARDFORK = "berlin");
        const { chainId: i, accessList: a, gasPrice: l } = e;
        if (
          ((this.common = this._getCommon(r.common, i)),
          (this.chainId = this.common.chainId()),
          !this.common.isActivatedEIP(2930))
        )
          throw new Error("EIP-2930 not enabled on Common");
        this.activeCapabilities = this.activeCapabilities.concat([2718, 2930]);
        const u = I2(a ?? []);
        if (
          ((this.accessList = u.accessList),
          (this.AccessListJSON = u.AccessListJSON),
          T2(this.accessList),
          (this.gasPrice = pr(Dr(l === "" ? "0x" : l))),
          this._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice }),
          Tc._validateNotArray(e),
          this.gasPrice * this.gasLimit > Ch)
        ) {
          const p = this._errorMsg(
            "gasLimit * gasPrice cannot exceed MAX_INTEGER"
          );
          throw new Error(p);
        }
        this._validateYParity(),
          this._validateHighS(),
          (!((n = r == null ? void 0 : r.freeze) !== null && n !== void 0) ||
            n) &&
            Object.freeze(this);
      }
      static fromTxData(e, r = {}) {
        return new ll(e, r);
      }
      static fromSerializedTx(e, r = {}) {
        if (!mp(e.subarray(0, 1), Dy))
          throw new Error(
            `Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${Fy}, received: ${Pt(
              e.subarray(0, 1)
            )}`
          );
        const n = ui.decode(Uint8Array.from(e.subarray(1)));
        if (!Array.isArray(n))
          throw new Error("Invalid serialized tx input: must be array");
        return ll.fromValuesArray(n, r);
      }
      static fromValuesArray(e, r = {}) {
        if (e.length !== 8 && e.length !== 11)
          throw new Error(
            "Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx)."
          );
        const [n, i, a, l, u, p, m, v, w, S, M] = e;
        this._validateNotArray({ chainId: n, v: w }),
          U0({
            nonce: i,
            gasPrice: a,
            gasLimit: l,
            value: p,
            v: w,
            r: S,
            s: M,
          });
        const D = [];
        return new ll(
          {
            chainId: pr(n),
            nonce: i,
            gasPrice: a,
            gasLimit: l,
            to: u,
            value: p,
            data: m,
            accessList: v ?? D,
            v: w !== void 0 ? pr(w) : void 0,
            r: S,
            s: M,
          },
          r
        );
      }
      getDataFee() {
        if (
          this.cache.dataFee &&
          this.cache.dataFee.hardfork === this.common.hardfork()
        )
          return this.cache.dataFee.value;
        let e = super.getDataFee();
        return (
          (e += BigInt(O2(this.accessList, this.common))),
          Object.isFrozen(this) &&
            (this.cache.dataFee = {
              value: e,
              hardfork: this.common.hardfork(),
            }),
          e
        );
      }
      getUpfrontCost() {
        return this.gasLimit * this.gasPrice + this.value;
      }
      raw() {
        return [
          zt(this.chainId),
          zt(this.nonce),
          zt(this.gasPrice),
          zt(this.gasLimit),
          this.to !== void 0 ? this.to.buf : Uint8Array.from([]),
          zt(this.value),
          this.data,
          this.accessList,
          this.v !== void 0 ? zt(this.v) : Uint8Array.from([]),
          this.r !== void 0 ? zt(this.r) : Uint8Array.from([]),
          this.s !== void 0 ? zt(this.s) : Uint8Array.from([]),
        ];
      }
      serialize() {
        const e = this.raw();
        return Vi(Dy, ui.encode(e));
      }
      getMessageToSign(e = !0) {
        const r = this.raw().slice(0, 8),
          n = Vi(Dy, ui.encode(r));
        return e ? Tn(n) : n;
      }
      hash() {
        if (!this.isSigned()) {
          const e = this._errorMsg(
            "Cannot call hash method if transaction is not signed"
          );
          throw new Error(e);
        }
        return Object.isFrozen(this)
          ? (this.cache.hash || (this.cache.hash = Tn(this.serialize())),
            this.cache.hash)
          : Tn(this.serialize());
      }
      getMessageToVerifySignature() {
        return this.getMessageToSign();
      }
      getSenderPublicKey() {
        if (!this.isSigned()) {
          const a = this._errorMsg(
            "Cannot call this method if transaction is not signed"
          );
          throw new Error(a);
        }
        const e = this.getMessageToVerifySignature(),
          { v: r, r: n, s: i } = this;
        this._validateHighS();
        try {
          return Py(e, r + BigInt(27), zt(n), zt(i));
        } catch {
          const a = this._errorMsg("Invalid Signature");
          throw new Error(a);
        }
      }
      _processSignature(e, r, n) {
        const i = Object.assign(Object.assign({}, this.txOptions), {
          common: this.common,
        });
        return ll.fromTxData(
          {
            chainId: this.chainId,
            nonce: this.nonce,
            gasPrice: this.gasPrice,
            gasLimit: this.gasLimit,
            to: this.to,
            value: this.value,
            data: this.data,
            accessList: this.accessList,
            v: e - BigInt(27),
            r: pr(r),
            s: pr(n),
          },
          i
        );
      }
      toJSON() {
        const e = P2(this.accessList);
        return {
          chainId: zr(this.chainId),
          nonce: zr(this.nonce),
          gasPrice: zr(this.gasPrice),
          gasLimit: zr(this.gasLimit),
          to: this.to !== void 0 ? this.to.toString() : void 0,
          value: zr(this.value),
          data: Pt(this.data),
          accessList: e,
          v: this.v !== void 0 ? zr(this.v) : void 0,
          r: this.r !== void 0 ? zr(this.r) : void 0,
          s: this.s !== void 0 ? zr(this.s) : void 0,
        };
      }
      errorStr() {
        var e, r;
        let n = this._getSharedErrorPostfix();
        return (
          (n += ` gasPrice=${this.gasPrice} accessListCount=${
            (r =
              (e = this.accessList) === null || e === void 0
                ? void 0
                : e.length) !== null && r !== void 0
              ? r
              : 0
          }`),
          n
        );
      }
      _errorMsg(e) {
        return `${e} (${this.errorStr()})`;
      }
    }
    const J9 = 0;
    function L2(t, e) {
      const r = Number(t),
        n = Number(e) * 2;
      return r === n + 35 || r === n + 36;
    }
    class ro extends Tc {
      constructor(e, r = {}) {
        var n;
        if (
          (super(Object.assign(Object.assign({}, e), { type: J9 }), r),
          (this.common = this._validateTxV(this.v, r.common)),
          (this.gasPrice = pr(Dr(e.gasPrice === "" ? "0x" : e.gasPrice))),
          this.gasPrice * this.gasLimit > Ch)
        ) {
          const i = this._errorMsg(
            "gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)"
          );
          throw new Error(i);
        }
        this._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice }),
          Tc._validateNotArray(e),
          this.common.gteHardfork("spuriousDragon") &&
            (this.isSigned()
              ? L2(this.v, this.common.chainId()) &&
                this.activeCapabilities.push(_s.EIP155ReplayProtection)
              : this.activeCapabilities.push(_s.EIP155ReplayProtection)),
          (!((n = r == null ? void 0 : r.freeze) !== null && n !== void 0) ||
            n) &&
            Object.freeze(this);
      }
      static fromTxData(e, r = {}) {
        return new ro(e, r);
      }
      static fromSerializedTx(e, r = {}) {
        const n = ui.decode(e);
        if (!Array.isArray(n))
          throw new Error("Invalid serialized tx input. Must be array");
        return this.fromValuesArray(n, r);
      }
      static fromValuesArray(e, r = {}) {
        if (e.length !== 6 && e.length !== 9)
          throw new Error(
            "Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx)."
          );
        const [n, i, a, l, u, p, m, v, w] = e;
        return (
          U0({
            nonce: n,
            gasPrice: i,
            gasLimit: a,
            value: u,
            v: m,
            r: v,
            s: w,
          }),
          new ro(
            {
              nonce: n,
              gasPrice: i,
              gasLimit: a,
              to: l,
              value: u,
              data: p,
              v: m,
              r: v,
              s: w,
            },
            r
          )
        );
      }
      raw() {
        return [
          zt(this.nonce),
          zt(this.gasPrice),
          zt(this.gasLimit),
          this.to !== void 0 ? this.to.buf : Uint8Array.from([]),
          zt(this.value),
          this.data,
          this.v !== void 0 ? zt(this.v) : Uint8Array.from([]),
          this.r !== void 0 ? zt(this.r) : Uint8Array.from([]),
          this.s !== void 0 ? zt(this.s) : Uint8Array.from([]),
        ];
      }
      serialize() {
        return ui.encode(this.raw());
      }
      _getMessageToSign() {
        const e = [
          zt(this.nonce),
          zt(this.gasPrice),
          zt(this.gasLimit),
          this.to !== void 0 ? this.to.buf : Uint8Array.from([]),
          zt(this.value),
          this.data,
        ];
        return (
          this.supports(_s.EIP155ReplayProtection) &&
            (e.push(Dr(this.common.chainId())),
            e.push(Mp(Dr(0))),
            e.push(Mp(Dr(0)))),
          e
        );
      }
      getMessageToSign(e = !0) {
        const r = this._getMessageToSign();
        return e ? Tn(ui.encode(r)) : r;
      }
      getDataFee() {
        return this.cache.dataFee &&
          this.cache.dataFee.hardfork === this.common.hardfork()
          ? this.cache.dataFee.value
          : (Object.isFrozen(this) &&
              (this.cache.dataFee = {
                value: super.getDataFee(),
                hardfork: this.common.hardfork(),
              }),
            super.getDataFee());
      }
      getUpfrontCost() {
        return this.gasLimit * this.gasPrice + this.value;
      }
      hash() {
        if (!this.isSigned()) {
          const e = this._errorMsg(
            "Cannot call hash method if transaction is not signed"
          );
          throw new Error(e);
        }
        return Object.isFrozen(this)
          ? (this.cache.hash || (this.cache.hash = Tn(ui.encode(this.raw()))),
            this.cache.hash)
          : Tn(ui.encode(this.raw()));
      }
      getMessageToVerifySignature() {
        if (!this.isSigned()) {
          const r = this._errorMsg("This transaction is not signed");
          throw new Error(r);
        }
        const e = this._getMessageToSign();
        return Tn(ui.encode(e));
      }
      getSenderPublicKey() {
        const e = this.getMessageToVerifySignature(),
          { v: r, r: n, s: i } = this;
        this._validateHighS();
        try {
          return Py(
            e,
            r,
            zt(n),
            zt(i),
            this.supports(_s.EIP155ReplayProtection)
              ? this.common.chainId()
              : void 0
          );
        } catch {
          const a = this._errorMsg("Invalid Signature");
          throw new Error(a);
        }
      }
      _processSignature(e, r, n) {
        let i = e;
        this.supports(_s.EIP155ReplayProtection) &&
          (i += this.common.chainId() * BigInt(2) + BigInt(8));
        const a = Object.assign(Object.assign({}, this.txOptions), {
          common: this.common,
        });
        return ro.fromTxData(
          {
            nonce: this.nonce,
            gasPrice: this.gasPrice,
            gasLimit: this.gasLimit,
            to: this.to,
            value: this.value,
            data: this.data,
            v: i,
            r: pr(r),
            s: pr(n),
          },
          a
        );
      }
      toJSON() {
        return {
          nonce: zr(this.nonce),
          gasPrice: zr(this.gasPrice),
          gasLimit: zr(this.gasLimit),
          to: this.to !== void 0 ? this.to.toString() : void 0,
          value: zr(this.value),
          data: Pt(this.data),
          v: this.v !== void 0 ? zr(this.v) : void 0,
          r: this.r !== void 0 ? zr(this.r) : void 0,
          s: this.s !== void 0 ? zr(this.s) : void 0,
        };
      }
      _validateTxV(e, r) {
        let n;
        const i = e !== void 0 ? Number(e) : void 0;
        if (i !== void 0 && i < 37 && i !== 27 && i !== 28)
          throw new Error(
            `Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${i}`
          );
        if (
          i !== void 0 &&
          i !== 0 &&
          (!r || r.gteHardfork("spuriousDragon")) &&
          i !== 27 &&
          i !== 28
        )
          if (r) {
            if (!L2(BigInt(i), r.chainId()))
              throw new Error(
                `Incompatible EIP155-based V ${i} and chain id ${r.chainId()}. See the Common parameter of the Transaction constructor to set the chain id.`
              );
          } else {
            let a;
            (i - 35) % 2 === 0 ? (a = 35) : (a = 36),
              (n = BigInt(i - a) / BigInt(2));
          }
        return this._getCommon(r, n);
      }
      errorStr() {
        let e = this._getSharedErrorPostfix();
        return (e += ` gasPrice=${this.gasPrice}`), e;
      }
      _errorMsg(e) {
        return `${e} (${this.errorStr()})`;
      }
    }
    class Np {
      constructor() {}
      static fromTxData(e, r = {}) {
        if (!("type" in e) || e.type === void 0) return ro.fromTxData(e, r);
        const n = Number(pr(Dr(e.type)));
        if (n === 0) return ro.fromTxData(e, r);
        if (n === 1) return ll.fromTxData(e, r);
        if (n === 2) return ol.fromTxData(e, r);
        throw new Error(`Tx instantiation with type ${n} not supported`);
      }
      static fromSerializedData(e, r = {}) {
        if (e[0] <= 127)
          switch (e[0]) {
            case 1:
              return ll.fromSerializedTx(e, r);
            case 2:
              return ol.fromSerializedTx(e, r);
            default:
              throw new Error(`TypedTransaction with ID ${e[0]} unknown`);
          }
        else return ro.fromSerializedTx(e, r);
      }
      static fromBlockBodyData(e, r = {}) {
        if (e instanceof Uint8Array) return this.fromSerializedData(e, r);
        if (Array.isArray(e)) return ro.fromValuesArray(e, r);
        throw new Error("Cannot decode transaction: unknown type input");
      }
    }
    var Bp =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    const Fp = (t, e) => {
        let r;
        if (!e && typeof t == "string" && rr(t) && t.length !== 66)
          throw new iC();
        try {
          r = t instanceof Uint8Array ? t : Js(t);
        } catch {
          throw new i8();
        }
        if (!e && r.byteLength !== 32) throw new iC();
        return r;
      },
      zy = (t) => {
        const e = rr(t) ? t : Gi(t),
          r = Cr(e),
          n = Cr(
            tS(`Ethereum Signed Message:
${r.byteLength}`)
          ),
          i = Vi(n, r);
        return ci(i);
      },
      M2 = (t, e) => {
        const r = Fp(e),
          n = zy(t),
          i = to.sign(n.substring(2), r),
          a = i.toCompactRawBytes(),
          l = i.r.toString(16),
          u = i.s.toString(16),
          p = i.recovery + 27;
        return {
          message: t,
          messageHash: n,
          v: oi(p),
          r: `0x${l}`,
          s: `0x${u}`,
          signature: `${Pt(a)}${p.toString(16)}`,
        };
      },
      eX = (t, e) =>
        Bp(void 0, void 0, void 0, function* () {
          const r = t.sign(Cr(e));
          if (Fe(r.v) || Fe(r.r) || Fe(r.s)) throw new I0("Signer Error");
          const n = r.validate(!0);
          if (n.length > 0) {
            let l = "Signer Error ";
            for (const u of n) l += `${l} ${u}.`;
            throw new I0(l);
          }
          const i = Pt(r.serialize()),
            a = ci(i);
          return {
            messageHash: Pt(r.getMessageToSign(!0)),
            v: `0x${r.v.toString(16)}`,
            r: `0x${r.r.toString(16).padStart(64, "0")}`,
            s: `0x${r.s.toString(16).padStart(64, "0")}`,
            rawTransaction: i,
            transactionHash: Pt(a),
          };
        }),
      tX = (t) => {
        if (Fe(t)) throw new w8();
        const e = Np.fromSerializedData(Cr(t));
        return ea(e.getSenderAddress().toString());
      },
      Hy = (t, e, r, n, i) => {
        if (typeof t == "object") {
          const v = `${t.r}${t.s.slice(2)}${t.v.slice(2)}`;
          return Hy(t.messageHash, v, r);
        }
        if (typeof e == "string" && typeof r == "string" && !Fe(n)) {
          const v = `${r}${n.slice(2)}${e.slice(2)}`;
          return Hy(t, v, i);
        }
        if (Fe(e)) throw new s8("signature string undefined");
        const a = 130,
          l = r ? t : zy(t),
          u = e.substring(a),
          p = to.Signature.fromCompact(e.slice(2, a))
            .addRecoveryBit(parseInt(u, 16) - 27)
            .recoverPublicKey(l.replace("0x", ""))
            .toRawBytes(!1),
          m = ci(p.subarray(1));
        return ea(`0x${m.slice(-40)}`);
      },
      Uy = (t) => {
        const e = Fp(t),
          r = to.getPublicKey(e, !1),
          n = ci(r.slice(1)).slice(-40);
        return ea(`0x${n}`);
      },
      R2 = (t, e, r) =>
        Bp(void 0, void 0, void 0, function* () {
          var n, i, a, l, u, p, m;
          const v = Fp(t);
          let w;
          if (
            (r != null && r.salt
              ? (w = typeof r.salt == "string" ? Cr(r.salt) : r.salt)
              : (w = yh(32)),
            !(D0(e) || e instanceof Uint8Array))
          )
            throw new l8();
          const S = typeof e == "string" ? Cr(Gi(e)) : e;
          let M;
          if (r != null && r.iv) {
            if (
              ((M = typeof r.iv == "string" ? Cr(r.iv) : r.iv), M.length !== 16)
            )
              throw new c8();
          } else M = yh(16);
          const D =
            (n = r == null ? void 0 : r.kdf) !== null && n !== void 0
              ? n
              : "scrypt";
          let z, V;
          if (D === "pbkdf2") {
            if (
              ((V = {
                dklen:
                  (i = r == null ? void 0 : r.dklen) !== null && i !== void 0
                    ? i
                    : 32,
                salt: Pt(w).replace("0x", ""),
                c:
                  (a = r == null ? void 0 : r.c) !== null && a !== void 0
                    ? a
                    : 262144,
                prf: "hmac-sha256",
              }),
              V.c < 1e3)
            )
              throw new u8();
            z = $S(S, w, V.c, V.dklen, "sha256");
          } else if (D === "scrypt")
            (V = {
              n:
                (l = r == null ? void 0 : r.n) !== null && l !== void 0
                  ? l
                  : 8192,
              r:
                (u = r == null ? void 0 : r.r) !== null && u !== void 0 ? u : 8,
              p:
                (p = r == null ? void 0 : r.p) !== null && p !== void 0 ? p : 1,
              dklen:
                (m = r == null ? void 0 : r.dklen) !== null && m !== void 0
                  ? m
                  : 32,
              salt: Pt(w).replace("0x", ""),
            }),
              (z = QS(S, w, V.n, V.p, V.r, V.dklen));
          else throw new sC();
          const j = yield fy(v, z.slice(0, 16), M, "aes-128-ctr"),
            B = Pt(j).slice(2),
            ae = ci(Vi(z.slice(16, 32), j)).replace("0x", "");
          return {
            version: 3,
            id: ey(),
            address: Uy(v).toLowerCase().replace("0x", ""),
            crypto: {
              ciphertext: B,
              cipherparams: { iv: Pt(M).replace("0x", "") },
              cipher: "aes-128-ctr",
              kdf: D,
              kdfparams: V,
              mac: ae,
            },
          };
        }),
      Wy = (t, e) => {
        const r = Fp(t, e);
        return {
          address: Uy(r),
          privateKey: Pt(r),
          signTransaction: (n) => {
            throw new I0("Do not have network access to sign the transaction");
          },
          sign: (n) => M2(typeof n == "string" ? n : JSON.stringify(n), r),
          encrypt: (n, i) =>
            Bp(void 0, void 0, void 0, function* () {
              return R2(r, n, i);
            }),
        };
      },
      rX = () => {
        const t = to.utils.randomPrivateKey();
        return Wy(`${Pt(t)}`);
      },
      nX = (t, e, r) =>
        Bp(void 0, void 0, void 0, function* () {
          const n =
            typeof t == "object" ? t : JSON.parse(r ? t.toLowerCase() : t);
          if ((ct.validateJSONSchema(YW, n), n.version !== 3)) throw new o8();
          const i = typeof e == "string" ? Cr(Gi(e)) : e;
          ct.validate(["bytes"], [i]);
          let a;
          if (n.crypto.kdf === "scrypt") {
            const p = n.crypto.kdfparams,
              m = typeof p.salt == "string" ? Cr(p.salt) : p.salt;
            a = QS(i, m, p.n, p.p, p.r, p.dklen);
          } else if (n.crypto.kdf === "pbkdf2") {
            const p = n.crypto.kdfparams,
              m = typeof p.salt == "string" ? Cr(p.salt) : p.salt;
            a = $S(i, m, p.c, p.dklen, "sha256");
          } else throw new sC();
          const l = Cr(n.crypto.ciphertext);
          if (ci(Vi(a.slice(16, 32), l)).replace("0x", "") !== n.crypto.mac)
            throw new a8();
          const u = yield q7(
            Cr(n.crypto.ciphertext),
            a.slice(0, 16),
            Cr(n.crypto.cipherparams.iv)
          );
          return Wy(u);
        }),
      N2 = {
        type: "object",
        properties: {
          accessList: { type: "null" },
          maxFeePerGas: { type: "null" },
          maxPriorityFeePerGas: { type: "null" },
        },
      },
      B2 = {
        type: "object",
        properties: {
          maxFeePerGas: { type: "null" },
          maxPriorityFeePerGas: { type: "null" },
        },
      },
      F2 = { type: "object", properties: { gasPrice: { type: "null" } } },
      Dp = (t, e, r) => {
        try {
          ct.validateJSONSchema(t, e);
        } catch (n) {
          throw n instanceof uc ? new Y8(n.errors, r) : n;
        }
      },
      iX = (t) => {
        var e, r;
        const n = t;
        if (!Fe(n.type)) {
          let l;
          switch (n.type) {
            case "0x0":
              l = N2;
              break;
            case "0x1":
              l = B2;
              break;
            case "0x2":
              l = F2;
              break;
            default:
              return Ye({ format: "uint" }, n.type, pt);
          }
          return Dp(l, n, n.type), Ye({ format: "uint" }, n.type, pt);
        }
        if (!Fe(n.maxFeePerGas) || !Fe(n.maxPriorityFeePerGas))
          return Dp(F2, n, "0x2"), "0x2";
        if (!Fe(n.accessList)) return Dp(B2, n, "0x1"), "0x1";
        Fe(n.gasPrice) || Dp(N2, n, "0x0");
        const i =
          (e = n.hardfork) !== null && e !== void 0
            ? e
            : (r = n.common) === null || r === void 0
            ? void 0
            : r.hardfork;
        if (i === void 0) return;
        const a = Object.keys(uh).indexOf(i);
        if (a !== void 0) {
          if (a >= Object.keys(uh).indexOf("london"))
            return Fe(n.gasPrice) ? "0x2" : "0x0";
          if (a === Object.keys(uh).indexOf("berlin")) return "0x0";
        }
      },
      sX = (t, e) => {
        var r;
        return (
          (r = e == null ? void 0 : e.transactionTypeParser) !== null &&
            r !== void 0
            ? r
            : iX
        )(t);
      },
      aX = (t) => (t[0] > 127 ? "0x0" : Yi(t[0])),
      oX = {
        type: "object",
        properties: {
          address: { format: "address" },
          storageKeys: { type: "array", items: { format: "bytes32" } },
        },
      },
      Xy = { type: "array", items: Object.assign({}, oX) },
      lX = {
        type: "object",
        properties: {
          accessList: Object.assign({}, Xy),
          gasUsed: { type: "string" },
        },
      },
      D2 = {
        type: "string",
        enum: ["goerli", "kovan", "mainnet", "rinkeby", "ropsten", "sepolia"],
      },
      z2 = {
        type: "string",
        enum: [
          "arrowGlacier",
          "berlin",
          "byzantium",
          "chainstart",
          "constantinople",
          "dao",
          "homestead",
          "istanbul",
          "london",
          "merge",
          "muirGlacier",
          "petersburg",
          "shanghai",
          "spuriousDragon",
          "tangerineWhistle",
        ],
      },
      cX = {
        type: "object",
        properties: {
          name: { format: "string" },
          networkId: { format: "uint" },
          chainId: { format: "uint" },
        },
      },
      H2 = {
        type: "object",
        properties: {
          from: { format: "address" },
          to: { oneOf: [{ format: "address" }, { type: "null" }] },
          value: { format: "uint" },
          gas: { format: "uint" },
          gasPrice: { format: "uint" },
          effectiveGasPrice: { format: "uint" },
          type: { format: "uint" },
          maxFeePerGas: { format: "uint" },
          maxPriorityFeePerGas: { format: "uint" },
          accessList: Object.assign({}, Xy),
          data: { format: "bytes" },
          input: { format: "bytes" },
          nonce: { format: "uint" },
          chain: Object.assign({}, D2),
          hardfork: Object.assign({}, z2),
          chainId: { format: "uint" },
          networkId: { format: "uint" },
          common: {
            type: "object",
            properties: {
              customChain: Object.assign({}, cX),
              baseChain: Object.assign({}, D2),
              hardfork: Object.assign({}, z2),
            },
          },
          gasLimit: { format: "uint" },
          v: { format: "uint" },
          r: { format: "bytes32" },
          s: { format: "bytes32" },
        },
      },
      jy = {
        type: "object",
        properties: Object.assign(Object.assign({}, H2.properties), {
          blockHash: { format: "bytes32" },
          blockNumber: { format: "uint" },
          hash: { format: "bytes32" },
          transactionIndex: { format: "uint" },
          from: { format: "address" },
          to: { oneOf: [{ format: "address" }, { type: "null" }] },
          value: { format: "uint" },
          gas: { format: "uint" },
          gasPrice: { format: "uint" },
          effectiveGasPrice: { format: "uint" },
          type: { format: "uint" },
          maxFeePerGas: { format: "uint" },
          maxPriorityFeePerGas: { format: "uint" },
          accessList: Object.assign({}, Xy),
          data: { format: "bytes" },
          input: { format: "bytes" },
          nonce: { format: "uint" },
          gasLimit: { format: "uint" },
          v: { format: "uint" },
          r: { format: "bytes32" },
          s: { format: "bytes32" },
        }),
      },
      zp = {
        type: "object",
        properties: {
          parentHash: { format: "bytes32" },
          sha3Uncles: { format: "bytes32" },
          miner: { format: "bytes" },
          stateRoot: { format: "bytes32" },
          transactionsRoot: { format: "bytes32" },
          receiptsRoot: { format: "bytes32" },
          logsBloom: { format: "bytes256" },
          difficulty: { format: "uint" },
          number: { format: "uint" },
          gasLimit: { format: "uint" },
          gasUsed: { format: "uint" },
          timestamp: { format: "uint" },
          extraData: { format: "bytes" },
          mixHash: { format: "bytes32" },
          nonce: { format: "uint" },
          totalDifficulty: { format: "uint" },
          baseFeePerGas: { format: "uint" },
          size: { format: "uint" },
          transactions: {
            oneOf: [
              { type: "array", items: Object.assign({}, jy) },
              { type: "array", items: { format: "bytes32" } },
            ],
          },
          uncles: { type: "array", items: { format: "bytes32" } },
          hash: { format: "bytes32" },
        },
      },
      uX = {
        type: "object",
        properties: {
          index: { format: "uint" },
          validatorIndex: { format: "uint" },
          address: { format: "bytes32" },
          amount: { format: "uint" },
        },
      },
      hX = {
        type: "object",
        properties: {
          author: { format: "bytes32" },
          hash: { format: "bytes32" },
          parentHash: { format: "bytes32" },
          receiptsRoot: { format: "bytes32" },
          miner: { format: "bytes" },
          stateRoot: { format: "bytes32" },
          transactionsRoot: { format: "bytes32" },
          withdrawalsRoot: { format: "bytes32" },
          logsBloom: { format: "bytes256" },
          difficulty: { format: "uint" },
          totalDifficulty: { format: "uint" },
          number: { format: "uint" },
          gasLimit: { format: "uint" },
          gasUsed: { format: "uint" },
          timestamp: { format: "uint" },
          extraData: { format: "bytes" },
          nonce: { format: "uint" },
          sha3Uncles: { format: "bytes32" },
          size: { format: "uint" },
          baseFeePerGas: { format: "uint" },
          excessDataGas: { format: "uint" },
          mixHash: { format: "bytes32" },
          transactions: { type: "array", items: { format: "bytes32" } },
          uncles: { type: "array", items: { format: "bytes32" } },
          withdrawals: { type: "array", items: Object.assign({}, uX) },
        },
      },
      Hp = {
        type: "object",
        properties: {
          removed: { format: "bool" },
          logIndex: { format: "uint" },
          transactionIndex: { format: "uint" },
          transactionHash: { format: "bytes32" },
          blockHash: { format: "bytes32" },
          blockNumber: { format: "uint" },
          address: { format: "address" },
          data: { format: "bytes" },
          topics: { type: "array", items: { format: "bytes32" } },
        },
      },
      dX = {
        type: "object",
        properties: {
          startingBlock: { format: "string" },
          currentBlock: { format: "string" },
          highestBlock: { format: "string" },
          knownStates: { format: "string" },
          pulledStates: { format: "string" },
        },
      },
      Pc = {
        type: "object",
        properties: {
          transactionHash: { format: "bytes32" },
          transactionIndex: { format: "uint" },
          blockHash: { format: "bytes32" },
          blockNumber: { format: "uint" },
          from: { format: "address" },
          to: { format: "address" },
          cumulativeGasUsed: { format: "uint" },
          gasUsed: { format: "uint" },
          effectiveGasPrice: { format: "uint" },
          contractAddress: { format: "address" },
          logs: { type: "array", items: Object.assign({}, Hp) },
          logsBloom: { format: "bytes" },
          root: { format: "bytes" },
          status: { format: "uint" },
          type: { format: "uint" },
        },
      },
      fX = {
        type: "object",
        properties: {
          messageHash: { format: "bytes" },
          r: { format: "bytes32" },
          s: { format: "bytes32" },
          v: { format: "bytes" },
          message: { format: "bytes" },
          signature: { format: "bytes" },
        },
      },
      pX = {
        type: "object",
        properties: {
          oldestBlock: { format: "uint" },
          baseFeePerGas: { type: "array", items: { format: "uint" } },
          reward: {
            type: "array",
            items: { type: "array", items: { format: "uint" } },
          },
          gasUsedRatio: { type: "array", items: { type: "number" } },
        },
      },
      gX = {
        type: "object",
        properties: {
          key: { format: "bytes32" },
          value: { format: "uint" },
          proof: { type: "array", items: { format: "bytes32" } },
        },
      },
      mX = {
        type: "object",
        properties: {
          balance: { format: "uint" },
          codeHash: { format: "bytes32" },
          nonce: { format: "uint" },
          storageHash: { format: "bytes32" },
          accountProof: { type: "array", items: { format: "bytes32" } },
          storageProof: { type: "array", items: Object.assign({}, gX) },
        },
      };
    function Kn(
      t,
      e = nt,
      r = { transactionSchema: jy, fillInputAndData: !1 }
    ) {
      var n, i;
      let a = $a({}, t);
      if (
        (Fe(t == null ? void 0 : t.common) ||
          ((a.common = Object.assign({}, t.common)),
          Fe(
            (n = t.common) === null || n === void 0 ? void 0 : n.customChain
          ) ||
            (a.common.customChain = Object.assign({}, t.common.customChain))),
        (a = Ye(
          (i = r.transactionSchema) !== null && i !== void 0 ? i : jy,
          a,
          e
        )),
        !Fe(a.data) && !Fe(a.input) && Yi(a.data) !== Yi(a.input))
      )
        throw new dC({ data: Pt(a.data), input: Pt(a.input) });
      return (
        r.fillInputAndData &&
          (Fe(a.data) ? Fe(a.input) || (a.data = a.input) : (a.input = a.data)),
        Fe(a.gasLimit) || ((a.gas = a.gasLimit), delete a.gasLimit),
        a
      );
    }
    function vX(t, e, r = { fillInputAndData: !1 }) {
      return {
        raw: Ye({ format: "bytes" }, t, e),
        tx: Kn(
          Object.assign(
            Object.assign({}, Np.fromSerializedData(Cr(t)).toJSON()),
            { hash: Pt(vh(Cr(t))), type: aX(Cr(t)) }
          ),
          e,
          { fillInputAndData: r.fillInputAndData }
        ),
      };
    }
    var Gy =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    function Yy(t, e) {
      return Gy(this, void 0, void 0, function* () {
        const r = yield N7(t.requestManager);
        return Ye({ format: "uint" }, r, e);
      });
    }
    function yX(t, e) {
      return Gy(this, void 0, void 0, function* () {
        const r = yield B7(t.requestManager);
        return Ye({ format: "uint" }, r, e);
      });
    }
    const bX = (t) =>
      Gy(void 0, void 0, void 0, function* () {
        return F7(t.requestManager);
      });
    var Vy =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    class U2 extends ws {
      getId(e = nt) {
        return Vy(this, void 0, void 0, function* () {
          return Yy(this, e);
        });
      }
      getPeerCount(e = nt) {
        return Vy(this, void 0, void 0, function* () {
          return yX(this, e);
        });
      }
      isListening() {
        return Vy(this, void 0, void 0, function* () {
          return bX(this);
        });
      }
    }
    const Up = { bytes: Zs.HEX, number: bi.NUMBER };
    var W2 =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    function xX(t, e, r) {
      var n, i, a;
      return W2(this, void 0, void 0, function* () {
        const l = yield EE(e, e.defaultBlock, !1, r);
        if (Fe(l.baseFeePerGas)) throw new U8();
        if (!Fe(t.gasPrice)) {
          const u = Ye({ format: "uint" }, t.gasPrice, r);
          return { maxPriorityFeePerGas: u, maxFeePerGas: u };
        }
        return {
          maxPriorityFeePerGas: Ye(
            { format: "uint" },
            (n = t.maxPriorityFeePerGas) !== null && n !== void 0
              ? n
              : e.defaultMaxPriorityFeePerGas,
            r
          ),
          maxFeePerGas: Ye(
            { format: "uint" },
            (i = t.maxFeePerGas) !== null && i !== void 0
              ? i
              : BigInt(l.baseFeePerGas) * BigInt(2) +
                  BigInt(
                    (a = t.maxPriorityFeePerGas) !== null && a !== void 0
                      ? a
                      : e.defaultMaxPriorityFeePerGas
                  ),
            r
          ),
        };
      });
    }
    function X2(t, e, r) {
      return W2(this, void 0, void 0, function* () {
        const n = j2(t, e);
        if (!Fe(n)) {
          if (n.startsWith("-")) throw new hC(n);
          if (n < "0x0" || n > "0x7f") throw new hC(n);
          if (Fe(t.gasPrice) && (n === "0x0" || n === "0x1"))
            return {
              gasPrice: yield SE(e, r),
              maxPriorityFeePerGas: void 0,
              maxFeePerGas: void 0,
            };
          if (n === "0x2")
            return Object.assign({ gasPrice: void 0 }, yield xX(t, e, r));
        }
      });
    }
    var qy =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    const Ky = (t, e, r, n) => {
        if (r !== void 0 && t in r && r[t] !== void 0) {
          if (typeof r[t] == "string" && ji(r[t])) return r[t];
          if (!rr(r[t]) && JC(r[t])) {
            if (e.wallet) {
              const i = e.wallet.get(Ye({ format: "uint" }, r[t], Up));
              if (!Fe(i)) return i.address;
              throw new gC();
            }
            throw new gC();
          } else throw t === "from" ? new k8(r.from) : new _8(r.to);
        }
        if (t === "from") {
          if (!Fe(n)) return Uy(n);
          if (!Fe(e.defaultAccount)) return e.defaultAccount;
        }
      },
      wX = (t, e, r = nt) =>
        qy(void 0, void 0, void 0, function* () {
          if (Fe(e)) throw new H8();
          return TE(t, e, t.defaultBlock, r);
        }),
      j2 = (t, e) => {
        const r = sX(t, e);
        if (!Fe(r)) return r;
        if (!Fe(e.defaultTransactionType))
          return Ye({ format: "uint" }, e.defaultTransactionType, pt);
      };
    function kX(t) {
      var e, r;
      return qy(this, void 0, void 0, function* () {
        let n = Ye(H2, t.transaction, nt);
        if (
          (Fe(n.from) &&
            (n.from = Ky("from", t.web3Context, void 0, t.privateKey)),
          Fe(n.nonce) && (n.nonce = yield wX(t.web3Context, n.from, pt)),
          Fe(n.value) && (n.value = "0x"),
          Fe(n.data))
        )
          Fe(n.input)
            ? (n.input = "0x")
            : n.input.startsWith("0x") || (n.input = `0x${n.input}`);
        else {
          if (!Fe(n.input) && n.data !== n.input)
            throw new dC({ data: Pt(n.data), input: Pt(n.input) });
          n.data.startsWith("0x") || (n.data = `0x${n.data}`);
        }
        if (Fe(n.common)) {
          if (t.web3Context.defaultCommon) {
            const i = t.web3Context.defaultCommon,
              a = i.customChain.chainId,
              l = i.customChain.networkId,
              u = i.customChain.name;
            n.common = Object.assign(Object.assign({}, i), {
              customChain: { chainId: a, networkId: l, name: u },
            });
          }
          Fe(n.chain) && (n.chain = t.web3Context.defaultChain),
            Fe(n.hardfork) && (n.hardfork = t.web3Context.defaultHardfork);
        }
        if (
          (Fe(n.chainId) &&
            Fe(
              (e = n.common) === null || e === void 0
                ? void 0
                : e.customChain.chainId
            ) &&
            (n.chainId = yield OE(t.web3Context, pt)),
          Fe(n.networkId) &&
            (n.networkId =
              (r = t.web3Context.defaultNetworkId) !== null && r !== void 0
                ? r
                : yield Yy(t.web3Context, pt)),
          Fe(n.gasLimit) && !Fe(n.gas) && (n.gasLimit = n.gas),
          (n.type = j2(n, t.web3Context)),
          Fe(n.accessList) &&
            (n.type === "0x1" || n.type === "0x2") &&
            (n.accessList = []),
          t.fillGasPrice &&
            (n = Object.assign(
              Object.assign({}, n),
              yield X2(n, t.web3Context, pt)
            )),
          Fe(n.gas) && Fe(n.gasLimit) && t.fillGasLimit)
        ) {
          const i = yield xb(t.web3Context, n, "latest", pt);
          n = Object.assign(Object.assign({}, n), {
            gas: Ye({ format: "uint" }, i, pt),
          });
        }
        return n;
      });
    }
    const _X = (t) =>
      qy(void 0, void 0, void 0, function* () {
        var e;
        return (
          (e = t.web3Context.transactionBuilder) !== null && e !== void 0
            ? e
            : kX
        )(Object.assign(Object.assign({}, t), { transaction: t.transaction }));
      });
    var $y =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    function Zy(t, e, r) {
      const n = t.transactionPollingInterval,
        [i, a] = pS(
          () =>
            $y(this, void 0, void 0, function* () {
              let l;
              try {
                l = yield vb(t, Up);
              } catch (p) {
                console.warn(
                  "An error happen while trying to get the block number",
                  p
                );
                return;
              }
              const u = l - e;
              if (u >= t.transactionBlockTimeout)
                return new pC({
                  starterBlockNumber: e,
                  numberOfBlocks: u,
                  transactionHash: r,
                });
            }),
          n
        );
      return [
        a,
        {
          clean: () => {
            clearInterval(i);
          },
        },
      ];
    }
    function AX(t, e, r) {
      var n;
      return $y(this, void 0, void 0, function* () {
        let i = !0,
          a,
          l;
        function u(p, m) {
          m &&
            console.warn(
              "error happened at subscription. So revert to polling...",
              m
            ),
            l.clean(),
            (i = !1);
          const [v, w] = Zy(t, e, r);
          (l.clean = w.clean), v.catch((S) => p(S));
        }
        try {
          (a = yield (n = t.subscriptionManager) === null || n === void 0
            ? void 0
            : n.subscribe("newHeads")),
            (l = {
              clean: () => {
                var p;
                a.id &&
                  ((p = t.subscriptionManager) === null ||
                    p === void 0 ||
                    p
                      .removeSubscription(a)
                      .then(() => {})
                      .catch(() => {}));
              },
            });
        } catch {
          return Zy(t, e, r);
        }
        return [
          new Promise((p, m) => {
            try {
              a.on("data", (v) => {
                if (((i = !1), !(v != null && v.number))) return;
                const w = Number(BigInt(v.number) - BigInt(e));
                w >= t.transactionBlockTimeout &&
                  m(
                    new pC({
                      starterBlockNumber: e,
                      numberOfBlocks: w,
                      transactionHash: r,
                    })
                  );
              }),
                a.on("error", (v) => {
                  u(m, v);
                });
            } catch (v) {
              u(m, v);
            }
            setTimeout(() => {
              i && u(m);
            }, t.blockHeaderTimeout * 1e3);
          }),
          l,
        ];
      });
    }
    function G2(t, e) {
      var r, n;
      return $y(this, void 0, void 0, function* () {
        const { provider: i } = t.requestManager;
        let a;
        const l = yield vb(t, Up);
        return (
          !((n = (r = i).supportsSubscriptions) === null || n === void 0) &&
          n.call(r) &&
          t.enableExperimentalFeatures.useSubscriptionWhenCheckingBlockTimeout
            ? (a = yield AX(t, l, e))
            : (a = Zy(t, l, e)),
          a
        );
      });
    }
    var CX =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    function Qy(t, e, r) {
      return CX(this, void 0, void 0, function* () {
        const [n, i] = J0(
            t.transactionSendTimeout,
            new W8({
              numberOfSeconds: t.transactionSendTimeout / 1e3,
              transactionHash: r,
            })
          ),
          [a, l] = yield G2(t, r);
        try {
          return yield Promise.race([e(), i, a]);
        } finally {
          clearTimeout(n), l.clean();
        }
      });
    }
    var Y2 =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    function V2(t, e, r) {
      var n;
      return Y2(this, void 0, void 0, function* () {
        const i =
            (n = t.transactionReceiptPollingInterval) !== null && n !== void 0
              ? n
              : t.transactionPollingInterval,
          a = fS(
            () =>
              Y2(this, void 0, void 0, function* () {
                try {
                  return IE(t, e, r);
                } catch (v) {
                  console.warn(
                    "An error happen while trying to get the transaction receipt",
                    v
                  );
                  return;
                }
              }),
            i
          ),
          [l, u] = J0(
            t.transactionPollingTimeout,
            new X8({
              numberOfSeconds: t.transactionPollingTimeout / 1e3,
              transactionHash: e,
            })
          ),
          [p, m] = yield G2(t, e);
        try {
          return yield Promise.race([a, u, p]);
        } finally {
          clearTimeout(l), m.clean();
        }
      });
    }
    var SX =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    const Wp = ({
      web3Context: t,
      transactionReceipt: e,
      transactionPromiEvent: r,
      returnFormat: n,
    }) => {
      var i;
      let a = 1;
      const l = setInterval(
        () => {
          SX(void 0, void 0, void 0, function* () {
            a >= t.transactionConfirmationBlocks && clearInterval(l);
            const u = yield jS(
              t.requestManager,
              oi(BigInt(e.blockNumber) + BigInt(a)),
              !1
            );
            u != null &&
              u.hash &&
              ((a += 1),
              r.emit("confirmation", {
                confirmations: Ye({ format: "uint" }, a, n),
                receipt: Ye(Pc, e, n),
                latestBlockHash: Ye({ format: "bytes32" }, u.hash, n),
              }));
          });
        },
        (i = t.transactionReceiptPollingInterval) !== null && i !== void 0
          ? i
          : t.transactionPollingInterval
      );
    };
    var q2 =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    const EX = ({
      web3Context: t,
      transactionReceipt: e,
      transactionPromiEvent: r,
      returnFormat: n,
    }) => {
      let i = !0,
        a;
      setImmediate(() => {
        var l;
        (l = t.subscriptionManager) === null ||
          l === void 0 ||
          l
            .subscribe("newHeads")
            .then((u) => {
              u.on("data", (p) =>
                q2(void 0, void 0, void 0, function* () {
                  var m;
                  if (
                    ((i = !1),
                    !(p != null && p.number) ||
                      a === (p == null ? void 0 : p.parentHash))
                  )
                    return;
                  a = p == null ? void 0 : p.parentHash;
                  const v =
                    BigInt(p.number) - BigInt(e.blockNumber) + BigInt(1);
                  r.emit("confirmation", {
                    confirmations: Ye({ format: "uint" }, v, n),
                    receipt: Ye(Pc, e, n),
                    latestBlockHash: Ye({ format: "bytes32" }, p.parentHash, n),
                  }),
                    v >= t.transactionConfirmationBlocks &&
                      (yield (m = t.subscriptionManager) === null ||
                      m === void 0
                        ? void 0
                        : m.removeSubscription(u));
                })
              ),
                u.on("error", () =>
                  q2(void 0, void 0, void 0, function* () {
                    var p;
                    yield (p = t.subscriptionManager) === null || p === void 0
                      ? void 0
                      : p.removeSubscription(u),
                      (i = !1),
                      Wp({
                        web3Context: t,
                        transactionReceipt: e,
                        transactionPromiEvent: r,
                        returnFormat: n,
                      });
                  })
                );
            })
            .catch(() => {
              (i = !1),
                Wp({
                  web3Context: t,
                  transactionReceipt: e,
                  transactionPromiEvent: r,
                  returnFormat: n,
                });
            });
      }),
        setTimeout(() => {
          i &&
            Wp({
              web3Context: t,
              transactionReceipt: e,
              transactionPromiEvent: r,
              returnFormat: n,
            });
        }, t.blockHeaderTimeout * 1e3);
    };
    function K2(t, e, r, n, i) {
      if (Fe(r) || Fe(r.blockHash))
        throw new j8({
          receipt: r,
          blockHash: Ye(
            { format: "bytes32" },
            r == null ? void 0 : r.blockHash,
            i
          ),
          transactionHash: Ye({ format: "bytes32" }, n, i),
        });
      if (!r.blockNumber) throw new G8({ receipt: r });
      e.emit("confirmation", {
        confirmations: Ye({ format: "uint" }, 1, i),
        receipt: Ye(Pc, r, i),
        latestBlockHash: Ye({ format: "bytes32" }, r.blockHash, i),
      }),
        t.requestManager.provider.supportsSubscriptions()
          ? EX({
              web3Context: t,
              transactionReceipt: r,
              transactionPromiEvent: e,
              returnFormat: i,
            })
          : Wp({
              web3Context: t,
              transactionReceipt: r,
              transactionPromiEvent: e,
              returnFormat: i,
            });
    }
    var Jy = { exports: {} };
    Jy.exports,
      (function (t) {
        (function (e, r) {
          function n(E, P) {
            if (!E) throw new Error(P || "Assertion failed");
          }
          function i(E, P) {
            E.super_ = P;
            var L = function () {};
            (L.prototype = P.prototype),
              (E.prototype = new L()),
              (E.prototype.constructor = E);
          }
          function a(E, P, L) {
            if (a.isBN(E)) return E;
            (this.negative = 0),
              (this.words = null),
              (this.length = 0),
              (this.red = null),
              E !== null &&
                ((P === "le" || P === "be") && ((L = P), (P = 10)),
                this._init(E || 0, P || 10, L || "be"));
          }
          typeof e == "object" ? (e.exports = a) : (r.BN = a),
            (a.BN = a),
            (a.wordSize = 26);
          var l;
          try {
            typeof window < "u" && typeof window.Buffer < "u"
              ? (l = window.Buffer)
              : (l = Ww.Buffer);
          } catch {}
          (a.isBN = function (E) {
            return E instanceof a
              ? !0
              : E !== null &&
                  typeof E == "object" &&
                  E.constructor.wordSize === a.wordSize &&
                  Array.isArray(E.words);
          }),
            (a.max = function (E, P) {
              return E.cmp(P) > 0 ? E : P;
            }),
            (a.min = function (E, P) {
              return E.cmp(P) < 0 ? E : P;
            }),
            (a.prototype._init = function (E, P, L) {
              if (typeof E == "number") return this._initNumber(E, P, L);
              if (typeof E == "object") return this._initArray(E, P, L);
              P === "hex" && (P = 16),
                n(P === (P | 0) && P >= 2 && P <= 36),
                (E = E.toString().replace(/\s+/g, ""));
              var U = 0;
              E[0] === "-" && (U++, (this.negative = 1)),
                U < E.length &&
                  (P === 16
                    ? this._parseHex(E, U, L)
                    : (this._parseBase(E, P, U),
                      L === "le" && this._initArray(this.toArray(), P, L)));
            }),
            (a.prototype._initNumber = function (E, P, L) {
              E < 0 && ((this.negative = 1), (E = -E)),
                E < 67108864
                  ? ((this.words = [E & 67108863]), (this.length = 1))
                  : E < 4503599627370496
                  ? ((this.words = [E & 67108863, (E / 67108864) & 67108863]),
                    (this.length = 2))
                  : (n(E < 9007199254740992),
                    (this.words = [E & 67108863, (E / 67108864) & 67108863, 1]),
                    (this.length = 3)),
                L === "le" && this._initArray(this.toArray(), P, L);
            }),
            (a.prototype._initArray = function (E, P, L) {
              if ((n(typeof E.length == "number"), E.length <= 0))
                return (this.words = [0]), (this.length = 1), this;
              (this.length = Math.ceil(E.length / 3)),
                (this.words = new Array(this.length));
              for (var U = 0; U < this.length; U++) this.words[U] = 0;
              var Y,
                ie,
                le = 0;
              if (L === "be")
                for (U = E.length - 1, Y = 0; U >= 0; U -= 3)
                  (ie = E[U] | (E[U - 1] << 8) | (E[U - 2] << 16)),
                    (this.words[Y] |= (ie << le) & 67108863),
                    (this.words[Y + 1] = (ie >>> (26 - le)) & 67108863),
                    (le += 24),
                    le >= 26 && ((le -= 26), Y++);
              else if (L === "le")
                for (U = 0, Y = 0; U < E.length; U += 3)
                  (ie = E[U] | (E[U + 1] << 8) | (E[U + 2] << 16)),
                    (this.words[Y] |= (ie << le) & 67108863),
                    (this.words[Y + 1] = (ie >>> (26 - le)) & 67108863),
                    (le += 24),
                    le >= 26 && ((le -= 26), Y++);
              return this._strip();
            });
          function u(E, P) {
            var L = E.charCodeAt(P);
            if (L >= 48 && L <= 57) return L - 48;
            if (L >= 65 && L <= 70) return L - 55;
            if (L >= 97 && L <= 102) return L - 87;
            n(!1, "Invalid character in " + E);
          }
          function p(E, P, L) {
            var U = u(E, L);
            return L - 1 >= P && (U |= u(E, L - 1) << 4), U;
          }
          a.prototype._parseHex = function (E, P, L) {
            (this.length = Math.ceil((E.length - P) / 6)),
              (this.words = new Array(this.length));
            for (var U = 0; U < this.length; U++) this.words[U] = 0;
            var Y = 0,
              ie = 0,
              le;
            if (L === "be")
              for (U = E.length - 1; U >= P; U -= 2)
                (le = p(E, P, U) << Y),
                  (this.words[ie] |= le & 67108863),
                  Y >= 18
                    ? ((Y -= 18), (ie += 1), (this.words[ie] |= le >>> 26))
                    : (Y += 8);
            else {
              var J = E.length - P;
              for (U = J % 2 === 0 ? P + 1 : P; U < E.length; U += 2)
                (le = p(E, P, U) << Y),
                  (this.words[ie] |= le & 67108863),
                  Y >= 18
                    ? ((Y -= 18), (ie += 1), (this.words[ie] |= le >>> 26))
                    : (Y += 8);
            }
            this._strip();
          };
          function m(E, P, L, U) {
            for (
              var Y = 0, ie = 0, le = Math.min(E.length, L), J = P;
              J < le;
              J++
            ) {
              var T = E.charCodeAt(J) - 48;
              (Y *= U),
                T >= 49
                  ? (ie = T - 49 + 10)
                  : T >= 17
                  ? (ie = T - 17 + 10)
                  : (ie = T),
                n(T >= 0 && ie < U, "Invalid character"),
                (Y += ie);
            }
            return Y;
          }
          (a.prototype._parseBase = function (E, P, L) {
            (this.words = [0]), (this.length = 1);
            for (var U = 0, Y = 1; Y <= 67108863; Y *= P) U++;
            U--, (Y = (Y / P) | 0);
            for (
              var ie = E.length - L,
                le = ie % U,
                J = Math.min(ie, ie - le) + L,
                T = 0,
                Z = L;
              Z < J;
              Z += U
            )
              (T = m(E, Z, Z + U, P)),
                this.imuln(Y),
                this.words[0] + T < 67108864
                  ? (this.words[0] += T)
                  : this._iaddn(T);
            if (le !== 0) {
              var Oe = 1;
              for (T = m(E, Z, E.length, P), Z = 0; Z < le; Z++) Oe *= P;
              this.imuln(Oe),
                this.words[0] + T < 67108864
                  ? (this.words[0] += T)
                  : this._iaddn(T);
            }
            this._strip();
          }),
            (a.prototype.copy = function (E) {
              E.words = new Array(this.length);
              for (var P = 0; P < this.length; P++) E.words[P] = this.words[P];
              (E.length = this.length),
                (E.negative = this.negative),
                (E.red = this.red);
            });
          function v(E, P) {
            (E.words = P.words),
              (E.length = P.length),
              (E.negative = P.negative),
              (E.red = P.red);
          }
          if (
            ((a.prototype._move = function (E) {
              v(E, this);
            }),
            (a.prototype.clone = function () {
              var E = new a(null);
              return this.copy(E), E;
            }),
            (a.prototype._expand = function (E) {
              for (; this.length < E; ) this.words[this.length++] = 0;
              return this;
            }),
            (a.prototype._strip = function () {
              for (; this.length > 1 && this.words[this.length - 1] === 0; )
                this.length--;
              return this._normSign();
            }),
            (a.prototype._normSign = function () {
              return (
                this.length === 1 && this.words[0] === 0 && (this.negative = 0),
                this
              );
            }),
            typeof Symbol < "u" && typeof Symbol.for == "function")
          )
            try {
              a.prototype[Symbol.for("nodejs.util.inspect.custom")] = w;
            } catch {
              a.prototype.inspect = w;
            }
          else a.prototype.inspect = w;
          function w() {
            return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
          }
          var S = [
              "",
              "0",
              "00",
              "000",
              "0000",
              "00000",
              "000000",
              "0000000",
              "00000000",
              "000000000",
              "0000000000",
              "00000000000",
              "000000000000",
              "0000000000000",
              "00000000000000",
              "000000000000000",
              "0000000000000000",
              "00000000000000000",
              "000000000000000000",
              "0000000000000000000",
              "00000000000000000000",
              "000000000000000000000",
              "0000000000000000000000",
              "00000000000000000000000",
              "000000000000000000000000",
              "0000000000000000000000000",
            ],
            M = [
              0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6,
              6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
            ],
            D = [
              0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607,
              16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536,
              11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101,
              5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368,
              20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875,
              60466176,
            ];
          (a.prototype.toString = function (E, P) {
            (E = E || 10), (P = P | 0 || 1);
            var L;
            if (E === 16 || E === "hex") {
              L = "";
              for (var U = 0, Y = 0, ie = 0; ie < this.length; ie++) {
                var le = this.words[ie],
                  J = (((le << U) | Y) & 16777215).toString(16);
                (Y = (le >>> (24 - U)) & 16777215),
                  (U += 2),
                  U >= 26 && ((U -= 26), ie--),
                  Y !== 0 || ie !== this.length - 1
                    ? (L = S[6 - J.length] + J + L)
                    : (L = J + L);
              }
              for (Y !== 0 && (L = Y.toString(16) + L); L.length % P !== 0; )
                L = "0" + L;
              return this.negative !== 0 && (L = "-" + L), L;
            }
            if (E === (E | 0) && E >= 2 && E <= 36) {
              var T = M[E],
                Z = D[E];
              L = "";
              var Oe = this.clone();
              for (Oe.negative = 0; !Oe.isZero(); ) {
                var Me = Oe.modrn(Z).toString(E);
                (Oe = Oe.idivn(Z)),
                  Oe.isZero() ? (L = Me + L) : (L = S[T - Me.length] + Me + L);
              }
              for (this.isZero() && (L = "0" + L); L.length % P !== 0; )
                L = "0" + L;
              return this.negative !== 0 && (L = "-" + L), L;
            }
            n(!1, "Base should be between 2 and 36");
          }),
            (a.prototype.toNumber = function () {
              var E = this.words[0];
              return (
                this.length === 2
                  ? (E += this.words[1] * 67108864)
                  : this.length === 3 && this.words[2] === 1
                  ? (E += 4503599627370496 + this.words[1] * 67108864)
                  : this.length > 2 &&
                    n(!1, "Number can only safely store up to 53 bits"),
                this.negative !== 0 ? -E : E
              );
            }),
            (a.prototype.toJSON = function () {
              return this.toString(16, 2);
            }),
            l &&
              (a.prototype.toBuffer = function (E, P) {
                return this.toArrayLike(l, E, P);
              }),
            (a.prototype.toArray = function (E, P) {
              return this.toArrayLike(Array, E, P);
            });
          var z = function (E, P) {
            return E.allocUnsafe ? E.allocUnsafe(P) : new E(P);
          };
          (a.prototype.toArrayLike = function (E, P, L) {
            this._strip();
            var U = this.byteLength(),
              Y = L || Math.max(1, U);
            n(U <= Y, "byte array longer than desired length"),
              n(Y > 0, "Requested array length <= 0");
            var ie = z(E, Y),
              le = P === "le" ? "LE" : "BE";
            return this["_toArrayLike" + le](ie, U), ie;
          }),
            (a.prototype._toArrayLikeLE = function (E, P) {
              for (var L = 0, U = 0, Y = 0, ie = 0; Y < this.length; Y++) {
                var le = (this.words[Y] << ie) | U;
                (E[L++] = le & 255),
                  L < E.length && (E[L++] = (le >> 8) & 255),
                  L < E.length && (E[L++] = (le >> 16) & 255),
                  ie === 6
                    ? (L < E.length && (E[L++] = (le >> 24) & 255),
                      (U = 0),
                      (ie = 0))
                    : ((U = le >>> 24), (ie += 2));
              }
              if (L < E.length) for (E[L++] = U; L < E.length; ) E[L++] = 0;
            }),
            (a.prototype._toArrayLikeBE = function (E, P) {
              for (
                var L = E.length - 1, U = 0, Y = 0, ie = 0;
                Y < this.length;
                Y++
              ) {
                var le = (this.words[Y] << ie) | U;
                (E[L--] = le & 255),
                  L >= 0 && (E[L--] = (le >> 8) & 255),
                  L >= 0 && (E[L--] = (le >> 16) & 255),
                  ie === 6
                    ? (L >= 0 && (E[L--] = (le >> 24) & 255), (U = 0), (ie = 0))
                    : ((U = le >>> 24), (ie += 2));
              }
              if (L >= 0) for (E[L--] = U; L >= 0; ) E[L--] = 0;
            }),
            Math.clz32
              ? (a.prototype._countBits = function (E) {
                  return 32 - Math.clz32(E);
                })
              : (a.prototype._countBits = function (E) {
                  var P = E,
                    L = 0;
                  return (
                    P >= 4096 && ((L += 13), (P >>>= 13)),
                    P >= 64 && ((L += 7), (P >>>= 7)),
                    P >= 8 && ((L += 4), (P >>>= 4)),
                    P >= 2 && ((L += 2), (P >>>= 2)),
                    L + P
                  );
                }),
            (a.prototype._zeroBits = function (E) {
              if (E === 0) return 26;
              var P = E,
                L = 0;
              return (
                P & 8191 || ((L += 13), (P >>>= 13)),
                P & 127 || ((L += 7), (P >>>= 7)),
                P & 15 || ((L += 4), (P >>>= 4)),
                P & 3 || ((L += 2), (P >>>= 2)),
                P & 1 || L++,
                L
              );
            }),
            (a.prototype.bitLength = function () {
              var E = this.words[this.length - 1],
                P = this._countBits(E);
              return (this.length - 1) * 26 + P;
            });
          function V(E) {
            for (var P = new Array(E.bitLength()), L = 0; L < P.length; L++) {
              var U = (L / 26) | 0,
                Y = L % 26;
              P[L] = (E.words[U] >>> Y) & 1;
            }
            return P;
          }
          (a.prototype.zeroBits = function () {
            if (this.isZero()) return 0;
            for (var E = 0, P = 0; P < this.length; P++) {
              var L = this._zeroBits(this.words[P]);
              if (((E += L), L !== 26)) break;
            }
            return E;
          }),
            (a.prototype.byteLength = function () {
              return Math.ceil(this.bitLength() / 8);
            }),
            (a.prototype.toTwos = function (E) {
              return this.negative !== 0
                ? this.abs().inotn(E).iaddn(1)
                : this.clone();
            }),
            (a.prototype.fromTwos = function (E) {
              return this.testn(E - 1)
                ? this.notn(E).iaddn(1).ineg()
                : this.clone();
            }),
            (a.prototype.isNeg = function () {
              return this.negative !== 0;
            }),
            (a.prototype.neg = function () {
              return this.clone().ineg();
            }),
            (a.prototype.ineg = function () {
              return this.isZero() || (this.negative ^= 1), this;
            }),
            (a.prototype.iuor = function (E) {
              for (; this.length < E.length; ) this.words[this.length++] = 0;
              for (var P = 0; P < E.length; P++)
                this.words[P] = this.words[P] | E.words[P];
              return this._strip();
            }),
            (a.prototype.ior = function (E) {
              return n((this.negative | E.negative) === 0), this.iuor(E);
            }),
            (a.prototype.or = function (E) {
              return this.length > E.length
                ? this.clone().ior(E)
                : E.clone().ior(this);
            }),
            (a.prototype.uor = function (E) {
              return this.length > E.length
                ? this.clone().iuor(E)
                : E.clone().iuor(this);
            }),
            (a.prototype.iuand = function (E) {
              var P;
              this.length > E.length ? (P = E) : (P = this);
              for (var L = 0; L < P.length; L++)
                this.words[L] = this.words[L] & E.words[L];
              return (this.length = P.length), this._strip();
            }),
            (a.prototype.iand = function (E) {
              return n((this.negative | E.negative) === 0), this.iuand(E);
            }),
            (a.prototype.and = function (E) {
              return this.length > E.length
                ? this.clone().iand(E)
                : E.clone().iand(this);
            }),
            (a.prototype.uand = function (E) {
              return this.length > E.length
                ? this.clone().iuand(E)
                : E.clone().iuand(this);
            }),
            (a.prototype.iuxor = function (E) {
              var P, L;
              this.length > E.length
                ? ((P = this), (L = E))
                : ((P = E), (L = this));
              for (var U = 0; U < L.length; U++)
                this.words[U] = P.words[U] ^ L.words[U];
              if (this !== P)
                for (; U < P.length; U++) this.words[U] = P.words[U];
              return (this.length = P.length), this._strip();
            }),
            (a.prototype.ixor = function (E) {
              return n((this.negative | E.negative) === 0), this.iuxor(E);
            }),
            (a.prototype.xor = function (E) {
              return this.length > E.length
                ? this.clone().ixor(E)
                : E.clone().ixor(this);
            }),
            (a.prototype.uxor = function (E) {
              return this.length > E.length
                ? this.clone().iuxor(E)
                : E.clone().iuxor(this);
            }),
            (a.prototype.inotn = function (E) {
              n(typeof E == "number" && E >= 0);
              var P = Math.ceil(E / 26) | 0,
                L = E % 26;
              this._expand(P), L > 0 && P--;
              for (var U = 0; U < P; U++)
                this.words[U] = ~this.words[U] & 67108863;
              return (
                L > 0 &&
                  (this.words[U] = ~this.words[U] & (67108863 >> (26 - L))),
                this._strip()
              );
            }),
            (a.prototype.notn = function (E) {
              return this.clone().inotn(E);
            }),
            (a.prototype.setn = function (E, P) {
              n(typeof E == "number" && E >= 0);
              var L = (E / 26) | 0,
                U = E % 26;
              return (
                this._expand(L + 1),
                P
                  ? (this.words[L] = this.words[L] | (1 << U))
                  : (this.words[L] = this.words[L] & ~(1 << U)),
                this._strip()
              );
            }),
            (a.prototype.iadd = function (E) {
              var P;
              if (this.negative !== 0 && E.negative === 0)
                return (
                  (this.negative = 0),
                  (P = this.isub(E)),
                  (this.negative ^= 1),
                  this._normSign()
                );
              if (this.negative === 0 && E.negative !== 0)
                return (
                  (E.negative = 0),
                  (P = this.isub(E)),
                  (E.negative = 1),
                  P._normSign()
                );
              var L, U;
              this.length > E.length
                ? ((L = this), (U = E))
                : ((L = E), (U = this));
              for (var Y = 0, ie = 0; ie < U.length; ie++)
                (P = (L.words[ie] | 0) + (U.words[ie] | 0) + Y),
                  (this.words[ie] = P & 67108863),
                  (Y = P >>> 26);
              for (; Y !== 0 && ie < L.length; ie++)
                (P = (L.words[ie] | 0) + Y),
                  (this.words[ie] = P & 67108863),
                  (Y = P >>> 26);
              if (((this.length = L.length), Y !== 0))
                (this.words[this.length] = Y), this.length++;
              else if (L !== this)
                for (; ie < L.length; ie++) this.words[ie] = L.words[ie];
              return this;
            }),
            (a.prototype.add = function (E) {
              var P;
              return E.negative !== 0 && this.negative === 0
                ? ((E.negative = 0), (P = this.sub(E)), (E.negative ^= 1), P)
                : E.negative === 0 && this.negative !== 0
                ? ((this.negative = 0),
                  (P = E.sub(this)),
                  (this.negative = 1),
                  P)
                : this.length > E.length
                ? this.clone().iadd(E)
                : E.clone().iadd(this);
            }),
            (a.prototype.isub = function (E) {
              if (E.negative !== 0) {
                E.negative = 0;
                var P = this.iadd(E);
                return (E.negative = 1), P._normSign();
              } else if (this.negative !== 0)
                return (
                  (this.negative = 0),
                  this.iadd(E),
                  (this.negative = 1),
                  this._normSign()
                );
              var L = this.cmp(E);
              if (L === 0)
                return (
                  (this.negative = 0),
                  (this.length = 1),
                  (this.words[0] = 0),
                  this
                );
              var U, Y;
              L > 0 ? ((U = this), (Y = E)) : ((U = E), (Y = this));
              for (var ie = 0, le = 0; le < Y.length; le++)
                (P = (U.words[le] | 0) - (Y.words[le] | 0) + ie),
                  (ie = P >> 26),
                  (this.words[le] = P & 67108863);
              for (; ie !== 0 && le < U.length; le++)
                (P = (U.words[le] | 0) + ie),
                  (ie = P >> 26),
                  (this.words[le] = P & 67108863);
              if (ie === 0 && le < U.length && U !== this)
                for (; le < U.length; le++) this.words[le] = U.words[le];
              return (
                (this.length = Math.max(this.length, le)),
                U !== this && (this.negative = 1),
                this._strip()
              );
            }),
            (a.prototype.sub = function (E) {
              return this.clone().isub(E);
            });
          function j(E, P, L) {
            L.negative = P.negative ^ E.negative;
            var U = (E.length + P.length) | 0;
            (L.length = U), (U = (U - 1) | 0);
            var Y = E.words[0] | 0,
              ie = P.words[0] | 0,
              le = Y * ie,
              J = le & 67108863,
              T = (le / 67108864) | 0;
            L.words[0] = J;
            for (var Z = 1; Z < U; Z++) {
              for (
                var Oe = T >>> 26,
                  Me = T & 67108863,
                  X = Math.min(Z, P.length - 1),
                  Ee = Math.max(0, Z - E.length + 1);
                Ee <= X;
                Ee++
              ) {
                var me = (Z - Ee) | 0;
                (Y = E.words[me] | 0),
                  (ie = P.words[Ee] | 0),
                  (le = Y * ie + Me),
                  (Oe += (le / 67108864) | 0),
                  (Me = le & 67108863);
              }
              (L.words[Z] = Me | 0), (T = Oe | 0);
            }
            return T !== 0 ? (L.words[Z] = T | 0) : L.length--, L._strip();
          }
          var B = function (E, P, L) {
            var U = E.words,
              Y = P.words,
              ie = L.words,
              le = 0,
              J,
              T,
              Z,
              Oe = U[0] | 0,
              Me = Oe & 8191,
              X = Oe >>> 13,
              Ee = U[1] | 0,
              me = Ee & 8191,
              xe = Ee >>> 13,
              Se = U[2] | 0,
              Ie = Se & 8191,
              Ne = Se >>> 13,
              oe = U[3] | 0,
              W = oe & 8191,
              Q = oe >>> 13,
              ge = U[4] | 0,
              I = ge & 8191,
              R = ge >>> 13,
              q = U[5] | 0,
              ce = q & 8191,
              ne = q >>> 13,
              de = U[6] | 0,
              Te = de & 8191,
              Re = de >>> 13,
              Ve = U[7] | 0,
              Pe = Ve & 8191,
              Be = Ve >>> 13,
              Ze = U[8] | 0,
              Je = Ze & 8191,
              st = Ze >>> 13,
              Ur = U[9] | 0,
              Dt = Ur & 8191,
              Qt = Ur >>> 13,
              Mn = Y[0] | 0,
              Jt = Mn & 8191,
              wt = Mn >>> 13,
              sn = Y[1] | 0,
              Zt = sn & 8191,
              gr = sn >>> 13,
              wa = Y[2] | 0,
              qt = wa & 8191,
              lr = wa >>> 13,
              ts = Y[3] | 0,
              cr = ts & 8191,
              mr = ts >>> 13,
              Ts = Y[4] | 0,
              ur = Ts & 8191,
              vr = Ts >>> 13,
              ka = Y[5] | 0,
              yr = ka & 8191,
              br = ka >>> 13,
              rs = Y[6] | 0,
              Xt = rs & 8191,
              er = rs >>> 13,
              _a = Y[7] | 0,
              xr = _a & 8191,
              wr = _a >>> 13,
              Aa = Y[8] | 0,
              kr = Aa & 8191,
              hr = Aa >>> 13,
              Ps = Y[9] | 0,
              ir = Ps & 8191,
              _r = Ps >>> 13;
            (L.negative = E.negative ^ P.negative),
              (L.length = 19),
              (J = Math.imul(Me, Jt)),
              (T = Math.imul(Me, wt)),
              (T = (T + Math.imul(X, Jt)) | 0),
              (Z = Math.imul(X, wt));
            var $ = (((le + J) | 0) + ((T & 8191) << 13)) | 0;
            (le = (((Z + (T >>> 13)) | 0) + ($ >>> 26)) | 0),
              ($ &= 67108863),
              (J = Math.imul(me, Jt)),
              (T = Math.imul(me, wt)),
              (T = (T + Math.imul(xe, Jt)) | 0),
              (Z = Math.imul(xe, wt)),
              (J = (J + Math.imul(Me, Zt)) | 0),
              (T = (T + Math.imul(Me, gr)) | 0),
              (T = (T + Math.imul(X, Zt)) | 0),
              (Z = (Z + Math.imul(X, gr)) | 0);
            var s = (((le + J) | 0) + ((T & 8191) << 13)) | 0;
            (le = (((Z + (T >>> 13)) | 0) + (s >>> 26)) | 0),
              (s &= 67108863),
              (J = Math.imul(Ie, Jt)),
              (T = Math.imul(Ie, wt)),
              (T = (T + Math.imul(Ne, Jt)) | 0),
              (Z = Math.imul(Ne, wt)),
              (J = (J + Math.imul(me, Zt)) | 0),
              (T = (T + Math.imul(me, gr)) | 0),
              (T = (T + Math.imul(xe, Zt)) | 0),
              (Z = (Z + Math.imul(xe, gr)) | 0),
              (J = (J + Math.imul(Me, qt)) | 0),
              (T = (T + Math.imul(Me, lr)) | 0),
              (T = (T + Math.imul(X, qt)) | 0),
              (Z = (Z + Math.imul(X, lr)) | 0);
            var o = (((le + J) | 0) + ((T & 8191) << 13)) | 0;
            (le = (((Z + (T >>> 13)) | 0) + (o >>> 26)) | 0),
              (o &= 67108863),
              (J = Math.imul(W, Jt)),
              (T = Math.imul(W, wt)),
              (T = (T + Math.imul(Q, Jt)) | 0),
              (Z = Math.imul(Q, wt)),
              (J = (J + Math.imul(Ie, Zt)) | 0),
              (T = (T + Math.imul(Ie, gr)) | 0),
              (T = (T + Math.imul(Ne, Zt)) | 0),
              (Z = (Z + Math.imul(Ne, gr)) | 0),
              (J = (J + Math.imul(me, qt)) | 0),
              (T = (T + Math.imul(me, lr)) | 0),
              (T = (T + Math.imul(xe, qt)) | 0),
              (Z = (Z + Math.imul(xe, lr)) | 0),
              (J = (J + Math.imul(Me, cr)) | 0),
              (T = (T + Math.imul(Me, mr)) | 0),
              (T = (T + Math.imul(X, cr)) | 0),
              (Z = (Z + Math.imul(X, mr)) | 0);
            var c = (((le + J) | 0) + ((T & 8191) << 13)) | 0;
            (le = (((Z + (T >>> 13)) | 0) + (c >>> 26)) | 0),
              (c &= 67108863),
              (J = Math.imul(I, Jt)),
              (T = Math.imul(I, wt)),
              (T = (T + Math.imul(R, Jt)) | 0),
              (Z = Math.imul(R, wt)),
              (J = (J + Math.imul(W, Zt)) | 0),
              (T = (T + Math.imul(W, gr)) | 0),
              (T = (T + Math.imul(Q, Zt)) | 0),
              (Z = (Z + Math.imul(Q, gr)) | 0),
              (J = (J + Math.imul(Ie, qt)) | 0),
              (T = (T + Math.imul(Ie, lr)) | 0),
              (T = (T + Math.imul(Ne, qt)) | 0),
              (Z = (Z + Math.imul(Ne, lr)) | 0),
              (J = (J + Math.imul(me, cr)) | 0),
              (T = (T + Math.imul(me, mr)) | 0),
              (T = (T + Math.imul(xe, cr)) | 0),
              (Z = (Z + Math.imul(xe, mr)) | 0),
              (J = (J + Math.imul(Me, ur)) | 0),
              (T = (T + Math.imul(Me, vr)) | 0),
              (T = (T + Math.imul(X, ur)) | 0),
              (Z = (Z + Math.imul(X, vr)) | 0);
            var h = (((le + J) | 0) + ((T & 8191) << 13)) | 0;
            (le = (((Z + (T >>> 13)) | 0) + (h >>> 26)) | 0),
              (h &= 67108863),
              (J = Math.imul(ce, Jt)),
              (T = Math.imul(ce, wt)),
              (T = (T + Math.imul(ne, Jt)) | 0),
              (Z = Math.imul(ne, wt)),
              (J = (J + Math.imul(I, Zt)) | 0),
              (T = (T + Math.imul(I, gr)) | 0),
              (T = (T + Math.imul(R, Zt)) | 0),
              (Z = (Z + Math.imul(R, gr)) | 0),
              (J = (J + Math.imul(W, qt)) | 0),
              (T = (T + Math.imul(W, lr)) | 0),
              (T = (T + Math.imul(Q, qt)) | 0),
              (Z = (Z + Math.imul(Q, lr)) | 0),
              (J = (J + Math.imul(Ie, cr)) | 0),
              (T = (T + Math.imul(Ie, mr)) | 0),
              (T = (T + Math.imul(Ne, cr)) | 0),
              (Z = (Z + Math.imul(Ne, mr)) | 0),
              (J = (J + Math.imul(me, ur)) | 0),
              (T = (T + Math.imul(me, vr)) | 0),
              (T = (T + Math.imul(xe, ur)) | 0),
              (Z = (Z + Math.imul(xe, vr)) | 0),
              (J = (J + Math.imul(Me, yr)) | 0),
              (T = (T + Math.imul(Me, br)) | 0),
              (T = (T + Math.imul(X, yr)) | 0),
              (Z = (Z + Math.imul(X, br)) | 0);
            var d = (((le + J) | 0) + ((T & 8191) << 13)) | 0;
            (le = (((Z + (T >>> 13)) | 0) + (d >>> 26)) | 0),
              (d &= 67108863),
              (J = Math.imul(Te, Jt)),
              (T = Math.imul(Te, wt)),
              (T = (T + Math.imul(Re, Jt)) | 0),
              (Z = Math.imul(Re, wt)),
              (J = (J + Math.imul(ce, Zt)) | 0),
              (T = (T + Math.imul(ce, gr)) | 0),
              (T = (T + Math.imul(ne, Zt)) | 0),
              (Z = (Z + Math.imul(ne, gr)) | 0),
              (J = (J + Math.imul(I, qt)) | 0),
              (T = (T + Math.imul(I, lr)) | 0),
              (T = (T + Math.imul(R, qt)) | 0),
              (Z = (Z + Math.imul(R, lr)) | 0),
              (J = (J + Math.imul(W, cr)) | 0),
              (T = (T + Math.imul(W, mr)) | 0),
              (T = (T + Math.imul(Q, cr)) | 0),
              (Z = (Z + Math.imul(Q, mr)) | 0),
              (J = (J + Math.imul(Ie, ur)) | 0),
              (T = (T + Math.imul(Ie, vr)) | 0),
              (T = (T + Math.imul(Ne, ur)) | 0),
              (Z = (Z + Math.imul(Ne, vr)) | 0),
              (J = (J + Math.imul(me, yr)) | 0),
              (T = (T + Math.imul(me, br)) | 0),
              (T = (T + Math.imul(xe, yr)) | 0),
              (Z = (Z + Math.imul(xe, br)) | 0),
              (J = (J + Math.imul(Me, Xt)) | 0),
              (T = (T + Math.imul(Me, er)) | 0),
              (T = (T + Math.imul(X, Xt)) | 0),
              (Z = (Z + Math.imul(X, er)) | 0);
            var f = (((le + J) | 0) + ((T & 8191) << 13)) | 0;
            (le = (((Z + (T >>> 13)) | 0) + (f >>> 26)) | 0),
              (f &= 67108863),
              (J = Math.imul(Pe, Jt)),
              (T = Math.imul(Pe, wt)),
              (T = (T + Math.imul(Be, Jt)) | 0),
              (Z = Math.imul(Be, wt)),
              (J = (J + Math.imul(Te, Zt)) | 0),
              (T = (T + Math.imul(Te, gr)) | 0),
              (T = (T + Math.imul(Re, Zt)) | 0),
              (Z = (Z + Math.imul(Re, gr)) | 0),
              (J = (J + Math.imul(ce, qt)) | 0),
              (T = (T + Math.imul(ce, lr)) | 0),
              (T = (T + Math.imul(ne, qt)) | 0),
              (Z = (Z + Math.imul(ne, lr)) | 0),
              (J = (J + Math.imul(I, cr)) | 0),
              (T = (T + Math.imul(I, mr)) | 0),
              (T = (T + Math.imul(R, cr)) | 0),
              (Z = (Z + Math.imul(R, mr)) | 0),
              (J = (J + Math.imul(W, ur)) | 0),
              (T = (T + Math.imul(W, vr)) | 0),
              (T = (T + Math.imul(Q, ur)) | 0),
              (Z = (Z + Math.imul(Q, vr)) | 0),
              (J = (J + Math.imul(Ie, yr)) | 0),
              (T = (T + Math.imul(Ie, br)) | 0),
              (T = (T + Math.imul(Ne, yr)) | 0),
              (Z = (Z + Math.imul(Ne, br)) | 0),
              (J = (J + Math.imul(me, Xt)) | 0),
              (T = (T + Math.imul(me, er)) | 0),
              (T = (T + Math.imul(xe, Xt)) | 0),
              (Z = (Z + Math.imul(xe, er)) | 0),
              (J = (J + Math.imul(Me, xr)) | 0),
              (T = (T + Math.imul(Me, wr)) | 0),
              (T = (T + Math.imul(X, xr)) | 0),
              (Z = (Z + Math.imul(X, wr)) | 0);
            var g = (((le + J) | 0) + ((T & 8191) << 13)) | 0;
            (le = (((Z + (T >>> 13)) | 0) + (g >>> 26)) | 0),
              (g &= 67108863),
              (J = Math.imul(Je, Jt)),
              (T = Math.imul(Je, wt)),
              (T = (T + Math.imul(st, Jt)) | 0),
              (Z = Math.imul(st, wt)),
              (J = (J + Math.imul(Pe, Zt)) | 0),
              (T = (T + Math.imul(Pe, gr)) | 0),
              (T = (T + Math.imul(Be, Zt)) | 0),
              (Z = (Z + Math.imul(Be, gr)) | 0),
              (J = (J + Math.imul(Te, qt)) | 0),
              (T = (T + Math.imul(Te, lr)) | 0),
              (T = (T + Math.imul(Re, qt)) | 0),
              (Z = (Z + Math.imul(Re, lr)) | 0),
              (J = (J + Math.imul(ce, cr)) | 0),
              (T = (T + Math.imul(ce, mr)) | 0),
              (T = (T + Math.imul(ne, cr)) | 0),
              (Z = (Z + Math.imul(ne, mr)) | 0),
              (J = (J + Math.imul(I, ur)) | 0),
              (T = (T + Math.imul(I, vr)) | 0),
              (T = (T + Math.imul(R, ur)) | 0),
              (Z = (Z + Math.imul(R, vr)) | 0),
              (J = (J + Math.imul(W, yr)) | 0),
              (T = (T + Math.imul(W, br)) | 0),
              (T = (T + Math.imul(Q, yr)) | 0),
              (Z = (Z + Math.imul(Q, br)) | 0),
              (J = (J + Math.imul(Ie, Xt)) | 0),
              (T = (T + Math.imul(Ie, er)) | 0),
              (T = (T + Math.imul(Ne, Xt)) | 0),
              (Z = (Z + Math.imul(Ne, er)) | 0),
              (J = (J + Math.imul(me, xr)) | 0),
              (T = (T + Math.imul(me, wr)) | 0),
              (T = (T + Math.imul(xe, xr)) | 0),
              (Z = (Z + Math.imul(xe, wr)) | 0),
              (J = (J + Math.imul(Me, kr)) | 0),
              (T = (T + Math.imul(Me, hr)) | 0),
              (T = (T + Math.imul(X, kr)) | 0),
              (Z = (Z + Math.imul(X, hr)) | 0);
            var y = (((le + J) | 0) + ((T & 8191) << 13)) | 0;
            (le = (((Z + (T >>> 13)) | 0) + (y >>> 26)) | 0),
              (y &= 67108863),
              (J = Math.imul(Dt, Jt)),
              (T = Math.imul(Dt, wt)),
              (T = (T + Math.imul(Qt, Jt)) | 0),
              (Z = Math.imul(Qt, wt)),
              (J = (J + Math.imul(Je, Zt)) | 0),
              (T = (T + Math.imul(Je, gr)) | 0),
              (T = (T + Math.imul(st, Zt)) | 0),
              (Z = (Z + Math.imul(st, gr)) | 0),
              (J = (J + Math.imul(Pe, qt)) | 0),
              (T = (T + Math.imul(Pe, lr)) | 0),
              (T = (T + Math.imul(Be, qt)) | 0),
              (Z = (Z + Math.imul(Be, lr)) | 0),
              (J = (J + Math.imul(Te, cr)) | 0),
              (T = (T + Math.imul(Te, mr)) | 0),
              (T = (T + Math.imul(Re, cr)) | 0),
              (Z = (Z + Math.imul(Re, mr)) | 0),
              (J = (J + Math.imul(ce, ur)) | 0),
              (T = (T + Math.imul(ce, vr)) | 0),
              (T = (T + Math.imul(ne, ur)) | 0),
              (Z = (Z + Math.imul(ne, vr)) | 0),
              (J = (J + Math.imul(I, yr)) | 0),
              (T = (T + Math.imul(I, br)) | 0),
              (T = (T + Math.imul(R, yr)) | 0),
              (Z = (Z + Math.imul(R, br)) | 0),
              (J = (J + Math.imul(W, Xt)) | 0),
              (T = (T + Math.imul(W, er)) | 0),
              (T = (T + Math.imul(Q, Xt)) | 0),
              (Z = (Z + Math.imul(Q, er)) | 0),
              (J = (J + Math.imul(Ie, xr)) | 0),
              (T = (T + Math.imul(Ie, wr)) | 0),
              (T = (T + Math.imul(Ne, xr)) | 0),
              (Z = (Z + Math.imul(Ne, wr)) | 0),
              (J = (J + Math.imul(me, kr)) | 0),
              (T = (T + Math.imul(me, hr)) | 0),
              (T = (T + Math.imul(xe, kr)) | 0),
              (Z = (Z + Math.imul(xe, hr)) | 0),
              (J = (J + Math.imul(Me, ir)) | 0),
              (T = (T + Math.imul(Me, _r)) | 0),
              (T = (T + Math.imul(X, ir)) | 0),
              (Z = (Z + Math.imul(X, _r)) | 0);
            var x = (((le + J) | 0) + ((T & 8191) << 13)) | 0;
            (le = (((Z + (T >>> 13)) | 0) + (x >>> 26)) | 0),
              (x &= 67108863),
              (J = Math.imul(Dt, Zt)),
              (T = Math.imul(Dt, gr)),
              (T = (T + Math.imul(Qt, Zt)) | 0),
              (Z = Math.imul(Qt, gr)),
              (J = (J + Math.imul(Je, qt)) | 0),
              (T = (T + Math.imul(Je, lr)) | 0),
              (T = (T + Math.imul(st, qt)) | 0),
              (Z = (Z + Math.imul(st, lr)) | 0),
              (J = (J + Math.imul(Pe, cr)) | 0),
              (T = (T + Math.imul(Pe, mr)) | 0),
              (T = (T + Math.imul(Be, cr)) | 0),
              (Z = (Z + Math.imul(Be, mr)) | 0),
              (J = (J + Math.imul(Te, ur)) | 0),
              (T = (T + Math.imul(Te, vr)) | 0),
              (T = (T + Math.imul(Re, ur)) | 0),
              (Z = (Z + Math.imul(Re, vr)) | 0),
              (J = (J + Math.imul(ce, yr)) | 0),
              (T = (T + Math.imul(ce, br)) | 0),
              (T = (T + Math.imul(ne, yr)) | 0),
              (Z = (Z + Math.imul(ne, br)) | 0),
              (J = (J + Math.imul(I, Xt)) | 0),
              (T = (T + Math.imul(I, er)) | 0),
              (T = (T + Math.imul(R, Xt)) | 0),
              (Z = (Z + Math.imul(R, er)) | 0),
              (J = (J + Math.imul(W, xr)) | 0),
              (T = (T + Math.imul(W, wr)) | 0),
              (T = (T + Math.imul(Q, xr)) | 0),
              (Z = (Z + Math.imul(Q, wr)) | 0),
              (J = (J + Math.imul(Ie, kr)) | 0),
              (T = (T + Math.imul(Ie, hr)) | 0),
              (T = (T + Math.imul(Ne, kr)) | 0),
              (Z = (Z + Math.imul(Ne, hr)) | 0),
              (J = (J + Math.imul(me, ir)) | 0),
              (T = (T + Math.imul(me, _r)) | 0),
              (T = (T + Math.imul(xe, ir)) | 0),
              (Z = (Z + Math.imul(xe, _r)) | 0);
            var k = (((le + J) | 0) + ((T & 8191) << 13)) | 0;
            (le = (((Z + (T >>> 13)) | 0) + (k >>> 26)) | 0),
              (k &= 67108863),
              (J = Math.imul(Dt, qt)),
              (T = Math.imul(Dt, lr)),
              (T = (T + Math.imul(Qt, qt)) | 0),
              (Z = Math.imul(Qt, lr)),
              (J = (J + Math.imul(Je, cr)) | 0),
              (T = (T + Math.imul(Je, mr)) | 0),
              (T = (T + Math.imul(st, cr)) | 0),
              (Z = (Z + Math.imul(st, mr)) | 0),
              (J = (J + Math.imul(Pe, ur)) | 0),
              (T = (T + Math.imul(Pe, vr)) | 0),
              (T = (T + Math.imul(Be, ur)) | 0),
              (Z = (Z + Math.imul(Be, vr)) | 0),
              (J = (J + Math.imul(Te, yr)) | 0),
              (T = (T + Math.imul(Te, br)) | 0),
              (T = (T + Math.imul(Re, yr)) | 0),
              (Z = (Z + Math.imul(Re, br)) | 0),
              (J = (J + Math.imul(ce, Xt)) | 0),
              (T = (T + Math.imul(ce, er)) | 0),
              (T = (T + Math.imul(ne, Xt)) | 0),
              (Z = (Z + Math.imul(ne, er)) | 0),
              (J = (J + Math.imul(I, xr)) | 0),
              (T = (T + Math.imul(I, wr)) | 0),
              (T = (T + Math.imul(R, xr)) | 0),
              (Z = (Z + Math.imul(R, wr)) | 0),
              (J = (J + Math.imul(W, kr)) | 0),
              (T = (T + Math.imul(W, hr)) | 0),
              (T = (T + Math.imul(Q, kr)) | 0),
              (Z = (Z + Math.imul(Q, hr)) | 0),
              (J = (J + Math.imul(Ie, ir)) | 0),
              (T = (T + Math.imul(Ie, _r)) | 0),
              (T = (T + Math.imul(Ne, ir)) | 0),
              (Z = (Z + Math.imul(Ne, _r)) | 0);
            var _ = (((le + J) | 0) + ((T & 8191) << 13)) | 0;
            (le = (((Z + (T >>> 13)) | 0) + (_ >>> 26)) | 0),
              (_ &= 67108863),
              (J = Math.imul(Dt, cr)),
              (T = Math.imul(Dt, mr)),
              (T = (T + Math.imul(Qt, cr)) | 0),
              (Z = Math.imul(Qt, mr)),
              (J = (J + Math.imul(Je, ur)) | 0),
              (T = (T + Math.imul(Je, vr)) | 0),
              (T = (T + Math.imul(st, ur)) | 0),
              (Z = (Z + Math.imul(st, vr)) | 0),
              (J = (J + Math.imul(Pe, yr)) | 0),
              (T = (T + Math.imul(Pe, br)) | 0),
              (T = (T + Math.imul(Be, yr)) | 0),
              (Z = (Z + Math.imul(Be, br)) | 0),
              (J = (J + Math.imul(Te, Xt)) | 0),
              (T = (T + Math.imul(Te, er)) | 0),
              (T = (T + Math.imul(Re, Xt)) | 0),
              (Z = (Z + Math.imul(Re, er)) | 0),
              (J = (J + Math.imul(ce, xr)) | 0),
              (T = (T + Math.imul(ce, wr)) | 0),
              (T = (T + Math.imul(ne, xr)) | 0),
              (Z = (Z + Math.imul(ne, wr)) | 0),
              (J = (J + Math.imul(I, kr)) | 0),
              (T = (T + Math.imul(I, hr)) | 0),
              (T = (T + Math.imul(R, kr)) | 0),
              (Z = (Z + Math.imul(R, hr)) | 0),
              (J = (J + Math.imul(W, ir)) | 0),
              (T = (T + Math.imul(W, _r)) | 0),
              (T = (T + Math.imul(Q, ir)) | 0),
              (Z = (Z + Math.imul(Q, _r)) | 0);
            var A = (((le + J) | 0) + ((T & 8191) << 13)) | 0;
            (le = (((Z + (T >>> 13)) | 0) + (A >>> 26)) | 0),
              (A &= 67108863),
              (J = Math.imul(Dt, ur)),
              (T = Math.imul(Dt, vr)),
              (T = (T + Math.imul(Qt, ur)) | 0),
              (Z = Math.imul(Qt, vr)),
              (J = (J + Math.imul(Je, yr)) | 0),
              (T = (T + Math.imul(Je, br)) | 0),
              (T = (T + Math.imul(st, yr)) | 0),
              (Z = (Z + Math.imul(st, br)) | 0),
              (J = (J + Math.imul(Pe, Xt)) | 0),
              (T = (T + Math.imul(Pe, er)) | 0),
              (T = (T + Math.imul(Be, Xt)) | 0),
              (Z = (Z + Math.imul(Be, er)) | 0),
              (J = (J + Math.imul(Te, xr)) | 0),
              (T = (T + Math.imul(Te, wr)) | 0),
              (T = (T + Math.imul(Re, xr)) | 0),
              (Z = (Z + Math.imul(Re, wr)) | 0),
              (J = (J + Math.imul(ce, kr)) | 0),
              (T = (T + Math.imul(ce, hr)) | 0),
              (T = (T + Math.imul(ne, kr)) | 0),
              (Z = (Z + Math.imul(ne, hr)) | 0),
              (J = (J + Math.imul(I, ir)) | 0),
              (T = (T + Math.imul(I, _r)) | 0),
              (T = (T + Math.imul(R, ir)) | 0),
              (Z = (Z + Math.imul(R, _r)) | 0);
            var O = (((le + J) | 0) + ((T & 8191) << 13)) | 0;
            (le = (((Z + (T >>> 13)) | 0) + (O >>> 26)) | 0),
              (O &= 67108863),
              (J = Math.imul(Dt, yr)),
              (T = Math.imul(Dt, br)),
              (T = (T + Math.imul(Qt, yr)) | 0),
              (Z = Math.imul(Qt, br)),
              (J = (J + Math.imul(Je, Xt)) | 0),
              (T = (T + Math.imul(Je, er)) | 0),
              (T = (T + Math.imul(st, Xt)) | 0),
              (Z = (Z + Math.imul(st, er)) | 0),
              (J = (J + Math.imul(Pe, xr)) | 0),
              (T = (T + Math.imul(Pe, wr)) | 0),
              (T = (T + Math.imul(Be, xr)) | 0),
              (Z = (Z + Math.imul(Be, wr)) | 0),
              (J = (J + Math.imul(Te, kr)) | 0),
              (T = (T + Math.imul(Te, hr)) | 0),
              (T = (T + Math.imul(Re, kr)) | 0),
              (Z = (Z + Math.imul(Re, hr)) | 0),
              (J = (J + Math.imul(ce, ir)) | 0),
              (T = (T + Math.imul(ce, _r)) | 0),
              (T = (T + Math.imul(ne, ir)) | 0),
              (Z = (Z + Math.imul(ne, _r)) | 0);
            var N = (((le + J) | 0) + ((T & 8191) << 13)) | 0;
            (le = (((Z + (T >>> 13)) | 0) + (N >>> 26)) | 0),
              (N &= 67108863),
              (J = Math.imul(Dt, Xt)),
              (T = Math.imul(Dt, er)),
              (T = (T + Math.imul(Qt, Xt)) | 0),
              (Z = Math.imul(Qt, er)),
              (J = (J + Math.imul(Je, xr)) | 0),
              (T = (T + Math.imul(Je, wr)) | 0),
              (T = (T + Math.imul(st, xr)) | 0),
              (Z = (Z + Math.imul(st, wr)) | 0),
              (J = (J + Math.imul(Pe, kr)) | 0),
              (T = (T + Math.imul(Pe, hr)) | 0),
              (T = (T + Math.imul(Be, kr)) | 0),
              (Z = (Z + Math.imul(Be, hr)) | 0),
              (J = (J + Math.imul(Te, ir)) | 0),
              (T = (T + Math.imul(Te, _r)) | 0),
              (T = (T + Math.imul(Re, ir)) | 0),
              (Z = (Z + Math.imul(Re, _r)) | 0);
            var H = (((le + J) | 0) + ((T & 8191) << 13)) | 0;
            (le = (((Z + (T >>> 13)) | 0) + (H >>> 26)) | 0),
              (H &= 67108863),
              (J = Math.imul(Dt, xr)),
              (T = Math.imul(Dt, wr)),
              (T = (T + Math.imul(Qt, xr)) | 0),
              (Z = Math.imul(Qt, wr)),
              (J = (J + Math.imul(Je, kr)) | 0),
              (T = (T + Math.imul(Je, hr)) | 0),
              (T = (T + Math.imul(st, kr)) | 0),
              (Z = (Z + Math.imul(st, hr)) | 0),
              (J = (J + Math.imul(Pe, ir)) | 0),
              (T = (T + Math.imul(Pe, _r)) | 0),
              (T = (T + Math.imul(Be, ir)) | 0),
              (Z = (Z + Math.imul(Be, _r)) | 0);
            var G = (((le + J) | 0) + ((T & 8191) << 13)) | 0;
            (le = (((Z + (T >>> 13)) | 0) + (G >>> 26)) | 0),
              (G &= 67108863),
              (J = Math.imul(Dt, kr)),
              (T = Math.imul(Dt, hr)),
              (T = (T + Math.imul(Qt, kr)) | 0),
              (Z = Math.imul(Qt, hr)),
              (J = (J + Math.imul(Je, ir)) | 0),
              (T = (T + Math.imul(Je, _r)) | 0),
              (T = (T + Math.imul(st, ir)) | 0),
              (Z = (Z + Math.imul(st, _r)) | 0);
            var te = (((le + J) | 0) + ((T & 8191) << 13)) | 0;
            (le = (((Z + (T >>> 13)) | 0) + (te >>> 26)) | 0),
              (te &= 67108863),
              (J = Math.imul(Dt, ir)),
              (T = Math.imul(Dt, _r)),
              (T = (T + Math.imul(Qt, ir)) | 0),
              (Z = Math.imul(Qt, _r));
            var se = (((le + J) | 0) + ((T & 8191) << 13)) | 0;
            return (
              (le = (((Z + (T >>> 13)) | 0) + (se >>> 26)) | 0),
              (se &= 67108863),
              (ie[0] = $),
              (ie[1] = s),
              (ie[2] = o),
              (ie[3] = c),
              (ie[4] = h),
              (ie[5] = d),
              (ie[6] = f),
              (ie[7] = g),
              (ie[8] = y),
              (ie[9] = x),
              (ie[10] = k),
              (ie[11] = _),
              (ie[12] = A),
              (ie[13] = O),
              (ie[14] = N),
              (ie[15] = H),
              (ie[16] = G),
              (ie[17] = te),
              (ie[18] = se),
              le !== 0 && ((ie[19] = le), L.length++),
              L
            );
          };
          Math.imul || (B = j);
          function ae(E, P, L) {
            (L.negative = P.negative ^ E.negative),
              (L.length = E.length + P.length);
            for (var U = 0, Y = 0, ie = 0; ie < L.length - 1; ie++) {
              var le = Y;
              Y = 0;
              for (
                var J = U & 67108863,
                  T = Math.min(ie, P.length - 1),
                  Z = Math.max(0, ie - E.length + 1);
                Z <= T;
                Z++
              ) {
                var Oe = ie - Z,
                  Me = E.words[Oe] | 0,
                  X = P.words[Z] | 0,
                  Ee = Me * X,
                  me = Ee & 67108863;
                (le = (le + ((Ee / 67108864) | 0)) | 0),
                  (me = (me + J) | 0),
                  (J = me & 67108863),
                  (le = (le + (me >>> 26)) | 0),
                  (Y += le >>> 26),
                  (le &= 67108863);
              }
              (L.words[ie] = J), (U = le), (le = Y);
            }
            return U !== 0 ? (L.words[ie] = U) : L.length--, L._strip();
          }
          function re(E, P, L) {
            return ae(E, P, L);
          }
          (a.prototype.mulTo = function (E, P) {
            var L,
              U = this.length + E.length;
            return (
              this.length === 10 && E.length === 10
                ? (L = B(this, E, P))
                : U < 63
                ? (L = j(this, E, P))
                : U < 1024
                ? (L = ae(this, E, P))
                : (L = re(this, E, P)),
              L
            );
          }),
            (a.prototype.mul = function (E) {
              var P = new a(null);
              return (
                (P.words = new Array(this.length + E.length)), this.mulTo(E, P)
              );
            }),
            (a.prototype.mulf = function (E) {
              var P = new a(null);
              return (
                (P.words = new Array(this.length + E.length)), re(this, E, P)
              );
            }),
            (a.prototype.imul = function (E) {
              return this.clone().mulTo(E, this);
            }),
            (a.prototype.imuln = function (E) {
              var P = E < 0;
              P && (E = -E), n(typeof E == "number"), n(E < 67108864);
              for (var L = 0, U = 0; U < this.length; U++) {
                var Y = (this.words[U] | 0) * E,
                  ie = (Y & 67108863) + (L & 67108863);
                (L >>= 26),
                  (L += (Y / 67108864) | 0),
                  (L += ie >>> 26),
                  (this.words[U] = ie & 67108863);
              }
              return (
                L !== 0 && ((this.words[U] = L), this.length++),
                P ? this.ineg() : this
              );
            }),
            (a.prototype.muln = function (E) {
              return this.clone().imuln(E);
            }),
            (a.prototype.sqr = function () {
              return this.mul(this);
            }),
            (a.prototype.isqr = function () {
              return this.imul(this.clone());
            }),
            (a.prototype.pow = function (E) {
              var P = V(E);
              if (P.length === 0) return new a(1);
              for (
                var L = this, U = 0;
                U < P.length && P[U] === 0;
                U++, L = L.sqr()
              );
              if (++U < P.length)
                for (var Y = L.sqr(); U < P.length; U++, Y = Y.sqr())
                  P[U] !== 0 && (L = L.mul(Y));
              return L;
            }),
            (a.prototype.iushln = function (E) {
              n(typeof E == "number" && E >= 0);
              var P = E % 26,
                L = (E - P) / 26,
                U = (67108863 >>> (26 - P)) << (26 - P),
                Y;
              if (P !== 0) {
                var ie = 0;
                for (Y = 0; Y < this.length; Y++) {
                  var le = this.words[Y] & U,
                    J = ((this.words[Y] | 0) - le) << P;
                  (this.words[Y] = J | ie), (ie = le >>> (26 - P));
                }
                ie && ((this.words[Y] = ie), this.length++);
              }
              if (L !== 0) {
                for (Y = this.length - 1; Y >= 0; Y--)
                  this.words[Y + L] = this.words[Y];
                for (Y = 0; Y < L; Y++) this.words[Y] = 0;
                this.length += L;
              }
              return this._strip();
            }),
            (a.prototype.ishln = function (E) {
              return n(this.negative === 0), this.iushln(E);
            }),
            (a.prototype.iushrn = function (E, P, L) {
              n(typeof E == "number" && E >= 0);
              var U;
              P ? (U = (P - (P % 26)) / 26) : (U = 0);
              var Y = E % 26,
                ie = Math.min((E - Y) / 26, this.length),
                le = 67108863 ^ ((67108863 >>> Y) << Y),
                J = L;
              if (((U -= ie), (U = Math.max(0, U)), J)) {
                for (var T = 0; T < ie; T++) J.words[T] = this.words[T];
                J.length = ie;
              }
              if (ie !== 0)
                if (this.length > ie)
                  for (this.length -= ie, T = 0; T < this.length; T++)
                    this.words[T] = this.words[T + ie];
                else (this.words[0] = 0), (this.length = 1);
              var Z = 0;
              for (T = this.length - 1; T >= 0 && (Z !== 0 || T >= U); T--) {
                var Oe = this.words[T] | 0;
                (this.words[T] = (Z << (26 - Y)) | (Oe >>> Y)), (Z = Oe & le);
              }
              return (
                J && Z !== 0 && (J.words[J.length++] = Z),
                this.length === 0 && ((this.words[0] = 0), (this.length = 1)),
                this._strip()
              );
            }),
            (a.prototype.ishrn = function (E, P, L) {
              return n(this.negative === 0), this.iushrn(E, P, L);
            }),
            (a.prototype.shln = function (E) {
              return this.clone().ishln(E);
            }),
            (a.prototype.ushln = function (E) {
              return this.clone().iushln(E);
            }),
            (a.prototype.shrn = function (E) {
              return this.clone().ishrn(E);
            }),
            (a.prototype.ushrn = function (E) {
              return this.clone().iushrn(E);
            }),
            (a.prototype.testn = function (E) {
              n(typeof E == "number" && E >= 0);
              var P = E % 26,
                L = (E - P) / 26,
                U = 1 << P;
              if (this.length <= L) return !1;
              var Y = this.words[L];
              return !!(Y & U);
            }),
            (a.prototype.imaskn = function (E) {
              n(typeof E == "number" && E >= 0);
              var P = E % 26,
                L = (E - P) / 26;
              if (
                (n(
                  this.negative === 0,
                  "imaskn works only with positive numbers"
                ),
                this.length <= L)
              )
                return this;
              if (
                (P !== 0 && L++,
                (this.length = Math.min(L, this.length)),
                P !== 0)
              ) {
                var U = 67108863 ^ ((67108863 >>> P) << P);
                this.words[this.length - 1] &= U;
              }
              return this._strip();
            }),
            (a.prototype.maskn = function (E) {
              return this.clone().imaskn(E);
            }),
            (a.prototype.iaddn = function (E) {
              return (
                n(typeof E == "number"),
                n(E < 67108864),
                E < 0
                  ? this.isubn(-E)
                  : this.negative !== 0
                  ? this.length === 1 && (this.words[0] | 0) <= E
                    ? ((this.words[0] = E - (this.words[0] | 0)),
                      (this.negative = 0),
                      this)
                    : ((this.negative = 0),
                      this.isubn(E),
                      (this.negative = 1),
                      this)
                  : this._iaddn(E)
              );
            }),
            (a.prototype._iaddn = function (E) {
              this.words[0] += E;
              for (var P = 0; P < this.length && this.words[P] >= 67108864; P++)
                (this.words[P] -= 67108864),
                  P === this.length - 1
                    ? (this.words[P + 1] = 1)
                    : this.words[P + 1]++;
              return (this.length = Math.max(this.length, P + 1)), this;
            }),
            (a.prototype.isubn = function (E) {
              if ((n(typeof E == "number"), n(E < 67108864), E < 0))
                return this.iaddn(-E);
              if (this.negative !== 0)
                return (
                  (this.negative = 0), this.iaddn(E), (this.negative = 1), this
                );
              if (
                ((this.words[0] -= E), this.length === 1 && this.words[0] < 0)
              )
                (this.words[0] = -this.words[0]), (this.negative = 1);
              else
                for (var P = 0; P < this.length && this.words[P] < 0; P++)
                  (this.words[P] += 67108864), (this.words[P + 1] -= 1);
              return this._strip();
            }),
            (a.prototype.addn = function (E) {
              return this.clone().iaddn(E);
            }),
            (a.prototype.subn = function (E) {
              return this.clone().isubn(E);
            }),
            (a.prototype.iabs = function () {
              return (this.negative = 0), this;
            }),
            (a.prototype.abs = function () {
              return this.clone().iabs();
            }),
            (a.prototype._ishlnsubmul = function (E, P, L) {
              var U = E.length + L,
                Y;
              this._expand(U);
              var ie,
                le = 0;
              for (Y = 0; Y < E.length; Y++) {
                ie = (this.words[Y + L] | 0) + le;
                var J = (E.words[Y] | 0) * P;
                (ie -= J & 67108863),
                  (le = (ie >> 26) - ((J / 67108864) | 0)),
                  (this.words[Y + L] = ie & 67108863);
              }
              for (; Y < this.length - L; Y++)
                (ie = (this.words[Y + L] | 0) + le),
                  (le = ie >> 26),
                  (this.words[Y + L] = ie & 67108863);
              if (le === 0) return this._strip();
              for (n(le === -1), le = 0, Y = 0; Y < this.length; Y++)
                (ie = -(this.words[Y] | 0) + le),
                  (le = ie >> 26),
                  (this.words[Y] = ie & 67108863);
              return (this.negative = 1), this._strip();
            }),
            (a.prototype._wordDiv = function (E, P) {
              var L = this.length - E.length,
                U = this.clone(),
                Y = E,
                ie = Y.words[Y.length - 1] | 0,
                le = this._countBits(ie);
              (L = 26 - le),
                L !== 0 &&
                  ((Y = Y.ushln(L)),
                  U.iushln(L),
                  (ie = Y.words[Y.length - 1] | 0));
              var J = U.length - Y.length,
                T;
              if (P !== "mod") {
                (T = new a(null)),
                  (T.length = J + 1),
                  (T.words = new Array(T.length));
                for (var Z = 0; Z < T.length; Z++) T.words[Z] = 0;
              }
              var Oe = U.clone()._ishlnsubmul(Y, 1, J);
              Oe.negative === 0 && ((U = Oe), T && (T.words[J] = 1));
              for (var Me = J - 1; Me >= 0; Me--) {
                var X =
                  (U.words[Y.length + Me] | 0) * 67108864 +
                  (U.words[Y.length + Me - 1] | 0);
                for (
                  X = Math.min((X / ie) | 0, 67108863),
                    U._ishlnsubmul(Y, X, Me);
                  U.negative !== 0;

                )
                  X--,
                    (U.negative = 0),
                    U._ishlnsubmul(Y, 1, Me),
                    U.isZero() || (U.negative ^= 1);
                T && (T.words[Me] = X);
              }
              return (
                T && T._strip(),
                U._strip(),
                P !== "div" && L !== 0 && U.iushrn(L),
                { div: T || null, mod: U }
              );
            }),
            (a.prototype.divmod = function (E, P, L) {
              if ((n(!E.isZero()), this.isZero()))
                return { div: new a(0), mod: new a(0) };
              var U, Y, ie;
              return this.negative !== 0 && E.negative === 0
                ? ((ie = this.neg().divmod(E, P)),
                  P !== "mod" && (U = ie.div.neg()),
                  P !== "div" &&
                    ((Y = ie.mod.neg()), L && Y.negative !== 0 && Y.iadd(E)),
                  { div: U, mod: Y })
                : this.negative === 0 && E.negative !== 0
                ? ((ie = this.divmod(E.neg(), P)),
                  P !== "mod" && (U = ie.div.neg()),
                  { div: U, mod: ie.mod })
                : this.negative & E.negative
                ? ((ie = this.neg().divmod(E.neg(), P)),
                  P !== "div" &&
                    ((Y = ie.mod.neg()), L && Y.negative !== 0 && Y.isub(E)),
                  { div: ie.div, mod: Y })
                : E.length > this.length || this.cmp(E) < 0
                ? { div: new a(0), mod: this }
                : E.length === 1
                ? P === "div"
                  ? { div: this.divn(E.words[0]), mod: null }
                  : P === "mod"
                  ? { div: null, mod: new a(this.modrn(E.words[0])) }
                  : {
                      div: this.divn(E.words[0]),
                      mod: new a(this.modrn(E.words[0])),
                    }
                : this._wordDiv(E, P);
            }),
            (a.prototype.div = function (E) {
              return this.divmod(E, "div", !1).div;
            }),
            (a.prototype.mod = function (E) {
              return this.divmod(E, "mod", !1).mod;
            }),
            (a.prototype.umod = function (E) {
              return this.divmod(E, "mod", !0).mod;
            }),
            (a.prototype.divRound = function (E) {
              var P = this.divmod(E);
              if (P.mod.isZero()) return P.div;
              var L = P.div.negative !== 0 ? P.mod.isub(E) : P.mod,
                U = E.ushrn(1),
                Y = E.andln(1),
                ie = L.cmp(U);
              return ie < 0 || (Y === 1 && ie === 0)
                ? P.div
                : P.div.negative !== 0
                ? P.div.isubn(1)
                : P.div.iaddn(1);
            }),
            (a.prototype.modrn = function (E) {
              var P = E < 0;
              P && (E = -E), n(E <= 67108863);
              for (
                var L = 67108864 % E, U = 0, Y = this.length - 1;
                Y >= 0;
                Y--
              )
                U = (L * U + (this.words[Y] | 0)) % E;
              return P ? -U : U;
            }),
            (a.prototype.modn = function (E) {
              return this.modrn(E);
            }),
            (a.prototype.idivn = function (E) {
              var P = E < 0;
              P && (E = -E), n(E <= 67108863);
              for (var L = 0, U = this.length - 1; U >= 0; U--) {
                var Y = (this.words[U] | 0) + L * 67108864;
                (this.words[U] = (Y / E) | 0), (L = Y % E);
              }
              return this._strip(), P ? this.ineg() : this;
            }),
            (a.prototype.divn = function (E) {
              return this.clone().idivn(E);
            }),
            (a.prototype.egcd = function (E) {
              n(E.negative === 0), n(!E.isZero());
              var P = this,
                L = E.clone();
              P.negative !== 0 ? (P = P.umod(E)) : (P = P.clone());
              for (
                var U = new a(1),
                  Y = new a(0),
                  ie = new a(0),
                  le = new a(1),
                  J = 0;
                P.isEven() && L.isEven();

              )
                P.iushrn(1), L.iushrn(1), ++J;
              for (var T = L.clone(), Z = P.clone(); !P.isZero(); ) {
                for (
                  var Oe = 0, Me = 1;
                  !(P.words[0] & Me) && Oe < 26;
                  ++Oe, Me <<= 1
                );
                if (Oe > 0)
                  for (P.iushrn(Oe); Oe-- > 0; )
                    (U.isOdd() || Y.isOdd()) && (U.iadd(T), Y.isub(Z)),
                      U.iushrn(1),
                      Y.iushrn(1);
                for (
                  var X = 0, Ee = 1;
                  !(L.words[0] & Ee) && X < 26;
                  ++X, Ee <<= 1
                );
                if (X > 0)
                  for (L.iushrn(X); X-- > 0; )
                    (ie.isOdd() || le.isOdd()) && (ie.iadd(T), le.isub(Z)),
                      ie.iushrn(1),
                      le.iushrn(1);
                P.cmp(L) >= 0
                  ? (P.isub(L), U.isub(ie), Y.isub(le))
                  : (L.isub(P), ie.isub(U), le.isub(Y));
              }
              return { a: ie, b: le, gcd: L.iushln(J) };
            }),
            (a.prototype._invmp = function (E) {
              n(E.negative === 0), n(!E.isZero());
              var P = this,
                L = E.clone();
              P.negative !== 0 ? (P = P.umod(E)) : (P = P.clone());
              for (
                var U = new a(1), Y = new a(0), ie = L.clone();
                P.cmpn(1) > 0 && L.cmpn(1) > 0;

              ) {
                for (
                  var le = 0, J = 1;
                  !(P.words[0] & J) && le < 26;
                  ++le, J <<= 1
                );
                if (le > 0)
                  for (P.iushrn(le); le-- > 0; )
                    U.isOdd() && U.iadd(ie), U.iushrn(1);
                for (
                  var T = 0, Z = 1;
                  !(L.words[0] & Z) && T < 26;
                  ++T, Z <<= 1
                );
                if (T > 0)
                  for (L.iushrn(T); T-- > 0; )
                    Y.isOdd() && Y.iadd(ie), Y.iushrn(1);
                P.cmp(L) >= 0 ? (P.isub(L), U.isub(Y)) : (L.isub(P), Y.isub(U));
              }
              var Oe;
              return (
                P.cmpn(1) === 0 ? (Oe = U) : (Oe = Y),
                Oe.cmpn(0) < 0 && Oe.iadd(E),
                Oe
              );
            }),
            (a.prototype.gcd = function (E) {
              if (this.isZero()) return E.abs();
              if (E.isZero()) return this.abs();
              var P = this.clone(),
                L = E.clone();
              (P.negative = 0), (L.negative = 0);
              for (var U = 0; P.isEven() && L.isEven(); U++)
                P.iushrn(1), L.iushrn(1);
              do {
                for (; P.isEven(); ) P.iushrn(1);
                for (; L.isEven(); ) L.iushrn(1);
                var Y = P.cmp(L);
                if (Y < 0) {
                  var ie = P;
                  (P = L), (L = ie);
                } else if (Y === 0 || L.cmpn(1) === 0) break;
                P.isub(L);
              } while (!0);
              return L.iushln(U);
            }),
            (a.prototype.invm = function (E) {
              return this.egcd(E).a.umod(E);
            }),
            (a.prototype.isEven = function () {
              return (this.words[0] & 1) === 0;
            }),
            (a.prototype.isOdd = function () {
              return (this.words[0] & 1) === 1;
            }),
            (a.prototype.andln = function (E) {
              return this.words[0] & E;
            }),
            (a.prototype.bincn = function (E) {
              n(typeof E == "number");
              var P = E % 26,
                L = (E - P) / 26,
                U = 1 << P;
              if (this.length <= L)
                return this._expand(L + 1), (this.words[L] |= U), this;
              for (var Y = U, ie = L; Y !== 0 && ie < this.length; ie++) {
                var le = this.words[ie] | 0;
                (le += Y),
                  (Y = le >>> 26),
                  (le &= 67108863),
                  (this.words[ie] = le);
              }
              return Y !== 0 && ((this.words[ie] = Y), this.length++), this;
            }),
            (a.prototype.isZero = function () {
              return this.length === 1 && this.words[0] === 0;
            }),
            (a.prototype.cmpn = function (E) {
              var P = E < 0;
              if (this.negative !== 0 && !P) return -1;
              if (this.negative === 0 && P) return 1;
              this._strip();
              var L;
              if (this.length > 1) L = 1;
              else {
                P && (E = -E), n(E <= 67108863, "Number is too big");
                var U = this.words[0] | 0;
                L = U === E ? 0 : U < E ? -1 : 1;
              }
              return this.negative !== 0 ? -L | 0 : L;
            }),
            (a.prototype.cmp = function (E) {
              if (this.negative !== 0 && E.negative === 0) return -1;
              if (this.negative === 0 && E.negative !== 0) return 1;
              var P = this.ucmp(E);
              return this.negative !== 0 ? -P | 0 : P;
            }),
            (a.prototype.ucmp = function (E) {
              if (this.length > E.length) return 1;
              if (this.length < E.length) return -1;
              for (var P = 0, L = this.length - 1; L >= 0; L--) {
                var U = this.words[L] | 0,
                  Y = E.words[L] | 0;
                if (U !== Y) {
                  U < Y ? (P = -1) : U > Y && (P = 1);
                  break;
                }
              }
              return P;
            }),
            (a.prototype.gtn = function (E) {
              return this.cmpn(E) === 1;
            }),
            (a.prototype.gt = function (E) {
              return this.cmp(E) === 1;
            }),
            (a.prototype.gten = function (E) {
              return this.cmpn(E) >= 0;
            }),
            (a.prototype.gte = function (E) {
              return this.cmp(E) >= 0;
            }),
            (a.prototype.ltn = function (E) {
              return this.cmpn(E) === -1;
            }),
            (a.prototype.lt = function (E) {
              return this.cmp(E) === -1;
            }),
            (a.prototype.lten = function (E) {
              return this.cmpn(E) <= 0;
            }),
            (a.prototype.lte = function (E) {
              return this.cmp(E) <= 0;
            }),
            (a.prototype.eqn = function (E) {
              return this.cmpn(E) === 0;
            }),
            (a.prototype.eq = function (E) {
              return this.cmp(E) === 0;
            }),
            (a.red = function (E) {
              return new Ce(E);
            }),
            (a.prototype.toRed = function (E) {
              return (
                n(!this.red, "Already a number in reduction context"),
                n(this.negative === 0, "red works only with positives"),
                E.convertTo(this)._forceRed(E)
              );
            }),
            (a.prototype.fromRed = function () {
              return (
                n(
                  this.red,
                  "fromRed works only with numbers in reduction context"
                ),
                this.red.convertFrom(this)
              );
            }),
            (a.prototype._forceRed = function (E) {
              return (this.red = E), this;
            }),
            (a.prototype.forceRed = function (E) {
              return (
                n(!this.red, "Already a number in reduction context"),
                this._forceRed(E)
              );
            }),
            (a.prototype.redAdd = function (E) {
              return (
                n(this.red, "redAdd works only with red numbers"),
                this.red.add(this, E)
              );
            }),
            (a.prototype.redIAdd = function (E) {
              return (
                n(this.red, "redIAdd works only with red numbers"),
                this.red.iadd(this, E)
              );
            }),
            (a.prototype.redSub = function (E) {
              return (
                n(this.red, "redSub works only with red numbers"),
                this.red.sub(this, E)
              );
            }),
            (a.prototype.redISub = function (E) {
              return (
                n(this.red, "redISub works only with red numbers"),
                this.red.isub(this, E)
              );
            }),
            (a.prototype.redShl = function (E) {
              return (
                n(this.red, "redShl works only with red numbers"),
                this.red.shl(this, E)
              );
            }),
            (a.prototype.redMul = function (E) {
              return (
                n(this.red, "redMul works only with red numbers"),
                this.red._verify2(this, E),
                this.red.mul(this, E)
              );
            }),
            (a.prototype.redIMul = function (E) {
              return (
                n(this.red, "redMul works only with red numbers"),
                this.red._verify2(this, E),
                this.red.imul(this, E)
              );
            }),
            (a.prototype.redSqr = function () {
              return (
                n(this.red, "redSqr works only with red numbers"),
                this.red._verify1(this),
                this.red.sqr(this)
              );
            }),
            (a.prototype.redISqr = function () {
              return (
                n(this.red, "redISqr works only with red numbers"),
                this.red._verify1(this),
                this.red.isqr(this)
              );
            }),
            (a.prototype.redSqrt = function () {
              return (
                n(this.red, "redSqrt works only with red numbers"),
                this.red._verify1(this),
                this.red.sqrt(this)
              );
            }),
            (a.prototype.redInvm = function () {
              return (
                n(this.red, "redInvm works only with red numbers"),
                this.red._verify1(this),
                this.red.invm(this)
              );
            }),
            (a.prototype.redNeg = function () {
              return (
                n(this.red, "redNeg works only with red numbers"),
                this.red._verify1(this),
                this.red.neg(this)
              );
            }),
            (a.prototype.redPow = function (E) {
              return (
                n(this.red && !E.red, "redPow(normalNum)"),
                this.red._verify1(this),
                this.red.pow(this, E)
              );
            });
          var K = { k256: null, p224: null, p192: null, p25519: null };
          function fe(E, P) {
            (this.name = E),
              (this.p = new a(P, 16)),
              (this.n = this.p.bitLength()),
              (this.k = new a(1).iushln(this.n).isub(this.p)),
              (this.tmp = this._tmp());
          }
          (fe.prototype._tmp = function () {
            var E = new a(null);
            return (E.words = new Array(Math.ceil(this.n / 13))), E;
          }),
            (fe.prototype.ireduce = function (E) {
              var P = E,
                L;
              do
                this.split(P, this.tmp),
                  (P = this.imulK(P)),
                  (P = P.iadd(this.tmp)),
                  (L = P.bitLength());
              while (L > this.n);
              var U = L < this.n ? -1 : P.ucmp(this.p);
              return (
                U === 0
                  ? ((P.words[0] = 0), (P.length = 1))
                  : U > 0
                  ? P.isub(this.p)
                  : P.strip !== void 0
                  ? P.strip()
                  : P._strip(),
                P
              );
            }),
            (fe.prototype.split = function (E, P) {
              E.iushrn(this.n, 0, P);
            }),
            (fe.prototype.imulK = function (E) {
              return E.imul(this.k);
            });
          function ye() {
            fe.call(
              this,
              "k256",
              "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
            );
          }
          i(ye, fe),
            (ye.prototype.split = function (E, P) {
              for (
                var L = 4194303, U = Math.min(E.length, 9), Y = 0;
                Y < U;
                Y++
              )
                P.words[Y] = E.words[Y];
              if (((P.length = U), E.length <= 9)) {
                (E.words[0] = 0), (E.length = 1);
                return;
              }
              var ie = E.words[9];
              for (P.words[P.length++] = ie & L, Y = 10; Y < E.length; Y++) {
                var le = E.words[Y] | 0;
                (E.words[Y - 10] = ((le & L) << 4) | (ie >>> 22)), (ie = le);
              }
              (ie >>>= 22),
                (E.words[Y - 10] = ie),
                ie === 0 && E.length > 10 ? (E.length -= 10) : (E.length -= 9);
            }),
            (ye.prototype.imulK = function (E) {
              (E.words[E.length] = 0),
                (E.words[E.length + 1] = 0),
                (E.length += 2);
              for (var P = 0, L = 0; L < E.length; L++) {
                var U = E.words[L] | 0;
                (P += U * 977),
                  (E.words[L] = P & 67108863),
                  (P = U * 64 + ((P / 67108864) | 0));
              }
              return (
                E.words[E.length - 1] === 0 &&
                  (E.length--, E.words[E.length - 1] === 0 && E.length--),
                E
              );
            });
          function pe() {
            fe.call(
              this,
              "p224",
              "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
            );
          }
          i(pe, fe);
          function _e() {
            fe.call(
              this,
              "p192",
              "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
            );
          }
          i(_e, fe);
          function be() {
            fe.call(
              this,
              "25519",
              "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
            );
          }
          i(be, fe),
            (be.prototype.imulK = function (E) {
              for (var P = 0, L = 0; L < E.length; L++) {
                var U = (E.words[L] | 0) * 19 + P,
                  Y = U & 67108863;
                (U >>>= 26), (E.words[L] = Y), (P = U);
              }
              return P !== 0 && (E.words[E.length++] = P), E;
            }),
            (a._prime = function (E) {
              if (K[E]) return K[E];
              var P;
              if (E === "k256") P = new ye();
              else if (E === "p224") P = new pe();
              else if (E === "p192") P = new _e();
              else if (E === "p25519") P = new be();
              else throw new Error("Unknown prime " + E);
              return (K[E] = P), P;
            });
          function Ce(E) {
            if (typeof E == "string") {
              var P = a._prime(E);
              (this.m = P.p), (this.prime = P);
            } else
              n(E.gtn(1), "modulus must be greater than 1"),
                (this.m = E),
                (this.prime = null);
          }
          (Ce.prototype._verify1 = function (E) {
            n(E.negative === 0, "red works only with positives"),
              n(E.red, "red works only with red numbers");
          }),
            (Ce.prototype._verify2 = function (E, P) {
              n(
                (E.negative | P.negative) === 0,
                "red works only with positives"
              ),
                n(E.red && E.red === P.red, "red works only with red numbers");
            }),
            (Ce.prototype.imod = function (E) {
              return this.prime
                ? this.prime.ireduce(E)._forceRed(this)
                : (v(E, E.umod(this.m)._forceRed(this)), E);
            }),
            (Ce.prototype.neg = function (E) {
              return E.isZero() ? E.clone() : this.m.sub(E)._forceRed(this);
            }),
            (Ce.prototype.add = function (E, P) {
              this._verify2(E, P);
              var L = E.add(P);
              return L.cmp(this.m) >= 0 && L.isub(this.m), L._forceRed(this);
            }),
            (Ce.prototype.iadd = function (E, P) {
              this._verify2(E, P);
              var L = E.iadd(P);
              return L.cmp(this.m) >= 0 && L.isub(this.m), L;
            }),
            (Ce.prototype.sub = function (E, P) {
              this._verify2(E, P);
              var L = E.sub(P);
              return L.cmpn(0) < 0 && L.iadd(this.m), L._forceRed(this);
            }),
            (Ce.prototype.isub = function (E, P) {
              this._verify2(E, P);
              var L = E.isub(P);
              return L.cmpn(0) < 0 && L.iadd(this.m), L;
            }),
            (Ce.prototype.shl = function (E, P) {
              return this._verify1(E), this.imod(E.ushln(P));
            }),
            (Ce.prototype.imul = function (E, P) {
              return this._verify2(E, P), this.imod(E.imul(P));
            }),
            (Ce.prototype.mul = function (E, P) {
              return this._verify2(E, P), this.imod(E.mul(P));
            }),
            (Ce.prototype.isqr = function (E) {
              return this.imul(E, E.clone());
            }),
            (Ce.prototype.sqr = function (E) {
              return this.mul(E, E);
            }),
            (Ce.prototype.sqrt = function (E) {
              if (E.isZero()) return E.clone();
              var P = this.m.andln(3);
              if ((n(P % 2 === 1), P === 3)) {
                var L = this.m.add(new a(1)).iushrn(2);
                return this.pow(E, L);
              }
              for (
                var U = this.m.subn(1), Y = 0;
                !U.isZero() && U.andln(1) === 0;

              )
                Y++, U.iushrn(1);
              n(!U.isZero());
              var ie = new a(1).toRed(this),
                le = ie.redNeg(),
                J = this.m.subn(1).iushrn(1),
                T = this.m.bitLength();
              for (
                T = new a(2 * T * T).toRed(this);
                this.pow(T, J).cmp(le) !== 0;

              )
                T.redIAdd(le);
              for (
                var Z = this.pow(T, U),
                  Oe = this.pow(E, U.addn(1).iushrn(1)),
                  Me = this.pow(E, U),
                  X = Y;
                Me.cmp(ie) !== 0;

              ) {
                for (var Ee = Me, me = 0; Ee.cmp(ie) !== 0; me++)
                  Ee = Ee.redSqr();
                n(me < X);
                var xe = this.pow(Z, new a(1).iushln(X - me - 1));
                (Oe = Oe.redMul(xe)),
                  (Z = xe.redSqr()),
                  (Me = Me.redMul(Z)),
                  (X = me);
              }
              return Oe;
            }),
            (Ce.prototype.invm = function (E) {
              var P = E._invmp(this.m);
              return P.negative !== 0
                ? ((P.negative = 0), this.imod(P).redNeg())
                : this.imod(P);
            }),
            (Ce.prototype.pow = function (E, P) {
              if (P.isZero()) return new a(1).toRed(this);
              if (P.cmpn(1) === 0) return E.clone();
              var L = 4,
                U = new Array(1 << L);
              (U[0] = new a(1).toRed(this)), (U[1] = E);
              for (var Y = 2; Y < U.length; Y++) U[Y] = this.mul(U[Y - 1], E);
              var ie = U[0],
                le = 0,
                J = 0,
                T = P.bitLength() % 26;
              for (T === 0 && (T = 26), Y = P.length - 1; Y >= 0; Y--) {
                for (var Z = P.words[Y], Oe = T - 1; Oe >= 0; Oe--) {
                  var Me = (Z >> Oe) & 1;
                  if (
                    (ie !== U[0] && (ie = this.sqr(ie)), Me === 0 && le === 0)
                  ) {
                    J = 0;
                    continue;
                  }
                  (le <<= 1),
                    (le |= Me),
                    J++,
                    !(J !== L && (Y !== 0 || Oe !== 0)) &&
                      ((ie = this.mul(ie, U[le])), (J = 0), (le = 0));
                }
                T = 26;
              }
              return ie;
            }),
            (Ce.prototype.convertTo = function (E) {
              var P = E.umod(this.m);
              return P === E ? P.clone() : P;
            }),
            (Ce.prototype.convertFrom = function (E) {
              var P = E.clone();
              return (P.red = null), P;
            }),
            (a.mont = function (E) {
              return new ke(E);
            });
          function ke(E) {
            Ce.call(this, E),
              (this.shift = this.m.bitLength()),
              this.shift % 26 !== 0 && (this.shift += 26 - (this.shift % 26)),
              (this.r = new a(1).iushln(this.shift)),
              (this.r2 = this.imod(this.r.sqr())),
              (this.rinv = this.r._invmp(this.m)),
              (this.minv = this.rinv.mul(this.r).isubn(1).div(this.m)),
              (this.minv = this.minv.umod(this.r)),
              (this.minv = this.r.sub(this.minv));
          }
          i(ke, Ce),
            (ke.prototype.convertTo = function (E) {
              return this.imod(E.ushln(this.shift));
            }),
            (ke.prototype.convertFrom = function (E) {
              var P = this.imod(E.mul(this.rinv));
              return (P.red = null), P;
            }),
            (ke.prototype.imul = function (E, P) {
              if (E.isZero() || P.isZero())
                return (E.words[0] = 0), (E.length = 1), E;
              var L = E.imul(P),
                U = L.maskn(this.shift)
                  .mul(this.minv)
                  .imaskn(this.shift)
                  .mul(this.m),
                Y = L.isub(U).iushrn(this.shift),
                ie = Y;
              return (
                Y.cmp(this.m) >= 0
                  ? (ie = Y.isub(this.m))
                  : Y.cmpn(0) < 0 && (ie = Y.iadd(this.m)),
                ie._forceRed(this)
              );
            }),
            (ke.prototype.mul = function (E, P) {
              if (E.isZero() || P.isZero()) return new a(0)._forceRed(this);
              var L = E.mul(P),
                U = L.maskn(this.shift)
                  .mul(this.minv)
                  .imaskn(this.shift)
                  .mul(this.m),
                Y = L.isub(U).iushrn(this.shift),
                ie = Y;
              return (
                Y.cmp(this.m) >= 0
                  ? (ie = Y.isub(this.m))
                  : Y.cmpn(0) < 0 && (ie = Y.iadd(this.m)),
                ie._forceRed(this)
              );
            }),
            (ke.prototype.invm = function (E) {
              var P = this.imod(E._invmp(this.m).mul(this.r2));
              return P._forceRed(this);
            });
        })(t, So);
      })(Jy);
    var IX = Jy.exports;
    const TX = ns(IX),
      PX = "logger/5.7.0";
    let $2 = !1,
      Z2 = !1;
    const Xp = { debug: 1, default: 2, info: 2, warning: 3, error: 4, off: 5 };
    let Q2 = Xp.default,
      eb = null;
    function OX() {
      try {
        const t = [];
        if (
          (["NFD", "NFC", "NFKD", "NFKC"].forEach((e) => {
            try {
              if ("test".normalize(e) !== "test")
                throw new Error("bad normalize");
            } catch {
              t.push(e);
            }
          }),
          t.length)
        )
          throw new Error("missing " + t.join(", "));
        if (
          String.fromCharCode(233).normalize("NFD") !==
          String.fromCharCode(101, 769)
        )
          throw new Error("broken implementation");
      } catch (t) {
        return t.message;
      }
      return null;
    }
    const J2 = OX();
    var tb;
    (function (t) {
      (t.DEBUG = "DEBUG"),
        (t.INFO = "INFO"),
        (t.WARNING = "WARNING"),
        (t.ERROR = "ERROR"),
        (t.OFF = "OFF");
    })(tb || (tb = {}));
    var Ki;
    (function (t) {
      (t.UNKNOWN_ERROR = "UNKNOWN_ERROR"),
        (t.NOT_IMPLEMENTED = "NOT_IMPLEMENTED"),
        (t.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION"),
        (t.NETWORK_ERROR = "NETWORK_ERROR"),
        (t.SERVER_ERROR = "SERVER_ERROR"),
        (t.TIMEOUT = "TIMEOUT"),
        (t.BUFFER_OVERRUN = "BUFFER_OVERRUN"),
        (t.NUMERIC_FAULT = "NUMERIC_FAULT"),
        (t.MISSING_NEW = "MISSING_NEW"),
        (t.INVALID_ARGUMENT = "INVALID_ARGUMENT"),
        (t.MISSING_ARGUMENT = "MISSING_ARGUMENT"),
        (t.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT"),
        (t.CALL_EXCEPTION = "CALL_EXCEPTION"),
        (t.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS"),
        (t.NONCE_EXPIRED = "NONCE_EXPIRED"),
        (t.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED"),
        (t.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT"),
        (t.TRANSACTION_REPLACED = "TRANSACTION_REPLACED"),
        (t.ACTION_REJECTED = "ACTION_REJECTED");
    })(Ki || (Ki = {}));
    const eE = "0123456789abcdef";
    let Hr = class on {
      constructor(e) {
        Object.defineProperty(this, "version", {
          enumerable: !0,
          value: e,
          writable: !1,
        });
      }
      _log(e, r) {
        const n = e.toLowerCase();
        Xp[n] == null &&
          this.throwArgumentError("invalid log level name", "logLevel", e),
          !(Q2 > Xp[n]) && console.log.apply(console, r);
      }
      debug(...e) {
        this._log(on.levels.DEBUG, e);
      }
      info(...e) {
        this._log(on.levels.INFO, e);
      }
      warn(...e) {
        this._log(on.levels.WARNING, e);
      }
      makeError(e, r, n) {
        if (Z2) return this.makeError("censored error", r, {});
        r || (r = on.errors.UNKNOWN_ERROR), n || (n = {});
        const i = [];
        Object.keys(n).forEach((p) => {
          const m = n[p];
          try {
            if (m instanceof Uint8Array) {
              let v = "";
              for (let w = 0; w < m.length; w++)
                (v += eE[m[w] >> 4]), (v += eE[m[w] & 15]);
              i.push(p + "=Uint8Array(0x" + v + ")");
            } else i.push(p + "=" + JSON.stringify(m));
          } catch {
            i.push(p + "=" + JSON.stringify(n[p].toString()));
          }
        }),
          i.push(`code=${r}`),
          i.push(`version=${this.version}`);
        const a = e;
        let l = "";
        switch (r) {
          case Ki.NUMERIC_FAULT: {
            l = "NUMERIC_FAULT";
            const p = e;
            switch (p) {
              case "overflow":
              case "underflow":
              case "division-by-zero":
                l += "-" + p;
                break;
              case "negative-power":
              case "negative-width":
                l += "-unsupported";
                break;
              case "unbound-bitwise-result":
                l += "-unbound-result";
                break;
            }
            break;
          }
          case Ki.CALL_EXCEPTION:
          case Ki.INSUFFICIENT_FUNDS:
          case Ki.MISSING_NEW:
          case Ki.NONCE_EXPIRED:
          case Ki.REPLACEMENT_UNDERPRICED:
          case Ki.TRANSACTION_REPLACED:
          case Ki.UNPREDICTABLE_GAS_LIMIT:
            l = r;
            break;
        }
        l && (e += " [ See: https://links.ethers.org/v5-errors-" + l + " ]"),
          i.length && (e += " (" + i.join(", ") + ")");
        const u = new Error(e);
        return (
          (u.reason = a),
          (u.code = r),
          Object.keys(n).forEach(function (p) {
            u[p] = n[p];
          }),
          u
        );
      }
      throwError(e, r, n) {
        throw this.makeError(e, r, n);
      }
      throwArgumentError(e, r, n) {
        return this.throwError(e, on.errors.INVALID_ARGUMENT, {
          argument: r,
          value: n,
        });
      }
      assert(e, r, n, i) {
        e || this.throwError(r, n, i);
      }
      assertArgument(e, r, n, i) {
        e || this.throwArgumentError(r, n, i);
      }
      checkNormalize(e) {
        J2 &&
          this.throwError(
            "platform missing String.prototype.normalize",
            on.errors.UNSUPPORTED_OPERATION,
            { operation: "String.prototype.normalize", form: J2 }
          );
      }
      checkSafeUint53(e, r) {
        typeof e == "number" &&
          (r == null && (r = "value not safe"),
          (e < 0 || e >= 9007199254740991) &&
            this.throwError(r, on.errors.NUMERIC_FAULT, {
              operation: "checkSafeInteger",
              fault: "out-of-safe-range",
              value: e,
            }),
          e % 1 &&
            this.throwError(r, on.errors.NUMERIC_FAULT, {
              operation: "checkSafeInteger",
              fault: "non-integer",
              value: e,
            }));
      }
      checkArgumentCount(e, r, n) {
        n ? (n = ": " + n) : (n = ""),
          e < r &&
            this.throwError(
              "missing argument" + n,
              on.errors.MISSING_ARGUMENT,
              { count: e, expectedCount: r }
            ),
          e > r &&
            this.throwError(
              "too many arguments" + n,
              on.errors.UNEXPECTED_ARGUMENT,
              { count: e, expectedCount: r }
            );
      }
      checkNew(e, r) {
        (e === Object || e == null) &&
          this.throwError("missing new", on.errors.MISSING_NEW, {
            name: r.name,
          });
      }
      checkAbstract(e, r) {
        e === r
          ? this.throwError(
              "cannot instantiate abstract class " +
                JSON.stringify(r.name) +
                " directly; use a sub-class",
              on.errors.UNSUPPORTED_OPERATION,
              { name: e.name, operation: "new" }
            )
          : (e === Object || e == null) &&
            this.throwError("missing new", on.errors.MISSING_NEW, {
              name: r.name,
            });
      }
      static globalLogger() {
        return eb || (eb = new on(PX)), eb;
      }
      static setCensorship(e, r) {
        if (
          (!e &&
            r &&
            this.globalLogger().throwError(
              "cannot permanently disable censorship",
              on.errors.UNSUPPORTED_OPERATION,
              { operation: "setCensorship" }
            ),
          $2)
        ) {
          if (!e) return;
          this.globalLogger().throwError(
            "error censorship permanent",
            on.errors.UNSUPPORTED_OPERATION,
            { operation: "setCensorship" }
          );
        }
        (Z2 = !!e), ($2 = !!r);
      }
      static setLogLevel(e) {
        const r = Xp[e.toLowerCase()];
        if (r == null) {
          on.globalLogger().warn("invalid log level - " + e);
          return;
        }
        Q2 = r;
      }
      static from(e) {
        return new on(e);
      }
    };
    (Hr.errors = Ki), (Hr.levels = tb);
    const LX = "bytes/5.7.0",
      no = new Hr(LX);
    function tE(t) {
      return !!t.toHexString;
    }
    function Sh(t) {
      return (
        t.slice ||
          (t.slice = function () {
            const e = Array.prototype.slice.call(arguments);
            return Sh(new Uint8Array(Array.prototype.slice.apply(t, e)));
          }),
        t
      );
    }
    function rE(t) {
      return typeof t == "number" && t == t && t % 1 === 0;
    }
    function rb(t) {
      if (t == null) return !1;
      if (t.constructor === Uint8Array) return !0;
      if (typeof t == "string" || !rE(t.length) || t.length < 0) return !1;
      for (let e = 0; e < t.length; e++) {
        const r = t[e];
        if (!rE(r) || r < 0 || r >= 256) return !1;
      }
      return !0;
    }
    function $i(t, e) {
      if ((e || (e = {}), typeof t == "number")) {
        no.checkSafeUint53(t, "invalid arrayify value");
        const r = [];
        for (; t; ) r.unshift(t & 255), (t = parseInt(String(t / 256)));
        return r.length === 0 && r.push(0), Sh(new Uint8Array(r));
      }
      if (
        (e.allowMissingPrefix &&
          typeof t == "string" &&
          t.substring(0, 2) !== "0x" &&
          (t = "0x" + t),
        tE(t) && (t = t.toHexString()),
        Oc(t))
      ) {
        let r = t.substring(2);
        r.length % 2 &&
          (e.hexPad === "left"
            ? (r = "0" + r)
            : e.hexPad === "right"
            ? (r += "0")
            : no.throwArgumentError("hex data is odd-length", "value", t));
        const n = [];
        for (let i = 0; i < r.length; i += 2)
          n.push(parseInt(r.substring(i, i + 2), 16));
        return Sh(new Uint8Array(n));
      }
      return rb(t)
        ? Sh(new Uint8Array(t))
        : no.throwArgumentError("invalid arrayify value", "value", t);
    }
    function nb(t) {
      const e = t.map((i) => $i(i)),
        r = e.reduce((i, a) => i + a.length, 0),
        n = new Uint8Array(r);
      return e.reduce((i, a) => (n.set(a, i), i + a.length), 0), Sh(n);
    }
    function Oc(t, e) {
      return !(
        typeof t != "string" ||
        !t.match(/^0x[0-9A-Fa-f]*$/) ||
        (e && t.length !== 2 + 2 * e)
      );
    }
    const ib = "0123456789abcdef";
    function Lc(t, e) {
      if ((e || (e = {}), typeof t == "number")) {
        no.checkSafeUint53(t, "invalid hexlify value");
        let r = "";
        for (; t; ) (r = ib[t & 15] + r), (t = Math.floor(t / 16));
        return r.length ? (r.length % 2 && (r = "0" + r), "0x" + r) : "0x00";
      }
      if (typeof t == "bigint")
        return (t = t.toString(16)), t.length % 2 ? "0x0" + t : "0x" + t;
      if (
        (e.allowMissingPrefix &&
          typeof t == "string" &&
          t.substring(0, 2) !== "0x" &&
          (t = "0x" + t),
        tE(t))
      )
        return t.toHexString();
      if (Oc(t))
        return (
          t.length % 2 &&
            (e.hexPad === "left"
              ? (t = "0x0" + t.substring(2))
              : e.hexPad === "right"
              ? (t += "0")
              : no.throwArgumentError("hex data is odd-length", "value", t)),
          t.toLowerCase()
        );
      if (rb(t)) {
        let r = "0x";
        for (let n = 0; n < t.length; n++) {
          let i = t[n];
          r += ib[(i & 240) >> 4] + ib[i & 15];
        }
        return r;
      }
      return no.throwArgumentError("invalid hexlify value", "value", t);
    }
    function MX(t) {
      let e = "0x";
      return (
        t.forEach((r) => {
          e += Lc(r).substring(2);
        }),
        e
      );
    }
    function RX(t, e) {
      for (
        typeof t != "string"
          ? (t = Lc(t))
          : Oc(t) || no.throwArgumentError("invalid hex string", "value", t),
          t.length > 2 * e + 2 &&
            no.throwArgumentError("value out of range", "value", arguments[1]);
        t.length < 2 * e + 2;

      )
        t = "0x0" + t.substring(2);
      return t;
    }
    const NX = "bignumber/5.7.0";
    var jp = TX.BN;
    const aa = new Hr(NX),
      sb = {},
      nE = 9007199254740991;
    let iE = !1;
    class nn {
      constructor(e, r) {
        e !== sb &&
          aa.throwError(
            "cannot call constructor directly; use BigNumber.from",
            Hr.errors.UNSUPPORTED_OPERATION,
            { operation: "new (BigNumber)" }
          ),
          (this._hex = r),
          (this._isBigNumber = !0),
          Object.freeze(this);
      }
      fromTwos(e) {
        return $n(Rt(this).fromTwos(e));
      }
      toTwos(e) {
        return $n(Rt(this).toTwos(e));
      }
      abs() {
        return this._hex[0] === "-" ? nn.from(this._hex.substring(1)) : this;
      }
      add(e) {
        return $n(Rt(this).add(Rt(e)));
      }
      sub(e) {
        return $n(Rt(this).sub(Rt(e)));
      }
      div(e) {
        return (
          nn.from(e).isZero() && Ai("division-by-zero", "div"),
          $n(Rt(this).div(Rt(e)))
        );
      }
      mul(e) {
        return $n(Rt(this).mul(Rt(e)));
      }
      mod(e) {
        const r = Rt(e);
        return r.isNeg() && Ai("division-by-zero", "mod"), $n(Rt(this).umod(r));
      }
      pow(e) {
        const r = Rt(e);
        return r.isNeg() && Ai("negative-power", "pow"), $n(Rt(this).pow(r));
      }
      and(e) {
        const r = Rt(e);
        return (
          (this.isNegative() || r.isNeg()) &&
            Ai("unbound-bitwise-result", "and"),
          $n(Rt(this).and(r))
        );
      }
      or(e) {
        const r = Rt(e);
        return (
          (this.isNegative() || r.isNeg()) &&
            Ai("unbound-bitwise-result", "or"),
          $n(Rt(this).or(r))
        );
      }
      xor(e) {
        const r = Rt(e);
        return (
          (this.isNegative() || r.isNeg()) &&
            Ai("unbound-bitwise-result", "xor"),
          $n(Rt(this).xor(r))
        );
      }
      mask(e) {
        return (
          (this.isNegative() || e < 0) && Ai("negative-width", "mask"),
          $n(Rt(this).maskn(e))
        );
      }
      shl(e) {
        return (
          (this.isNegative() || e < 0) && Ai("negative-width", "shl"),
          $n(Rt(this).shln(e))
        );
      }
      shr(e) {
        return (
          (this.isNegative() || e < 0) && Ai("negative-width", "shr"),
          $n(Rt(this).shrn(e))
        );
      }
      eq(e) {
        return Rt(this).eq(Rt(e));
      }
      lt(e) {
        return Rt(this).lt(Rt(e));
      }
      lte(e) {
        return Rt(this).lte(Rt(e));
      }
      gt(e) {
        return Rt(this).gt(Rt(e));
      }
      gte(e) {
        return Rt(this).gte(Rt(e));
      }
      isNegative() {
        return this._hex[0] === "-";
      }
      isZero() {
        return Rt(this).isZero();
      }
      toNumber() {
        try {
          return Rt(this).toNumber();
        } catch {
          Ai("overflow", "toNumber", this.toString());
        }
        return null;
      }
      toBigInt() {
        try {
          return BigInt(this.toString());
        } catch {}
        return aa.throwError(
          "this platform does not support BigInt",
          Hr.errors.UNSUPPORTED_OPERATION,
          { value: this.toString() }
        );
      }
      toString() {
        return (
          arguments.length > 0 &&
            (arguments[0] === 10
              ? iE ||
                ((iE = !0),
                aa.warn(
                  "BigNumber.toString does not accept any parameters; base-10 is assumed"
                ))
              : arguments[0] === 16
              ? aa.throwError(
                  "BigNumber.toString does not accept any parameters; use bigNumber.toHexString()",
                  Hr.errors.UNEXPECTED_ARGUMENT,
                  {}
                )
              : aa.throwError(
                  "BigNumber.toString does not accept parameters",
                  Hr.errors.UNEXPECTED_ARGUMENT,
                  {}
                )),
          Rt(this).toString(10)
        );
      }
      toHexString() {
        return this._hex;
      }
      toJSON(e) {
        return { type: "BigNumber", hex: this.toHexString() };
      }
      static from(e) {
        if (e instanceof nn) return e;
        if (typeof e == "string")
          return e.match(/^-?0x[0-9a-f]+$/i)
            ? new nn(sb, Eh(e))
            : e.match(/^-?[0-9]+$/)
            ? new nn(sb, Eh(new jp(e)))
            : aa.throwArgumentError("invalid BigNumber string", "value", e);
        if (typeof e == "number")
          return (
            e % 1 && Ai("underflow", "BigNumber.from", e),
            (e >= nE || e <= -nE) && Ai("overflow", "BigNumber.from", e),
            nn.from(String(e))
          );
        const r = e;
        if (typeof r == "bigint") return nn.from(r.toString());
        if (rb(r)) return nn.from(Lc(r));
        if (r)
          if (r.toHexString) {
            const n = r.toHexString();
            if (typeof n == "string") return nn.from(n);
          } else {
            let n = r._hex;
            if (
              (n == null && r.type === "BigNumber" && (n = r.hex),
              typeof n == "string" &&
                (Oc(n) || (n[0] === "-" && Oc(n.substring(1)))))
            )
              return nn.from(n);
          }
        return aa.throwArgumentError("invalid BigNumber value", "value", e);
      }
      static isBigNumber(e) {
        return !!(e && e._isBigNumber);
      }
    }
    function Eh(t) {
      if (typeof t != "string") return Eh(t.toString(16));
      if (t[0] === "-")
        return (
          (t = t.substring(1)),
          t[0] === "-" && aa.throwArgumentError("invalid hex", "value", t),
          (t = Eh(t)),
          t === "0x00" ? t : "-" + t
        );
      if ((t.substring(0, 2) !== "0x" && (t = "0x" + t), t === "0x"))
        return "0x00";
      for (
        t.length % 2 && (t = "0x0" + t.substring(2));
        t.length > 4 && t.substring(0, 4) === "0x00";

      )
        t = "0x" + t.substring(4);
      return t;
    }
    function $n(t) {
      return nn.from(Eh(t));
    }
    function Rt(t) {
      const e = nn.from(t).toHexString();
      return e[0] === "-"
        ? new jp("-" + e.substring(3), 16)
        : new jp(e.substring(2), 16);
    }
    function Ai(t, e, r) {
      const n = { fault: t, operation: e };
      return (
        r != null && (n.value = r), aa.throwError(t, Hr.errors.NUMERIC_FAULT, n)
      );
    }
    function BX(t) {
      return new jp(t, 36).toString(16);
    }
    globalThis && globalThis.__awaiter;
    function cl(t, e, r) {
      Object.defineProperty(t, e, { enumerable: !0, value: r, writable: !1 });
    }
    const Gp = "abi/5.7.0",
      Ih = new Hr(Gp),
      sE = {};
    let aE = { calldata: !0, memory: !0, storage: !0 },
      FX = { calldata: !0, memory: !0 };
    function Yp(t, e) {
      if (t === "bytes" || t === "string") {
        if (aE[e]) return !0;
      } else if (t === "address") {
        if (e === "payable") return !0;
      } else if ((t.indexOf("[") >= 0 || t === "tuple") && FX[e]) return !0;
      return (
        (aE[e] || e === "payable") &&
          Ih.throwArgumentError("invalid modifier", "name", e),
        !1
      );
    }
    function DX(t, e) {
      let r = t;
      function n(u) {
        Ih.throwArgumentError(
          `unexpected character at position ${u}`,
          "param",
          t
        );
      }
      t = t.replace(/\s/g, " ");
      function i(u) {
        let p = { type: "", name: "", parent: u, state: { allowType: !0 } };
        return e && (p.indexed = !1), p;
      }
      let a = { type: "", name: "", state: { allowType: !0 } },
        l = a;
      for (let u = 0; u < t.length; u++) {
        let p = t[u];
        switch (p) {
          case "(":
            l.state.allowType && l.type === ""
              ? (l.type = "tuple")
              : l.state.allowParams || n(u),
              (l.state.allowType = !1),
              (l.type = Mc(l.type)),
              (l.components = [i(l)]),
              (l = l.components[0]);
            break;
          case ")":
            delete l.state,
              l.name === "indexed" &&
                (e || n(u), (l.indexed = !0), (l.name = "")),
              Yp(l.type, l.name) && (l.name = ""),
              (l.type = Mc(l.type));
            let m = l;
            (l = l.parent),
              l || n(u),
              delete m.parent,
              (l.state.allowParams = !1),
              (l.state.allowName = !0),
              (l.state.allowArray = !0);
            break;
          case ",":
            delete l.state,
              l.name === "indexed" &&
                (e || n(u), (l.indexed = !0), (l.name = "")),
              Yp(l.type, l.name) && (l.name = ""),
              (l.type = Mc(l.type));
            let v = i(l.parent);
            l.parent.components.push(v), delete l.parent, (l = v);
            break;
          case " ":
            l.state.allowType &&
              l.type !== "" &&
              ((l.type = Mc(l.type)),
              delete l.state.allowType,
              (l.state.allowName = !0),
              (l.state.allowParams = !0)),
              l.state.allowName &&
                l.name !== "" &&
                (l.name === "indexed"
                  ? (e || n(u),
                    l.indexed && n(u),
                    (l.indexed = !0),
                    (l.name = ""))
                  : Yp(l.type, l.name)
                  ? (l.name = "")
                  : (l.state.allowName = !1));
            break;
          case "[":
            l.state.allowArray || n(u),
              (l.type += p),
              (l.state.allowArray = !1),
              (l.state.allowName = !1),
              (l.state.readArray = !0);
            break;
          case "]":
            l.state.readArray || n(u),
              (l.type += p),
              (l.state.readArray = !1),
              (l.state.allowArray = !0),
              (l.state.allowName = !0);
            break;
          default:
            l.state.allowType
              ? ((l.type += p),
                (l.state.allowParams = !0),
                (l.state.allowArray = !0))
              : l.state.allowName
              ? ((l.name += p), delete l.state.allowArray)
              : l.state.readArray
              ? (l.type += p)
              : n(u);
        }
      }
      return (
        l.parent && Ih.throwArgumentError("unexpected eof", "param", t),
        delete a.state,
        l.name === "indexed"
          ? (e || n(r.length - 7),
            l.indexed && n(r.length - 7),
            (l.indexed = !0),
            (l.name = ""))
          : Yp(l.type, l.name) && (l.name = ""),
        (a.type = Mc(a.type)),
        a
      );
    }
    function ab(t, e) {
      for (let r in e) cl(t, r, e[r]);
    }
    const ul = Object.freeze({
        sighash: "sighash",
        minimal: "minimal",
        full: "full",
        json: "json",
      }),
      zX = new RegExp(/^(.*)\[([0-9]*)\]$/);
    class Hn {
      constructor(e, r) {
        e !== sE &&
          Ih.throwError("use fromString", Hr.errors.UNSUPPORTED_OPERATION, {
            operation: "new ParamType()",
          }),
          ab(this, r);
        let n = this.type.match(zX);
        n
          ? ab(this, {
              arrayLength: parseInt(n[2] || "-1"),
              arrayChildren: Hn.fromObject({
                type: n[1],
                components: this.components,
              }),
              baseType: "array",
            })
          : ab(this, {
              arrayLength: null,
              arrayChildren: null,
              baseType: this.components != null ? "tuple" : this.type,
            }),
          (this._isParamType = !0),
          Object.freeze(this);
      }
      format(e) {
        if (
          (e || (e = ul.sighash),
          ul[e] || Ih.throwArgumentError("invalid format type", "format", e),
          e === ul.json)
        ) {
          let n = {
            type: this.baseType === "tuple" ? "tuple" : this.type,
            name: this.name || void 0,
          };
          return (
            typeof this.indexed == "boolean" && (n.indexed = this.indexed),
            this.components &&
              (n.components = this.components.map((i) =>
                JSON.parse(i.format(e))
              )),
            JSON.stringify(n)
          );
        }
        let r = "";
        return (
          this.baseType === "array"
            ? ((r += this.arrayChildren.format(e)),
              (r +=
                "[" +
                (this.arrayLength < 0 ? "" : String(this.arrayLength)) +
                "]"))
            : this.baseType === "tuple"
            ? (e !== ul.sighash && (r += this.type),
              (r +=
                "(" +
                this.components
                  .map((n) => n.format(e))
                  .join(e === ul.full ? ", " : ",") +
                ")"))
            : (r += this.type),
          e !== ul.sighash &&
            (this.indexed === !0 && (r += " indexed"),
            e === ul.full && this.name && (r += " " + this.name)),
          r
        );
      }
      static from(e, r) {
        return typeof e == "string" ? Hn.fromString(e, r) : Hn.fromObject(e);
      }
      static fromObject(e) {
        return Hn.isParamType(e)
          ? e
          : new Hn(sE, {
              name: e.name || null,
              type: Mc(e.type),
              indexed: e.indexed == null ? null : !!e.indexed,
              components: e.components ? e.components.map(Hn.fromObject) : null,
            });
      }
      static fromString(e, r) {
        function n(i) {
          return Hn.fromObject({
            name: i.name,
            type: i.type,
            indexed: i.indexed,
            components: i.components,
          });
        }
        return n(DX(e, !!r));
      }
      static isParamType(e) {
        return !!(e != null && e._isParamType);
      }
    }
    function Mc(t) {
      return (
        t.match(/^uint($|[^1-9])/)
          ? (t = "uint256" + t.substring(4))
          : t.match(/^int($|[^1-9])/) && (t = "int256" + t.substring(3)),
        t
      );
    }
    const ob = new Hr(Gp);
    class oa {
      constructor(e, r, n, i) {
        (this.name = e),
          (this.type = r),
          (this.localName = n),
          (this.dynamic = i);
      }
      _throwError(e, r) {
        ob.throwArgumentError(e, this.localName, r);
      }
    }
    class lb {
      constructor(e) {
        cl(this, "wordSize", e || 32),
          (this._data = []),
          (this._dataLength = 0),
          (this._padding = new Uint8Array(e));
      }
      get data() {
        return MX(this._data);
      }
      get length() {
        return this._dataLength;
      }
      _writeData(e) {
        return this._data.push(e), (this._dataLength += e.length), e.length;
      }
      appendWriter(e) {
        return this._writeData(nb(e._data));
      }
      writeBytes(e) {
        let r = $i(e);
        const n = r.length % this.wordSize;
        return n && (r = nb([r, this._padding.slice(n)])), this._writeData(r);
      }
      _getValue(e) {
        let r = $i(nn.from(e));
        return (
          r.length > this.wordSize &&
            ob.throwError("value out-of-bounds", Hr.errors.BUFFER_OVERRUN, {
              length: this.wordSize,
              offset: r.length,
            }),
          r.length % this.wordSize &&
            (r = nb([this._padding.slice(r.length % this.wordSize), r])),
          r
        );
      }
      writeValue(e) {
        return this._writeData(this._getValue(e));
      }
      writeUpdatableValue() {
        const e = this._data.length;
        return (
          this._data.push(this._padding),
          (this._dataLength += this.wordSize),
          (r) => {
            this._data[e] = this._getValue(r);
          }
        );
      }
    }
    class Vp {
      constructor(e, r, n, i) {
        cl(this, "_data", $i(e)),
          cl(this, "wordSize", r || 32),
          cl(this, "_coerceFunc", n),
          cl(this, "allowLoose", i),
          (this._offset = 0);
      }
      get data() {
        return Lc(this._data);
      }
      get consumed() {
        return this._offset;
      }
      static coerce(e, r) {
        let n = e.match("^u?int([0-9]+)$");
        return n && parseInt(n[1]) <= 48 && (r = r.toNumber()), r;
      }
      coerce(e, r) {
        return this._coerceFunc ? this._coerceFunc(e, r) : Vp.coerce(e, r);
      }
      _peekBytes(e, r, n) {
        let i = Math.ceil(r / this.wordSize) * this.wordSize;
        return (
          this._offset + i > this._data.length &&
            (this.allowLoose && n && this._offset + r <= this._data.length
              ? (i = r)
              : ob.throwError("data out-of-bounds", Hr.errors.BUFFER_OVERRUN, {
                  length: this._data.length,
                  offset: this._offset + i,
                })),
          this._data.slice(this._offset, this._offset + i)
        );
      }
      subReader(e) {
        return new Vp(
          this._data.slice(this._offset + e),
          this.wordSize,
          this._coerceFunc,
          this.allowLoose
        );
      }
      readBytes(e, r) {
        let n = this._peekBytes(0, e, !!r);
        return (this._offset += n.length), n.slice(0, e);
      }
      readValue() {
        return nn.from(this.readBytes(this.wordSize));
      }
    }
    var oE = { exports: {} };
    (function (t) {
      (function () {
        var e = "input is invalid type",
          r = "finalize already called",
          n = typeof window == "object",
          i = n ? window : {};
        i.JS_SHA3_NO_WINDOW && (n = !1);
        var a = !n && typeof self == "object",
          l =
            !i.JS_SHA3_NO_NODE_JS &&
            typeof Rs == "object" &&
            Rs.versions &&
            Rs.versions.node;
        l ? (i = So) : a && (i = self);
        var u = !i.JS_SHA3_NO_COMMON_JS && !0 && t.exports,
          p = !i.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer < "u",
          m = "0123456789abcdef".split(""),
          v = [31, 7936, 2031616, 520093696],
          w = [4, 1024, 262144, 67108864],
          S = [1, 256, 65536, 16777216],
          M = [6, 1536, 393216, 100663296],
          D = [0, 8, 16, 24],
          z = [
            1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0,
            2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0,
            136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139,
            2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648,
            128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545,
            2147483648, 32896, 2147483648, 2147483649, 0, 2147516424,
            2147483648,
          ],
          V = [224, 256, 384, 512],
          j = [128, 256],
          B = ["hex", "buffer", "arrayBuffer", "array", "digest"],
          ae = { 128: 168, 256: 136 };
        (i.JS_SHA3_NO_NODE_JS || !Array.isArray) &&
          (Array.isArray = function (X) {
            return Object.prototype.toString.call(X) === "[object Array]";
          }),
          p &&
            (i.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView) &&
            (ArrayBuffer.isView = function (X) {
              return (
                typeof X == "object" &&
                X.buffer &&
                X.buffer.constructor === ArrayBuffer
              );
            });
        for (
          var re = function (X, Ee, me) {
              return function (xe) {
                return new Z(X, Ee, X).update(xe)[me]();
              };
            },
            K = function (X, Ee, me) {
              return function (xe, Se) {
                return new Z(X, Ee, Se).update(xe)[me]();
              };
            },
            fe = function (X, Ee, me) {
              return function (xe, Se, Ie, Ne) {
                return P["cshake" + X].update(xe, Se, Ie, Ne)[me]();
              };
            },
            ye = function (X, Ee, me) {
              return function (xe, Se, Ie, Ne) {
                return P["kmac" + X].update(xe, Se, Ie, Ne)[me]();
              };
            },
            pe = function (X, Ee, me, xe) {
              for (var Se = 0; Se < B.length; ++Se) {
                var Ie = B[Se];
                X[Ie] = Ee(me, xe, Ie);
              }
              return X;
            },
            _e = function (X, Ee) {
              var me = re(X, Ee, "hex");
              return (
                (me.create = function () {
                  return new Z(X, Ee, X);
                }),
                (me.update = function (xe) {
                  return me.create().update(xe);
                }),
                pe(me, re, X, Ee)
              );
            },
            be = function (X, Ee) {
              var me = K(X, Ee, "hex");
              return (
                (me.create = function (xe) {
                  return new Z(X, Ee, xe);
                }),
                (me.update = function (xe, Se) {
                  return me.create(Se).update(xe);
                }),
                pe(me, K, X, Ee)
              );
            },
            Ce = function (X, Ee) {
              var me = ae[X],
                xe = fe(X, Ee, "hex");
              return (
                (xe.create = function (Se, Ie, Ne) {
                  return !Ie && !Ne
                    ? P["shake" + X].create(Se)
                    : new Z(X, Ee, Se).bytepad([Ie, Ne], me);
                }),
                (xe.update = function (Se, Ie, Ne, oe) {
                  return xe.create(Ie, Ne, oe).update(Se);
                }),
                pe(xe, fe, X, Ee)
              );
            },
            ke = function (X, Ee) {
              var me = ae[X],
                xe = ye(X, Ee, "hex");
              return (
                (xe.create = function (Se, Ie, Ne) {
                  return new Oe(X, Ee, Ie)
                    .bytepad(["KMAC", Ne], me)
                    .bytepad([Se], me);
                }),
                (xe.update = function (Se, Ie, Ne, oe) {
                  return xe.create(Se, Ne, oe).update(Ie);
                }),
                pe(xe, ye, X, Ee)
              );
            },
            E = [
              { name: "keccak", padding: S, bits: V, createMethod: _e },
              { name: "sha3", padding: M, bits: V, createMethod: _e },
              { name: "shake", padding: v, bits: j, createMethod: be },
              { name: "cshake", padding: w, bits: j, createMethod: Ce },
              { name: "kmac", padding: w, bits: j, createMethod: ke },
            ],
            P = {},
            L = [],
            U = 0;
          U < E.length;
          ++U
        )
          for (var Y = E[U], ie = Y.bits, le = 0; le < ie.length; ++le) {
            var J = Y.name + "_" + ie[le];
            if (
              (L.push(J),
              (P[J] = Y.createMethod(ie[le], Y.padding)),
              Y.name !== "sha3")
            ) {
              var T = Y.name + ie[le];
              L.push(T), (P[T] = P[J]);
            }
          }
        function Z(X, Ee, me) {
          (this.blocks = []),
            (this.s = []),
            (this.padding = Ee),
            (this.outputBits = me),
            (this.reset = !0),
            (this.finalized = !1),
            (this.block = 0),
            (this.start = 0),
            (this.blockCount = (1600 - (X << 1)) >> 5),
            (this.byteCount = this.blockCount << 2),
            (this.outputBlocks = me >> 5),
            (this.extraBytes = (me & 31) >> 3);
          for (var xe = 0; xe < 50; ++xe) this.s[xe] = 0;
        }
        (Z.prototype.update = function (X) {
          if (this.finalized) throw new Error(r);
          var Ee,
            me = typeof X;
          if (me !== "string") {
            if (me === "object") {
              if (X === null) throw new Error(e);
              if (p && X.constructor === ArrayBuffer) X = new Uint8Array(X);
              else if (!Array.isArray(X) && (!p || !ArrayBuffer.isView(X)))
                throw new Error(e);
            } else throw new Error(e);
            Ee = !0;
          }
          for (
            var xe = this.blocks,
              Se = this.byteCount,
              Ie = X.length,
              Ne = this.blockCount,
              oe = 0,
              W = this.s,
              Q,
              ge;
            oe < Ie;

          ) {
            if (this.reset)
              for (this.reset = !1, xe[0] = this.block, Q = 1; Q < Ne + 1; ++Q)
                xe[Q] = 0;
            if (Ee)
              for (Q = this.start; oe < Ie && Q < Se; ++oe)
                xe[Q >> 2] |= X[oe] << D[Q++ & 3];
            else
              for (Q = this.start; oe < Ie && Q < Se; ++oe)
                (ge = X.charCodeAt(oe)),
                  ge < 128
                    ? (xe[Q >> 2] |= ge << D[Q++ & 3])
                    : ge < 2048
                    ? ((xe[Q >> 2] |= (192 | (ge >> 6)) << D[Q++ & 3]),
                      (xe[Q >> 2] |= (128 | (ge & 63)) << D[Q++ & 3]))
                    : ge < 55296 || ge >= 57344
                    ? ((xe[Q >> 2] |= (224 | (ge >> 12)) << D[Q++ & 3]),
                      (xe[Q >> 2] |= (128 | ((ge >> 6) & 63)) << D[Q++ & 3]),
                      (xe[Q >> 2] |= (128 | (ge & 63)) << D[Q++ & 3]))
                    : ((ge =
                        65536 +
                        (((ge & 1023) << 10) | (X.charCodeAt(++oe) & 1023))),
                      (xe[Q >> 2] |= (240 | (ge >> 18)) << D[Q++ & 3]),
                      (xe[Q >> 2] |= (128 | ((ge >> 12) & 63)) << D[Q++ & 3]),
                      (xe[Q >> 2] |= (128 | ((ge >> 6) & 63)) << D[Q++ & 3]),
                      (xe[Q >> 2] |= (128 | (ge & 63)) << D[Q++ & 3]));
            if (((this.lastByteIndex = Q), Q >= Se)) {
              for (this.start = Q - Se, this.block = xe[Ne], Q = 0; Q < Ne; ++Q)
                W[Q] ^= xe[Q];
              Me(W), (this.reset = !0);
            } else this.start = Q;
          }
          return this;
        }),
          (Z.prototype.encode = function (X, Ee) {
            var me = X & 255,
              xe = 1,
              Se = [me];
            for (X = X >> 8, me = X & 255; me > 0; )
              Se.unshift(me), (X = X >> 8), (me = X & 255), ++xe;
            return (
              Ee ? Se.push(xe) : Se.unshift(xe), this.update(Se), Se.length
            );
          }),
          (Z.prototype.encodeString = function (X) {
            var Ee,
              me = typeof X;
            if (me !== "string") {
              if (me === "object") {
                if (X === null) throw new Error(e);
                if (p && X.constructor === ArrayBuffer) X = new Uint8Array(X);
                else if (!Array.isArray(X) && (!p || !ArrayBuffer.isView(X)))
                  throw new Error(e);
              } else throw new Error(e);
              Ee = !0;
            }
            var xe = 0,
              Se = X.length;
            if (Ee) xe = Se;
            else
              for (var Ie = 0; Ie < X.length; ++Ie) {
                var Ne = X.charCodeAt(Ie);
                Ne < 128
                  ? (xe += 1)
                  : Ne < 2048
                  ? (xe += 2)
                  : Ne < 55296 || Ne >= 57344
                  ? (xe += 3)
                  : ((Ne =
                      65536 +
                      (((Ne & 1023) << 10) | (X.charCodeAt(++Ie) & 1023))),
                    (xe += 4));
              }
            return (xe += this.encode(xe * 8)), this.update(X), xe;
          }),
          (Z.prototype.bytepad = function (X, Ee) {
            for (var me = this.encode(Ee), xe = 0; xe < X.length; ++xe)
              me += this.encodeString(X[xe]);
            var Se = Ee - (me % Ee),
              Ie = [];
            return (Ie.length = Se), this.update(Ie), this;
          }),
          (Z.prototype.finalize = function () {
            if (!this.finalized) {
              this.finalized = !0;
              var X = this.blocks,
                Ee = this.lastByteIndex,
                me = this.blockCount,
                xe = this.s;
              if (
                ((X[Ee >> 2] |= this.padding[Ee & 3]),
                this.lastByteIndex === this.byteCount)
              )
                for (X[0] = X[me], Ee = 1; Ee < me + 1; ++Ee) X[Ee] = 0;
              for (X[me - 1] |= 2147483648, Ee = 0; Ee < me; ++Ee)
                xe[Ee] ^= X[Ee];
              Me(xe);
            }
          }),
          (Z.prototype.toString = Z.prototype.hex =
            function () {
              this.finalize();
              for (
                var X = this.blockCount,
                  Ee = this.s,
                  me = this.outputBlocks,
                  xe = this.extraBytes,
                  Se = 0,
                  Ie = 0,
                  Ne = "",
                  oe;
                Ie < me;

              ) {
                for (Se = 0; Se < X && Ie < me; ++Se, ++Ie)
                  (oe = Ee[Se]),
                    (Ne +=
                      m[(oe >> 4) & 15] +
                      m[oe & 15] +
                      m[(oe >> 12) & 15] +
                      m[(oe >> 8) & 15] +
                      m[(oe >> 20) & 15] +
                      m[(oe >> 16) & 15] +
                      m[(oe >> 28) & 15] +
                      m[(oe >> 24) & 15]);
                Ie % X === 0 && (Me(Ee), (Se = 0));
              }
              return (
                xe &&
                  ((oe = Ee[Se]),
                  (Ne += m[(oe >> 4) & 15] + m[oe & 15]),
                  xe > 1 && (Ne += m[(oe >> 12) & 15] + m[(oe >> 8) & 15]),
                  xe > 2 && (Ne += m[(oe >> 20) & 15] + m[(oe >> 16) & 15])),
                Ne
              );
            }),
          (Z.prototype.arrayBuffer = function () {
            this.finalize();
            var X = this.blockCount,
              Ee = this.s,
              me = this.outputBlocks,
              xe = this.extraBytes,
              Se = 0,
              Ie = 0,
              Ne = this.outputBits >> 3,
              oe;
            xe
              ? (oe = new ArrayBuffer((me + 1) << 2))
              : (oe = new ArrayBuffer(Ne));
            for (var W = new Uint32Array(oe); Ie < me; ) {
              for (Se = 0; Se < X && Ie < me; ++Se, ++Ie) W[Ie] = Ee[Se];
              Ie % X === 0 && Me(Ee);
            }
            return xe && ((W[Se] = Ee[Se]), (oe = oe.slice(0, Ne))), oe;
          }),
          (Z.prototype.buffer = Z.prototype.arrayBuffer),
          (Z.prototype.digest = Z.prototype.array =
            function () {
              this.finalize();
              for (
                var X = this.blockCount,
                  Ee = this.s,
                  me = this.outputBlocks,
                  xe = this.extraBytes,
                  Se = 0,
                  Ie = 0,
                  Ne = [],
                  oe,
                  W;
                Ie < me;

              ) {
                for (Se = 0; Se < X && Ie < me; ++Se, ++Ie)
                  (oe = Ie << 2),
                    (W = Ee[Se]),
                    (Ne[oe] = W & 255),
                    (Ne[oe + 1] = (W >> 8) & 255),
                    (Ne[oe + 2] = (W >> 16) & 255),
                    (Ne[oe + 3] = (W >> 24) & 255);
                Ie % X === 0 && Me(Ee);
              }
              return (
                xe &&
                  ((oe = Ie << 2),
                  (W = Ee[Se]),
                  (Ne[oe] = W & 255),
                  xe > 1 && (Ne[oe + 1] = (W >> 8) & 255),
                  xe > 2 && (Ne[oe + 2] = (W >> 16) & 255)),
                Ne
              );
            });
        function Oe(X, Ee, me) {
          Z.call(this, X, Ee, me);
        }
        (Oe.prototype = new Z()),
          (Oe.prototype.finalize = function () {
            return (
              this.encode(this.outputBits, !0), Z.prototype.finalize.call(this)
            );
          });
        var Me = function (X) {
          var Ee,
            me,
            xe,
            Se,
            Ie,
            Ne,
            oe,
            W,
            Q,
            ge,
            I,
            R,
            q,
            ce,
            ne,
            de,
            Te,
            Re,
            Ve,
            Pe,
            Be,
            Ze,
            Je,
            st,
            Ur,
            Dt,
            Qt,
            Mn,
            Jt,
            wt,
            sn,
            Zt,
            gr,
            wa,
            qt,
            lr,
            ts,
            cr,
            mr,
            Ts,
            ur,
            vr,
            ka,
            yr,
            br,
            rs,
            Xt,
            er,
            _a,
            xr,
            wr,
            Aa,
            kr,
            hr,
            Ps,
            ir,
            _r,
            $,
            s,
            o,
            c,
            h,
            d;
          for (xe = 0; xe < 48; xe += 2)
            (Se = X[0] ^ X[10] ^ X[20] ^ X[30] ^ X[40]),
              (Ie = X[1] ^ X[11] ^ X[21] ^ X[31] ^ X[41]),
              (Ne = X[2] ^ X[12] ^ X[22] ^ X[32] ^ X[42]),
              (oe = X[3] ^ X[13] ^ X[23] ^ X[33] ^ X[43]),
              (W = X[4] ^ X[14] ^ X[24] ^ X[34] ^ X[44]),
              (Q = X[5] ^ X[15] ^ X[25] ^ X[35] ^ X[45]),
              (ge = X[6] ^ X[16] ^ X[26] ^ X[36] ^ X[46]),
              (I = X[7] ^ X[17] ^ X[27] ^ X[37] ^ X[47]),
              (R = X[8] ^ X[18] ^ X[28] ^ X[38] ^ X[48]),
              (q = X[9] ^ X[19] ^ X[29] ^ X[39] ^ X[49]),
              (Ee = R ^ ((Ne << 1) | (oe >>> 31))),
              (me = q ^ ((oe << 1) | (Ne >>> 31))),
              (X[0] ^= Ee),
              (X[1] ^= me),
              (X[10] ^= Ee),
              (X[11] ^= me),
              (X[20] ^= Ee),
              (X[21] ^= me),
              (X[30] ^= Ee),
              (X[31] ^= me),
              (X[40] ^= Ee),
              (X[41] ^= me),
              (Ee = Se ^ ((W << 1) | (Q >>> 31))),
              (me = Ie ^ ((Q << 1) | (W >>> 31))),
              (X[2] ^= Ee),
              (X[3] ^= me),
              (X[12] ^= Ee),
              (X[13] ^= me),
              (X[22] ^= Ee),
              (X[23] ^= me),
              (X[32] ^= Ee),
              (X[33] ^= me),
              (X[42] ^= Ee),
              (X[43] ^= me),
              (Ee = Ne ^ ((ge << 1) | (I >>> 31))),
              (me = oe ^ ((I << 1) | (ge >>> 31))),
              (X[4] ^= Ee),
              (X[5] ^= me),
              (X[14] ^= Ee),
              (X[15] ^= me),
              (X[24] ^= Ee),
              (X[25] ^= me),
              (X[34] ^= Ee),
              (X[35] ^= me),
              (X[44] ^= Ee),
              (X[45] ^= me),
              (Ee = W ^ ((R << 1) | (q >>> 31))),
              (me = Q ^ ((q << 1) | (R >>> 31))),
              (X[6] ^= Ee),
              (X[7] ^= me),
              (X[16] ^= Ee),
              (X[17] ^= me),
              (X[26] ^= Ee),
              (X[27] ^= me),
              (X[36] ^= Ee),
              (X[37] ^= me),
              (X[46] ^= Ee),
              (X[47] ^= me),
              (Ee = ge ^ ((Se << 1) | (Ie >>> 31))),
              (me = I ^ ((Ie << 1) | (Se >>> 31))),
              (X[8] ^= Ee),
              (X[9] ^= me),
              (X[18] ^= Ee),
              (X[19] ^= me),
              (X[28] ^= Ee),
              (X[29] ^= me),
              (X[38] ^= Ee),
              (X[39] ^= me),
              (X[48] ^= Ee),
              (X[49] ^= me),
              (ce = X[0]),
              (ne = X[1]),
              (rs = (X[11] << 4) | (X[10] >>> 28)),
              (Xt = (X[10] << 4) | (X[11] >>> 28)),
              (Mn = (X[20] << 3) | (X[21] >>> 29)),
              (Jt = (X[21] << 3) | (X[20] >>> 29)),
              (o = (X[31] << 9) | (X[30] >>> 23)),
              (c = (X[30] << 9) | (X[31] >>> 23)),
              (vr = (X[40] << 18) | (X[41] >>> 14)),
              (ka = (X[41] << 18) | (X[40] >>> 14)),
              (wa = (X[2] << 1) | (X[3] >>> 31)),
              (qt = (X[3] << 1) | (X[2] >>> 31)),
              (de = (X[13] << 12) | (X[12] >>> 20)),
              (Te = (X[12] << 12) | (X[13] >>> 20)),
              (er = (X[22] << 10) | (X[23] >>> 22)),
              (_a = (X[23] << 10) | (X[22] >>> 22)),
              (wt = (X[33] << 13) | (X[32] >>> 19)),
              (sn = (X[32] << 13) | (X[33] >>> 19)),
              (h = (X[42] << 2) | (X[43] >>> 30)),
              (d = (X[43] << 2) | (X[42] >>> 30)),
              (hr = (X[5] << 30) | (X[4] >>> 2)),
              (Ps = (X[4] << 30) | (X[5] >>> 2)),
              (lr = (X[14] << 6) | (X[15] >>> 26)),
              (ts = (X[15] << 6) | (X[14] >>> 26)),
              (Re = (X[25] << 11) | (X[24] >>> 21)),
              (Ve = (X[24] << 11) | (X[25] >>> 21)),
              (xr = (X[34] << 15) | (X[35] >>> 17)),
              (wr = (X[35] << 15) | (X[34] >>> 17)),
              (Zt = (X[45] << 29) | (X[44] >>> 3)),
              (gr = (X[44] << 29) | (X[45] >>> 3)),
              (st = (X[6] << 28) | (X[7] >>> 4)),
              (Ur = (X[7] << 28) | (X[6] >>> 4)),
              (ir = (X[17] << 23) | (X[16] >>> 9)),
              (_r = (X[16] << 23) | (X[17] >>> 9)),
              (cr = (X[26] << 25) | (X[27] >>> 7)),
              (mr = (X[27] << 25) | (X[26] >>> 7)),
              (Pe = (X[36] << 21) | (X[37] >>> 11)),
              (Be = (X[37] << 21) | (X[36] >>> 11)),
              (Aa = (X[47] << 24) | (X[46] >>> 8)),
              (kr = (X[46] << 24) | (X[47] >>> 8)),
              (yr = (X[8] << 27) | (X[9] >>> 5)),
              (br = (X[9] << 27) | (X[8] >>> 5)),
              (Dt = (X[18] << 20) | (X[19] >>> 12)),
              (Qt = (X[19] << 20) | (X[18] >>> 12)),
              ($ = (X[29] << 7) | (X[28] >>> 25)),
              (s = (X[28] << 7) | (X[29] >>> 25)),
              (Ts = (X[38] << 8) | (X[39] >>> 24)),
              (ur = (X[39] << 8) | (X[38] >>> 24)),
              (Ze = (X[48] << 14) | (X[49] >>> 18)),
              (Je = (X[49] << 14) | (X[48] >>> 18)),
              (X[0] = ce ^ (~de & Re)),
              (X[1] = ne ^ (~Te & Ve)),
              (X[10] = st ^ (~Dt & Mn)),
              (X[11] = Ur ^ (~Qt & Jt)),
              (X[20] = wa ^ (~lr & cr)),
              (X[21] = qt ^ (~ts & mr)),
              (X[30] = yr ^ (~rs & er)),
              (X[31] = br ^ (~Xt & _a)),
              (X[40] = hr ^ (~ir & $)),
              (X[41] = Ps ^ (~_r & s)),
              (X[2] = de ^ (~Re & Pe)),
              (X[3] = Te ^ (~Ve & Be)),
              (X[12] = Dt ^ (~Mn & wt)),
              (X[13] = Qt ^ (~Jt & sn)),
              (X[22] = lr ^ (~cr & Ts)),
              (X[23] = ts ^ (~mr & ur)),
              (X[32] = rs ^ (~er & xr)),
              (X[33] = Xt ^ (~_a & wr)),
              (X[42] = ir ^ (~$ & o)),
              (X[43] = _r ^ (~s & c)),
              (X[4] = Re ^ (~Pe & Ze)),
              (X[5] = Ve ^ (~Be & Je)),
              (X[14] = Mn ^ (~wt & Zt)),
              (X[15] = Jt ^ (~sn & gr)),
              (X[24] = cr ^ (~Ts & vr)),
              (X[25] = mr ^ (~ur & ka)),
              (X[34] = er ^ (~xr & Aa)),
              (X[35] = _a ^ (~wr & kr)),
              (X[44] = $ ^ (~o & h)),
              (X[45] = s ^ (~c & d)),
              (X[6] = Pe ^ (~Ze & ce)),
              (X[7] = Be ^ (~Je & ne)),
              (X[16] = wt ^ (~Zt & st)),
              (X[17] = sn ^ (~gr & Ur)),
              (X[26] = Ts ^ (~vr & wa)),
              (X[27] = ur ^ (~ka & qt)),
              (X[36] = xr ^ (~Aa & yr)),
              (X[37] = wr ^ (~kr & br)),
              (X[46] = o ^ (~h & hr)),
              (X[47] = c ^ (~d & Ps)),
              (X[8] = Ze ^ (~ce & de)),
              (X[9] = Je ^ (~ne & Te)),
              (X[18] = Zt ^ (~st & Dt)),
              (X[19] = gr ^ (~Ur & Qt)),
              (X[28] = vr ^ (~wa & lr)),
              (X[29] = ka ^ (~qt & ts)),
              (X[38] = Aa ^ (~yr & rs)),
              (X[39] = kr ^ (~br & Xt)),
              (X[48] = h ^ (~hr & ir)),
              (X[49] = d ^ (~Ps & _r)),
              (X[0] ^= z[xe]),
              (X[1] ^= z[xe + 1]);
        };
        if (u) t.exports = P;
        else for (U = 0; U < L.length; ++U) i[L[U]] = P[L[U]];
      })();
    })(oE);
    var HX = oE.exports;
    const UX = ns(HX);
    function WX(t) {
      return "0x" + UX.keccak_256($i(t));
    }
    const XX = "address/5.7.0",
      Th = new Hr(XX);
    function lE(t) {
      Oc(t, 20) || Th.throwArgumentError("invalid address", "address", t),
        (t = t.toLowerCase());
      const e = t.substring(2).split(""),
        r = new Uint8Array(40);
      for (let i = 0; i < 40; i++) r[i] = e[i].charCodeAt(0);
      const n = $i(WX(r));
      for (let i = 0; i < 40; i += 2)
        n[i >> 1] >> 4 >= 8 && (e[i] = e[i].toUpperCase()),
          (n[i >> 1] & 15) >= 8 && (e[i + 1] = e[i + 1].toUpperCase());
      return "0x" + e.join("");
    }
    const jX = 9007199254740991;
    function GX(t) {
      return Math.log10 ? Math.log10(t) : Math.log(t) / Math.LN10;
    }
    const cb = {};
    for (let t = 0; t < 10; t++) cb[String(t)] = String(t);
    for (let t = 0; t < 26; t++)
      cb[String.fromCharCode(65 + t)] = String(10 + t);
    const cE = Math.floor(GX(jX));
    function YX(t) {
      (t = t.toUpperCase()), (t = t.substring(4) + t.substring(0, 2) + "00");
      let e = t
        .split("")
        .map((n) => cb[n])
        .join("");
      for (; e.length >= cE; ) {
        let n = e.substring(0, cE);
        e = (parseInt(n, 10) % 97) + e.substring(n.length);
      }
      let r = String(98 - (parseInt(e, 10) % 97));
      for (; r.length < 2; ) r = "0" + r;
      return r;
    }
    function uE(t) {
      let e = null;
      if (
        (typeof t != "string" &&
          Th.throwArgumentError("invalid address", "address", t),
        t.match(/^(0x)?[0-9a-fA-F]{40}$/))
      )
        t.substring(0, 2) !== "0x" && (t = "0x" + t),
          (e = lE(t)),
          t.match(/([A-F].*[a-f])|([a-f].*[A-F])/) &&
            e !== t &&
            Th.throwArgumentError("bad address checksum", "address", t);
      else if (t.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
        for (
          t.substring(2, 4) !== YX(t) &&
            Th.throwArgumentError("bad icap checksum", "address", t),
            e = BX(t.substring(4));
          e.length < 40;

        )
          e = "0" + e;
        e = lE("0x" + e);
      } else Th.throwArgumentError("invalid address", "address", t);
      return e;
    }
    class VX extends oa {
      constructor(e) {
        super("address", "address", e, !1);
      }
      defaultValue() {
        return "0x0000000000000000000000000000000000000000";
      }
      encode(e, r) {
        try {
          r = uE(r);
        } catch (n) {
          this._throwError(n.message, r);
        }
        return e.writeValue(r);
      }
      decode(e) {
        return uE(RX(e.readValue().toHexString(), 20));
      }
    }
    class qX extends oa {
      constructor(e) {
        super(e.name, e.type, void 0, e.dynamic), (this.coder = e);
      }
      defaultValue() {
        return this.coder.defaultValue();
      }
      encode(e, r) {
        return this.coder.encode(e, r);
      }
      decode(e) {
        return this.coder.decode(e);
      }
    }
    const Rc = new Hr(Gp);
    function hE(t, e, r) {
      let n = null;
      if (Array.isArray(r)) n = r;
      else if (r && typeof r == "object") {
        let p = {};
        n = e.map((m) => {
          const v = m.localName;
          return (
            v ||
              Rc.throwError(
                "cannot encode object for signature with missing names",
                Hr.errors.INVALID_ARGUMENT,
                { argument: "values", coder: m, value: r }
              ),
            p[v] &&
              Rc.throwError(
                "cannot encode object for signature with duplicate names",
                Hr.errors.INVALID_ARGUMENT,
                { argument: "values", coder: m, value: r }
              ),
            (p[v] = !0),
            r[v]
          );
        });
      } else Rc.throwArgumentError("invalid tuple value", "tuple", r);
      e.length !== n.length &&
        Rc.throwArgumentError("types/value length mismatch", "tuple", r);
      let i = new lb(t.wordSize),
        a = new lb(t.wordSize),
        l = [];
      e.forEach((p, m) => {
        let v = n[m];
        if (p.dynamic) {
          let w = a.length;
          p.encode(a, v);
          let S = i.writeUpdatableValue();
          l.push((M) => {
            S(M + w);
          });
        } else p.encode(i, v);
      }),
        l.forEach((p) => {
          p(i.length);
        });
      let u = t.appendWriter(i);
      return (u += t.appendWriter(a)), u;
    }
    function dE(t, e) {
      let r = [],
        n = t.subReader(0);
      e.forEach((a) => {
        let l = null;
        if (a.dynamic) {
          let u = t.readValue(),
            p = n.subReader(u.toNumber());
          try {
            l = a.decode(p);
          } catch (m) {
            if (m.code === Hr.errors.BUFFER_OVERRUN) throw m;
            (l = m),
              (l.baseType = a.name),
              (l.name = a.localName),
              (l.type = a.type);
          }
        } else
          try {
            l = a.decode(t);
          } catch (u) {
            if (u.code === Hr.errors.BUFFER_OVERRUN) throw u;
            (l = u),
              (l.baseType = a.name),
              (l.name = a.localName),
              (l.type = a.type);
          }
        l != null && r.push(l);
      });
      const i = e.reduce((a, l) => {
        const u = l.localName;
        return u && (a[u] || (a[u] = 0), a[u]++), a;
      }, {});
      e.forEach((a, l) => {
        let u = a.localName;
        if (
          !u ||
          i[u] !== 1 ||
          (u === "length" && (u = "_length"), r[u] != null)
        )
          return;
        const p = r[l];
        p instanceof Error
          ? Object.defineProperty(r, u, {
              enumerable: !0,
              get: () => {
                throw p;
              },
            })
          : (r[u] = p);
      });
      for (let a = 0; a < r.length; a++) {
        const l = r[a];
        l instanceof Error &&
          Object.defineProperty(r, a, {
            enumerable: !0,
            get: () => {
              throw l;
            },
          });
      }
      return Object.freeze(r);
    }
    class KX extends oa {
      constructor(e, r, n) {
        const i = e.type + "[" + (r >= 0 ? r : "") + "]",
          a = r === -1 || e.dynamic;
        super("array", i, n, a), (this.coder = e), (this.length = r);
      }
      defaultValue() {
        const e = this.coder.defaultValue(),
          r = [];
        for (let n = 0; n < this.length; n++) r.push(e);
        return r;
      }
      encode(e, r) {
        Array.isArray(r) || this._throwError("expected array value", r);
        let n = this.length;
        n === -1 && ((n = r.length), e.writeValue(r.length)),
          Rc.checkArgumentCount(
            r.length,
            n,
            "coder array" + (this.localName ? " " + this.localName : "")
          );
        let i = [];
        for (let a = 0; a < r.length; a++) i.push(this.coder);
        return hE(e, i, r);
      }
      decode(e) {
        let r = this.length;
        r === -1 &&
          ((r = e.readValue().toNumber()),
          r * 32 > e._data.length &&
            Rc.throwError(
              "insufficient data length",
              Hr.errors.BUFFER_OVERRUN,
              { length: e._data.length, count: r }
            ));
        let n = [];
        for (let i = 0; i < r; i++) n.push(new qX(this.coder));
        return e.coerce(this.name, dE(e, n));
      }
    }
    class $X extends oa {
      constructor(e) {
        super("bool", "bool", e, !1);
      }
      defaultValue() {
        return !1;
      }
      encode(e, r) {
        return e.writeValue(r ? 1 : 0);
      }
      decode(e) {
        return e.coerce(this.type, !e.readValue().isZero());
      }
    }
    class fE extends oa {
      constructor(e, r) {
        super(e, e, r, !0);
      }
      defaultValue() {
        return "0x";
      }
      encode(e, r) {
        r = $i(r);
        let n = e.writeValue(r.length);
        return (n += e.writeBytes(r)), n;
      }
      decode(e) {
        return e.readBytes(e.readValue().toNumber(), !0);
      }
    }
    class ZX extends fE {
      constructor(e) {
        super("bytes", e);
      }
      decode(e) {
        return e.coerce(this.name, Lc(super.decode(e)));
      }
    }
    class QX extends oa {
      constructor(e, r) {
        let n = "bytes" + String(e);
        super(n, n, r, !1), (this.size = e);
      }
      defaultValue() {
        return "0x0000000000000000000000000000000000000000000000000000000000000000".substring(
          0,
          2 + this.size * 2
        );
      }
      encode(e, r) {
        let n = $i(r);
        return (
          n.length !== this.size &&
            this._throwError("incorrect data length", r),
          e.writeBytes(n)
        );
      }
      decode(e) {
        return e.coerce(this.name, Lc(e.readBytes(this.size)));
      }
    }
    class JX extends oa {
      constructor(e) {
        super("null", "", e, !1);
      }
      defaultValue() {
        return null;
      }
      encode(e, r) {
        return r != null && this._throwError("not null", r), e.writeBytes([]);
      }
      decode(e) {
        return e.readBytes(0), e.coerce(this.name, null);
      }
    }
    const ej = nn.from(-1),
      tj = nn.from(0),
      rj = nn.from(1),
      nj = nn.from(
        "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
      );
    class ij extends oa {
      constructor(e, r, n) {
        const i = (r ? "int" : "uint") + e * 8;
        super(i, i, n, !1), (this.size = e), (this.signed = r);
      }
      defaultValue() {
        return 0;
      }
      encode(e, r) {
        let n = nn.from(r),
          i = nj.mask(e.wordSize * 8);
        if (this.signed) {
          let a = i.mask(this.size * 8 - 1);
          (n.gt(a) || n.lt(a.add(rj).mul(ej))) &&
            this._throwError("value out-of-bounds", r);
        } else
          (n.lt(tj) || n.gt(i.mask(this.size * 8))) &&
            this._throwError("value out-of-bounds", r);
        return (
          (n = n.toTwos(this.size * 8).mask(this.size * 8)),
          this.signed && (n = n.fromTwos(this.size * 8).toTwos(8 * e.wordSize)),
          e.writeValue(n)
        );
      }
      decode(e) {
        let r = e.readValue().mask(this.size * 8);
        return (
          this.signed && (r = r.fromTwos(this.size * 8)), e.coerce(this.name, r)
        );
      }
    }
    const sj = "strings/5.7.0",
      pE = new Hr(sj);
    var qp;
    (function (t) {
      (t.current = ""),
        (t.NFC = "NFC"),
        (t.NFD = "NFD"),
        (t.NFKC = "NFKC"),
        (t.NFKD = "NFKD");
    })(qp || (qp = {}));
    var hi;
    (function (t) {
      (t.UNEXPECTED_CONTINUE = "unexpected continuation byte"),
        (t.BAD_PREFIX = "bad codepoint prefix"),
        (t.OVERRUN = "string overrun"),
        (t.MISSING_CONTINUE = "missing continuation byte"),
        (t.OUT_OF_RANGE = "out of UTF-8 range"),
        (t.UTF16_SURROGATE = "UTF-16 surrogate"),
        (t.OVERLONG = "overlong representation");
    })(hi || (hi = {}));
    function aj(t, e, r, n, i) {
      return pE.throwArgumentError(
        `invalid codepoint at offset ${e}; ${t}`,
        "bytes",
        r
      );
    }
    function gE(t, e, r, n, i) {
      if (t === hi.BAD_PREFIX || t === hi.UNEXPECTED_CONTINUE) {
        let a = 0;
        for (let l = e + 1; l < r.length && r[l] >> 6 === 2; l++) a++;
        return a;
      }
      return t === hi.OVERRUN ? r.length - e - 1 : 0;
    }
    function oj(t, e, r, n, i) {
      return t === hi.OVERLONG ? (n.push(i), 0) : (n.push(65533), gE(t, e, r));
    }
    const lj = Object.freeze({ error: aj, ignore: gE, replace: oj });
    function cj(t, e) {
      e == null && (e = lj.error), (t = $i(t));
      const r = [];
      let n = 0;
      for (; n < t.length; ) {
        const i = t[n++];
        if (!(i >> 7)) {
          r.push(i);
          continue;
        }
        let a = null,
          l = null;
        if ((i & 224) === 192) (a = 1), (l = 127);
        else if ((i & 240) === 224) (a = 2), (l = 2047);
        else if ((i & 248) === 240) (a = 3), (l = 65535);
        else {
          (i & 192) === 128
            ? (n += e(hi.UNEXPECTED_CONTINUE, n - 1, t, r))
            : (n += e(hi.BAD_PREFIX, n - 1, t, r));
          continue;
        }
        if (n - 1 + a >= t.length) {
          n += e(hi.OVERRUN, n - 1, t, r);
          continue;
        }
        let u = i & ((1 << (8 - a - 1)) - 1);
        for (let p = 0; p < a; p++) {
          let m = t[n];
          if ((m & 192) != 128) {
            (n += e(hi.MISSING_CONTINUE, n, t, r)), (u = null);
            break;
          }
          (u = (u << 6) | (m & 63)), n++;
        }
        if (u !== null) {
          if (u > 1114111) {
            n += e(hi.OUT_OF_RANGE, n - 1 - a, t, r, u);
            continue;
          }
          if (u >= 55296 && u <= 57343) {
            n += e(hi.UTF16_SURROGATE, n - 1 - a, t, r, u);
            continue;
          }
          if (u <= l) {
            n += e(hi.OVERLONG, n - 1 - a, t, r, u);
            continue;
          }
          r.push(u);
        }
      }
      return r;
    }
    function uj(t, e = qp.current) {
      e != qp.current && (pE.checkNormalize(), (t = t.normalize(e)));
      let r = [];
      for (let n = 0; n < t.length; n++) {
        const i = t.charCodeAt(n);
        if (i < 128) r.push(i);
        else if (i < 2048) r.push((i >> 6) | 192), r.push((i & 63) | 128);
        else if ((i & 64512) == 55296) {
          n++;
          const a = t.charCodeAt(n);
          if (n >= t.length || (a & 64512) !== 56320)
            throw new Error("invalid utf-8 string");
          const l = 65536 + ((i & 1023) << 10) + (a & 1023);
          r.push((l >> 18) | 240),
            r.push(((l >> 12) & 63) | 128),
            r.push(((l >> 6) & 63) | 128),
            r.push((l & 63) | 128);
        } else
          r.push((i >> 12) | 224),
            r.push(((i >> 6) & 63) | 128),
            r.push((i & 63) | 128);
      }
      return $i(r);
    }
    function hj(t) {
      return t
        .map((e) =>
          e <= 65535
            ? String.fromCharCode(e)
            : ((e -= 65536),
              String.fromCharCode(
                ((e >> 10) & 1023) + 55296,
                (e & 1023) + 56320
              ))
        )
        .join("");
    }
    function dj(t, e) {
      return hj(cj(t, e));
    }
    class fj extends fE {
      constructor(e) {
        super("string", e);
      }
      defaultValue() {
        return "";
      }
      encode(e, r) {
        return super.encode(e, uj(r));
      }
      decode(e) {
        return dj(super.decode(e));
      }
    }
    class Kp extends oa {
      constructor(e, r) {
        let n = !1;
        const i = [];
        e.forEach((l) => {
          l.dynamic && (n = !0), i.push(l.type);
        });
        const a = "tuple(" + i.join(",") + ")";
        super("tuple", a, r, n), (this.coders = e);
      }
      defaultValue() {
        const e = [];
        this.coders.forEach((n) => {
          e.push(n.defaultValue());
        });
        const r = this.coders.reduce((n, i) => {
          const a = i.localName;
          return a && (n[a] || (n[a] = 0), n[a]++), n;
        }, {});
        return (
          this.coders.forEach((n, i) => {
            let a = n.localName;
            !a ||
              r[a] !== 1 ||
              (a === "length" && (a = "_length"),
              e[a] == null && (e[a] = e[i]));
          }),
          Object.freeze(e)
        );
      }
      encode(e, r) {
        return hE(e, this.coders, r);
      }
      decode(e) {
        return e.coerce(this.name, dE(e, this.coders));
      }
    }
    const $p = new Hr(Gp),
      pj = new RegExp(/^bytes([0-9]*)$/),
      gj = new RegExp(/^(u?int)([0-9]*)$/);
    class mE {
      constructor(e) {
        cl(this, "coerceFunc", e || null);
      }
      _getCoder(e) {
        switch (e.baseType) {
          case "address":
            return new VX(e.name);
          case "bool":
            return new $X(e.name);
          case "string":
            return new fj(e.name);
          case "bytes":
            return new ZX(e.name);
          case "array":
            return new KX(
              this._getCoder(e.arrayChildren),
              e.arrayLength,
              e.name
            );
          case "tuple":
            return new Kp(
              (e.components || []).map((n) => this._getCoder(n)),
              e.name
            );
          case "":
            return new JX(e.name);
        }
        let r = e.type.match(gj);
        if (r) {
          let n = parseInt(r[2] || "256");
          return (
            (n === 0 || n > 256 || n % 8 !== 0) &&
              $p.throwArgumentError(
                "invalid " + r[1] + " bit length",
                "param",
                e
              ),
            new ij(n / 8, r[1] === "int", e.name)
          );
        }
        if (((r = e.type.match(pj)), r)) {
          let n = parseInt(r[1]);
          return (
            (n === 0 || n > 32) &&
              $p.throwArgumentError("invalid bytes length", "param", e),
            new QX(n, e.name)
          );
        }
        return $p.throwArgumentError("invalid type", "type", e.type);
      }
      _getWordSize() {
        return 32;
      }
      _getReader(e, r) {
        return new Vp(e, this._getWordSize(), this.coerceFunc, r);
      }
      _getWriter() {
        return new lb(this._getWordSize());
      }
      getDefaultValue(e) {
        const r = e.map((n) => this._getCoder(Hn.from(n)));
        return new Kp(r, "_").defaultValue();
      }
      encode(e, r) {
        e.length !== r.length &&
          $p.throwError(
            "types/values length mismatch",
            Hr.errors.INVALID_ARGUMENT,
            {
              count: { types: e.length, values: r.length },
              value: { types: e, values: r },
            }
          );
        const n = e.map((l) => this._getCoder(Hn.from(l))),
          i = new Kp(n, "_"),
          a = this._getWriter();
        return i.encode(a, r), a.data;
      }
      decode(e, r, n) {
        const i = e.map((a) => this._getCoder(Hn.from(a)));
        return new Kp(i, "_").decode(this._getReader($i(r), n));
      }
    }
    new mE();
    const Zp = new mE((t, e) =>
        e != null && e._isBigNumber ? e.toBigInt() : e
      ),
      mj = (t) =>
        !Ct(t) &&
        typeof t == "object" &&
        !Ct(t.type) &&
        ["function", "event", "constructor", "error"].includes(t.type),
      Qp = (t) =>
        !Ct(t) && typeof t == "object" && !Ct(t.type) && t.type === "error",
      ub = (t) =>
        !Ct(t) && typeof t == "object" && !Ct(t.type) && t.type === "event",
      Jp = (t) =>
        !Ct(t) && typeof t == "object" && !Ct(t.type) && t.type === "function",
      vj = (t) =>
        !Ct(t) &&
        typeof t == "object" &&
        !Ct(t.type) &&
        t.type === "constructor",
      yj = (t) =>
        typeof t == "object" &&
        typeof t.components > "u" &&
        typeof t.name > "u",
      vE = (t) =>
        t.includes("[]")
          ? { type: "tuple[]", name: t.slice(0, -2) }
          : { type: "tuple", name: t },
      yE = (t) => {
        const e = [];
        for (const r of Object.keys(t)) {
          const n = t[r];
          typeof n == "object"
            ? e.push(
                Object.assign(Object.assign({}, vE(r)), { components: yE(n) })
              )
            : e.push({ name: r, type: t[r] });
        }
        return e;
      },
      bE = (t) => {
        const e = [];
        for (const r of t) {
          let n = r;
          if (
            (typeof r == "object" && (n = Object.assign({}, r)),
            typeof r == "object" &&
              r.type === "function" &&
              (n = Object.assign(Object.assign({}, r), { type: "bytes24" })),
            yj(n))
          ) {
            const i = Object.keys(n)[0];
            e.push(
              Object.assign(Object.assign({}, vE(i)), { components: yE(n[i]) })
            );
          } else e.push(n);
        }
        return e;
      },
      bj = (t) =>
        typeof t == "string" &&
        /^(-)?0x[0-9a-f]*$/i.test(t) &&
        t.length % 2 === 1,
      xE = (t) => (bj(t) ? `0x0${t.substring(2)}` : t),
      hb = (t, e) => {
        var r;
        const n =
            typeof e == "object" && !Array.isArray(e)
              ? Object.assign({}, e)
              : e,
          i = /^bytes([0-9]*)$/,
          a = /^bytes([0-9]*)\[\]$/,
          l = /^(u?int)([0-9]*)$/,
          u = /^(u?int)([0-9]*)\[\]$/;
        if (n instanceof BigInt) return n.toString(10);
        if (a.exec(t) || u.exec(t))
          return [...n].map((m) => hb(t.replace("[]", ""), m));
        let p = l.exec(t);
        if (p) {
          const m = parseInt(
            (r = p[2]) !== null && r !== void 0 ? r : "256",
            10
          );
          if (m / 8 < n.length) return mc(n, m);
        }
        if (((p = i.exec(t)), p)) {
          const m = n instanceof Uint8Array ? Yi(n) : n,
            v = parseInt(p[1], 10);
          if (v) {
            let w = v * 2;
            n.startsWith("0x") && (w += 2);
            const S = m.length < w ? K0(n, v * 2) : m;
            return xE(S);
          }
          return xE(m);
        }
        return n;
      },
      db = (t, e) =>
        t.name === "array"
          ? e.map((r) =>
              db(Zp._getCoder(Hn.from(t.type.replace("[]", ""))), [r])
            )
          : (t.coders.forEach((r, n) => {
              r.name === "tuple" ? db(r, [e[n]]) : (e[n] = hb(r.name, e[n]));
            }),
            []),
      fb = (t, e) => {
        const r = [];
        return (
          e.forEach((n) => {
            if (typeof n.components == "object") {
              if (!n.type.startsWith("tuple"))
                throw new ja(
                  `Invalid value given "${n.type}". Error: components found but type is not tuple.`
                );
              const i = n.type.indexOf("["),
                a = i >= 0 ? n.type.substring(i) : "",
                l = fb(t, n.components);
              Array.isArray(l) && t
                ? r.push(`tuple(${l.join(",")})${a}`)
                : t
                ? r.push(`(${l.join()})`)
                : r.push(`(${l.join(",")})${a}`);
            } else r.push(n.type);
          }),
          r
        );
      },
      hl = (t) => {
        var e, r, n, i;
        return Qp(t) || ub(t) || Jp(t)
          ? !((e = t.name) === null || e === void 0) && e.includes("(")
            ? t.name
            : `${(r = t.name) !== null && r !== void 0 ? r : ""}(${fb(
                !1,
                (n = t.inputs) !== null && n !== void 0 ? n : []
              ).join(",")})`
          : `(${fb(!1, (i = t.inputs) !== null && i !== void 0 ? i : []).join(
              ","
            )})`;
      },
      xj = (t) => {
        if (typeof t != "string" && !Qp(t))
          throw new ja("Invalid parameter value in encodeErrorSignature");
        let e;
        return (
          t && (typeof t == "function" || typeof t == "object")
            ? (e = hl(t))
            : (e = t),
          ci(e)
        );
      },
      pb = (t) => {
        if (typeof t != "string" && !ub(t))
          throw new ja("Invalid parameter value in encodeEventSignature");
        let e;
        return (
          t && (typeof t == "function" || typeof t == "object")
            ? (e = hl(t))
            : (e = t),
          ci(e)
        );
      },
      eg = (t, e) => {
        try {
          const r = bE(Array.isArray(t) ? t : [t]),
            n = [];
          for (const [i, a] of e.entries()) {
            const l = r[i];
            let u;
            mj(l) && l.type ? (u = l.type) : (u = l);
            const p = hb(u, a);
            if (typeof u == "string" && u.includes("tuple")) {
              const m = Zp._getCoder(Hn.from(u));
              db(m, [p]);
            }
            n.push(p);
          }
          return Zp.encode(
            r.map((i) => Hn.from(i)),
            n
          );
        } catch (r) {
          throw new ja("Parameter encoding error", r);
        }
      },
      gb = (t, e) => eg([t], [e]),
      wj = (t) =>
        Array.isArray(t) &&
        Object.keys(t).filter((e) => Number.isInteger(+e)).length !==
          Object.keys(t).length,
      wE = (t) => {
        const e = { __length__: 0 };
        for (const r of Object.keys(t))
          (e[r] = Array.isArray(t[r]) && wj(t[r]) ? wE(t[r]) : t[r]),
            (e.__length__ += Number.isInteger(+r) ? 1 : 0);
        return e;
      },
      kE = (t, e, r) => {
        try {
          if (t.length > 0 && (!e || e === "0x" || e === "0X"))
            throw new ja(
              "Returned values aren't valid, did it run Out of Gas? You might also see this error if you are not using the correct ABI for the contract you are retrieving data from, requesting data from a block number that does not exist, or querying a node which is not fully synced."
            );
          const n = Zp.decode(
            bE(t).map((i) => Hn.from(i)),
            `0x${e.replace(/0x/i, "")}`,
            r
          );
          return wE(n);
        } catch (n) {
          throw new ja(`Parameter decoding error: ${n.message}`);
        }
      },
      tg = (t, e) => kE(t, e, !1),
      _E = (t, e) => tg([t], e)[0],
      rg = (t) => {
        if (typeof t != "string" && !Jp(t))
          throw new ja("Invalid parameter value in encodeFunctionSignature");
        let e;
        return (
          t && (typeof t == "function" || typeof t == "object")
            ? (e = hl(t))
            : (e = t),
          ci(e).slice(0, 10)
        );
      },
      kj = (t, e) => {
        var r;
        if (!Jp(t))
          throw new ja("Invalid parameter value in encodeFunctionCall");
        return `${rg(t)}${eg(
          (r = t.inputs) !== null && r !== void 0 ? r : [],
          e ?? []
        ).replace("0x", "")}`;
      },
      _j = ["bool", "string", "int", "uint", "address", "fixed", "ufixed"],
      Aj = (t, e) => (t === "string" ? e : _E(t, e)),
      AE = (t, e, r) => {
        const n = Array.isArray(r) ? r : [r],
          i = {},
          a = {};
        for (const [S, M] of t.entries()) M.indexed ? (i[S] = M) : (a[S] = M);
        const l = e ? kE(Object.values(a), e, !0) : { __length__: 0 },
          u = n.length - Object.keys(i).length,
          p = Object.values(i).map((S, M) =>
            _j.some((D) => S.type.startsWith(D))
              ? Aj(S.type, n[M + u])
              : n[M + u]
          ),
          m = { __length__: 0 };
        let v = 0,
          w = 0;
        for (const [S, M] of t.entries())
          (m[S] = M.type === "string" ? "" : void 0),
            i[S] && ((m[S] = p[v]), (v += 1)),
            a[S] && ((m[S] = l[String(w)]), (w += 1)),
            M.name && (m[M.name] = m[S]),
            (m.__length__ += 1);
        return m;
      },
      ng = (t, e) => {
        if (e != null && e.data) {
          let r, n, i;
          try {
            const a = e.data.slice(0, 10),
              l = t.find((u) => xj(u).startsWith(a));
            l != null &&
              l.inputs &&
              ((r = l.name),
              (n = hl(l)),
              (i = tg([...l.inputs], e.data.substring(10))));
          } catch (a) {
            console.error(a);
          }
          r && e.setDecodedProperties(r, n, i);
        }
      };
    var Cj =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    const CE = (t, e) => {
      var r, n, i, a;
      if (t instanceof Ys && t.innerError instanceof Uf) {
        if (e !== void 0) {
          const l = e.filter((u) => Qp(u));
          return (
            ng(l, t.innerError),
            {
              reason: t.innerError.message,
              signature:
                (r = t.innerError.data) === null || r === void 0
                  ? void 0
                  : r.slice(0, 10),
              data:
                (n = t.innerError.data) === null || n === void 0
                  ? void 0
                  : n.substring(10),
              customErrorName: t.innerError.errorName,
              customErrorDecodedSignature: t.innerError.errorSignature,
              customErrorArguments: t.innerError.errorArgs,
            }
          );
        }
        return {
          reason: t.innerError.message,
          signature:
            (i = t.innerError.data) === null || i === void 0
              ? void 0
              : i.slice(0, 10),
          data:
            (a = t.innerError.data) === null || a === void 0
              ? void 0
              : a.substring(10),
        };
      }
      if (
        t instanceof ic &&
        !Array.isArray(t.innerError) &&
        t.innerError !== void 0
      )
        return t.innerError.message;
      throw t;
    };
    function mb(t, e, r, n = nt) {
      return Cj(this, void 0, void 0, function* () {
        try {
          yield bb(t, e, t.defaultBlock, n);
          return;
        } catch (i) {
          return CE(i, r);
        }
      });
    }
    var Sj =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    function Nc(t, e, r, n, i, a) {
      return Sj(this, void 0, void 0, function* () {
        let l = a;
        l === void 0 &&
          (n !== void 0
            ? (l = CE(n))
            : t.handleRevert && e !== void 0 && (l = yield mb(t, e, i)));
        let u;
        if (l === void 0) u = new E0(r);
        else if (typeof l == "string") u = new Vu(l, void 0, r);
        else if (
          l.customErrorName !== void 0 &&
          l.customErrorDecodedSignature !== void 0 &&
          l.customErrorArguments !== void 0
        ) {
          const p = l;
          u = new S0(
            p.reason,
            p.customErrorName,
            p.customErrorDecodedSignature,
            p.customErrorArguments,
            p.signature,
            r,
            p.data
          );
        } else u = new Vu(l.reason, l.signature, r, l.data);
        return u;
      });
    }
    var Kt =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    const Ej = (t) =>
      Kt(void 0, void 0, void 0, function* () {
        return WS(t.requestManager);
      });
    function Ij(t, e) {
      return Kt(this, void 0, void 0, function* () {
        const r = yield e7(t.requestManager);
        return Ye({ format: "uint" }, r, e);
      });
    }
    function SE(t, e) {
      return Kt(this, void 0, void 0, function* () {
        const r = yield t7(t.requestManager);
        return Ye({ format: "uint" }, r, e);
      });
    }
    function vb(t, e) {
      return Kt(this, void 0, void 0, function* () {
        const r = yield n7(t.requestManager);
        return Ye({ format: "uint" }, r, e);
      });
    }
    function Tj(t, e, r = t.defaultBlock, n) {
      return Kt(this, void 0, void 0, function* () {
        const i = un(r) ? r : Ye({ format: "uint" }, r, pt),
          a = yield i7(t.requestManager, e, i);
        return Ye({ format: "uint" }, a, n);
      });
    }
    function Pj(t, e, r, n = t.defaultBlock, i) {
      return Kt(this, void 0, void 0, function* () {
        const a = Ye({ format: "uint" }, r, pt),
          l = un(n) ? n : Ye({ format: "uint" }, n, pt),
          u = yield s7(t.requestManager, e, a, l);
        return Ye({ format: "bytes" }, u, i);
      });
    }
    function Oj(t, e, r = t.defaultBlock, n) {
      return Kt(this, void 0, void 0, function* () {
        const i = un(r) ? r : Ye({ format: "uint" }, r, pt),
          a = yield h7(t.requestManager, e, i);
        return Ye({ format: "bytes" }, a, n);
      });
    }
    function EE(t, e = t.defaultBlock, r = !1, n) {
      return Kt(this, void 0, void 0, function* () {
        let i;
        if (el(e)) {
          const a = Ye({ format: "bytes32" }, e, pt);
          i = yield v7(t.requestManager, a, r);
        } else {
          const a = un(e) ? e : Ye({ format: "uint" }, e, pt);
          i = yield jS(t.requestManager, a, r);
        }
        return Ye(zp, i, n);
      });
    }
    function Lj(t, e = t.defaultBlock, r) {
      return Kt(this, void 0, void 0, function* () {
        let n;
        if (el(e)) {
          const i = Ye({ format: "bytes32" }, e, pt);
          n = yield o7(t.requestManager, i);
        } else {
          const i = un(e) ? e : Ye({ format: "uint" }, e, pt);
          n = yield l7(t.requestManager, i);
        }
        return Ye({ format: "uint" }, n, r);
      });
    }
    function Mj(t, e = t.defaultBlock, r) {
      return Kt(this, void 0, void 0, function* () {
        let n;
        if (el(e)) {
          const i = Ye({ format: "bytes32" }, e, pt);
          n = yield c7(t.requestManager, i);
        } else {
          const i = un(e) ? e : Ye({ format: "uint" }, e, pt);
          n = yield u7(t.requestManager, i);
        }
        return Ye({ format: "uint" }, n, r);
      });
    }
    function Rj(t, e = t.defaultBlock, r, n) {
      return Kt(this, void 0, void 0, function* () {
        const i = Ye({ format: "uint" }, r, pt);
        let a;
        if (el(e)) {
          const l = Ye({ format: "bytes32" }, e, pt);
          a = yield k7(t.requestManager, l, i);
        } else {
          const l = un(e) ? e : Ye({ format: "uint" }, e, pt);
          a = yield _7(t.requestManager, l, i);
        }
        return Ye(zp, a, n);
      });
    }
    function Nj(t, e, r) {
      return Kt(this, void 0, void 0, function* () {
        const n = Ye({ format: "bytes32" }, e, nt),
          i = yield y7(t.requestManager, n);
        return Fe(i) ? i : Kn(i, r, { fillInputAndData: !0 });
      });
    }
    function Bj(t, e) {
      return Kt(this, void 0, void 0, function* () {
        return (yield I7(t.requestManager)).map((r) =>
          Kn(r, e, { fillInputAndData: !0 })
        );
      });
    }
    function Fj(t, e = t.defaultBlock, r, n) {
      return Kt(this, void 0, void 0, function* () {
        const i = Ye({ format: "uint" }, r, pt);
        let a;
        if (el(e)) {
          const l = Ye({ format: "bytes32" }, e, pt);
          a = yield b7(t.requestManager, l, i);
        } else {
          const l = un(e) ? e : Ye({ format: "uint" }, e, pt);
          a = yield x7(t.requestManager, l, i);
        }
        return Fe(a) ? a : Kn(a, n, { fillInputAndData: !0 });
      });
    }
    function IE(t, e, r) {
      return Kt(this, void 0, void 0, function* () {
        const n = Ye({ format: "bytes32" }, e, nt),
          i = yield w7(t.requestManager, n);
        return Fe(i) ? i : Ye(Pc, i, r);
      });
    }
    function TE(t, e, r = t.defaultBlock, n) {
      return Kt(this, void 0, void 0, function* () {
        const i = un(r) ? r : Ye({ format: "uint" }, r, pt),
          a = yield a7(t.requestManager, e, i);
        return Ye({ format: "uint" }, a, n);
      });
    }
    function yb(t, e, r, n = { checkRevertBeforeSending: !0 }) {
      const i = new US((a, l) => {
        setImmediate(() => {
          Kt(this, void 0, void 0, function* () {
            let u = Kn(
              Object.assign(Object.assign({}, e), {
                from: Ky("from", t, e),
                to: Ky("to", t, e),
              }),
              pt
            );
            !(n != null && n.ignoreGasPricing) &&
              Fe(u.gasPrice) &&
              (Fe(e.maxPriorityFeePerGas) || Fe(e.maxFeePerGas)) &&
              (u = Object.assign(Object.assign({}, u), yield X2(u, t, pt)));
            try {
              if (n.checkRevertBeforeSending !== !1) {
                const M = yield mb(t, u, n.contractAbi);
                if (M !== void 0) {
                  const D = yield Nc(t, u, void 0, void 0, n.contractAbi, M);
                  i.listenerCount("error") > 0 && i.emit("error", D), l(D);
                  return;
                }
              }
              i.listenerCount("sending") > 0 && i.emit("sending", u);
              let p, m;
              if ((t.wallet && !Fe(u.from) && (m = t.wallet.get(u.from)), m)) {
                const M = yield m.signTransaction(u);
                p = yield Qy(
                  t,
                  () =>
                    Kt(this, void 0, void 0, function* () {
                      return XS(t.requestManager, M.rawTransaction);
                    }),
                  M.transactionHash
                );
              } else
                p = yield Qy(t, () =>
                  Kt(this, void 0, void 0, function* () {
                    return p7(t.requestManager, u);
                  })
                );
              const v = Ye({ format: "bytes32" }, p, r);
              i.listenerCount("sent") > 0 && i.emit("sent", u),
                i.listenerCount("transactionHash") > 0 &&
                  i.emit("transactionHash", v);
              const w = yield V2(t, p, r),
                S = Ye(Pc, w, r);
              if (
                (i.listenerCount("receipt") > 0 && i.emit("receipt", S),
                n == null ? void 0 : n.transactionResolver)
              )
                a(n == null ? void 0 : n.transactionResolver(S));
              else if (w.status === BigInt(0)) {
                const M = yield Nc(
                  t,
                  u,
                  S,
                  void 0,
                  n == null ? void 0 : n.contractAbi
                );
                i.listenerCount("error") > 0 && i.emit("error", M), l(M);
              } else a(S);
              i.listenerCount("confirmation") > 0 && K2(t, i, S, p, r);
            } catch (p) {
              let m = p;
              m instanceof Ys &&
                t.handleRevert &&
                (m = yield Nc(
                  t,
                  u,
                  void 0,
                  void 0,
                  n == null ? void 0 : n.contractAbi
                )),
                (m instanceof ic ||
                  m instanceof Ys ||
                  m instanceof S0 ||
                  m instanceof E0 ||
                  m instanceof Vu) &&
                  i.listenerCount("error") > 0 &&
                  i.emit("error", m),
                l(m);
            }
          });
        });
      });
      return i;
    }
    function Dj(t, e, r, n = { checkRevertBeforeSending: !0 }) {
      const i = new US((a, l) => {
        setImmediate(() => {
          Kt(this, void 0, void 0, function* () {
            const u = Ye({ format: "bytes" }, e, pt),
              p = Np.fromSerializedData(Js(Cr(u))),
              m = Object.assign(Object.assign({}, p.toJSON()), {
                from: p.getSenderAddress().toString(),
              });
            try {
              if (n.checkRevertBeforeSending !== !1) {
                const D = yield mb(t, m, n.contractAbi);
                if (D !== void 0) {
                  const z = yield Nc(t, m, void 0, void 0, n.contractAbi, D);
                  i.listenerCount("error") > 0 && i.emit("error", z), l(z);
                  return;
                }
              }
              i.listenerCount("sending") > 0 && i.emit("sending", u);
              const v = yield Qy(t, () =>
                Kt(this, void 0, void 0, function* () {
                  return XS(t.requestManager, u);
                })
              );
              i.listenerCount("sent") > 0 && i.emit("sent", u);
              const w = Ye({ format: "bytes32" }, v, r);
              i.listenerCount("transactionHash") > 0 &&
                i.emit("transactionHash", w);
              const S = yield V2(t, v, r),
                M = Ye(Pc, S, r);
              if (
                (i.listenerCount("receipt") > 0 && i.emit("receipt", M),
                n == null ? void 0 : n.transactionResolver)
              )
                a(n == null ? void 0 : n.transactionResolver(M));
              else if (S.status === BigInt(0)) {
                const D = yield Nc(
                  t,
                  m,
                  M,
                  void 0,
                  n == null ? void 0 : n.contractAbi
                );
                i.listenerCount("error") > 0 && i.emit("error", D), l(D);
              } else a(M);
              i.listenerCount("confirmation") > 0 && K2(t, i, M, v, r);
            } catch (v) {
              let w = v;
              w instanceof Ys &&
                t.handleRevert &&
                (w = yield Nc(
                  t,
                  m,
                  void 0,
                  void 0,
                  n == null ? void 0 : n.contractAbi
                )),
                (w instanceof ic ||
                  w instanceof Ys ||
                  w instanceof S0 ||
                  w instanceof E0 ||
                  w instanceof Vu) &&
                  i.listenerCount("error") > 0 &&
                  i.emit("error", w),
                l(w);
            }
          });
        });
      });
      return i;
    }
    function zj(t, e, r, n) {
      var i;
      return Kt(this, void 0, void 0, function* () {
        const a = Ye({ format: "bytes" }, e, nt);
        if (!((i = t.wallet) === null || i === void 0) && i.get(r)) {
          const u = t.wallet.get(r).sign(a);
          return Ye(fX, u, n);
        }
        if (typeof r == "number")
          throw new x8(
            e,
            'RPC method "eth_sign" does not support index signatures'
          );
        const l = yield d7(t.requestManager, r, a);
        return Ye({ format: "bytes" }, l, n);
      });
    }
    function Hj(t, e, r) {
      return Kt(this, void 0, void 0, function* () {
        const n = yield f7(t.requestManager, Kn(e, pt));
        return D0(n)
          ? vX(n, r, { fillInputAndData: !0 })
          : {
              raw: Ye({ format: "bytes" }, n.raw, r),
              tx: Kn(n.tx, r, { fillInputAndData: !0 }),
            };
      });
    }
    function bb(t, e, r = t.defaultBlock, n) {
      return Kt(this, void 0, void 0, function* () {
        const i = un(r) ? r : Ye({ format: "uint" }, r, pt),
          a = yield g7(t.requestManager, Kn(e, pt), i);
        return Ye({ format: "bytes" }, a, n);
      });
    }
    function xb(t, e, r = t.defaultBlock, n) {
      return Kt(this, void 0, void 0, function* () {
        const i = Kn(e, pt),
          a = un(r) ? r : Ye({ format: "uint" }, r, pt),
          l = yield m7(t.requestManager, i, a);
        return Ye({ format: "uint" }, l, n);
      });
    }
    function PE(t, e, r) {
      return Kt(this, void 0, void 0, function* () {
        let { toBlock: n, fromBlock: i } = e;
        Fe(n) ||
          ((typeof n == "number" || typeof n == "bigint") && (n = oi(n))),
          Fe(i) ||
            ((typeof i == "number" || typeof i == "bigint") && (i = oi(i)));
        const a = Object.assign(Object.assign({}, e), {
          fromBlock: i,
          toBlock: n,
        });
        return (yield A7(t.requestManager, a)).map((l) =>
          typeof l == "string" ? l : Ye(Hp, l, r)
        );
      });
    }
    function OE(t, e) {
      return Kt(this, void 0, void 0, function* () {
        const r = yield P7(t.requestManager);
        return Ye({ format: "uint" }, r, e);
      });
    }
    function Uj(t, e, r, n = t.defaultBlock, i) {
      return Kt(this, void 0, void 0, function* () {
        const a = r.map((p) => Ye({ format: "bytes" }, p, pt)),
          l = un(n) ? n : Ye({ format: "uint" }, n, pt),
          u = yield O7(t.requestManager, e, a, l);
        return Ye(mX, u, i);
      });
    }
    function Wj(t, e, r = t.defaultBlock, n, i) {
      return Kt(this, void 0, void 0, function* () {
        const a = Ye({ format: "uint" }, e, pt),
          l = un(r) ? r : Ye({ format: "uint" }, r, pt),
          u = Ye({ type: "array", items: { format: "uint" } }, n, Up),
          p = yield E7(t.requestManager, a, l, u);
        return Ye(pX, p, i);
      });
    }
    function LE(t, e, r = t.defaultBlock, n) {
      return Kt(this, void 0, void 0, function* () {
        const i = un(r) ? r : Ye({ format: "uint" }, r, pt),
          a = yield M7(t.requestManager, Kn(e, pt), i);
        return Ye(lX, a, n);
      });
    }
    function Xj(t, e, r, n, i) {
      return Kt(this, void 0, void 0, function* () {
        const a = yield R7(t.requestManager, e, r, n);
        return Ye({ format: "bytes" }, a, i);
      });
    }
    let ME = class extends kh {
      _buildSubscriptionParams() {
        return ["logs", this.args];
      }
      formatSubscriptionResult(t) {
        return Ye(Hp, t, super.returnFormat);
      }
    };
    class RE extends kh {
      _buildSubscriptionParams() {
        return ["newPendingTransactions"];
      }
      formatSubscriptionResult(e) {
        return Ye({ format: "string" }, e, super.returnFormat);
      }
    }
    class ig extends kh {
      _buildSubscriptionParams() {
        return ["newHeads"];
      }
      formatSubscriptionResult(e) {
        return Ye(hX, e, super.returnFormat);
      }
    }
    class NE extends kh {
      _buildSubscriptionParams() {
        return ["syncing"];
      }
      _processSubscriptionResult(e) {
        if (typeof e == "boolean") this.emit("changed", e);
        else {
          const r = Object.fromEntries(
            Object.entries(e.status).map(([n, i]) => [
              n.charAt(0).toLowerCase() + n.substring(1),
              i,
            ])
          );
          this.emit("changed", e.syncing),
            this.emit("data", Ye(dX, r, super.returnFormat));
        }
      }
    }
    var Nt =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    const wb = {
      logs: ME,
      newPendingTransactions: RE,
      newHeads: ig,
      syncing: NE,
      pendingTransactions: RE,
      newBlockHeaders: ig,
    };
    class sg extends ws {
      constructor(e) {
        if (typeof e == "string" || Sp(e)) {
          super({ provider: e, registeredSubscriptions: wb });
          return;
        }
        if (e.registeredSubscriptions) {
          super(e);
          return;
        }
        super(
          Object.assign(Object.assign({}, e), { registeredSubscriptions: wb })
        );
      }
      getProtocolVersion() {
        return Nt(this, void 0, void 0, function* () {
          return ZU(this.requestManager);
        });
      }
      isSyncing() {
        return Nt(this, void 0, void 0, function* () {
          return WS(this.requestManager);
        });
      }
      getCoinbase() {
        return Nt(this, void 0, void 0, function* () {
          return QU(this.requestManager);
        });
      }
      isMining() {
        return Nt(this, void 0, void 0, function* () {
          return JU(this.requestManager);
        });
      }
      getHashrate(e = nt) {
        return Nt(this, void 0, void 0, function* () {
          return this.getHashRate(e);
        });
      }
      getHashRate(e = nt) {
        return Nt(this, void 0, void 0, function* () {
          return Ij(this, e);
        });
      }
      getGasPrice(e = nt) {
        return Nt(this, void 0, void 0, function* () {
          return SE(this, e);
        });
      }
      getAccounts() {
        var e;
        return Nt(this, void 0, void 0, function* () {
          return (
            (e = yield r7(this.requestManager)) !== null && e !== void 0
              ? e
              : []
          ).map((r) => ea(r));
        });
      }
      getBlockNumber(e = nt) {
        return Nt(this, void 0, void 0, function* () {
          return vb(this, e);
        });
      }
      getBalance(e, r = this.defaultBlock, n = nt) {
        return Nt(this, void 0, void 0, function* () {
          return Tj(this, e, r, n);
        });
      }
      getStorageAt(e, r, n = this.defaultBlock, i = nt) {
        return Nt(this, void 0, void 0, function* () {
          return Pj(this, e, r, n, i);
        });
      }
      getCode(e, r = this.defaultBlock, n = nt) {
        return Nt(this, void 0, void 0, function* () {
          return Oj(this, e, r, n);
        });
      }
      getBlock(e = this.defaultBlock, r = !1, n = nt) {
        return Nt(this, void 0, void 0, function* () {
          return EE(this, e, r, n);
        });
      }
      getBlockTransactionCount(e = this.defaultBlock, r = nt) {
        return Nt(this, void 0, void 0, function* () {
          return Lj(this, e, r);
        });
      }
      getBlockUncleCount(e = this.defaultBlock, r = nt) {
        return Nt(this, void 0, void 0, function* () {
          return Mj(this, e, r);
        });
      }
      getUncle(e = this.defaultBlock, r, n = nt) {
        return Nt(this, void 0, void 0, function* () {
          return Rj(this, e, r, n);
        });
      }
      getTransaction(e, r = nt) {
        return Nt(this, void 0, void 0, function* () {
          const n = yield Nj(this, e, r);
          if (!n) throw new cC();
          return n;
        });
      }
      getPendingTransactions(e = nt) {
        return Nt(this, void 0, void 0, function* () {
          return Bj(this, e);
        });
      }
      getTransactionFromBlock(e = this.defaultBlock, r, n = nt) {
        return Nt(this, void 0, void 0, function* () {
          return Fj(this, e, r, n);
        });
      }
      getTransactionReceipt(e, r = nt) {
        return Nt(this, void 0, void 0, function* () {
          const n = yield IE(this, e, r);
          if (!n) throw new cC();
          return n;
        });
      }
      getTransactionCount(e, r = this.defaultBlock, n = nt) {
        return Nt(this, void 0, void 0, function* () {
          return TE(this, e, r, n);
        });
      }
      sendTransaction(e, r = nt, n) {
        return yb(this, e, r, n);
      }
      sendSignedTransaction(e, r = nt, n) {
        return Dj(this, e, r, n);
      }
      sign(e, r, n = nt) {
        return Nt(this, void 0, void 0, function* () {
          return zj(this, e, r, n);
        });
      }
      signTransaction(e, r = nt) {
        return Nt(this, void 0, void 0, function* () {
          return Hj(this, e, r);
        });
      }
      call(e, r = this.defaultBlock, n = nt) {
        return Nt(this, void 0, void 0, function* () {
          return bb(this, e, r, n);
        });
      }
      estimateGas(e, r = this.defaultBlock, n = nt) {
        return Nt(this, void 0, void 0, function* () {
          return xb(this, e, r, n);
        });
      }
      getPastLogs(e, r = nt) {
        return Nt(this, void 0, void 0, function* () {
          return PE(this, e, r);
        });
      }
      getWork() {
        return Nt(this, void 0, void 0, function* () {
          return C7(this.requestManager);
        });
      }
      submitWork(e, r, n) {
        return Nt(this, void 0, void 0, function* () {
          return S7(this.requestManager, e, r, n);
        });
      }
      requestAccounts() {
        return Nt(this, void 0, void 0, function* () {
          return T7(this.requestManager);
        });
      }
      getChainId(e = nt) {
        return Nt(this, void 0, void 0, function* () {
          return OE(this, e);
        });
      }
      getNodeInfo() {
        return Nt(this, void 0, void 0, function* () {
          return L7(this.requestManager);
        });
      }
      getProof(e, r, n = this.defaultBlock, i = nt) {
        return Nt(this, void 0, void 0, function* () {
          return Uj(this, e, r, n, i);
        });
      }
      getFeeHistory(e, r = this.defaultBlock, n, i = nt) {
        return Nt(this, void 0, void 0, function* () {
          return Wj(this, e, r, n, i);
        });
      }
      createAccessList(e, r = this.defaultBlock, n = nt) {
        return Nt(this, void 0, void 0, function* () {
          return LE(this, e, r, n);
        });
      }
      signTypedData(e, r, n = !1, i = nt) {
        return Nt(this, void 0, void 0, function* () {
          return Xj(this, e, r, n, i);
        });
      }
      subscribe(e, r, n = nt) {
        var i;
        return Nt(this, void 0, void 0, function* () {
          const a = yield (i = this.subscriptionManager) === null ||
          i === void 0
            ? void 0
            : i.subscribe(e, r, n);
          return (
            a instanceof ME &&
              e === "logs" &&
              typeof r == "object" &&
              !Ct(r.fromBlock) &&
              Number.isFinite(Number(r.fromBlock)) &&
              setImmediate(() => {
                this.getPastLogs(r)
                  .then((l) => {
                    for (const u of l) a._processSubscriptionResult(u);
                  })
                  .catch((l) => {
                    a._processSubscriptionError(l);
                  });
              }),
            a
          );
        });
      }
      static shouldClearSubscription({ sub: e }) {
        return !(e instanceof NE);
      }
      clearSubscriptions(e = !1) {
        var r;
        return (r = this.subscriptionManager) === null || r === void 0
          ? void 0
          : r.unsubscribe(e ? sg.shouldClearSubscription : void 0);
      }
    }
    const jj = (t) => {
        if (!Fe(t.common)) {
          if (Fe(t.common.customChain)) throw new A8();
          if (Fe(t.common.customChain.chainId)) throw new C8();
          if (!Fe(t.chainId) && t.chainId !== t.common.customChain.chainId)
            throw new S8({
              txChainId: t.chainId,
              customChainId: t.common.customChain.chainId,
            });
        }
      },
      Gj = (t) => {
        if (!Fe(t.common) && !Fe(t.chain) && !Fe(t.hardfork)) throw new T8();
        if (
          (!Fe(t.chain) && Fe(t.hardfork)) ||
          (!Fe(t.hardfork) && Fe(t.chain))
        )
          throw new P8({ chain: t.chain, hardfork: t.hardfork });
      },
      Yj = (t) => {
        if (
          !Fe(t.common) &&
          !Fe(t.common.baseChain) &&
          !Fe(t.chain) &&
          t.chain !== t.common.baseChain
        )
          throw new E8({ txChain: t.chain, baseChain: t.common.baseChain });
      },
      Vj = (t) => {
        if (
          !Fe(t.common) &&
          !Fe(t.common.hardfork) &&
          !Fe(t.hardfork) &&
          t.hardfork !== t.common.hardfork
        )
          throw new I8({
            txHardfork: t.hardfork,
            commonHardfork: t.common.hardfork,
          });
      },
      BE = (t) => {
        if (Fe(t.gas) || !Jo(t.gas) || Fe(t.gasPrice) || !Jo(t.gasPrice))
          throw new N8({ gas: t.gas, gasPrice: t.gasPrice });
        if (!Fe(t.maxFeePerGas) || !Fe(t.maxPriorityFeePerGas))
          throw new uC({
            maxFeePerGas: t.maxFeePerGas,
            maxPriorityFeePerGas: t.maxPriorityFeePerGas,
          });
      },
      FE = (t) => {
        if (!Fe(t.gasPrice) && t.type === "0x2") throw new F8(t.gasPrice);
        if (t.type === "0x0" || t.type === "0x1")
          throw new uC({
            maxFeePerGas: t.maxFeePerGas,
            maxPriorityFeePerGas: t.maxPriorityFeePerGas,
          });
        if (
          Fe(t.maxFeePerGas) ||
          !Jo(t.maxFeePerGas) ||
          Fe(t.maxPriorityFeePerGas) ||
          !Jo(t.maxPriorityFeePerGas)
        )
          throw new B8({
            maxPriorityFeePerGas: t.maxPriorityFeePerGas,
            maxFeePerGas: t.maxFeePerGas,
          });
      },
      qj = (t) => {
        const e = !Fe(t.gas) || !Fe(t.gasLimit),
          r = e && !Fe(t.gasPrice),
          n = e && !Fe(t.maxPriorityFeePerGas) && !Fe(t.maxFeePerGas);
        if (!r && !n)
          throw new L8({
            gas: t.gas,
            gasPrice: t.gasPrice,
            maxPriorityFeePerGas: t.maxPriorityFeePerGas,
            maxFeePerGas: t.maxFeePerGas,
          });
        if (r && n)
          throw new R8({
            gas: t.gas,
            gasPrice: t.gasPrice,
            maxPriorityFeePerGas: t.maxPriorityFeePerGas,
            maxFeePerGas: t.maxFeePerGas,
          });
        (r ? BE : FE)(t), (!Fe(t.type) && t.type > "0x1" ? FE : BE)(t);
      },
      Kj = (t, e) => {
        if (!Fe(e)) {
          e(t);
          return;
        }
        if (typeof t != "object" || Fe(t)) throw new D8(t);
        jj(t), Gj(t), Yj(t), Vj(t);
        const r = Kn(t, pt);
        if (
          (qj(r),
          Fe(r.nonce) ||
            Fe(r.chainId) ||
            r.nonce.startsWith("-") ||
            r.chainId.startsWith("-"))
        )
          throw new z8({ nonce: t.nonce, chainId: t.chainId });
      };
    var $j =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    const Zj = (t) => {
        var e, r;
        return {
          nonce: t.nonce,
          gasPrice: t.gasPrice,
          gasLimit: (e = t.gasLimit) !== null && e !== void 0 ? e : t.gas,
          to: t.to,
          value: t.value,
          data: (r = t.data) !== null && r !== void 0 ? r : t.input,
          type: t.type,
          chainId: t.chainId,
          accessList: t.accessList,
          maxPriorityFeePerGas: t.maxPriorityFeePerGas,
          maxFeePerGas: t.maxFeePerGas,
        };
      },
      Qj = (t, e) => {
        var r, n, i, a, l, u, p, m, v, w, S, M, D, z, V, j, B, ae;
        const re = (!Fe(t.chain) && !Fe(t.hardfork)) || !Fe(t.common);
        let K;
        if (!re)
          e.defaultCommon
            ? ((K = e.defaultCommon),
              Fe(K.hardfork) &&
                (K.hardfork =
                  (r = t.hardfork) !== null && r !== void 0
                    ? r
                    : e.defaultHardfork),
              Fe(K.baseChain) && (K.baseChain = e.defaultChain))
            : (K = dn.custom(
                {
                  name: "custom-network",
                  chainId: li(t.chainId),
                  networkId: Fe(t.networkId) ? void 0 : li(t.networkId),
                  defaultHardfork:
                    (n = t.hardfork) !== null && n !== void 0
                      ? n
                      : e.defaultHardfork,
                },
                { baseChain: e.defaultChain }
              ));
        else {
          const fe =
              (u =
                (l =
                  (a =
                    (i = t == null ? void 0 : t.common) === null || i === void 0
                      ? void 0
                      : i.customChain) === null || a === void 0
                    ? void 0
                    : a.name) !== null && l !== void 0
                  ? l
                  : t.chain) !== null && u !== void 0
                ? u
                : "custom-network",
            ye = li(
              (v =
                (m =
                  (p = t == null ? void 0 : t.common) === null || p === void 0
                    ? void 0
                    : p.customChain) === null || m === void 0
                  ? void 0
                  : m.chainId) !== null && v !== void 0
                ? v
                : t == null
                ? void 0
                : t.chainId
            ),
            pe = li(
              (M =
                (S =
                  (w = t == null ? void 0 : t.common) === null || w === void 0
                    ? void 0
                    : w.customChain) === null || S === void 0
                  ? void 0
                  : S.networkId) !== null && M !== void 0
                ? M
                : t == null
                ? void 0
                : t.networkId
            ),
            _e =
              (V =
                (z =
                  (D = t == null ? void 0 : t.common) === null || D === void 0
                    ? void 0
                    : D.hardfork) !== null && z !== void 0
                  ? z
                  : t == null
                  ? void 0
                  : t.hardfork) !== null && V !== void 0
                ? V
                : e.defaultHardfork,
            be =
              (ae =
                (B =
                  (j = t.common) === null || j === void 0
                    ? void 0
                    : j.baseChain) !== null && B !== void 0
                  ? B
                  : t.chain) !== null && ae !== void 0
                ? ae
                : e.defaultChain;
          ye &&
            pe &&
            fe &&
            (K = dn.custom(
              { name: fe, chainId: ye, networkId: pe, defaultHardfork: _e },
              { baseChain: be }
            ));
        }
        return { common: K };
      },
      Jj = (t, e, r, n = !1, i = !0) =>
        $j(void 0, void 0, void 0, function* () {
          const a = yield _X({
              transaction: t,
              web3Context: e,
              privateKey: r,
              fillGasPrice: n,
              fillGasLimit: i,
            }),
            l = Kn(a, pt);
          return Kj(l), Np.fromTxData(Zj(l), Qj(l, e));
        }),
      DE = "ALLEVENTS",
      zE = { name: DE, signature: "", type: "event", inputs: [] },
      HE = ({ address: t }, e, r) => {
        var n, i;
        const a = r == null ? void 0 : r.topics,
          l =
            (n = r == null ? void 0 : r.filter) !== null && n !== void 0
              ? n
              : {},
          u = {};
        if (
          (Ct(r == null ? void 0 : r.fromBlock) ||
            (u.fromBlock = Ye(
              zp.properties.number,
              r == null ? void 0 : r.fromBlock,
              { number: bi.HEX, bytes: Zs.HEX }
            )),
          Ct(r == null ? void 0 : r.toBlock) ||
            (u.toBlock = Ye(
              zp.properties.number,
              r == null ? void 0 : r.toBlock,
              { number: bi.HEX, bytes: Zs.HEX }
            )),
          a && Array.isArray(a))
        )
          u.topics = [...a];
        else if (
          ((u.topics = []),
          e &&
            !e.anonymous &&
            e.name !== "ALLEVENTS" &&
            u.topics.push(
              (i = e.signature) !== null && i !== void 0 ? i : pb(hl(e))
            ),
          e.name !== "ALLEVENTS" && e.inputs)
        )
          for (const p of e.inputs) {
            if (!p.indexed) continue;
            const m = l[p.name];
            if (!m) {
              u.topics.push(null);
              continue;
            }
            Array.isArray(m)
              ? u.topics.push(m.map((v) => gb(p.type, v)))
              : p.type === "string"
              ? u.topics.push(vh(m))
              : u.topics.push(gb(p.type, m));
          }
        return (
          u.topics.length || delete u.topics,
          t && (u.address = t.toLowerCase()),
          u
        );
      },
      UE = (t, e, r, n = nt) => {
        var i, a, l, u, p;
        let m = Object.assign({}, t);
        const v = Ye(Hp, e, n);
        if (m.name === "ALLEVENTS") {
          const S = r.find((M) => M.signature === e.topics[0]);
          S ? (m = S) : (m = { anonymous: !0 });
        }
        if (
          ((m.inputs =
            (a = (i = m.inputs) !== null && i !== void 0 ? i : t.inputs) !==
              null && a !== void 0
              ? a
              : []),
          !m.anonymous)
        ) {
          let S = 0;
          ((l = m.inputs) !== null && l !== void 0 ? l : []).forEach((M) => {
            M.indexed && (S += 1);
          }),
            S > 0 &&
              e != null &&
              e.topics &&
              (e == null ? void 0 : e.topics.length) !== S + 1 &&
              (m = Object.assign(Object.assign({}, m), {
                anonymous: !0,
                inputs: [],
              }));
        }
        const w = m.anonymous
          ? e.topics
          : ((u = e.topics) !== null && u !== void 0 ? u : []).slice(1);
        return Object.assign(Object.assign({}, v), {
          returnValues: AE(
            [...((p = m.inputs) !== null && p !== void 0 ? p : [])],
            e.data,
            w
          ),
          event: m.name,
          signature:
            m.anonymous || !e.topics || e.topics.length === 0 || !e.topics[0]
              ? void 0
              : e.topics[0],
          raw: { data: e.data, topics: e.topics },
        });
      },
      Bc = (t, e, r) => {
        const n = Array.isArray(t.inputs) ? t.inputs.length : 0;
        if (n !== e.length)
          throw new si(
            `The number of arguments is not matching the methods required number. You need to pass ${n} arguments.`
          );
        const i = eg(Array.isArray(t.inputs) ? t.inputs : [], e).replace(
          "0x",
          ""
        );
        if (vj(t)) {
          if (!r)
            throw new si(
              "The contract has no contract data option set. This is necessary to append the constructor parameters."
            );
          return r.startsWith("0x") ? `${r}${i}` : `0x${r}${i}`;
        }
        return `${rg(t)}${i}`;
      },
      eG = (t, e) => {
        if (t.type === "constructor") return e;
        if (!e) return null;
        const r = e.length >= 2 ? e.slice(2) : e;
        if (!t.outputs) return null;
        const n = tg([...t.outputs], r);
        return n.__length__ === 1 ? n[0] : n;
      };
    class WE extends kh {
      constructor(e, r) {
        super(e, r),
          (this.address = e.address),
          (this.topics = e.topics),
          (this.abi = e.abi),
          (this.jsonInterface = e.jsonInterface);
      }
      _buildSubscriptionParams() {
        return ["logs", { address: this.address, topics: this.topics }];
      }
      formatSubscriptionResult(e) {
        return UE(this.abi, e, this.jsonInterface, super.returnFormat);
      }
    }
    const XE = ({ abi: t, params: e, options: r, contractOptions: n }) => {
        var i, a;
        if (
          !((a =
            (i = r == null ? void 0 : r.input) !== null && i !== void 0
              ? i
              : r == null
              ? void 0
              : r.data) !== null && a !== void 0
            ? a
            : n.input) &&
          !(r != null && r.to) &&
          !n.address
        )
          throw new si("Contract address not specified");
        if (!(r != null && r.from) && !n.from)
          throw new si('Contract "from" address not specified');
        let l = $a(
          {
            to: n.address,
            gas: n.gas,
            gasPrice: n.gasPrice,
            from: n.from,
            input: n.input,
            maxPriorityFeePerGas: n.maxPriorityFeePerGas,
            maxFeePerGas: n.maxFeePerGas,
          },
          r
        );
        return (
          (!l.input || t.type === "constructor") &&
            (l = Object.assign(Object.assign({}, l), {
              input: Bc(t, e, l.input),
            })),
          l
        );
      },
      tG = ({ abi: t, params: e, options: r, contractOptions: n }) => {
        if (!(r != null && r.to) && !n.address)
          throw new si("Contract address not specified");
        let i = $a(
          {
            to: n.address,
            gas: n.gas,
            gasPrice: n.gasPrice,
            from: n.from,
            input: n.input,
            maxPriorityFeePerGas: n.maxPriorityFeePerGas,
            maxFeePerGas: n.maxFeePerGas,
          },
          r
        );
        return (
          (i = Object.assign(Object.assign({}, i), {
            input: Bc(t, e, i.input ? Yi(i.input) : void 0),
          })),
          i
        );
      },
      rG = ({ abi: t, params: e, options: r, contractOptions: n }) => {
        let i = $a(
          {
            to: n.address,
            gas: n.gas,
            gasPrice: n.gasPrice,
            from: n.from,
            input: n.input,
          },
          r
        );
        return (
          (i = Object.assign(Object.assign({}, i), {
            input: Bc(t, e, i.input ? Yi(i.input) : void 0),
          })),
          i
        );
      },
      kb = (t) =>
        typeof t == "object" &&
        !Ct(t) &&
        [
          "input",
          "data",
          "from",
          "gas",
          "gasPrice",
          "gasLimit",
          "address",
          "jsonInterface",
          "syncWithContext",
        ].some((e) => e in t),
      jE = (t) => typeof t == "object" && !Ct(t) && !kb(t),
      nG = ({ abi: t, params: e, options: r, contractOptions: n }) => {
        if (!(r != null && r.to) && !n.address)
          throw new si("Contract address not specified");
        if (!(r != null && r.from) && !n.from)
          throw new si('Contract "from" address not specified');
        let i = $a(
          {
            to: n.address,
            gas: n.gas,
            gasPrice: n.gasPrice,
            from: n.from,
            input: n.input,
            maxPriorityFeePerGas: n.maxPriorityFeePerGas,
            maxFeePerGas: n.maxFeePerGas,
          },
          r
        );
        return (
          (!i.input || t.type === "constructor") &&
            (i = Object.assign(Object.assign({}, i), {
              input: Bc(t, e, i.input),
            })),
          i
        );
      };
    var io =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    const iG = { logs: WE, newHeads: ig, newBlockHeaders: ig };
    class dl extends ws {
      constructor(e, r, n, i, a) {
        var l, u, p;
        const m = kb(r) ? r : kb(n) ? n : void 0;
        if (!Fe(m) && !Fe(m.data) && !Fe(m.input))
          throw new p8({ data: m.data, input: m.input });
        let v;
        jE(r) ? (v = r) : jE(n) ? (v = n) : (v = i);
        let w;
        typeof r == "object" && "provider" in r
          ? (w = r.provider)
          : typeof n == "object" && "provider" in n
          ? (w = n.provider)
          : typeof i == "object" && "provider" in i
          ? (w = i.provider)
          : (w = dl.givenProvider),
          super(
            Object.assign(Object.assign({}, v), {
              provider: w,
              registeredSubscriptions: iG,
            })
          ),
          (this.syncWithContext = !1),
          (this._functions = {}),
          (this._overloadedMethodAbis = new Map());
        const S = tl(i) ? i : tl(n) ? n : a ?? nt,
          M = typeof r == "string" ? r : void 0;
        this._parseAndSetJsonInterface(e, S),
          Fe(M) || this._parseAndSetAddress(M, S),
          (this.options = {
            address: M,
            jsonInterface: this._jsonInterface,
            gas:
              (l = m == null ? void 0 : m.gas) !== null && l !== void 0
                ? l
                : m == null
                ? void 0
                : m.gasLimit,
            gasPrice: m == null ? void 0 : m.gasPrice,
            from: m == null ? void 0 : m.from,
            input:
              (u = m == null ? void 0 : m.input) !== null && u !== void 0
                ? u
                : m == null
                ? void 0
                : m.data,
          }),
          (this.syncWithContext =
            (p = m == null ? void 0 : m.syncWithContext) !== null &&
            p !== void 0
              ? p
              : !1),
          v instanceof ws && this.subscribeToContextEvents(v),
          Object.defineProperty(this.options, "address", {
            set: (D) => this._parseAndSetAddress(D, S),
            get: () => this._address,
          }),
          Object.defineProperty(this.options, "jsonInterface", {
            set: (D) => this._parseAndSetJsonInterface(D, S),
            get: () => this._jsonInterface,
          });
      }
      get events() {
        return this._events;
      }
      get methods() {
        return this._methods;
      }
      clone() {
        let e;
        return (
          this.options.address
            ? (e = new dl(
                [...this._jsonInterface, ...this._errorsInterface],
                this.options.address,
                {
                  gas: this.options.gas,
                  gasPrice: this.options.gasPrice,
                  from: this.options.from,
                  input: this.options.input,
                  provider: this.currentProvider,
                  syncWithContext: this.syncWithContext,
                },
                this.getContextObject()
              ))
            : (e = new dl(
                [...this._jsonInterface, ...this._errorsInterface],
                {
                  gas: this.options.gas,
                  gasPrice: this.options.gasPrice,
                  from: this.options.from,
                  input: this.options.input,
                  provider: this.currentProvider,
                  syncWithContext: this.syncWithContext,
                },
                this.getContextObject()
              )),
          this.context && e.subscribeToContextEvents(this.context),
          e
        );
      }
      deploy(e) {
        var r, n, i;
        let a = this._jsonInterface.find((m) => m.type === "constructor");
        a || (a = { type: "constructor", inputs: [], stateMutability: "" });
        const l = Ye(
          { format: "bytes" },
          (n =
            (r = e == null ? void 0 : e.input) !== null && r !== void 0
              ? r
              : e == null
              ? void 0
              : e.data) !== null && n !== void 0
            ? n
            : this.options.input,
          nt
        );
        if (!l || l.trim() === "0x")
          throw new si("contract creation without any data provided.");
        const u =
            (i = e == null ? void 0 : e.arguments) !== null && i !== void 0
              ? i
              : [],
          p = Object.assign(Object.assign({}, this.options), { input: l });
        return {
          arguments: u,
          send: (m) => {
            const v = Object.assign({}, m);
            return this._contractMethodDeploySend(a, u, v, p);
          },
          estimateGas: (m, v = nt) =>
            io(this, void 0, void 0, function* () {
              const w = Object.assign({}, m);
              return this._contractMethodEstimateGas({
                abi: a,
                params: u,
                returnFormat: v,
                options: w,
                contractOptions: p,
              });
            }),
          encodeABI: () => Bc(a, u, Ye({ format: "bytes" }, l, nt)),
        };
      }
      getPastEvents(e, r, n) {
        var i;
        return io(this, void 0, void 0, function* () {
          const a = typeof e == "string" ? e : "allEvents",
            l = typeof e != "string" && !tl(e) ? e : tl(r) ? {} : r,
            u = tl(e) ? e : tl(r) ? r : n ?? nt,
            p =
              a === "allEvents" || a === DE
                ? zE
                : this._jsonInterface.find((V) => "name" in V && V.name === a);
          if (!p) throw new si(`Event ${a} not found.`);
          const {
              fromBlock: m,
              toBlock: v,
              topics: w,
              address: S,
            } = HE(this.options, p, l ?? {}),
            M = (yield PE(
              this,
              { fromBlock: m, toBlock: v, topics: w, address: S },
              u
            )).map((V) =>
              typeof V == "string" ? V : UE(p, V, this._jsonInterface, u)
            ),
            D =
              (i = l == null ? void 0 : l.filter) !== null && i !== void 0
                ? i
                : {},
            z = Object.keys(D);
          return z.length > 0
            ? M.filter((V) =>
                typeof V == "string"
                  ? !0
                  : z.every((j) => {
                      var B;
                      if (Array.isArray(D[j]))
                        return D[j].some(
                          (re) =>
                            String(V.returnValues[j]).toUpperCase() ===
                            String(re).toUpperCase()
                        );
                      const ae =
                        (B = p.inputs) === null || B === void 0
                          ? void 0
                          : B.filter((re) => re.name === j)[0];
                      return ae != null &&
                        ae.indexed &&
                        ae.type === "string" &&
                        vh(D[j]) === String(V.returnValues[j])
                        ? !0
                        : String(V.returnValues[j]).toUpperCase() ===
                            String(D[j]).toUpperCase();
                    })
              )
            : M;
        });
      }
      _parseAndSetAddress(e, r = nt) {
        this._address = e && ea(Ye({ format: "address" }, e, r));
      }
      _parseAndSetJsonInterface(e, r = nt) {
        var n, i, a, l, u;
        (this._functions = {}), (this._methods = {}), (this._events = {});
        let p = [];
        const m = e.filter((w) => w.type !== "error"),
          v = e.filter((w) => Qp(w));
        for (const w of m) {
          const S = Object.assign(Object.assign({}, w), { signature: "" });
          if (Jp(S)) {
            const M = hl(S),
              D = rg(M);
            (S.signature = D),
              (S.constant =
                (i =
                  (n = S.stateMutability === "view") !== null && n !== void 0
                    ? n
                    : S.stateMutability === "pure") !== null && i !== void 0
                  ? i
                  : S.constant),
              (S.payable =
                (a = S.stateMutability === "payable") !== null && a !== void 0
                  ? a
                  : S.payable),
              this._overloadedMethodAbis.set(S.name, [
                ...((l = this._overloadedMethodAbis.get(S.name)) !== null &&
                l !== void 0
                  ? l
                  : []),
                S,
              ]);
            const z =
                (u = this._overloadedMethodAbis.get(S.name)) !== null &&
                u !== void 0
                  ? u
                  : [],
              V = this._createContractMethod(z, v);
            (this._functions[M] = { signature: D, method: V }),
              (this._methods[S.name] = this._functions[M].method),
              (this._methods[M] = this._functions[M].method),
              (this._methods[D] = this._functions[M].method);
          } else if (ub(S)) {
            const M = hl(S),
              D = pb(M),
              z = this._createContractEvent(S, r);
            (S.signature = D),
              (!(M in this._events) || S.name === "bound") &&
                (this._events[M] = z),
              (this._events[S.name] = z),
              (this._events[D] = z);
          }
          p = [...p, S];
        }
        (this._events.allEvents = this._createContractEvent(zE, r)),
          (this._jsonInterface = [...p]),
          (this._errorsInterface = v);
      }
      _getAbiParams(e, r) {
        var n;
        try {
          return ch((n = e.inputs) !== null && n !== void 0 ? n : [], r);
        } catch (i) {
          throw new si(`Invalid parameters for method ${e.name}: ${i.message}`);
        }
      }
      _createContractMethod(e, r) {
        const n = e[e.length - 1];
        return (...i) => {
          var a, l;
          let u;
          const p =
            (a = this._overloadedMethodAbis.get(n.name)) !== null &&
            a !== void 0
              ? a
              : [];
          let m = p[0];
          const v = r,
            w = p.filter((M) => {
              var D;
              return (
                ((D = M.inputs) !== null && D !== void 0 ? D : []).length ===
                i.length
              );
            });
          if (p.length === 1 || w.length === 0)
            (u = this._getAbiParams(m, i)),
              ct.validate((l = n.inputs) !== null && l !== void 0 ? l : [], u);
          else {
            const M = [];
            for (const D of w)
              try {
                (u = this._getAbiParams(D, i)),
                  ct.validate(D.inputs, u),
                  (m = D);
                break;
              } catch (z) {
                M.push(z);
              }
            if (M.length === w.length) throw new uc(M);
          }
          const S = {
            arguments: u,
            call: (M, D) =>
              io(this, void 0, void 0, function* () {
                return this._contractMethodCall(m, u, v, M, D);
              }),
            send: (M) => this._contractMethodSend(m, u, v, M),
            estimateGas: (M, D = nt) =>
              io(this, void 0, void 0, function* () {
                return this._contractMethodEstimateGas({
                  abi: m,
                  params: u,
                  returnFormat: D,
                  options: M,
                });
              }),
            encodeABI: () => Bc(m, u),
            createAccessList: (M, D) =>
              io(this, void 0, void 0, function* () {
                return this._contractMethodCreateAccessList(m, u, v, M, D);
              }),
          };
          return m.stateMutability, S;
        };
      }
      _contractMethodCall(e, r, n, i, a) {
        var l;
        return io(this, void 0, void 0, function* () {
          const u = tG({
            abi: e,
            params: r,
            options: i,
            contractOptions: Object.assign(Object.assign({}, this.options), {
              from:
                (l = this.options.from) !== null && l !== void 0
                  ? l
                  : this.config.defaultAccount,
            }),
          });
          try {
            const p = yield bb(this, u, a, nt);
            return eG(e, p);
          } catch (p) {
            throw (p instanceof Ys && ng(n, p.innerError), p);
          }
        });
      }
      _contractMethodCreateAccessList(e, r, n, i, a) {
        var l;
        return io(this, void 0, void 0, function* () {
          const u = nG({
            abi: e,
            params: r,
            options: i,
            contractOptions: Object.assign(Object.assign({}, this.options), {
              from:
                (l = this.options.from) !== null && l !== void 0
                  ? l
                  : this.config.defaultAccount,
            }),
          });
          try {
            return LE(this, u, a, nt);
          } catch (p) {
            throw (p instanceof Ys && ng(n, p.innerError), p);
          }
        });
      }
      _contractMethodSend(e, r, n, i, a) {
        var l, u;
        let p = a ?? this.options;
        p = Object.assign(Object.assign({}, p), {
          input: void 0,
          from:
            (u =
              (l = p.from) !== null && l !== void 0
                ? l
                : this.defaultAccount) !== null && u !== void 0
              ? u
              : void 0,
        });
        const m = XE({ abi: e, params: r, options: i, contractOptions: p }),
          v = yb(this, m, nt, { checkRevertBeforeSending: !1 });
        return (
          v.on("error", (w) => {
            w instanceof Ys && ng(n, w.innerError);
          }),
          v
        );
      }
      _contractMethodDeploySend(e, r, n, i) {
        var a, l;
        let u = i ?? this.options;
        u = Object.assign(Object.assign({}, u), {
          from:
            (l =
              (a = u.from) !== null && a !== void 0
                ? a
                : this.defaultAccount) !== null && l !== void 0
              ? l
              : void 0,
        });
        const p = XE({ abi: e, params: r, options: n, contractOptions: u });
        return yb(this, p, nt, {
          transactionResolver: (m) => {
            if (m.status === BigInt(0))
              throw new si("code couldn't be stored", m);
            const v = this.clone();
            return (v.options.address = m.contractAddress), v;
          },
          checkRevertBeforeSending: !1,
        });
      }
      _contractMethodEstimateGas({
        abi: e,
        params: r,
        returnFormat: n,
        options: i,
        contractOptions: a,
      }) {
        return io(this, void 0, void 0, function* () {
          const l = rG({
            abi: e,
            params: r,
            options: i,
            contractOptions: a ?? this.options,
          });
          return xb(this, l, Qs.LATEST, n);
        });
      }
      _createContractEvent(e, r = nt) {
        return (...n) => {
          var i;
          const { topics: a, fromBlock: l } = HE(this.options, e, n[0]),
            u = new WE(
              {
                address: this.options.address,
                topics: a,
                abi: e,
                jsonInterface: this._jsonInterface,
              },
              { subscriptionManager: this.subscriptionManager, returnFormat: r }
            );
          return (
            Fe(l) ||
              this.getPastEvents(e.name, { fromBlock: l, topics: a }, r)
                .then((p) => {
                  p.forEach((m) => u.emit("data", m));
                })
                .catch((p) => {
                  u.emit("error", new zi("Failed to get past events.", p));
                }),
            (i = this.subscriptionManager) === null ||
              i === void 0 ||
              i.addSubscription(u).catch((p) => {
                u.emit("error", new zi("Failed to subscribe.", p));
              }),
            u
          );
        };
      }
      subscribeToContextEvents(e) {
        const r = this;
        (this.context = e),
          r.syncWithContext &&
            e.on(yc.CONFIG_CHANGE, (n) => {
              r.setConfig({ [n.name]: n.newValue });
            });
      }
    }
    const GE = {
        addr: "0x3b3b57de",
        name: "0x691f3431",
        abi: "0x2203ab56",
        pubkey: "0xc8690233",
        text: "0x59d1d43c",
        contenthash: "0xbc1c58d1",
      },
      _b = {
        setAddr: "addr",
        addr: "addr",
        setPubkey: "pubkey",
        pubkey: "pubkey",
        setContenthash: "contenthash",
        contenthash: "contenthash",
      },
      ag = {
        main: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
        goerli: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
      },
      sG = { "0x1": "main", "0x5": "goerli" },
      aG = [
        {
          anonymous: !1,
          inputs: [
            {
              indexed: !0,
              internalType: "bytes32",
              name: "node",
              type: "bytes32",
            },
            {
              indexed: !0,
              internalType: "bytes32",
              name: "label",
              type: "bytes32",
            },
            {
              indexed: !1,
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "NewOwner",
          type: "event",
        },
        {
          anonymous: !1,
          inputs: [
            {
              indexed: !0,
              internalType: "bytes32",
              name: "node",
              type: "bytes32",
            },
            {
              indexed: !1,
              internalType: "address",
              name: "resolver",
              type: "address",
            },
          ],
          name: "NewResolver",
          type: "event",
        },
        {
          anonymous: !1,
          inputs: [
            {
              indexed: !0,
              internalType: "bytes32",
              name: "node",
              type: "bytes32",
            },
            {
              indexed: !1,
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "Transfer",
          type: "event",
        },
        {
          inputs: [
            { internalType: "address", name: "owner", type: "address" },
            { internalType: "address", name: "operator", type: "address" },
          ],
          name: "isApprovedForAll",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "node", type: "bytes32" }],
          name: "owner",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "node", type: "bytes32" }],
          name: "recordExists",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "node", type: "bytes32" }],
          name: "resolver",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "node", type: "bytes32" }],
          name: "ttl",
          outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
          stateMutability: "view",
          type: "function",
        },
      ],
      oG = [
        {
          anonymous: !1,
          inputs: [
            {
              indexed: !0,
              internalType: "bytes32",
              name: "node",
              type: "bytes32",
            },
            {
              indexed: !1,
              internalType: "address",
              name: "a",
              type: "address",
            },
          ],
          name: "AddrChanged",
          type: "event",
        },
        {
          anonymous: !1,
          inputs: [
            {
              indexed: !0,
              internalType: "bytes32",
              name: "node",
              type: "bytes32",
            },
            {
              indexed: !1,
              internalType: "uint256",
              name: "coinType",
              type: "uint256",
            },
            {
              indexed: !1,
              internalType: "bytes",
              name: "newAddress",
              type: "bytes",
            },
          ],
          name: "AddressChanged",
          type: "event",
        },
        {
          anonymous: !1,
          inputs: [
            {
              indexed: !0,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: !0,
              internalType: "address",
              name: "operator",
              type: "address",
            },
            {
              indexed: !1,
              internalType: "bool",
              name: "approved",
              type: "bool",
            },
          ],
          name: "ApprovalForAll",
          type: "event",
        },
        {
          anonymous: !1,
          inputs: [
            {
              indexed: !0,
              internalType: "bytes32",
              name: "node",
              type: "bytes32",
            },
            { indexed: !1, internalType: "bytes", name: "hash", type: "bytes" },
          ],
          name: "ContenthashChanged",
          type: "event",
        },
        {
          anonymous: !1,
          inputs: [
            {
              indexed: !0,
              internalType: "bytes32",
              name: "node",
              type: "bytes32",
            },
            { indexed: !1, internalType: "bytes", name: "name", type: "bytes" },
            {
              indexed: !1,
              internalType: "uint16",
              name: "resource",
              type: "uint16",
            },
            {
              indexed: !1,
              internalType: "bytes",
              name: "record",
              type: "bytes",
            },
          ],
          name: "DNSRecordChanged",
          type: "event",
        },
        {
          anonymous: !1,
          inputs: [
            {
              indexed: !0,
              internalType: "bytes32",
              name: "node",
              type: "bytes32",
            },
            { indexed: !1, internalType: "bytes", name: "name", type: "bytes" },
            {
              indexed: !1,
              internalType: "uint16",
              name: "resource",
              type: "uint16",
            },
          ],
          name: "DNSRecordDeleted",
          type: "event",
        },
        {
          anonymous: !1,
          inputs: [
            {
              indexed: !0,
              internalType: "bytes32",
              name: "node",
              type: "bytes32",
            },
          ],
          name: "DNSZoneCleared",
          type: "event",
        },
        {
          anonymous: !1,
          inputs: [
            {
              indexed: !0,
              internalType: "bytes32",
              name: "node",
              type: "bytes32",
            },
            {
              indexed: !1,
              internalType: "bytes",
              name: "lastzonehash",
              type: "bytes",
            },
            {
              indexed: !1,
              internalType: "bytes",
              name: "zonehash",
              type: "bytes",
            },
          ],
          name: "DNSZonehashChanged",
          type: "event",
        },
        {
          anonymous: !1,
          inputs: [
            {
              indexed: !0,
              internalType: "bytes32",
              name: "node",
              type: "bytes32",
            },
            {
              indexed: !0,
              internalType: "bytes4",
              name: "interfaceID",
              type: "bytes4",
            },
            {
              indexed: !1,
              internalType: "address",
              name: "implementer",
              type: "address",
            },
          ],
          name: "InterfaceChanged",
          type: "event",
        },
        {
          anonymous: !1,
          inputs: [
            {
              indexed: !0,
              internalType: "bytes32",
              name: "node",
              type: "bytes32",
            },
            {
              indexed: !1,
              internalType: "string",
              name: "name",
              type: "string",
            },
          ],
          name: "NameChanged",
          type: "event",
        },
        {
          anonymous: !1,
          inputs: [
            {
              indexed: !0,
              internalType: "bytes32",
              name: "node",
              type: "bytes32",
            },
            {
              indexed: !1,
              internalType: "bytes32",
              name: "x",
              type: "bytes32",
            },
            {
              indexed: !1,
              internalType: "bytes32",
              name: "y",
              type: "bytes32",
            },
          ],
          name: "PubkeyChanged",
          type: "event",
        },
        {
          anonymous: !1,
          inputs: [
            {
              indexed: !0,
              internalType: "bytes32",
              name: "node",
              type: "bytes32",
            },
            {
              indexed: !0,
              internalType: "string",
              name: "indexedKey",
              type: "string",
            },
            {
              indexed: !1,
              internalType: "string",
              name: "key",
              type: "string",
            },
          ],
          name: "TextChanged",
          type: "event",
        },
        {
          inputs: [
            { internalType: "bytes32", name: "node", type: "bytes32" },
            { internalType: "uint256", name: "contentTypes", type: "uint256" },
          ],
          name: "ABI",
          outputs: [
            { internalType: "uint256", name: "", type: "uint256" },
            { internalType: "bytes", name: "", type: "bytes" },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "node", type: "bytes32" }],
          name: "addr",
          outputs: [
            { internalType: "address payable", name: "", type: "address" },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "bytes32", name: "node", type: "bytes32" },
            { internalType: "uint256", name: "coinType", type: "uint256" },
          ],
          name: "addr",
          outputs: [{ internalType: "bytes", name: "", type: "bytes" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "node", type: "bytes32" }],
          name: "contenthash",
          outputs: [{ internalType: "bytes", name: "", type: "bytes" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "bytes32", name: "node", type: "bytes32" },
            { internalType: "bytes32", name: "name", type: "bytes32" },
            { internalType: "uint16", name: "resource", type: "uint16" },
          ],
          name: "dnsRecord",
          outputs: [{ internalType: "bytes", name: "", type: "bytes" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "bytes32", name: "node", type: "bytes32" },
            { internalType: "bytes32", name: "name", type: "bytes32" },
          ],
          name: "hasDNSRecords",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "bytes32", name: "node", type: "bytes32" },
            { internalType: "bytes4", name: "interfaceID", type: "bytes4" },
          ],
          name: "interfaceImplementer",
          outputs: [{ internalType: "address", name: "", type: "address" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "address", name: "account", type: "address" },
            { internalType: "address", name: "operator", type: "address" },
          ],
          name: "isApprovedForAll",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "node", type: "bytes32" }],
          name: "name",
          outputs: [{ internalType: "string", name: "", type: "string" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "node", type: "bytes32" }],
          name: "pubkey",
          outputs: [
            { internalType: "bytes32", name: "x", type: "bytes32" },
            { internalType: "bytes32", name: "y", type: "bytes32" },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "bytes4", name: "interfaceID", type: "bytes4" },
          ],
          name: "supportsInterface",
          outputs: [{ internalType: "bool", name: "", type: "bool" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            { internalType: "bytes32", name: "node", type: "bytes32" },
            { internalType: "string", name: "key", type: "string" },
          ],
          name: "text",
          outputs: [{ internalType: "string", name: "", type: "string" }],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [{ internalType: "bytes32", name: "node", type: "bytes32" }],
          name: "zonehash",
          outputs: [{ internalType: "bytes", name: "", type: "bytes" }],
          stateMutability: "view",
          type: "function",
        },
      ];
    function lG(t) {
      let e = 0;
      function r() {
        return (t[e++] << 8) | t[e++];
      }
      let n = r(),
        i = 1,
        a = [0, 1];
      for (let K = 1; K < n; K++) a.push((i += r()));
      let l = r(),
        u = e;
      e += l;
      let p = 0,
        m = 0;
      function v() {
        return p == 0 && ((m = (m << 8) | t[e++]), (p = 8)), (m >> --p) & 1;
      }
      const w = 31,
        S = 2 ** w,
        M = S >>> 1,
        D = M >> 1,
        z = S - 1;
      let V = 0;
      for (let K = 0; K < w; K++) V = (V << 1) | v();
      let j = [],
        B = 0,
        ae = S;
      for (;;) {
        let K = Math.floor(((V - B + 1) * i - 1) / ae),
          fe = 0,
          ye = n;
        for (; ye - fe > 1; ) {
          let be = (fe + ye) >>> 1;
          K < a[be] ? (ye = be) : (fe = be);
        }
        if (fe == 0) break;
        j.push(fe);
        let pe = B + Math.floor((ae * a[fe]) / i),
          _e = B + Math.floor((ae * a[fe + 1]) / i) - 1;
        for (; !((pe ^ _e) & M); )
          (V = ((V << 1) & z) | v()),
            (pe = (pe << 1) & z),
            (_e = ((_e << 1) & z) | 1);
        for (; pe & ~_e & D; )
          (V = (V & M) | ((V << 1) & (z >>> 1)) | v()),
            (pe = (pe << 1) ^ M),
            (_e = ((_e ^ M) << 1) | M | 1);
        (B = pe), (ae = 1 + _e - pe);
      }
      let re = n - 4;
      return j.map((K) => {
        switch (K - re) {
          case 3:
            return re + 65792 + ((t[u++] << 16) | (t[u++] << 8) | t[u++]);
          case 2:
            return re + 256 + ((t[u++] << 8) | t[u++]);
          case 1:
            return re + t[u++];
          default:
            return K - 1;
        }
      });
    }
    function cG(t) {
      let e = 0;
      return () => t[e++];
    }
    function YE(t) {
      return cG(lG(uG(t)));
    }
    function uG(t) {
      let e = [];
      [
        ..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
      ].forEach((i, a) => (e[i.charCodeAt(0)] = a));
      let r = t.length,
        n = new Uint8Array((6 * r) >> 3);
      for (let i = 0, a = 0, l = 0, u = 0; i < r; i++)
        (u = (u << 6) | e[t.charCodeAt(i)]),
          (l += 6),
          l >= 8 && (n[a++] = u >> (l -= 8));
      return n;
    }
    function hG(t) {
      return t & 1 ? ~t >> 1 : t >> 1;
    }
    function dG(t, e) {
      let r = Array(t);
      for (let n = 0, i = 0; n < t; n++) r[n] = i += hG(e());
      return r;
    }
    function so(t, e = 0) {
      let r = [];
      for (;;) {
        let n = t(),
          i = t();
        if (!i) break;
        e += n;
        for (let a = 0; a < i; a++) r.push(e + a);
        e += i + 1;
      }
      return r;
    }
    function VE(t) {
      return Ph(() => {
        let e = so(t);
        if (e.length) return e;
      });
    }
    function qE(t) {
      let e = [];
      for (;;) {
        let r = t();
        if (r == 0) break;
        e.push(fG(r, t));
      }
      for (;;) {
        let r = t() - 1;
        if (r < 0) break;
        e.push(pG(r, t));
      }
      return e.flat();
    }
    function Ph(t) {
      let e = [];
      for (;;) {
        let r = t(e.length);
        if (!r) break;
        e.push(r);
      }
      return e;
    }
    function KE(t, e, r) {
      let n = Array(t)
        .fill()
        .map(() => []);
      for (let i = 0; i < e; i++) dG(t, r).forEach((a, l) => n[l].push(a));
      return n;
    }
    function fG(t, e) {
      let r = 1 + e(),
        n = e(),
        i = Ph(e);
      return KE(i.length, 1 + t, e).flatMap((a, l) => {
        let [u, ...p] = a;
        return Array(i[l])
          .fill()
          .map((m, v) => {
            let w = v * n;
            return [u + v * r, p.map((S) => S + w)];
          });
      });
    }
    function pG(t, e) {
      let r = 1 + e();
      return KE(r, 1 + t, e).map((n) => [n[0], n.slice(1)]);
    }
    function gG(t) {
      let e = [],
        r = so(t);
      return i(n([]), []), e;
      function n(a) {
        let l = t(),
          u = Ph(() => {
            let p = so(t).map((m) => r[m]);
            if (p.length) return n(p);
          });
        return { S: l, B: u, Q: a };
      }
      function i({ S: a, B: l }, u, p) {
        if (!(a & 4 && p === u[u.length - 1])) {
          a & 2 && (p = u[u.length - 1]), a & 1 && e.push(u);
          for (let m of l) for (let v of m.Q) i(m, [...u, v], p);
        }
      }
    }
    var Zi = YE(
      "AEITLAk1DSsBxwKEAQMBOQDpATAAngDUAHsAoABoAM4AagCNAEQAhABMAHIAOwA9ACsANgAmAGIAHgAvACgAJwAXAC0AGgAjAB8ALwAUACkAEgAeAAkAGwARABkAFgA5ACgALQArADcAFQApABAAHgAiABAAGAAeABMAFwAXBOcF2QEXE943ygXaALgArkYBbgCsCAPMAK6GNjY2NgE/rgwQ8gAEB0YG6zgFXgVfAD0yOQf2vRgFDc/IABUDz546AswKNgKOqAKG3z+Vb5ACxdICg/kBJuYQAPK0AUgCNJQKRpYA6gDpChwAHtvAzxMSRKQEIn4BBAJAGMQP8hAGMPAMBIhuDSIHNACyAHCY76ychgBiBpoCKgbwACIAQgyaFwKqAspCINYIwjADuBRCAPc0cqoAqIQfAB4ELALeHQEkAMAZ1AUBECBTPgmeCY8lIlZgTOqDSQAaABMAHAAVclsAKAAVAE71HN89+gI5X8qc5jUKFyRfVAJfPfMAGgATABwAFXIgY0CeAMPyACIAQAzMFsKqAgHavwViBekC0KYCxLcCClMjpGwUehp0TPwAwhRuAugAEjQ0kBfQmAKBggETIgDEFG4C6AASNAFPUCyYTBEDLgIFLxDecB60Ad5KAHgyEn4COBYoAy4uwD5yAEDoAfwsAM4O0rwBImqIALgMAAwCAIraUAUi3HIeAKgu2AGoBgYGBgYrNAOiAG4BCiA+9Dd7BB8eALEBzgIoAgDmMhJ6OvpQtzOoLjVPBQAGAS4FYAVftr8FcDtkQhlBWEiee5pmZqH/EhoDzA4s+H4qBKpSAlpaAnwisi4BlqqsPGIDTB4EimgQANgCBrJGNioCBzACQGQAcgFoJngAiiQgAJwBUL4ALnAeAbbMAz40KEoEWgF2YAZsAmwA+FAeAzAIDABQSACyAABkAHoAMrwGDvr2IJSGBgAQKAAwALoiTgHYAeIOEjiXf4HvABEAGAA7AEQAPzp3gNrHEGYQYwgFTRBMc0EVEgKzD60L7BEcDNgq0tPfADSwB/IDWgfyA1oDWgfyB/IDWgfyA1oDWgNaA1ocEfAh2scQZg9PBHQFlQWSBN0IiiZQEYgHLwjZVBR0JRxOA0wBAyMsSSM7mjMSJUlME00KCAM2SWyufT8DTjGyVPyQqQPSMlY5cwgFHngSpwAxD3ojNbxOhXpOcacKUk+1tYZJaU5uAsU6rz//CigJmm/Cd1UGRBAeJ6gQ+gw2AbgBPg3wS9sE9AY+BMwfgBkcD9CVnwioLeAM8CbmLqSAXSP4KoYF8Ev3POALUFFrD1wLaAnmOmaBUQMkARAijgrgDTwIcBD2CsxuDegRSAc8A9hJnQCoBwQLFB04FbgmE2KvCww5egb+GvkLkiayEyx6/wXWGiQGUAEsGwIA0i7qhbNaNFwfT2IGBgsoI8oUq1AjDShAunhLGh4HGCWsApRDc0qKUTkeliH5PEANaS4WUX8H+DwIGVILhDyhRq5FERHVPpA9SyJMTC8EOIIsMieOCdIPiAy8fHUBXAkkCbQMdBM0ERo3yAg8BxwwlycnGAgkRphgnQT6ogP2E9QDDgVCCUQHFgO4HDATMRUsBRCBJ9oC9jbYLrYCklaDARoFzg8oH+IQU0fjDuwIngJoA4Yl7gAwFSQAGiKeCEZmAGKP21MILs4IympvI3cDahTqZBF2B5QOWgeqHDYVwhzkcMteDoYLKKayCV4BeAmcAWIE5ggMNV6MoyBEZ1aLWxieIGRBQl3/AjQMaBWiRMCHewKOD24SHgE4AXYHPA0EAnoR8BFuEJgI7oYHNbgz+zooBFIhhiAUCioDUmzRCyom/Az7bAGmEmUDDzRAd/FnrmC5JxgABxwyyEFjIfQLlU/QDJ8axBhFVDEZ5wfCA/Ya9iftQVoGAgOmBhY6UDPxBMALbAiOCUIATA6mGgfaGG0KdIzTATSOAbqcA1qUhgJykgY6Bw4Aag6KBXzoACACqgimAAgA0gNaADwCsAegABwAiEQBQAMqMgEk6AKSA5YINM4BmDIB9iwEHsYMGAD6Om5NAsO0AoBtZqUF4FsCkQJMOAFQKAQIUUpUA7J05ADeAE4GFuJKARiuTc4d5kYB4nIuAMoA/gAIOAcIRAHQAfZwALoBYgs0CaW2uAFQ7CwAhgAYbgHaAowA4AA4AIL0AVYAUAVc/AXWAlJMARQ0Gy5aZAG+AyIBNgEQAHwGzpCozAoiBHAH1gIQHhXkAu8xB7gEAyLiE9BCyAK94VgAMhkKOwqqCqlgXmM2CTR1PVMAER+rPso/UQVUO1Y7WztWO1s7VjtbO1Y7WztWO1sDmsLlwuUKb19IYe4MqQ3XRMs6TBPeYFRgNRPLLboUxBXRJVkZQBq/Jwgl51UMDwct1mYzCC80eBe/AEIpa4NEY4keMwpOHOpTlFT7LR4AtEulM7INrxsYREMFSnXwYi0WEQolAmSEAmJFXlCyAF43IwKh+gJomwJmDAKfhzgeDgJmPgJmKQRxBIIDfxYDfpU5CTl6GjmFOiYmAmwgAjI5OA0CbcoCbbHyjQI2akguAWoA4QDkAE0IB5sMkAEBDsUAELgCdzICdqVCAnlORgJ4vSBf3kWxRvYCfEICessCfQwCfPNIA0iAZicALhhJW0peGBpKzwLRBALQz0sqA4hSA4fpRMiRNQLypF0GAwOxS9FMMCgG0k1PTbICi0ICitvEHgogRmoIugKOOgKOX0OahAKO3AKOX3tRt1M4AA1S11SIApP+ApMPAOwAH1UhVbJV0wksHimYiTLkeGlFPjwCl6IC77VYJKsAXCgClpICln+fAKxZr1oMhFAAPgKWuAKWUVxHXNQCmc4CmWdczV0KHAKcnjnFOqACnBkCn54CnruNACASNC0SAp30Ap6VALhAYTdh8gKe1gKgcQGsAp6iIgKeUahjy2QqKC4CJ7ICJoECoP4CoE/aAqYyAqXRAqgCAIACp/Vof2i0AAZMah9q1AKs5gKssQKtagKtBQJXIAJV3wKx5NoDH1FsmgKywBACsusabONtZm1LYgMl0AK2Xz5CbpMDKUgCuGECuUoYArktenA5cOQCvRwDLbUDMhQCvotyBQMzdAK+HXMlc1ICw84CwwdzhXROOEh04wM8qgADPJ0DPcICxX8CxkoCxhOMAshsVALIRwLJUgLJMQJkoALd1Xh8ZHixeShL0wMYpmcFAmH3GfaVJ3sOXpVevhQCz24Cz28yTlbV9haiAMmwAs92ASztA04Vfk4IAtwqAtuNAtJSA1JfA1NiAQQDVY+AjEIDzhnwY0h4AoLRg5AC2soC2eGEE4RMpz8DhqgAMgNkEYZ0XPwAWALfaALeu3Z6AuIy7RcB8zMqAfSeAfLVigLr9gLpc3wCAur8AurnAPxKAbwC7owC65+WrZcGAu5CA4XjmHxw43GkAvMGAGwDjhmZlgL3FgORcQOSigL3mwL53AL4aZofmq6+OpshA52GAv79AR4APJ8fAJ+2AwWQA6ZtA6bcANTIAwZtoYuiCAwDDEwBEgEiB3AGZLxqCAC+BG7CFI4ethAAGng8ACYDNhJQA4yCAWYqJACM8gAkAOamCqKUCLoGIqbIBQCuBRjCBfAkREUEFn8Fbz5FRzJCKEK7X3gYX8MAlswFOQCQUyCbwDstYDkYutYONhjNGJDJ/QVeBV8FXgVfBWoFXwVeBV8FXgVfBV4FXwVeBV9NHAjejG4JCQkKa17wMgTQA7gGNsLCAMIErsIA7kcwFrkFTT5wPndCRkK9X3w+X+8AWBgzsgCNBcxyzAOm7kaBRC0qCzIdLj08fnTfccH4GckscAFy13U3HgVmBXHJyMm/CNZQYgcHBwqDXoSSxQA6P4gAChbYBuy0KgwAjMoSAwgUAOVsJEQrJlFCuELDSD8qXy5gPS4/KgnIRAUKSz9KPn8+iD53PngCkELDUElCX9JVVnFUETNyWzYCcQASdSZf5zpBIgluogppKjJDJC1CskLDMswIzANf0BUmNRAPEAMGAQYpfqTfcUE0UR7JssmzCWzI0tMKZ0FmD+wQqhgAk5QkTEIsG7BtQM4/Cjo/Sj53QkYcDhEkU05zYjM0Wui8GQqE9CQyQkYcZA9REBU6W0pJPgs7SpwzCogiNEJGG/wPWikqHzc4BwyPaPBlCnhk0GASYDQqdQZKYCBACSIlYLoNCXIXbFVgVBgIBQZk7mAcYJxghGC6YFJgmG8WHga8FdxcsLxhC0MdsgHCMtTICSYcByMKJQGAAnMBNjecWYcCAZEKv04hAOsqdJUR0RQErU3xAaICjqNWBUdmAP4ARBEHOx1egRKsEysmwbZOAFYTOwMAHBO+NVsC2RJLbBEiAN9VBnwEESVhADgAvQKhLgsWdrI5P6YgAWIBjQoDA+D0FgaxBlEGwAAky1ywYRC7aBOQCy1GDsIBwgEpCU4DYQUvLy8nJSYoMxktDSgTlABbAnVel1CcCHUmBA94TgHadRbVWCcgsLdN8QcYBVNmAP4ARBEHgQYNK3MRjhKsPzc0zrZdFBIAZsMSAGpKblAoIiLGADgAvQKhLi1CFdUClxiCAVDCWM90eY7epaIO/KAVRBvzEuASDQ8iAwHOCUEQmgwXMhM9EgBCALrVAQkAqwDoAJuRNgAbAGIbzTVzfTEUyAIXCUIrStroIyUSG4QCggTIEbHxcwA+QDQOrT8u1agjB8IQABBBLtUYIAB9suEjD8IhThzUqHclAUQqZiMC8qAPBFPz6x9sDMMNAQhDCkUABccLRAJSDcIIww1DCUMKwy7VqDEOwgyYCCIPkhroBCILwhZCAKcLQhDCCwUYp3vjADtyDEMAAq0JwwUi1/UMBQ110QaCAAfCEmIYEsMBCADxCAAAexViDRbSG/x2F8IYQgAuwgLyqMIAHsICXCcxhgABwgAC6hVDFcIr8qPCz6hCCgKlJ1IAAmIA5+QZwg+lYhW/ywD7GoIIqAUR/3cA38KnwhjiARrCo5J5eQcCqaKKABLCDRsSAAOaAG3CDQALwqdCCBpCAsEIqJzRDwIHx6lCBQDhgi+9bcUDTwAD8gAVwgAHAgAJwgBpkgAawgAOwgkYwo5wFgIAAWIADnIALlIlAAbCABfCCCgADVEAusItAAPCAA6iKvIAsmEAHCIAG8IAAfIKqAAFzQscFeIAB6IAQsIBCQBpwgALggAdwgAIwgmoAAXRAG6mGdwAmAgoAAXRAAFCAAfiAB2iCCgABqEACYIAGzIAbSIA5sKHAAhiAAhCABTCAwBpAgkoAAbRAOOSAAlCC6gOy/tmAAdCAG6jQE8ATgAKwgsAA0IACbQDPgAHIgAZggACEqcCAAoiAApCAAoCp/IGwgAJIgADEgAQQgcAFEIAEXIAD5IADfIADcIAGRINFiIAFUIAbqIWugHCAMEAE0IKAGkyEQDhUgACQgAEWQAXggUiAAbXABjCBCUBgi9ZAEBMALYPBxQMeQAvMXcBqwwIZQJzKhMGBBAOdlJzZjGQJgWHGwVpND0DqAq7BgjfAB0DAgp1AX15TlkbKANWAhxFATMGCnpNxIJZgUcAMAA4CAACAAAAWhHiAIKXMwEyAH3sFBg5TQhRAF4MAAhXAQ6R0wB/QgQnrABhAN0cAJxvPiaSANRyuADW2wEdD8l8eiIfXSQQ2AGPl7IpWlpUTxlDyZAAAACGIz5HMDLnGJ5WAHkBMCw3KUkgFgM3XAT+zPUAUmzjAHECeAJGEYE6zng1NdwCAQwXGSYLGw60tQIBAQEABQIEAgIAGdMCACwBAAUFBQUFBQQEBAQEBAMEBQYHCAMEBAQEAwEBIQCMAI8AlDwA6QC6ANsAo0MAwQCxAKwApwDtAKUA2QCiAOYBBwECAMYAgABhANEA0wECAN0A8QCPAKgBMADpAN4A2woACA4xOtnZ2dm7xeHS1dNINxwBUQFbNEwBWQFoAWcBWgFLUEhKbRIBUhoMDwo5PRINACYTKiwuMT0/P0JCQkNEE0UFI1ZWVlZYWFdYLllaXFtbImJmZmVnZilrbXV0d3d3d3d3eXl5eXl5eXl5eXl7e3x7emEAQ/EASACZAHcAMQBl9wCNAFYAVgA2AnXuAIoABPf3AGMAkvEAngBOAGEAY/7+rwCEAIQAaABVALAAIwC1AIICPwJCAPsA5gD9AP0A5wD+AOgA6ADnAOUALgJ6AVABPwE9AVMBPQE9AT0BOAE3ATcBNwEbAVcWADAPBwAAUh4RHQocHRUAjQCVAKUAUABpHwIwAHUAbgCWAxQDJjEDIEhFTjAAkAJOAMYCVgKjAL8ClQKVApUClQKVApUCigKVApUClQKVApUClQKUApQClwKfApYClQKVApMCkwKTApMCkQKUAnQB0wKWAp4ClQKVApQdgBIEAP0MA54CYAI5HgFTFzwC4RgRMhoBTT4aVJgBeqtDAWhgAQQDQE4BBQCYMB4flnEAMGcAcAA1AJADm8yS8LWLYQzBMhXJARgIpNx7MQsEKmFzAbkA5IWHhoWHhYiJiYWKjYuFjI+Nh46Jj4mQhZGFkoWTkZSFlYWWiZeFmIWZhZqFm4qcj52JnoUAiXMrc6cAinNzBEIEPwRBBEQEQgRIBEUEQARGBEgERwRDBEUESACqA45zANBYc3MA1nMCE3MA/WFzAP0BIAD9APsA+wD8APvbA4sqbMUA/QD7APsA/AD7I3NzAJBhcwD9AJABIAD9AJAC8wD9AJDbA4sqbMUjcwD+YXMBIAD9AP0A+wD7APwA+wD+APsA+wD8APvbA4sqbMUjc3MAkGFzASAA/QCQAP0AkALzAP0AkNsDiypsxSNzAkoBPXMCUQFAcwJSyHNzA6UC8wOl2wOLKmzFI3NzAJBhcwEgA6UAkAOlAJAC8wOlAJDbA4sqbMUjcwQ3cwCQBDgAkA2UOHQnATNz3QdFdQoqcwEEAM1hCXNzAFthAAUaOQlzcwCQCXNE3wBQc90JcwCdbXNzQ4CD8BW5tNbewS6T/Np1iIh1Iy3DtPDAAXjPx9ENpwOgreI1z2BewtbX8Yi21FG1bBeCk7aB4sFY/Hi+/ekcwwyBHP+f0YI9G/iFY/5bObtuyY4MTYyHeQiZ62eBq/P8+68/rJI6cCQTfucgoskxeeDzvfo6MGQtbufZbw0FPGPpUNSG9SSs7NDWGUbpnlDGReZvnpkqvyGbE9edMaFydt2lujOB9XLYEAXRfM2Kx0lHbXJ4cszHh5aoooqxDeYXz4qvSy3ahNyE6DBY8J7v31dfMFEdiyjfirJ6hX3Pa2ygMOeuVytsRijRhyF9mVnMu2RxuZv3hI/Amu/2xe54SmySPFpHGxTUY0pe8SZ3I+HauujP4GbIzZYg6enubuUlyP0funGhg8HHYTHFSQD9Hm7HGbFy4n0sziYcpwdArgmsyy41VMV2ppGXMiMR4deCi34NNmlnftVdxoyCJzK+r1GvJvWDtbf4dPnrf0G9qOgEs2CpD3n+1P6MHu+kHtsR6lMcf3NcCDlg2BVcCpSVRHQRiw7qolVbxHeM9xvBMbdwjpFKXi7QUZOi6YaKam2q+tP/4Q5El2aNNWkj5UfSZY4ugEdPUnNXG3TnvpCSZ5IpiIvjM/Q7pZNYYv80gD+OdT5J+D+8K7RPkhzH4w8mJHEG67poqLR0JygXeOe4Qz7fpS6uh/vOXaryaHpamD78JfCU/VdaCwy9bCrfgh13NQynhoIdWRr1IQREtBfsr9bRjkodN4IdiTUMDdlCuM8mKFhoQzu5fn+1PZwtWpT+RAfPcOYqFvyg15NH3r44CwuiNOuJa3QiXx/LenV02OWmQIs/SX/g9e97kXeFyzzC5o3GZEj1A4edoQL/Hfudd5DbKP9jRl8TN4J6Kc1PFyNVAX5Xac6bdFhUIzF/y2fxEOMqCLdbgMjAScVBfo62Fi65kWkU5AuSnpXNEa53A8jiHAFWPQRbvChz7XzIQ1/JFkW4oI8xBV6UfjKIPDLC7squNvW2nzcUx+fOUY3Ocin2ftqIvHfTUJTRNcd7Ke70yAIwvqOtwoyPaZMBpoXD8wnXXhGcZwxMUx5c5bPIUoEI0NmMFTasTLrC3msRFOTj05Bautfl1sY/SvMF/LAsyI9YLxLDyLAdk5DR3UM3aUic2osD5OeVdqZVW/Q1m1ebiFPdS2jIqNLulNQ8bGE2SLfELriR1KiTO9P5+lrvWYO1fSrGrUt2bWuylLbZPkwOvWGZpLOHyarck2ZRqWS6sCGey7WyzKtSLDf8N998dc1hh6BN4lUthsFzHww9KK8RpC1vUV1amMjRDMR+KvY6u8hOpZEzHdLMb13izFQP3ijwSQCEFVH7Js8hL21h1Vgxap8exSPY1CBI89DYkx6Tv5XhsKTqejQ6qbBFVPb0FeZ+D1SdjxYgqAq6uvJHq7PW8hluldBOJ7puqANPsXDOtG/su5LwU1PnRExiBpZNO+7blORJ7i9gQYmu2AXSSiKxSZIyyJ+0umdON6y4aPTTM0FbgQzMWfO3PXOymBuZ9DjNH4dcMJSwm9PsU05clrl3w1WkZ04jCxhragJpQ4w9q2B/PX0G25bXPNnUGKSL3EAHAUkcsOzO66BRomJQr0Z8uQAcdKYDE3iFkuZQy+yZq2C3vghrwhw2d8jCgn3V2SEF0Obph80afZ5zohDVBkZps5UEZmSaeyACcgZ6Ecj/Z3Shx0cxedqpF4rbvSD14by33Qb4gSiKqHx0WH7WjNWW+fZz2t1PtJAPWvC6IaLarFyTSGtiv46IG1Q3YMBw5bDrisQFBnBi22oUgsO/eSzcLI5+wpv1ZX3aTHBQ79qiLoPd5uu6JrnhGzEeM0/gRT5wwCJ6uPDv35Qi4MGUO2s9+aimuET6TexV/KC9BGv9ibvW0+9hFedmTLXfrk2/sgHRe5wZPR6ao7kFwN3Egab8d2ApFPLOUgTY+d32/+XKglFsszuassqJBzo6MTbCwlYKO4yYdfk2gfjuHXxxdIjaUUcqePg/jf4AWUOsz7EjkKaPqLCzwTwkuPoskO+HPvSSIj56NBqwhlukh/SUlBPCAvpc+1hWM5aIt7e+NWicwHeXmf7JihSLmAxjDWNDmv6lSpQAYgl3KGYcLR/SwD/UbzS+YBYGKLhVlwwyGYf2autLOFuC7hdVncxFH6lx4+53/q/z8ukeP5C9jWhZLQvvvXJkWbnwQUbH8WW8VDTl7dYYgEw/d8e8PZVIP8QO8aJwNBObbcAh1bZg/ev/mIcRpHqvapWZBZJccfvQ55WYxxTdBLqYbSDjLNfI0d/IB7j1JaX07Z1abn2SGfV7zm8TU65Tqui5ZG/m8fTS7ZJVkQbJqcHfdRPbFKgIm9Q6lqhbspKIufB0JN5lyRQHiZp5cOyRLL44fHhfM56Ukt8hCMN0cSOYZcp5mvcoAcpVNPjMcA/siqAhaIn3EO6j0+ArsfN/wEexl90dGjecxE+R4JAHU9hBGZrDrJJ0L3FasUPVvPdmvrRUYY0LSEJpgUBo4pykiQr4GRZ9cAVKhzBxs86T9E+h0iOclANvJaS1ozReL9coKT4XJH2R15ed78yO6xqF3vPVSvwW+hApUYHspT4xNknEfEBks2ZT80sBfcq+kKqQeraVh2FtwOkIyPZc2PIZqDVqS2OfSXUEJ+aPajbV+aVHDMxPd4ak0ln8Lm3mlBsJjoNzm1LCOw1FWMbUNFmAyj82fesmdYwbtO9hz97ErIjkGBD8ojAOzSZzPT7bq7FxmZzdfzjVX5lq0DgHNm/HtOP0Fha40VmytaL4VvkkkmaH1vfbxgid+hNPqf//ggLAH9wOu9cN3TPGf7RkhvnFBg9Ue9dEMIY0QnUn6WfZwgFnf37KcfXeA/7qvv2NJesfukMgngn3pyJLjhbJ8DGZvbF61Q19ZVHZ/HfiOf3XZwiD/xlEDb+fuGzUrWRq7IMm/Qsd6SJc6Lqt4i6YC+L5h62FwYHiS63//p0lyL3iAb18QEPtnpbEUty0Zrt0fktA9L/YFLfrzYT6atdQjL6OMhCrZ4O3UUaYR0yme/4GNO/yHHufyAVpH/OIPEf2OzptXJ19+tA+NpivJNqCKOwUsJHqTzrT2G77O9dBe4ZcGyF0mPkzzJEpTJOjkgCt47TXZnFahlCXR9VbZ0lb1c1wAqXTKUqyPVaxz4Eu3rPJHiM3IXQQ0NjTvzUPG258V7vbrgoezETHlADY7B1WeyNMFYVE/LaWY7bSfQb7lKJ/KMRmoFwCrkwMEEkDen5KTEXCfVJrN+v4OeBxxE44mtzJOKdlLb7tqPfXrxftovGQyuaJhwlI3qpYBgfatKX2BJFeGTK5b4b9aSrMIv0QoyWUKQxoWaM41bP4QW5RbSawNQdN/0wv7aL9Jkk5J66IDpo7KQGXAKznLFeMn7t0F83ZTXPCDUhEjgWM2SA9ChmM5YEHa5l1hI1fsf77dxeRWfVHKPsN3Pbl3Dy5b4QIYb6N4Pm9jAAQLmQlaBBhZw5Ia7PfQ+xKgKJFQbR4F32mFfupbsbWLM9jDeqYdACLyf6uAKgVu9AJQpYtNbCj5wj9nXAWUWbWQL1cXcTXoVZqxjtyS/BsoaURCQi3dk09KVzUA0V6ZlrQ53Kj5AnQOcl+5F45QK+I7z2+zhbRVGq2VwcLCugx3BCQZwoiwsqtS8RQRixu4k8uRiaKZ/k7rmghRah8nMGZhmN6r12o0TqdMaPiD/n4TLE9VhVaO0KPZEGCIhU8QX+UXBAqICxssIsyKn1OrvUgTYYTO4jXEpu2+kVS6L6T5gjC1tufk8YssX4CRRcvyMaWoJuzmhC3Bq/DBUCuPaMuhQPIQfcmps2oqp9AqlngtSCo26+n5fKqSzEU3lpH1SMPRDrw6OdD/LhpNrs1YTHgMmP068bb8qMgF+/ASQedI7CvWdu04rAtlsP7kSnTDkyMw2LiZnpMx+i+ayXB7c3ckJcjFuig7H00vq2OQzM5PPevRdYi+cZJifcz1t3cNSD0yuvsuFXD/Nk2j60H5RpUU+Zrlp99wSgKEAkuC8nBJJnZ9PR+DkXPe3s4UeOKoq99964VWB9Pnva6uKI779pgq9oaspNcGV8vSOMCM8ACQn9kUPweu9UwI2n5+goo05CFaR5kALF5jhYmybPavdtAxmaC//LVF0ZLRkIcU+NGJzY3OdUKILkQKUDGABumIZHHzKw/jCOmPL+Zl8t46Wkz0WFvi9Gu4zuSn4okuXcj0BSeDVzHIf7sqCBjmC4zCJ+jyS/+Gq2fPUkgfW0bxdgVFMY+zY3TQuMfygLLiF9MzfKQiZXIgzRm4z85AALjRtWp3nO7kFP7ApIqqe2zn0NfjROHgw/hqbhgKGKjsXzu+rrdu5HeSlhWO8hxwDmVaQObSdcyTFMG/YiFD6lJGKdFb4NNS1HnW8T1P6nNQPqraOBTSnQKxz5tTGqNrbaAE4Iio3Cj50ZUqo6/O5OAtJ6Bznp4gKMgBetgD11fCO++j1RdcFdTbD0tkgfxXgzJTUtWCUmdYjl93RR27ifZGYzgK23MdwF4zvKNem782m0dQnmh47Rxz3+2MVhiiS85nTOXxmaODvzAWBE2IQowSrbzE12IJ82fOrvritWvRIF0aLCLdEytK+NVdDxLvmdW+dFeKOa/ocw1Son0O6OzX0lBLmjYSMQSrFe5X5yf6WE2ehsLrv6M8Cqjvwr+u9X+kP/f3iAk31TV+K9yZKQqAn3QOWy+9Hz7iVWRMuM9hs35+avVy4pXASFbOjGdXM1fSQkLOWmFUhyadKWYPjRZoZo0g3CS0qhz+mjygAvmtkYRBcGNpYAEYoIDEwQaswtATb9HLzTetQL8aK79YSb0vJNPSYzsij3FcXbmfnMiaOJIGrrBJnAPRqg2lmCZFXOFah9l2GRBm8HJMGeiupFvR0aRN41otN6X6tGTxS53wk+2+w+Q5ABTdCd15LYZm/a/3bxe9RDQJ5HZhLzr5x1ccTkxBkbxlYBGd8AKvkL2IR3V283R5noyhAM5o/2rKEi4U6kxCV5efr8llvLFrgjPIwS8iES5jxmV5zyPzj7TyzJTJze+9tgDNGYRyyXPkU4mtAh8XUy9vMigfO+1+ZKYW2WCFjDUfvyNiplha4LliPPg8Rc890ZT+F9pMYPAmEg3JJVUm3fp5N0IPNMAYKmbdj8dkIpjDhDJUd6o3G858DgYwPhSC+z3a78QpEmqq+tRaHEcQ30ZN5KVVdASN8NMTnLKoA+IJdapqCRgooGTkhyjB1yEmjSy52110hPaqe1upiUeObsTXtGELTk2p2NZw/3PzU281tafWNmFUPAmooj83DhoQgKPIB7f+NGTDlTOtyPgN8pIB/lnFLL/gcwigZPKDW7p6hnW/GnAzyNS46gLJAl0Eyhqx6UWLeQTU7odMYORK5zf/FV79JGVPOQpNUA58rlB0ugHsyeub8Lnf9QQ4/N5sRKaUjEEhdpF28vfgPZACBbg5UHuVHl8Lby8mVGsrtI7TjL9U3mbtcF+cXQI/5AxT2i0MyciXEKZ8OjvPoQHHU/YSnCXtEp2r08SJxUAHIz1zM+FwdRCYPffQNi2NhkPWTiYTxJ00WVZIrHwmG7jzOLcfWnquJkpOmdPzXfAu+s5EADm0X4VmatqLjVa86dS7Os55qXuRa1Y7dWGvv57LjBlKKgqsbI7lwfyBN3qkKBqe7nwUDn6xqhGPiUPT7j7s+oD52AF6oj6SFXhYWlRXy+1FL7YSbjFxfFvJt5tVXMAr8/voIg8YRiBsKB6eLeIG5Y/KmGmFBxxYzSH7W0IaK3IId+cBlEk6H3Y5BqIBfvhOOBtInLWnsAoRpqlkxd7o/+LP9UXEahdcYlifFlURgUJl0Ly6LHjSZN1CfHB7OORacnBdpIM1lRpBcvwkeyXUvndU4zrfqwtuBEpxqvk4PZPJMByJXUbXie52mfUB689h9GRV99U4gzn1aTbHPWjbB0DQ0Aes2E/ZzoCTxCef56sExSu8ynaPxuDOOeD31OWT0zHo1XxSPQbclDivD+4/v1aWdhGXLR1Ui+NzuQK1NTedznX44c5T3b+2GZZjl5RqH8KR7FTVjLAXvg64Gpc1RROH24J9jrNDyvrMxY453DRUjZ/K3zYJC+M1JxcvLkuZALsXVQ4Z7sj0EuLbRnhTKzRGwFrpXcixvnCgRbJrCl3+RjyWVipph0VLB0nDop/tvjfFmysZ+d2/k6baJMxYoqnE7PFceicrxUYyoJ2LMxicgJqrgvSR3mNJTkvfTU8BIoZz3PpSIS+Y7Ey3MXecxcxYZTeX62egI5Nub2z8Bj4Eg71YCz8Oiapkinw4RRlL+0c2/6jDqc8UK4Zzi1X4aIpgYsPJQOEz2YWBdvH6z5CuY7UvWK2F0Mg4ofRVBArX1p9Gv5VLqWYyL/raRVWkPNI4FEv9+ePcdmBSQR4CFSO6TG13hIV+cm1dkd0/Nt3r28H4NU2knSniDCeozM/Btc4i/ni4H83S2/ktAAvUM7UKJPT+RO8LOlvxhuI8HQmAuJCzVH23R/0JovidxgdJ7g7whCdVQa9/TLFUJWmNSYAaPRAXW/kk2UBmAz6f6POK1zcMlmI8P9tqW2qVXABN0L0zHarXbWHlhtYpXMEda/pIHLwu8RHqmWWMgMzkyKicSFKK10UvZRdcO8fCiSijtFIY8qW7CscvtzpP92lm+c648urehw35v1EOfO3kdny+CQm/Y0u+zPuevhCrQKhTsUq4G1rNPoGuVzvhf2Ui1f8jzvx9fJbQR69A0ETLUUC2ndk1YFQNi22yLwyZyw4xU8P3RGLM5qojKNwHAZAMAEudzg8UdfV6i4VktOLbhhHUPqpCn6dtpnr16rINs5hWJGMYXaEn0irFCuoYnJEVhdJ4PZLKuTkrP1UUVWZ0SMgJ3F2I8YRhtLwK4dhh/oKk0hdVgEH/l2/0c+cLlF7kpDuF3lC4fsFw3V0QrwH3GLNb2waS18OmYB07yaLEqhd58bSaGJZzePoroV5v3UK46/sWdKczstFIiYLmmKeaVGRNo3IWk+dYUqWy5aJClXj5tf/v47ijlkmMDP+ROUxoGk7LFzne4/0CRPl/5SUyOa679jibvdVQFZ1o0H9kBux7OSC9B+qVKE1trxr4xqTkjc1ZGZBpY0zyKBiu8wr+/KXc37u0cdXGJwY/aTic3kGj4jt3y4ZwleKskyXMFHKGwVhqpFH3ba02boSzGHyPMAe/reVqWSTT2Uz47+uYvHZGNASqYQ23uZoxalHK+PGoH9trTVaw2KB4dH8fNrXRLhiyxGdRtS0x8k3feeOvsOdKEdaOf3IrfWCZM/n3+hVJizA4zoX8MzsIf6bDfuFXIIRR2RN0rICZcMRmnRxUXT+YMOid50gg+Nt4Uucemmbd9kvJG/O04PVC0vm5gGDlIY3THI2+l1rZcMOuSDWBp6I4Eltp7naHZCdaPUWnQ07VqO49znDgCmtu5Tb+SSEQJV+rJsiXgCqoeeQciher8cqF616P8qlZeonKihdVkj+RTnjOcnoERWubvyaeFO6Ub3dhh0qmm2RD4enszxE1JaAaiezuSoCayJQP931HGcy0NmuVr/UV0pvbwICLpBbVkxC6qebjLGRXucTG0dbQDFPz049hMem2pb/FOTGYRLR0uPCa0oIwc9Z/g+Iy/zYFDThHi1cqbK824savKGMLMj7j87RT9NMwxaI0eKTfMFioi9SyLq5sN9pV8be2FrOc7xMOdv6btXyqFx63y9fIGMBP2T9Wmeeg61ZGdTE4IwybcGlXLJ3qLbRRpQ8vSzcqFobN+QPtL+51hadAWtRbF6aJpeb7Gca4/Ldh7BDvEbrUuEm+gTyVMeRQ3Ypf9uyFjVstrQIcdY+aur3LC5I5OOnJck1zLUKxLobjy9slG3hv6zylhtKbAbpX5p8Hc910fCT7FNH5/t9xEJX9kkeZ9IMCHAk9zn7L3pXEGZVvdaf85NtlemPpY7iSgSC7zRGsI5W6/UEwX6jDtNVZ9VqPDBe/EqmEEsGcs7jZPQPhi3xpj9UXWQLiy6tsxv/ft9aKQnUg0Sps/x3AZ2uK3ETGTQogPTMQPOnoU6p5KuS3uY6DfW0GeGQ1wNpGzGoUdRJRvHP9MDQpWRSZqZkE/rcNnQ5lS9BmMDW/umgZQD1C2YXfZMy7fIVXo121293Gfx9n7DQP6OxSqiSTNx48KId9kfGYOnV2Wg2TQQywNBRB0mSmqa/jwoBDYVDl6B0XFrVEAwbnhLyqGp5BH9bzsWrrFlu0x285RpqTylTZk3rgcm57prav0DUAKUd02vXdYyNBf7sfX7VYn0Syug9++ey/dHoG7GQzMbhXhtEuRXv6YR20SQgSOrgDUGPR4HhS+Qvk2zOtyH8N/lHYfQxNKt/f7uCpsBBh5eGZaeWNRTBdOObWOvyKJMfD8FLEX1v/5ywtRV27weRzSNaHEQFE0hIzzS4VPzgWtg/4bcetwXpabsePP192muNPyXiRzRZkoeudA9D9x/oVWfRieLfjdXbi/41RGNB3aIj0IxCBHSvUN7LzntO6Oh910zV9u4Glrouyr5odjs8/fW9r0buiTMWTjjLbi2k5tZ3m/134ci/d9f8zuv+4BI7F13Mjb7DTTD5ukfqNTlNC4V9PnfbGAJdKLEDJgBPKyYXCaAL9U5Cxi2j5j+IWmNg6NSnWcATzmOO4+dNBmefy6ceyd8J9/Q7amUWVVkuNVSq3iWEb3UJP7kG+P8wfL4xS0ZNuSKYuo9KpdkJ3b4PYRNSzF+8OXKDWqXuWsan/wconybIRBoGWHMuCkb35BtGfiqZ4hc2CCapKiLmrWnBLlRT+9GA0Qcykkg1B6C3kESJMu2dWyGabbhRwxUeMxARHqbXzHmHpr4Z3vmOxHZ6b1q6MJ0Vb/XKkaPF4xn/VindEJ3S8/9xcGF+PNFuAXc2Jf9uZLLtjxDAEeohd7wjie66LHvcNT0UpWif4uCox2YR/liegMgx8vEbvQClJBMBub7zJQMCr1C/Vf8siWQASp0Ewd7D2uP6f9YTISdEaUAzF9rST9JTHxez310BfdgtWKU1ZYoRuDZvGn2tj9DPjXrkgCr/13OHsP4MOC5b6YqHSedYMW9bEfS5M3nO7zTGS85BzpLTIFqAGhZJLEyLFcZXS7hDhDYVvlm10RLEslMK0cUL/9xqTMOX2iR65umsC8dW4hT0Sg6Tf3T2HAxsHKcNzoqFwuM9k3/LpYekhRc0C+f1I+vMQ4thkfSotx9GUt/cdRosaE8XwqV0k+8ZtU+jv8nn3lbcNxfXXKi5l0SL5kMmrCdrxeVVqxBobrFF+tb0wtkN+DMm88I4jWH/DcdJOjcMOLEsN70vlsfIi+NexpaT0ZsnfewPoTvUSXqqfhRcRk3jA7AdYHEFk4l6O3fe65uZNIMf1lbtJNCNaK2+c5hGKLcTSrBmwWv9TP6JDfZ6UY96g4baayVCbrDpXePgXTG6xO3rT0DAXG9OuPxkSEPLJnqxQViyYQhCp36Q2yFpF6cR04RO7Ab5HPrECqGR0Fnr2gzmjx49XjQf8N5Bk5XH0dh8NOoB62acHwMhlBM8duW9tghc7CN7oz91UEyd8fOtwDK/j7SykdllCAN5kUrcawufMV9y/EqUoKHtP5i8MgQY9RlZFZzi0BeT9Ang4mMIvWAFChZCNnb4tT5cS20jeit8JEN4tz4mUmZxDwiWkEucI1KF/FyAnvE4wybWvbaxBYjT2jdhlzd4y/eTmTl3im5YImADc2unOtmNTcgMdOb9kUgJmgzY/hDaAxqvwLEulLsjq0bsfSE3tRYCRn6xb0uv5B5yFshhewdO5KgoLcaGeqeg0pa9k2RXM32g1jE1UDWO0CaMobavPk+4u26Tmgg6VindBdYdRxpGqlvkxai0K/atC5CWUxlHuukX5b+hg83khzsZK7AVRVptyVNicu0sfQToTDEeIeDdFvDrReJUiJGZcXAhpRL3OufhL4aDfO1zsCmfGq8qFspBiJe13lgS9GguiMsdmgpWOhHkSTVkWnMOnUeIJgqZks/AwL/1yKPm00t6x6qLXQrCJrysUwR+ILJdyyyuUN4BuEtCDUXMXPU5srsAnDUhSfFM/j4RK+cK01o6lXAVbhiOLaaQtpYN6mCOwtJNcVqEpyrxXuWxvE4mbVCytBu/qKO4X2BI1NUSlj/g6FQEiYsXMAQuM9wnHngXKLZRWFHcgroF7URRzLPrMQUfALjbga6S+tGc3Tshv6PA6xeSqRPDbLG+X+0qt9crNzbaxGbStSCfYhdRY4t5BSVY9Pxl9trcYFiUdsV1BSwaZM5u8K+hUm8HV6PoLD/jlsRRzgUq6O+Qw3asFkTKm3clSTo8VtXdpTdzFAZP+tVvAjkfGq3MkSLyTYi08pvQ3h/L9o0JpUnnQeKxXk3qIsGGsH1BXzcZT+voCNv39FSdg6gNY51z9Cyq5Dql8wER5ylTwnLVeHlHAn/HNwxGYeUqrrc2gcmIybVKVD1XAPXjKks2+oHZk4OXYP6+LwVaFEApqEMyEusTgVFTzdjVa2BAaELvpyVhOSMW/ae3NwMfWId4Ue28z5IzumOF/CmY1GmXBOWBf2hgp/r3qS0GU7nGETmj+7Tudbjd1cKhgP39tVtWogjxHt6NLXz8OCbV1nIBG+mmrrZDCbH/o4Vgn3gZkRkq+iHOVW82LunJPXBZjX/ntmptWsqP8nDZBSb3TzAD4vSQeQ1GmtgGWAYfB951YKUnFVJb0z1YRjQqVksL5VpD4N/Vy31vtYY/2g9TmyMADPgCwwA6MhjQ9bd1JFJ3Vls7lD2RYjdIwQwhWzBRPfrxpKcYeu03F0/odRbEc9RZ11TxVY8mXqgJx/vDk0eF4MPV7lgBxYqxoGfEtGZBC1kZlxbcez4Ts4/TuXJ/QsfWT95Fwpc4CtiGCgU4i7LHgoDalqmBabvzV5xvq2pMVourJYZ4paytzilEG+lADOGx7qf9O5/4cP5SqyTCMG4I16I/6I5o4Y/QkWX9ctABry/8Adxz+ZB8AI1yUyNXk1Z073ECiDJ1EuVT69eIDEAlbnv24j4DJGeqIV1b1GDCHJ+OFD4W0gXUs/1bMkNESNKl2ON6DZzAXvqmr8X68yRDgIReKbX1SUwtzYnyadBLhEWS0WTE7T1IxC2SHChb1NFD+2rtJSN8OPTIZRqiizaoh7OSSNpBXJMkKcUQZV8sXw8VkU5ea8j0WZ/YK35loUxE1aG30SL/JYxZWlUenDyKrfbHWJ+z6JOsV0e1Xfw7VGavtHACLwn0tTG9e3lf++w1MCVjFIyU57uOlbTkUSnxAjzmA71qvjTzHeMDWcK099tm9rS8cnfuwxq+YRWANkfmLbCl+74mg4bccPsNY5zz7cjbaFAL0hAwId61yM5uqhMBr4Wcew3b2spG5tkKFOnADeXkGkH4vk+f+an92mWXemOFCpjRsFeEnPEAIsLemM3QfMoME5/w+7Y48y/SvkBN6/KSRVmB7/rHiW7iVkXF6Y1T853OaDg66cIfWkD5TqCDugrlaXlEL1fFjxPoKRHkP5GD/xDiscNH+Dp2fXEKUpwAvC8JTNC+k9JpaMXUB7oj4p77qiAOjXD2pT4v/v0Ukid02LpuYsS7/ScDL1SxB9hxxbkeGOMyPyL4HZPAbyagOgP5Xe2pCqMPyj/KJ0blDHzFVBqzeLIO5D4yq7IpSi9p/QlHa50sCHzGoMqrBS8l9IfRyhq8IDQtOZzjgdvgQDwH7cqa/sybwdfcQse9THS08maKkkgnOi0ShO8Gyf+WL4K9DX11CF9uIbVwJUaCv8r/6FDVOdsEjeumisIJlLJQsjjkEL2QfEc68oqsevnNAEdp4YMJivwBJnE0R2GiBFRTJZNkq/MHDP9O5unQoRoivMJkPm+A0K8CQNXL6V3apC4ROBTyJSW9oOGNF4YrwoTFyz/pexIkeWQADpi+M7q8gBlmGRUune0k7cXyacdbOsD0Q1JQat9T8nmHhyO8PNd2k4qjZsQCs6lEcmaThpVUzGzWOJQGGf2oz7+F/bMfUMARo1PD0/yIhVDK+8MGRo/uByG5UAwPfNeHAd09gkMFpZmTN2rZgoqdSjwv1SbFnFRAqYuzwW8P4+Rk9fE3PVu80HKcXyIEvPfit+o+pnlHDUKKo32HapcVtQhsNiIdH80j/lRnJ2y5RYRbECyY4vl20j/NiBAD0Z5jxWWiL6xAZIonSEJb1qhwmdRp3hISLL9Q1QYOt6C/OixU3eUtXblgBu+fGPAQE0o"
    );
    const $E = new Map([
        [8217, "apostrophe"],
        [8260, "fraction slash"],
        [12539, "middle dot"],
      ]),
      ZE = 4;
    function mG(t) {
      return t.toString(16).toUpperCase().padStart(2, "0");
    }
    function QE(t) {
      return `{${mG(t)}}`;
    }
    function vG(t) {
      let e = [];
      for (let r = 0, n = t.length; r < n; ) {
        let i = t.codePointAt(r);
        (r += i < 65536 ? 1 : 2), e.push(i);
      }
      return e;
    }
    function Fc(t) {
      let e = t.length;
      if (e < 4096) return String.fromCodePoint(...t);
      let r = [];
      for (let n = 0; n < e; )
        r.push(String.fromCodePoint(...t.slice(n, (n += 4096))));
      return r.join("");
    }
    function yG(t, e) {
      let r = t.length,
        n = r - e.length;
      for (let i = 0; n == 0 && i < r; i++) n = t[i] - e[i];
      return n;
    }
    var Ab = YE(
      "AEUDTAHBCFQATQDRADAAcgAgADQAFAAsABQAHwAOACQADQARAAoAFwAHABIACAAPAAUACwAFAAwABAAQAAMABwAEAAoABQAIAAIACgABAAQAFAALAAIACwABAAIAAQAHAAMAAwAEAAsADAAMAAwACgANAA0AAwAKAAkABAAdAAYAZwDSAdsDJgC0CkMB8xhZAqfoC190UGcThgBurwf7PT09Pb09AjgJum8OjDllxHYUKXAPxzq6tABAxgK8ysUvWAgMPT09PT09PSs6LT2HcgWXWwFLoSMEEEl5RFVMKvO0XQ8ExDdJMnIgsj26PTQyy8FfEQ8AY8IPAGcEbwRwBHEEcgRzBHQEdQR2BHcEeAR6BHsEfAR+BIAEgfndBQoBYgULAWIFDAFiBNcE2ATZBRAFEQUvBdALFAsVDPcNBw13DYcOMA4xDjMB4BllHI0B2grbAMDpHLkQ7QHVAPRNQQFnGRUEg0yEB2uaJF8AJpIBpob5AERSMAKNoAXqaQLUBMCzEiACnwRZEkkVsS7tANAsBG0RuAQLEPABv9HICTUBXigPZwRBApMDOwAamhtaABqEAY8KvKx3LQ4ArAB8UhwEBAVSagD8AEFZADkBIadVj2UMUgx5Il4ANQC9AxIB1BlbEPMAs30CGxlXAhwZKQIECBc6EbsCoxngzv7UzRQA8M0BawL6ZwkN7wABAD33OQRcsgLJCjMCjqUChtw/km+NAsXPAoP2BT84PwURAK0RAvptb6cApQS/OMMey5HJS84UdxpxTPkCogVFITaTOwERAK5pAvkNBOVyA7q3BKlOJSALAgUIBRcEdASpBXqzABXFSWZOawLCOqw//AolCZdvv3dSBkEQGyelEPcMMwG1ATsN7UvYBPEGOwTJH30ZGQ/NlZwIpS3dDO0m4y6hgFoj9SqDBe1L9DzdC01RaA9ZC2UJ4zpjgU4DIQENIosK3Q05CG0Q8wrJaw3lEUUHOQPVSZoApQcBCxEdNRW1JhBirAsJOXcG+xr2C48mrxMpevwF0xohBk0BKRr/AM8u54WwWjFcHE9fBgMLJSPHFKhQIA0lQLd4SBobBxUlqQKRQ3BKh1E2HpMh9jw9DWYuE1F8B/U8BRlPC4E8nkarRQ4R0j6NPUgiSUwsBDV/LC8niwnPD4UMuXxyAVkJIQmxDHETMREXN8UIOQcZLZckJxUIIUaVYJoE958D8xPRAwsFPwlBBxMDtRwtEy4VKQUNgSTXAvM21S6zAo9WgAEXBcsPJR/fEFBH4A7pCJsCZQODJesALRUhABcimwhDYwBfj9hTBS7LCMdqbCN0A2cU52ERcweRDlcHpxwzFb8c4XDIXguGCCijrwlbAXUJmQFfBOMICTVbjKAgQWdTi1gYmyBhQT9d/AIxDGUVn0S9h3gCiw9rEhsBNQFzBzkNAQJ3Ee0RaxCVCOuGBDW1M/g6JQRPIYMgEQonA09szgsnJvkM+GkBoxJiAww0PXfuZ6tgtiQX/QcZMsVBYCHxC5JPzQycGsEYQlQuGeQHvwPzGvMn6kFXBf8DowMTOk0z7gS9C2kIiwk/AEkOoxcH1xhqCnGM0AExiwG3mQNXkYMCb48GNwcLAGcLhwV55QAdAqcIowAFAM8DVwA5Aq0HnQAZAIVBAT0DJy8BIeUCjwOTCDHLAZUvAfMpBBvDDBUA9zduSgLDsQKAamaiBd1YAo4CSTUBTSUEBU5HUQOvceEA2wBLBhPfRwEVq0rLGuNDAd9vKwDHAPsABTUHBUEBzQHzbQC3AV8LMQmis7UBTekpAIMAFWsB1wKJAN0ANQB/8QFTAE0FWfkF0wJPSQERMRgrV2EBuwMfATMBDQB5BsuNpckHHwRtB9MCEBsV4QLvLge1AQMi3xPNQsUCvd5VoWACZIECYkJbTa9bNyACofcCaJgCZgkCn4Q4GwsCZjsCZiYEbgR/A38TA36SOQY5dxc5gjojIwJsHQIyNjgKAm3HAm2u74ozZ0UrAWcA3gDhAEoFB5gMjQD+C8IADbUCdy8CdqI/AnlLQwJ4uh1c20WuRtcCfD8CesgCfQkCfPAFWQUgSABIfWMkAoFtAoAAAoAFAn+uSVhKWxUXSswC0QEC0MxLJwOITwOH5kTFkTIC8qFdAwMDrkvOTC0lA89NTE2vAos/AorYwRsHHUNnBbcCjjcCjlxAl4ECjtkCjlx4UbRTNQpS1FSFApP7ApMMAOkAHFUeVa9V0AYsGymVhjLheGZFOzkCl58C77JYIagAWSUClo8ClnycAKlZrFoJgU0AOwKWtQKWTlxEXNECmcsCmWRcyl0HGQKcmznCOp0CnBYCn5sCnriKAB0PMSoPAp3xAp6SALU9YTRh7wKe0wKgbgGpAp6fHwKeTqVjyGQnJSsCJ68CJn4CoPsCoEwCot0CocQCpi8Cpc4Cp/8AfQKn8mh8aLEAA0lqHGrRAqzjAqyuAq1nAq0CAlcdAlXcArHh1wMfTmyXArK9DQKy6Bds4G1jbUhfAyXNArZcOz9ukAMpRQK4XgK5RxUCuSp3cDZw4QK9GQK72nCWAzIRAr6IcgIDM3ECvhpzInNPAsPLAsMEc4J0SzVFdOADPKcDPJoDPb8CxXwCxkcCxhCJAshpUQLIRALJTwLJLgJknQLd0nh5YXiueSVL0AMYo2cCAmH0GfOVJHsLXpJeuxECz2sCz2wvS1PS8xOfAMatAs9zASnqA04SfksFAtwnAtuKAtJPA1JcA1NfAQEDVYyAiT8AyxbtYEWCHILTgs6DjQLaxwLZ3oQQhEmnPAOGpQAvA2QOhnFZ+QBVAt9lAt64c3cC4i/tFAHzMCcB9JsB8tKHAuvzAulweQLq+QLq5AD5RwG5Au6JAuuclqqXAwLuPwOF4Jh5cOBxoQLzAwBpA44WmZMC9xMDkW4DkocC95gC+dkC+GaaHJqruzebHgOdgwL++gEbADmfHJ+zAwWNA6ZqA6bZANHFAwZqoYiiBQkDDEkCwAA/AwDhQRdTARHzA2sHl2cFAJMtK7evvdsBiZkUfxEEOQH7KQUhDp0JnwCS/SlXxQL3AZ0AtwW5AG8LbUEuFCaNLgFDAYD8AbUmAHUDDgRtACwCFgyhAAAKAj0CagPdA34EkQEgRQUhfAoABQBEABMANhICdwEABdUDa+8KxQIA9wqfJ7+xt+UBkSFBQgHpFH8RNMCJAAQAGwBaAkUChIsABjpTOpSNbQC4Oo860ACNOME63AClAOgAywE6gTo7Ofw5+Tt2iTpbO56JOm85GAFWATMBbAUvNV01njWtNWY1dTW2NcU1gjWRNdI14TWeNa017jX9NbI1wTYCNhE1xjXVNhY2JzXeNe02LjY9Ni41LSE2OjY9Njw2yTcIBJA8VzY4Nt03IDcPNsogN4k3MAoEsDxnNiQ3GTdsOo03IULUQwdC4EMLHA8PCZsobShRVQYA6X8A6bABFCnXAukBowC9BbcAbwNzBL8MDAMMAQgDAAkKCwsLCQoGBAVVBI/DvwDz9b29kaUCb0QtsRTNLt4eGBcSHAMZFhYZEhYEARAEBUEcQRxBHEEcQRxBHEEaQRxBHEFCSTxBPElISUhBNkM2QTYbNklISVmBVIgBFLWZAu0BhQCjBcEAbykBvwGJAaQcEZ0ePCklMAAhMvAIMAL54gC7Bm8EescjzQMpARQpKgDUABavAj626xQAJP0A3etzuf4NNRA7efy2Z9NQrCnC0OSyANz5BBIbJ5IFDR6miIavYS6tprjjmuKebxm5C74Q225X1pkaYYPb6f1DK4k3xMEBb9S2WMjEibTNWhsRJIA+vwNVEiXTE5iXs/wezV66oFLfp9NZGYW+Gk19J2+bCT6Ye2w6LDYdgzKMUabk595eLBCXANz9HUpWbATq9vqXVx9XDg+Pc9Xp4+bsS005SVM/BJBM4687WUuf+Uj9dEi8aDNaPxtpbDxcG1THTImUMZq4UCaaNYpsVqraNyKLJXDYsFZ/5jl7bLRtO88t7P3xZaAxhb5OdPMXqsSkp1WCieG8jXm1U99+blvLlXzPCS+M93VnJCiK+09LfaSaBAVBomyDgJua8dfUzR7ga34IvR2Nvj+A9heJ6lsl1KG4NkI1032Cnff1m1wof2B9oHJK4bi6JkEdSqeNeiuo6QoZZincoc73/TH9SXF8sCE7XyuYyW8WSgbGFCjPV0ihLKhdPs08Tx82fYAkLLc4I2wdl4apY7GU5lHRFzRWJep7Ww3wbeA3qmd59/86P4xuNaqDpygXt6M85glSBHOCGgJDnt+pN9bK7HApMguX6+06RZNjzVmcZJ+wcUrJ9//bpRNxNuKpNl9uFds+S9tdx7LaM5ZkIrPj6nIU9mnbFtVbs9s/uLgl8MVczAwet+iOEzzBlYW7RCMgE6gyNLeq6+1tIx4dpgZnd0DksJS5f+JNDpwwcPNXaaVspq1fbQajOrJgK0ofKtJ1Ne90L6VO4MOl5S886p7u6xo7OLjG8TGL+HU1JXGJgppg4nNbNJ5nlzSpuPYy21JUEcUA94PoFiZfjZue+QnyQ80ekOuZVkxx4g+cvhJfHgNl4hy1/a6+RKcKlar/J29y//EztlbVPHVUeQ1zX86eQVAjR/M3dA9w4W8LfaXp4EgM85wOWasli837PzVMOnsLzR+k3o75/lRPAJSE1xAKQzEi5v10ke+VBvRt1cwQRMd+U5mLCTGVd6XiZtgBG5cDi0w22GKcVNvHiu5LQbZEDVtz0onn7k5+heuKXVsZtSzilkLRAUmjMXEMB3J9YC50XBxPiz53SC+EhnPl9WsKCv92SM/OFFIMJZYfl0WW8tIO3UxYcwdMAj7FSmgrsZ2aAZO03BOhP1bNNZItyXYQFTpC3SG1VuPDqH9GkiCDmE+JwxyIVSO5siDErAOpEXFgjy6PQtOVDj+s6e1r8heWVvmZnTciuf4EiNZzCAd7SOMhXERIOlsHIMG399i9aLTy3m2hRLZjJVDNLS53iGIK11dPqQt0zBDyg6qc7YqkDm2M5Ve6dCWCaCbTXX2rToaIgz6+zh4lYUi/+6nqcFMAkQJKHYLK0wYk5N9szV6xihDbDDFr45lN1K4aCXBq/FitPSud9gLt5ZVn+ZqGX7cwm2z5EGMgfFpIFyhGGuDPmso6TItTMwny+7uPnLCf4W6goFQFV0oQSsc9VfMmVLcLr6ZetDZbaSFTLqnSO/bIPjA3/zAUoqgGFAEQS4IhuMzEp2I3jJzbzkk/IEmyax+rhZTwd6f+CGtwPixu8IvzACquPWPREu9ZvGkUzpRwvRRuaNN6cr0W1wWits9ICdYJ7ltbgMiSL3sTPeufgNcVqMVWFkCPDH4jG2jA0XcVgQj62Cb29v9f/z/+2KbYvIv/zzjpQAPkliaVDzNrW57TZ/ZOyZD0nlfMmAIBIAGAI0D3k/mdN4xr9v85ZbZbbqfH2jGd5hUqNZWwl5SPfoGmfElmazUIeNL1j/mkF7VNAzTq4jNt8JoQ11NQOcmhprXoxSxfRGJ9LDEOAQ+dmxAQH90iti9e2u/MoeuaGcDTHoC+xsmEeWmxEKefQuIzHbpw5Tc5cEocboAD09oipWQhtTO1wivf/O+DRe2rpl/E9wlrzBorjJsOeG1B/XPW4EaJEFdNlECEZga5ZoGRHXgYouGRuVkm8tDESiEyFNo+3s5M5puSdTyUL2llnINVHEt91XUNW4ewdMgJ4boJfEyt/iY5WXqbA+A2Fkt5Z0lutiWhe9nZIyIUjyXDC3UsaG1t+eNx6z4W/OYoTB7A6x+dNSTOi9AInctbESqm5gvOLww7OWXPrmHwVZasrl4eD113pm+JtT7JVOvnCXqdzzdTRHgJ0PiGTFYW5Gvt9R9LD6Lzfs0v/TZZHSmyVNq7viIHE6DBK7Qp07Iz55EM8SYtQvZf/obBniTWi5C2/ovHfw4VndkE5XYdjOhCMRjDeOEfXeN/CwfGduiUIfsoFeUxXeQXba7c7972XNv8w+dTjjUM0QeNAReW+J014dKAD/McQYXT7c0GQPIkn3Ll6R7gGjuiQoZD0TEeEqQpKoZ15g/0OPQI17QiSv9AUROa/V/TQN3dvLArec3RrsYlvBm1b8LWzltdugsC50lNKYLEp2a+ZZYqPejULRlOJh5zj/LVMyTDvwKhMxxwuDkxJ1QpoNI0OTWLom4Z71SNzI9TV1iXJrIu9Wcnd+MCaAw8o1jSXd94YU/1gnkrC9BUEOtQvEIQ7g0i6h+KL2JKk8Ydl7HruvgWMSAmNe+LshGhV4qnWHhO9/RIPQzY1tHRj2VqOyNsDpK0cww+56AdDC4gsWwY0XxoucIWIqs/GcwnWqlaT0KPr8mbK5U94/301i1WLt4YINTVvCFBrFZbIbY8eycOdeJ2teD5IfPLCRg7jjcFTwlMFNl9zdh/o3E/hHPwj7BWg0MU09pPrBLbrCgm54A6H+I6v27+jL5gkjWg/iYdks9jbfVP5y/n0dlgWEMlKasl7JvFZd56LfybW1eeaVO0gxTfXZwD8G4SI116yx7UKVRgui6Ya1YpixqXeNLc8IxtAwCU5IhwQgn+NqHnRaDv61CxKhOq4pOX7M6pkA+Pmpd4j1vn6ACUALoLLc4vpXci8VidLxzm7qFBe7s+quuJs6ETYmnpgS3LwSZxPIltgBDXz8M1k/W2ySNv2f9/NPhxLGK2D21dkHeSGmenRT3Yqcdl0m/h3OYr8V+lXNYGf8aCCpd4bWjE4QIPj7vUKN4Nrfs7ML6Y2OyS830JCnofg/k7lpFpt4SqZc5HGg1HCOrHvOdC8bP6FGDbE/VV0mX4IakzbdS/op+Kt3G24/8QbBV7y86sGSQ/vZzU8FXs7u6jIvwchsEP2BpIhW3G8uWNwa3HmjfH/ZjhhCWvluAcF+nMf14ClKg5hGgtPLJ98ueNAkc5Hs2WZlk2QHvfreCK1CCGO6nMZVSb99VM/ajr8WHTte9JSmkXq/i/U943HEbdzW6Re/S88dKgg8pGOLlAeNiqrcLkUR3/aClFpMXcOUP3rmETcWSfMXZE3TUOi8i+fqRnTYLflVx/Vb/6GJ7eIRZUA6k3RYR3iFSK9c4iDdNwJuZL2FKz/IK5VimcNWEqdXjSoxSgmF0UPlDoUlNrPcM7ftmA8Y9gKiqKEHuWN+AZRIwtVSxye2Kf8rM3lhJ5XcBXU9n4v0Oy1RU2M+4qM8AQPVwse8ErNSob5oFPWxuqZnVzo1qB/IBxkM3EVUKFUUlO3e51259GgNcJbCmlvrdjtoTW7rChm1wyCKzpCTwozUUEOIcWLneRLgMXh+SjGSFkAllzbGS5HK7LlfCMRNRDSvbQPjcXaenNYxCvu2Qyznz6StuxVj66SgI0T8B6/sfHAJYZaZ78thjOSIFumNWLQbeZixDCCC+v0YBtkxiBB3jefHqZ/dFHU+crbj6OvS1x/JDD7vlm7zOVPwpUC01nhxZuY/63E7g"
    );
    function Oh(t) {
      return (t >> 24) & 255;
    }
    function JE(t) {
      return t & 16777215;
    }
    const bG = new Map(
        VE(Ab).flatMap((t, e) => t.map((r) => [r, (e + 1) << 24]))
      ),
      xG = new Set(so(Ab)),
      eI = new Map(),
      Cb = new Map();
    for (let [t, e] of qE(Ab)) {
      if (!xG.has(t) && e.length == 2) {
        let [r, n] = e,
          i = Cb.get(r);
        i || ((i = new Map()), Cb.set(r, i)), i.set(n, t);
      }
      eI.set(t, e.reverse());
    }
    const Lh = 44032,
      og = 4352,
      lg = 4449,
      cg = 4519,
      tI = 19,
      rI = 21,
      Dc = 28,
      ug = rI * Dc,
      wG = tI * ug,
      kG = Lh + wG,
      _G = og + tI,
      AG = lg + rI,
      CG = cg + Dc;
    function nI(t) {
      return t >= Lh && t < kG;
    }
    function SG(t, e) {
      if (t >= og && t < _G && e >= lg && e < AG)
        return Lh + (t - og) * ug + (e - lg) * Dc;
      if (nI(t) && e > cg && e < CG && (t - Lh) % Dc == 0) return t + (e - cg);
      {
        let r = Cb.get(t);
        return r && ((r = r.get(e)), r) ? r : -1;
      }
    }
    function iI(t) {
      let e = [],
        r = [],
        n = !1;
      function i(a) {
        let l = bG.get(a);
        l && ((n = !0), (a |= l)), e.push(a);
      }
      for (let a of t)
        for (;;) {
          if (a < 128) e.push(a);
          else if (nI(a)) {
            let l = a - Lh,
              u = (l / ug) | 0,
              p = ((l % ug) / Dc) | 0,
              m = l % Dc;
            i(og + u), i(lg + p), m > 0 && i(cg + m);
          } else {
            let l = eI.get(a);
            l ? r.push(...l) : i(a);
          }
          if (!r.length) break;
          a = r.pop();
        }
      if (n && e.length > 1) {
        let a = Oh(e[0]);
        for (let l = 1; l < e.length; l++) {
          let u = Oh(e[l]);
          if (u == 0 || a <= u) {
            a = u;
            continue;
          }
          let p = l - 1;
          for (;;) {
            let m = e[p + 1];
            if (
              ((e[p + 1] = e[p]), (e[p] = m), !p || ((a = Oh(e[--p])), a <= u))
            )
              break;
          }
          a = Oh(e[l]);
        }
      }
      return e;
    }
    function EG(t) {
      let e = [],
        r = [],
        n = -1,
        i = 0;
      for (let a of t) {
        let l = Oh(a),
          u = JE(a);
        if (n == -1) l == 0 ? (n = u) : e.push(u);
        else if (i > 0 && i >= l)
          l == 0 ? (e.push(n, ...r), (r.length = 0), (n = u)) : r.push(u),
            (i = l);
        else {
          let p = SG(n, u);
          p >= 0
            ? (n = p)
            : i == 0 && l == 0
            ? (e.push(n), (n = u))
            : (r.push(u), (i = l));
        }
      }
      return n >= 0 && e.push(n, ...r), e;
    }
    function sI(t) {
      return iI(t).map(JE);
    }
    function IG(t) {
      return EG(iI(t));
    }
    const aI = 65039,
      oI = ".",
      lI = 1,
      cI = 45;
    function zc() {
      return new Set(so(Zi));
    }
    const TG = new Map(qE(Zi)),
      PG = zc(),
      hg = zc(),
      uI = new Set(
        so(Zi).map(
          function (t) {
            return this[t];
          },
          [...hg]
        )
      ),
      OG = zc();
    zc();
    const LG = VE(Zi);
    function hI() {
      return new Set([so(Zi).map((t) => LG[t]), so(Zi)].flat(2));
    }
    const MG = Zi(),
      Mh = Ph((t) => {
        let e = Ph(Zi).map((r) => r + 96);
        if (e.length) {
          let r = t >= MG;
          (e[0] -= 32), (e = Fc(e)), r && (e = `Restricted[${e}]`);
          let n = hI(),
            i = hI(),
            a = [...n, ...i].sort((u, p) => u - p),
            l = !Zi();
          return { N: e, P: n, M: l, R: r, V: new Set(a) };
        }
      }),
      dI = zc(),
      Rh = new Map();
    [...dI, ...zc()]
      .sort((t, e) => t - e)
      .map((t, e, r) => {
        let n = Zi(),
          i = (r[e] = n ? r[e - n] : { V: [], M: new Map() });
        i.V.push(t), dI.has(t) || Rh.set(t, i);
      });
    for (let { V: t, M: e } of new Set(Rh.values())) {
      let r = [];
      for (let i of t) {
        let a = Mh.filter((u) => u.V.has(i)),
          l = r.find(({ G: u }) => a.some((p) => u.has(p)));
        l || ((l = { G: new Set(), V: [] }), r.push(l)),
          l.V.push(i),
          a.forEach((u) => l.G.add(u));
      }
      let n = r.flatMap(({ G: i }) => [...i]);
      for (let { G: i, V: a } of r) {
        let l = new Set(n.filter((u) => !i.has(u)));
        for (let u of a) e.set(u, l);
      }
    }
    let Nh = new Set(),
      fI = new Set();
    for (let t of Mh) for (let e of t.V) (Nh.has(e) ? fI : Nh).add(e);
    for (let t of Nh) !Rh.has(t) && !fI.has(t) && Rh.set(t, lI);
    const RG = new Set([...Nh, ...sI(Nh)]);
    class NG extends Array {
      get is_emoji() {
        return !0;
      }
    }
    const BG = gG(Zi)
        .map((t) => NG.from(t))
        .sort(yG),
      pI = new Map();
    for (let t of BG) {
      let e = [pI];
      for (let r of t) {
        let n = e.map((i) => {
          let a = i.get(r);
          return a || ((a = new Map()), i.set(r, a)), a;
        });
        r === aI ? e.push(...n) : (e = n);
      }
      for (let r of e) r.V = t;
    }
    function dg(t, e = QE) {
      let r = [];
      HG(t[0]) && r.push("\u25CC");
      let n = 0,
        i = t.length;
      for (let a = 0; a < i; a++) {
        let l = t[a];
        gI(l) && (r.push(Fc(t.slice(n, a))), r.push(e(l)), (n = a + 1));
      }
      return r.push(Fc(t.slice(n, i))), r.join("");
    }
    function Sb(t) {
      return (gI(t) ? "" : `${Eb(dg([t]))} `) + QE(t);
    }
    function Eb(t) {
      return `"${t}"\u200E`;
    }
    function FG(t) {
      if (t.length >= 4 && t[2] == cI && t[3] == cI)
        throw new Error(`invalid label extension: "${Fc(t.slice(0, 4))}"`);
    }
    function DG(t) {
      for (let e = t.lastIndexOf(95); e > 0; )
        if (t[--e] !== 95) throw new Error("underscore allowed only at start");
    }
    function zG(t) {
      let e = t[0],
        r = $E.get(e);
      if (r) throw Bh(`leading ${r}`);
      let n = t.length,
        i = -1;
      for (let a = 1; a < n; a++) {
        e = t[a];
        let l = $E.get(e);
        if (l) {
          if (i == a) throw Bh(`${r} + ${l}`);
          (i = a + 1), (r = l);
        }
      }
      if (i == n) throw Bh(`trailing ${r}`);
    }
    function HG(t) {
      return hg.has(t);
    }
    function gI(t) {
      return OG.has(t);
    }
    function UG(t) {
      return GG(WG(t, IG, qG));
    }
    function WG(t, e, r) {
      if (!t) return [];
      let n = 0;
      return t.split(oI).map((i) => {
        let a = vG(i),
          l = { input: a, offset: n };
        n += a.length + 1;
        let u;
        try {
          let p = (l.tokens = VG(a, e, r)),
            m = p.length,
            v;
          if (m)
            if (
              ((u = p.flat()),
              DG(u),
              !(l.emoji = m > 1 || p[0].is_emoji) && u.every((w) => w < 128))
            )
              FG(u), (v = "ASCII");
            else {
              let w = p.flatMap((S) => (S.is_emoji ? [] : S));
              if (!w.length) v = "Emoji";
              else {
                if (hg.has(u[0])) throw Bh("leading combining mark");
                for (let D = 1; D < m; D++) {
                  let z = p[D];
                  if (!z.is_emoji && hg.has(z[0]))
                    throw Bh(
                      `emoji + combining mark: "${Fc(p[D - 1])} + ${dg([
                        z[0],
                      ])}"`
                    );
                }
                zG(u);
                let S = [...new Set(w)],
                  [M] = jG(S);
                YG(M, w), XG(M, S), (v = M.N);
              }
            }
          else throw new Error("empty label");
          l.type = v;
        } catch (p) {
          l.error = p;
        }
        return (l.output = u), l;
      });
    }
    function XG(t, e) {
      let r,
        n = [];
      for (let i of e) {
        let a = Rh.get(i);
        if (a === lI) return;
        if (a) {
          let l = a.M.get(i);
          if (((r = r ? r.filter((u) => l.has(u)) : [...l]), !r.length)) return;
        } else n.push(i);
      }
      if (r) {
        for (let i of r)
          if (n.every((a) => i.V.has(a)))
            throw new Error(`whole-script confusable: ${t.N}/${i.N}`);
      }
    }
    function jG(t) {
      let e = Mh;
      for (let r of t) {
        let n = e.filter((i) => i.V.has(r));
        if (!n.length) throw Mh.some((i) => i.V.has(r)) ? vI(e[0], r) : mI(r);
        if (((e = n), n.length == 1)) break;
      }
      return e;
    }
    function GG(t) {
      return t
        .map(({ input: e, error: r, output: n }) => {
          if (r) {
            let i = r.message;
            throw new Error(
              t.length == 1 ? i : `Invalid label ${Eb(dg(e))}: ${i}`
            );
          }
          return Fc(n);
        })
        .join(oI);
    }
    function mI(t) {
      return new Error(`disallowed character: ${Sb(t)}`);
    }
    function vI(t, e) {
      let r = Sb(e),
        n = Mh.find((i) => i.P.has(e));
      return (
        n && (r = `${n.N} ${r}`), new Error(`illegal mixture: ${t.N} + ${r}`)
      );
    }
    function Bh(t) {
      return new Error(`illegal placement: ${t}`);
    }
    function YG(t, e) {
      let { V: r, M: n } = t;
      for (let i of e) if (!r.has(i)) throw vI(t, i);
      if (n) {
        let i = sI(e);
        for (let a = 1, l = i.length; a < l; a++)
          if (uI.has(i[a])) {
            let u = a + 1;
            for (let p; u < l && uI.has((p = i[u])); u++)
              for (let m = a; m < u; m++)
                if (i[m] == p)
                  throw new Error(`duplicate non-spacing marks: ${Sb(p)}`);
            if (u - a > ZE)
              throw new Error(
                `excessive non-spacing marks: ${Eb(dg(i.slice(a - 1, u)))} (${
                  u - a
                }/${ZE})`
              );
            a = u;
          }
      }
    }
    function VG(t, e, r) {
      let n = [],
        i = [];
      for (t = t.slice().reverse(); t.length; ) {
        let a = KG(t);
        if (a) i.length && (n.push(e(i)), (i = [])), n.push(r(a));
        else {
          let l = t.pop();
          if (RG.has(l)) i.push(l);
          else {
            let u = TG.get(l);
            if (u) i.push(...u);
            else if (!PG.has(l)) throw mI(l);
          }
        }
      }
      return i.length && n.push(e(i)), n;
    }
    function qG(t) {
      return t.filter((e) => e != aI);
    }
    function KG(t, e) {
      let r = pI,
        n,
        i = t.length;
      for (; i && ((r = r.get(t[--i])), !!r); ) {
        let { V: a } = r;
        a && ((n = a), e && e.push(...t.slice(i).reverse()), (t.length = i));
      }
      return n;
    }
    const $G = (t) => UG(t),
      fl = (t) => {
        let e = "";
        for (let r = 0; r < 32; r += 1) e += "00";
        if (t) {
          const r = $G(t).split(".");
          for (let n = r.length - 1; n >= 0; n -= 1) {
            const i = ci(r[n]).slice(2);
            e = ci(`0x${e}${i}`).slice(2);
          }
        }
        return `0x${e}`;
      };
    var fg =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    class ZG {
      constructor(e, r) {
        (this.contract = new dl(aG, r ?? ag.main, e)), (this.context = e);
      }
      getOwner(e) {
        return fg(this, void 0, void 0, function* () {
          try {
            return this.contract.methods.owner(fl(e)).call();
          } catch {
            throw new Error();
          }
        });
      }
      getTTL(e) {
        return fg(this, void 0, void 0, function* () {
          try {
            return this.contract.methods.ttl(fl(e)).call();
          } catch {
            throw new Error();
          }
        });
      }
      recordExists(e) {
        return fg(this, void 0, void 0, function* () {
          try {
            return this.contract.methods.recordExists(fl(e)).call();
          } catch {
            throw new Error();
          }
        });
      }
      getResolver(e) {
        return fg(this, void 0, void 0, function* () {
          try {
            return this.contract.methods
              .resolver(fl(e))
              .call()
              .then((r) => {
                if (typeof r == "string") return new dl(oG, r, this.context);
                throw new Error();
              });
          } catch {
            throw new Error();
          }
        });
      }
      get events() {
        return this.contract.events;
      }
    }
    var Hc =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    class QG {
      constructor(e) {
        this.registry = e;
      }
      getResolverContractAdapter(e) {
        return Hc(this, void 0, void 0, function* () {
          return this.registry.getResolver(e);
        });
      }
      checkInterfaceSupport(e, r) {
        var n, i;
        return Hc(this, void 0, void 0, function* () {
          if (Ct(GE[r]))
            throw new aC(
              (n = e.options.address) !== null && n !== void 0 ? n : "",
              r
            );
          if (!(yield e.methods.supportsInterface(GE[r]).call()))
            throw new aC(
              (i = e.options.address) !== null && i !== void 0 ? i : "",
              r
            );
        });
      }
      supportsInterface(e, r) {
        var n;
        return Hc(this, void 0, void 0, function* () {
          const i = yield this.getResolverContractAdapter(e);
          let a = r;
          if (!rr(a)) {
            if (((a = (n = mh(r)) !== null && n !== void 0 ? n : ""), r === ""))
              throw new Error("Invalid interface Id");
            a = a.slice(0, 10);
          }
          return i.methods.supportsInterface(a).call();
        });
      }
      getAddress(e, r = 60) {
        return Hc(this, void 0, void 0, function* () {
          const n = yield this.getResolverContractAdapter(e);
          return (
            yield this.checkInterfaceSupport(n, _b.addr),
            n.methods.addr(fl(e), r).call()
          );
        });
      }
      getPubkey(e) {
        return Hc(this, void 0, void 0, function* () {
          const r = yield this.getResolverContractAdapter(e);
          return (
            yield this.checkInterfaceSupport(r, _b.pubkey),
            r.methods.pubkey(fl(e)).call()
          );
        });
      }
      getContenthash(e) {
        return Hc(this, void 0, void 0, function* () {
          const r = yield this.getResolverContractAdapter(e);
          return (
            yield this.checkInterfaceSupport(r, _b.contenthash),
            r.methods.contenthash(fl(e)).call()
          );
        });
      }
    }
    var la =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    class yI extends ws {
      constructor(e, r) {
        super(r ?? ""),
          (this.registryAddress = e ?? ag.main),
          (this._registry = new ZG(this.getContextObject(), e)),
          (this._resolver = new QG(this._registry));
      }
      getResolver(e) {
        return la(this, void 0, void 0, function* () {
          return this._registry.getResolver(e);
        });
      }
      recordExists(e) {
        return la(this, void 0, void 0, function* () {
          return this._registry.recordExists(e);
        });
      }
      getTTL(e) {
        return la(this, void 0, void 0, function* () {
          return this._registry.getTTL(e);
        });
      }
      getOwner(e) {
        return la(this, void 0, void 0, function* () {
          return this._registry.getOwner(e);
        });
      }
      getAddress(e, r = 60) {
        return la(this, void 0, void 0, function* () {
          return this._resolver.getAddress(e, r);
        });
      }
      getPubkey(e) {
        return la(this, void 0, void 0, function* () {
          return this._resolver.getPubkey(e);
        });
      }
      getContenthash(e) {
        return la(this, void 0, void 0, function* () {
          return this._resolver.getContenthash(e);
        });
      }
      checkNetwork() {
        return la(this, void 0, void 0, function* () {
          const e = Date.now() / 1e3;
          if (!this._lastSyncCheck || e - this._lastSyncCheck > 3600) {
            const i = yield Ej(this);
            if (!(typeof i == "boolean" && !i)) throw new m8();
            this._lastSyncCheck = e;
          }
          if (this._detectedAddress) return this._detectedAddress;
          const r = yield Yy(
              this,
              Object.assign(Object.assign({}, nt), { number: bi.HEX })
            ),
            n = ag[sG[r]];
          if (typeof n > "u") throw new g8(r);
          return (this._detectedAddress = n), this._detectedAddress;
        });
      }
      supportsInterface(e, r) {
        return la(this, void 0, void 0, function* () {
          return this._resolver.supportsInterface(e, r);
        });
      }
      get events() {
        return this._registry.events;
      }
    }
    var ca =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    const JG = (t) =>
        ca(void 0, void 0, void 0, function* () {
          return (yield D7(t)).map(ea);
        }),
      eY = (t, e) =>
        ca(void 0, void 0, void 0, function* () {
          ct.validate(["string"], [e]);
          const r = yield z7(t, e);
          return ea(r);
        }),
      tY = (t, e, r, n) =>
        ca(void 0, void 0, void 0, function* () {
          return (
            ct.validate(["address", "string", "uint"], [e, r, n]),
            H7(t, e, r, n)
          );
        }),
      rY = (t, e) =>
        ca(void 0, void 0, void 0, function* () {
          return ct.validate(["address"], [e]), U7(t, e);
        }),
      nY = (t, e, r) =>
        ca(void 0, void 0, void 0, function* () {
          return ct.validate(["string", "string"], [e, r]), W7(t, e, r);
        }),
      iY = (t, e, r) =>
        ca(void 0, void 0, void 0, function* () {
          const n = Kn(e, pt);
          return X7(t, n, r);
        }),
      sY = (t, e, r) =>
        ca(void 0, void 0, void 0, function* () {
          const n = Kn(e, pt);
          return j7(t, n, r);
        }),
      aY = (t, e, r, n) =>
        ca(void 0, void 0, void 0, function* () {
          ct.validate(["string", "address", "string"], [e, r, n]);
          const i = rr(e) ? e : Gi(e);
          return G7(t, i, r, n);
        }),
      oY = (t, e, r) =>
        ca(void 0, void 0, void 0, function* () {
          ct.validate(["string", "string"], [e, r]);
          const n = rr(e) ? e : Gi(e);
          return Y7(t, n, r);
        });
    var ua =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    class bI extends ws {
      getAccounts() {
        return ua(this, void 0, void 0, function* () {
          return JG(this.requestManager);
        });
      }
      newAccount(e) {
        return ua(this, void 0, void 0, function* () {
          return eY(this.requestManager, e);
        });
      }
      unlockAccount(e, r, n) {
        return ua(this, void 0, void 0, function* () {
          return tY(this.requestManager, e, r, n);
        });
      }
      lockAccount(e) {
        return ua(this, void 0, void 0, function* () {
          return rY(this.requestManager, e);
        });
      }
      importRawKey(e, r) {
        return ua(this, void 0, void 0, function* () {
          return nY(this.requestManager, e, r);
        });
      }
      sendTransaction(e, r) {
        return ua(this, void 0, void 0, function* () {
          return iY(this.requestManager, e, r);
        });
      }
      signTransaction(e, r) {
        return ua(this, void 0, void 0, function* () {
          return sY(this.requestManager, e, r);
        });
      }
      sign(e, r, n) {
        return ua(this, void 0, void 0, function* () {
          return aY(this.requestManager, e, r, n);
        });
      }
      ecRecover(e, r) {
        return ua(this, void 0, void 0, function* () {
          return oY(this.requestManager, e, r);
        });
      }
    }
    const lY = {
      encodeEventSignature: pb,
      encodeFunctionCall: kj,
      encodeFunctionSignature: rg,
      encodeParameter: gb,
      encodeParameters: eg,
      decodeParameter: _E,
      decodeParameters: tg,
      decodeLog: AE,
    };
    var Fh =
      (globalThis && globalThis.__awaiter) ||
      function (t, e, r, n) {
        function i(a) {
          return a instanceof r
            ? a
            : new r(function (l) {
                l(a);
              });
        }
        return new (r || (r = Promise))(function (a, l) {
          function u(v) {
            try {
              m(n.next(v));
            } catch (w) {
              l(w);
            }
          }
          function p(v) {
            try {
              m(n.throw(v));
            } catch (w) {
              l(w);
            }
          }
          function m(v) {
            v.done ? a(v.value) : i(v.value).then(u, p);
          }
          m((n = n.apply(t, e || [])).next());
        });
      };
    const cY = (t) => {
        const e = (l, u) =>
            Fh(void 0, void 0, void 0, function* () {
              const p = yield Jj(l, t),
                m = Ye({ format: "bytes" }, u, pt);
              return eX(p, m);
            }),
          r = (l) => {
            const u = Wy(l);
            return Object.assign(Object.assign({}, u), {
              signTransaction: (p) =>
                Fh(void 0, void 0, void 0, function* () {
                  return e(p, u.privateKey);
                }),
            });
          },
          n = (l, u, p) =>
            Fh(void 0, void 0, void 0, function* () {
              var m;
              const v = yield nX(
                l,
                u,
                (m = p == null ? void 0 : p.nonStrict) !== null && m !== void 0
                  ? m
                  : !0
              );
              return Object.assign(Object.assign({}, v), {
                signTransaction: (w) =>
                  Fh(void 0, void 0, void 0, function* () {
                    return e(w, v.privateKey);
                  }),
              });
            }),
          i = () => {
            const l = rX();
            return Object.assign(Object.assign({}, l), {
              signTransaction: (u) =>
                Fh(void 0, void 0, void 0, function* () {
                  return e(u, l.privateKey);
                }),
            });
          },
          a = new Ep({ create: i, privateKeyToAccount: r, decrypt: n });
        return {
          signTransaction: e,
          create: i,
          privateKeyToAccount: r,
          decrypt: n,
          recoverTransaction: tX,
          hashMessage: zy,
          sign: M2,
          recover: Hy,
          encrypt: R2,
          wallet: a,
        };
      },
      uY = { version: "4.1.1" };
    class pg extends ws {
      constructor(e) {
        var r;
        (Ct(e) ||
          (typeof e == "string" && e.trim() === "") ||
          (!Sp(e) && !e.provider)) &&
          console.warn(
            "NOTE: web3.js is running without provider. You need to pass a provider in order to interact with the network!"
          );
        let n = {};
        typeof e == "string" || Sp(e)
          ? (n.provider = e)
          : e
          ? (n = e)
          : (n = {}),
          (n.registeredSubscriptions = Object.assign(
            Object.assign({}, wb),
            (r = n.registeredSubscriptions) !== null && r !== void 0 ? r : {}
          )),
          super(n);
        const i = cY(this);
        (this._wallet = i.wallet),
          (this._accountProvider = i),
          (this.utils = LS);
        const a = this;
        class l extends dl {
          constructor(m, v, w) {
            if (typeof v == "object" && typeof w == "object")
              throw new oC(
                "Should not provide options at both 2nd and 3rd parameters"
              );
            if (Ct(v)) super(m, w, a.getContextObject());
            else if (typeof v == "object") super(m, v, a.getContextObject());
            else if (typeof v == "string")
              super(m, v, w ?? {}, a.getContextObject());
            else throw new oC();
            super.subscribeToContextEvents(a);
          }
        }
        const u = a.use(sg);
        this.eth = Object.assign(u, {
          ens: a.use(yI, ag.main),
          Iban: rn,
          net: a.use(U2),
          personal: a.use(bI),
          Contract: l,
          abi: lY,
          accounts: i,
        });
      }
    }
    (pg.version = uY.version),
      (pg.utils = LS),
      (pg.modules = { Web3Eth: sg, Iban: rn, Net: U2, ENS: yI, Personal: bI });
    const hY = "0xf240b48464eF6bae0306592b48131bECe8cb7333";
    var xI = ((t) => (
      (t.local = "local"),
      (t.development = "development"),
      (t.production = "production"),
      t
    ))(xI || {});
    const zne = 5;
    xI.qa + "";
    const dY = {
      zero: { name: "Tier 0", value: 0 },
      one: { name: "Tier 1", value: 5e3 },
    };
    let Ib = null;
    const { walletAddress: fY } = x0(),
      Dh = We(!1),
      Tb = We(!1);
    async function pY(t) {
      const e = `https://ping-serverless-functions.netlify.app/.netlify/functions/checkWallet?walletAddress=${t}`;
      return await fetch(e);
    }
    function Pb() {
      async function t() {
        Tb.value = !1;
        const e = await y0({ mustBeMetaMask: !0 });
        Ib || (Ib = new pg(e));
        const r = await Ib.eth.getAccounts();
        if (!r.length) return (Dh.value = !1), !1;
        if ((await pY(r[0])).status === 202) return (Dh.value = !0), !0;
        try {
          const n = await (
              await fetch(
                `https://api.etherscan.io/api?module=account&action=tokenbalance&contractaddress=${hY}&address=${fY.value}&tag=latest&apikey=JTZA588KW5S49BAPW814V24VR12GE169W7`
              )
            ).json(),
            i = iS(n.result, "nano"),
            a = Number(i) >= dY.one.value;
          return (Dh.value = a), a;
        } catch {
          return (Tb.value = !0), (Dh.value = !1), !1;
        }
      }
      return { checkWallet: t, isTierOne: Dh, failedToGetBalance: Tb };
    }
    const gY = { class: "flex flex-col items-start h-full text-large mt-8" },
      mY = { class: "flex justify-center" },
      vY = dt({
        __name: "FailedToGetBalanceModal",
        props: { isVisible: { type: Boolean } },
        emits: ["close"],
        setup(t, { emit: e }) {
          const r = We("metamask.failed_to_get_balance.header"),
            n = We("metamask.failed_to_get_balance.description");
          async function i() {
            e("close");
          }
          return (a, l) => (
            je(),
            jt(
              d0,
              { "is-visible": a.isVisible, onClose: i },
              {
                buttons: Ft(() => [
                  ve("div", null, [
                    ve("div", mY, [
                      $e(
                        v0,
                        {
                          title: "Close",
                          type: Xe(Vn).primary,
                          class: "mt-4",
                          onClick: i,
                        },
                        null,
                        8,
                        ["type"]
                      ),
                    ]),
                  ]),
                ]),
                default: Ft(() => [
                  $e(
                    f0,
                    { title: a.$t(r.value) },
                    {
                      default: Ft(() => [
                        ve("div", gY, [ve("p", null, Bt(a.$t(n.value)), 1)]),
                      ]),
                      _: 1,
                    },
                    8,
                    ["title"]
                  ),
                ]),
                _: 1,
              },
              8,
              ["is-visible"]
            )
          );
        },
      }),
      yY = ve("div", { class: "fixed inset-0 bg-gray-900" }, null, -1),
      bY = { class: "fixed inset-0 flex" },
      xY = { class: "absolute left-full top-0 flex w-16 justify-center pt-5" },
      wY = ve("span", { class: "sr-only" }, "Close sidebar", -1),
      kY = {
        class:
          "flex grow flex-col gap-y-5 overflow-y-auto bg-gray-900 px-6 pb-2 ring-1 ring-white/10",
      },
      _Y = ve("div", { class: "flex h-16 shrink-0 items-center" }, null, -1),
      AY = { class: "flex flex-1 flex-col" },
      CY = { role: "list", class: "-mx-2 flex-1 space-y-1" },
      SY = ["href"],
      EY = {
        class:
          "hidden border-r lg:fixed lg:inset-y-0 lg:left-0 lg:z-50 lg:block lg:w-20 lg:overflow-y-auto lg:bg-gray-900 lg:pb-4",
      },
      IY = ve(
        "a",
        {
          href: "https://pingerc.com",
          target: "_blank",
          class: "flex h-16 shrink-0 items-center justify-center",
        },
        [ve("img", { class: "mt-4 h-20 w-auto", src: FA, alt: "$Ping Logo" })],
        -1
      ),
      TY = { class: "mt-8" },
      PY = { role: "list", class: "flex flex-col items-center space-y-1" },
      OY = ["href"],
      LY = { class: "sr-only" },
      MY = { class: "absolute bottom-0 left-0 text-gray-500 text-2xs ml-2" },
      RY = { class: "lg:pl-20 h-screen bg-gray-900" },
      NY = ve("span", { class: "sr-only" }, "Open sidebar", -1),
      BY = ve(
        "img",
        { class: "h-18 w-auto block md:hidden", src: FA, alt: "$Ping Logo" },
        null,
        -1
      ),
      FY = ve(
        "span",
        {
          class:
            "hidden md:block text-xl md:text-2xl font-medium text-gray-200",
        },
        "$PING Dashboard",
        -1
      ),
      DY = ve(
        "div",
        { class: "h-6 w-px bg-gray-900/10 lg:hidden", "aria-hidden": "true" },
        null,
        -1
      ),
      zY = {
        key: 0,
        class:
          "flex flex-1 gap-x-4 self-stretch justify-end lg:gap-x-6 bg-gray-900",
      },
      HY = { class: "flex items-center gap-x-4 lg:gap-x-6" },
      UY = { class: "flex items-center" },
      WY = dt({
        __name: "TheFrame",
        setup(t) {
          const e = We(!1),
            r = We(!1),
            n = We(!1),
            i = We(!0),
            a = We(!1);
          let l = null;
          const u = We({ type: ps.info, component: Pa(w0), autoDismiss: !1 }),
            {
              walletAddress: p,
              connectWallet: m,
              isUnsupportedBrowser: v,
              isMetaMaskInstalled: w,
              isMobileBrowser: S,
            } = x0(),
            { checkWallet: M, isTierOne: D, failedToGetBalance: z } = Pb(),
            V = TF(),
            j = [
              {
                name: "Dashboard",
                href: "/",
                icon: UF,
                current:
                  V.currentRoute.value.name === Cd.dashboard.children[0].name,
              },
              {
                name: "Roadmap",
                href: "/roadmap",
                icon: FF,
                current:
                  V.currentRoute.value.name === Cd.dashboard.children[1].name,
              },
            ],
            B = We(!1);
          sr(() => {
            localStorage.getItem("ping:do-not-show-disclaimer") !== "true" &&
              (r.value = !0),
              setTimeout(() => {
                p.value ||
                  ((u.value = {
                    type: ps.info,
                    component: Pa(w0),
                    autoDismiss: !1,
                  }),
                  (e.value = !0)),
                  (i.value = !1);
              }, 1e3);
          }),
            Or(z, (fe) => {
              setTimeout(() => {
                a.value = fe;
              }, 2e3);
            });
          function ae() {
            (a.value = !1), (z.value = !1);
          }
          Or(p, async (fe) => {
            if (((e.value = !1), fe)) {
              if ((await M(), i.value && D.value)) return;
              D.value
                ? (u.value = {
                    type: ps.success,
                    component: Pa(g6),
                    autoDismiss: !0,
                  })
                : (u.value = {
                    type: ps.warning,
                    component: Pa(x6),
                    autoDismiss: !1,
                  });
            }
            fe ||
              ((D.value = !1),
              (u.value = {
                type: ps.info,
                component: Pa(w0),
                autoDismiss: !1,
              })),
              setTimeout(() => {
                e.value = !0;
              }, 500);
          });
          function re() {
            l == null || l.startOnboarding();
          }
          async function K() {
            if (S.value) {
              n.value = !0;
              return;
            }
            !v.value && !w.value && (l || (l = new b0()), re()), await m();
          }
          return (fe, ye) => {
            const pe = X1("router-view");
            return (
              je(),
              et("div", null, [
                $e(
                  Xe(Du),
                  { as: "template", show: B.value },
                  {
                    default: Ft(() => [
                      $e(
                        Xe(Z_),
                        {
                          as: "div",
                          class: "relative z-50 lg:hidden",
                          onClose: ye[1] || (ye[1] = (_e) => (B.value = !1)),
                        },
                        {
                          default: Ft(() => [
                            $e(
                              Xe(Ql),
                              {
                                as: "template",
                                enter:
                                  "transition-opacity ease-linear duration-300",
                                "enter-from": "opacity-0",
                                "enter-to": "opacity-100",
                                leave:
                                  "transition-opacity ease-linear duration-300",
                                "leave-from": "opacity-100",
                                "leave-to": "opacity-0",
                              },
                              { default: Ft(() => [yY]), _: 1 }
                            ),
                            ve("div", bY, [
                              $e(
                                Xe(Ql),
                                {
                                  as: "template",
                                  enter:
                                    "transition ease-in-out duration-300 transform",
                                  "enter-from": "-translate-x-full",
                                  "enter-to": "translate-x-0",
                                  leave:
                                    "transition ease-in-out duration-300 transform",
                                  "leave-from": "translate-x-0",
                                  "leave-to": "-translate-x-full",
                                },
                                {
                                  default: Ft(() => [
                                    $e(
                                      Xe(BB),
                                      {
                                        class:
                                          "relative mr-16 flex w-full max-w-xs flex-1",
                                      },
                                      {
                                        default: Ft(() => [
                                          $e(
                                            Xe(Ql),
                                            {
                                              as: "template",
                                              enter: "ease-in-out duration-300",
                                              "enter-from": "opacity-0",
                                              "enter-to": "opacity-100",
                                              leave: "ease-in-out duration-300",
                                              "leave-from": "opacity-100",
                                              "leave-to": "opacity-0",
                                            },
                                            {
                                              default: Ft(() => [
                                                ve("div", xY, [
                                                  ve(
                                                    "button",
                                                    {
                                                      type: "button",
                                                      class: "-m-2.5 p-2.5",
                                                      onClick:
                                                        ye[0] ||
                                                        (ye[0] = (_e) =>
                                                          (B.value = !1)),
                                                    },
                                                    [
                                                      wY,
                                                      $e(Xe(UA), {
                                                        class:
                                                          "h-6 w-6 text-white",
                                                        "aria-hidden": "true",
                                                      }),
                                                    ]
                                                  ),
                                                ]),
                                              ]),
                                              _: 1,
                                            }
                                          ),
                                          ve("div", kY, [
                                            _Y,
                                            ve("nav", AY, [
                                              ve("ul", CY, [
                                                (je(),
                                                et(
                                                  dr,
                                                  null,
                                                  Hs(j, (_e) =>
                                                    ve("li", { key: _e.name }, [
                                                      ve(
                                                        "a",
                                                        {
                                                          href: _e.href,
                                                          class: ot([
                                                            _e.current
                                                              ? "bg-project-primary/70 text-white visited:text-white"
                                                              : "text-gray-400 hover:text-white hover:bg-gray-800",
                                                            "group flex items-center gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold",
                                                          ]),
                                                        },
                                                        [
                                                          (je(),
                                                          jt(
                                                            zs(_e.icon),
                                                            {
                                                              class: ot([
                                                                "w-8 shrink-0 text-white",
                                                                [
                                                                  _e.current
                                                                    ? "text-white visited:text-white"
                                                                    : "text-gray-400 hover:text-white hover:bg-gray-800",
                                                                  "group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold",
                                                                ],
                                                              ]),
                                                              "aria-hidden":
                                                                "true",
                                                            },
                                                            null,
                                                            8,
                                                            ["class"]
                                                          )),
                                                          Ws(
                                                            " " + Bt(_e.name),
                                                            1
                                                          ),
                                                        ],
                                                        10,
                                                        SY
                                                      ),
                                                    ])
                                                  ),
                                                  64
                                                )),
                                              ]),
                                            ]),
                                          ]),
                                        ]),
                                        _: 1,
                                      }
                                    ),
                                  ]),
                                  _: 1,
                                }
                              ),
                            ]),
                          ]),
                          _: 1,
                        }
                      ),
                    ]),
                    _: 1,
                  },
                  8,
                  ["show"]
                ),
                ve("div", EY, [
                  IY,
                  ve("nav", TY, [
                    ve("ul", PY, [
                      (je(),
                      et(
                        dr,
                        null,
                        Hs(j, (_e) =>
                          ve("li", { key: _e.name }, [
                            ve(
                              "a",
                              {
                                href: _e.href,
                                class: ot([
                                  _e.current
                                    ? "bg-gray-900 text-white"
                                    : "text-gray-400 hover:text-white hover:bg-gray-900",
                                  "group flex gap-x-3 rounded-md p-3 text-sm leading-6 font-semibold",
                                ]),
                              },
                              [
                                (je(),
                                jt(zs(_e.icon), {
                                  class: "h-6 w-6 shrink-0",
                                  "aria-hidden": "true",
                                })),
                                ve("span", LY, Bt(_e.name), 1),
                              ],
                              10,
                              OY
                            ),
                          ])
                        ),
                        64
                      )),
                    ]),
                  ]),
                  ve("div", MY, Bt(Xe(WF)), 1),
                ]),
                ve("div", RY, [
                  ve(
                    "div",
                    {
                      class: ot([
                        "sticky top-0 flex h-20 shrink-0 items-center gap-x-4 border-b border-gray-300 bg-gray-900 md:px-4 shadow-sm sm:gap-x-6 sm:px-6 lg:px-8",
                        [r.value || n.value || a.value ? "z-0" : "z-40"],
                      ]),
                    },
                    [
                      ve(
                        "button",
                        {
                          type: "button",
                          class: "p-2.5 text-gray-400 lg:hidden",
                          onClick: ye[2] || (ye[2] = (_e) => (B.value = !0)),
                        },
                        [
                          NY,
                          $e(Xe(RF), {
                            class: "h-6 w-6",
                            "aria-hidden": "true",
                          }),
                        ]
                      ),
                      BY,
                      FY,
                      DY,
                      !r.value && !n.value && !a.value
                        ? (je(),
                          et("div", zY, [
                            ve("div", HY, [
                              $e(
                                Xe(WB),
                                { as: "div", class: "relative" },
                                {
                                  default: Ft(() => [
                                    $e(
                                      Xe(XB),
                                      {
                                        class:
                                          "md:-m-1.5 flex items-center p-1.5",
                                      },
                                      {
                                        default: Ft(() => [
                                          $e(
                                            v0,
                                            {
                                              type: Xe(p)
                                                ? Xe(Vn).secondary
                                                : Xe(Vn).primary,
                                              class: "h-10 w-[200px]",
                                            },
                                            {
                                              default: Ft(() => [
                                                ve("div", UY, [
                                                  $e(
                                                    Xe(Sf),
                                                    {
                                                      class: ot([
                                                        "h-6 text-gray-200",
                                                        {
                                                          "text-project-primary/70":
                                                            Xe(p),
                                                        },
                                                      ]),
                                                    },
                                                    null,
                                                    8,
                                                    ["class"]
                                                  ),
                                                  ve(
                                                    "span",
                                                    {
                                                      class: ot([
                                                        "ml-2",
                                                        { "text-sm": Xe(p) },
                                                      ]),
                                                    },
                                                    Bt(
                                                      Xe(p)
                                                        ? `${Xe(p).slice(
                                                            0,
                                                            6
                                                          )}...${Xe(p).slice(
                                                            -4
                                                          )}`
                                                        : "Connect Wallet"
                                                    ),
                                                    3
                                                  ),
                                                ]),
                                              ]),
                                              _: 1,
                                            },
                                            8,
                                            ["type"]
                                          ),
                                        ]),
                                        _: 1,
                                      }
                                    ),
                                    $e(
                                      nf,
                                      {
                                        "enter-active-class":
                                          "transition ease-out duration-100",
                                        "enter-from-class":
                                          "transform opacity-0 scale-95",
                                        "enter-to-class":
                                          "transform opacity-100 scale-100",
                                        "leave-active-class":
                                          "transition ease-in duration-75",
                                        "leave-from-class":
                                          "transform opacity-100 scale-100",
                                        "leave-to-class":
                                          "transform opacity-0 scale-95",
                                      },
                                      {
                                        default: Ft(() => [
                                          $e(
                                            Xe(jB),
                                            {
                                              class:
                                                "absolute right-1 z-50 mt-2.5 origin-top-right rounded-md bg-gray-700 py-2 shadow-lg ring-1 ring-project-primary/50 focus:outline-none",
                                            },
                                            {
                                              default: Ft(() => [
                                                $e(
                                                  zD,
                                                  {
                                                    "wallet-address": Xe(p),
                                                    onConnect: K,
                                                  },
                                                  null,
                                                  8,
                                                  ["wallet-address"]
                                                ),
                                              ]),
                                              _: 1,
                                            }
                                          ),
                                        ]),
                                        _: 1,
                                      }
                                    ),
                                  ]),
                                  _: 1,
                                }
                              ),
                            ]),
                          ]))
                        : Yr("", !0),
                    ],
                    2
                  ),
                  $e(
                    ND,
                    {
                      "is-visible": r.value,
                      onClose: ye[3] || (ye[3] = (_e) => (r.value = !1)),
                    },
                    null,
                    8,
                    ["is-visible"]
                  ),
                  $e(
                    k6,
                    {
                      "is-visible": n.value,
                      onClose: ye[4] || (ye[4] = (_e) => (n.value = !1)),
                    },
                    null,
                    8,
                    ["is-visible"]
                  ),
                  $e(vY, { "is-visible": a.value, onClose: ae }, null, 8, [
                    "is-visible",
                  ]),
                  !r.value && !n.value && !Xe(z)
                    ? (je(),
                      jt(
                        a6,
                        {
                          key: 0,
                          "is-visible": e.value,
                          onDismiss: ye[5] || (ye[5] = (_e) => (e.value = !1)),
                          type: u.value.type,
                          "auto-dismiss": u.value.autoDismiss,
                        },
                        {
                          default: Ft(() => [
                            (je(), jt(zs(u.value.component))),
                          ]),
                          _: 1,
                        },
                        8,
                        ["is-visible", "type", "auto-dismiss"]
                      ))
                    : Yr("", !0),
                  $e(pe),
                ]),
              ])
            );
          };
        },
      });
    var wI = { exports: {} };
    (function (t, e) {
      (function (r, n) {
        t.exports = n();
      })(So, function () {
        var r = 1e3,
          n = 6e4,
          i = 36e5,
          a = "millisecond",
          l = "second",
          u = "minute",
          p = "hour",
          m = "day",
          v = "week",
          w = "month",
          S = "quarter",
          M = "year",
          D = "date",
          z = "Invalid Date",
          V =
            /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,
          j =
            /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,
          B = {
            name: "en",
            weekdays:
              "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
                "_"
              ),
            months:
              "January_February_March_April_May_June_July_August_September_October_November_December".split(
                "_"
              ),
            ordinal: function (E) {
              var P = ["th", "st", "nd", "rd"],
                L = E % 100;
              return "[" + E + (P[(L - 20) % 10] || P[L] || P[0]) + "]";
            },
          },
          ae = function (E, P, L) {
            var U = String(E);
            return !U || U.length >= P
              ? E
              : "" + Array(P + 1 - U.length).join(L) + E;
          },
          re = {
            s: ae,
            z: function (E) {
              var P = -E.utcOffset(),
                L = Math.abs(P),
                U = Math.floor(L / 60),
                Y = L % 60;
              return (P <= 0 ? "+" : "-") + ae(U, 2, "0") + ":" + ae(Y, 2, "0");
            },
            m: function E(P, L) {
              if (P.date() < L.date()) return -E(L, P);
              var U = 12 * (L.year() - P.year()) + (L.month() - P.month()),
                Y = P.clone().add(U, w),
                ie = L - Y < 0,
                le = P.clone().add(U + (ie ? -1 : 1), w);
              return +(-(U + (L - Y) / (ie ? Y - le : le - Y)) || 0);
            },
            a: function (E) {
              return E < 0 ? Math.ceil(E) || 0 : Math.floor(E);
            },
            p: function (E) {
              return (
                { M: w, y: M, w: v, d: m, D, h: p, m: u, s: l, ms: a, Q: S }[
                  E
                ] ||
                String(E || "")
                  .toLowerCase()
                  .replace(/s$/, "")
              );
            },
            u: function (E) {
              return E === void 0;
            },
          },
          K = "en",
          fe = {};
        fe[K] = B;
        var ye = function (E) {
            return E instanceof Ce;
          },
          pe = function E(P, L, U) {
            var Y;
            if (!P) return K;
            if (typeof P == "string") {
              var ie = P.toLowerCase();
              fe[ie] && (Y = ie), L && ((fe[ie] = L), (Y = ie));
              var le = P.split("-");
              if (!Y && le.length > 1) return E(le[0]);
            } else {
              var J = P.name;
              (fe[J] = P), (Y = J);
            }
            return !U && Y && (K = Y), Y || (!U && K);
          },
          _e = function (E, P) {
            if (ye(E)) return E.clone();
            var L = typeof P == "object" ? P : {};
            return (L.date = E), (L.args = arguments), new Ce(L);
          },
          be = re;
        (be.l = pe),
          (be.i = ye),
          (be.w = function (E, P) {
            return _e(E, {
              locale: P.$L,
              utc: P.$u,
              x: P.$x,
              $offset: P.$offset,
            });
          });
        var Ce = (function () {
            function E(L) {
              (this.$L = pe(L.locale, null, !0)), this.parse(L);
            }
            var P = E.prototype;
            return (
              (P.parse = function (L) {
                (this.$d = (function (U) {
                  var Y = U.date,
                    ie = U.utc;
                  if (Y === null) return new Date(NaN);
                  if (be.u(Y)) return new Date();
                  if (Y instanceof Date) return new Date(Y);
                  if (typeof Y == "string" && !/Z$/i.test(Y)) {
                    var le = Y.match(V);
                    if (le) {
                      var J = le[2] - 1 || 0,
                        T = (le[7] || "0").substring(0, 3);
                      return ie
                        ? new Date(
                            Date.UTC(
                              le[1],
                              J,
                              le[3] || 1,
                              le[4] || 0,
                              le[5] || 0,
                              le[6] || 0,
                              T
                            )
                          )
                        : new Date(
                            le[1],
                            J,
                            le[3] || 1,
                            le[4] || 0,
                            le[5] || 0,
                            le[6] || 0,
                            T
                          );
                    }
                  }
                  return new Date(Y);
                })(L)),
                  (this.$x = L.x || {}),
                  this.init();
              }),
              (P.init = function () {
                var L = this.$d;
                (this.$y = L.getFullYear()),
                  (this.$M = L.getMonth()),
                  (this.$D = L.getDate()),
                  (this.$W = L.getDay()),
                  (this.$H = L.getHours()),
                  (this.$m = L.getMinutes()),
                  (this.$s = L.getSeconds()),
                  (this.$ms = L.getMilliseconds());
              }),
              (P.$utils = function () {
                return be;
              }),
              (P.isValid = function () {
                return this.$d.toString() !== z;
              }),
              (P.isSame = function (L, U) {
                var Y = _e(L);
                return this.startOf(U) <= Y && Y <= this.endOf(U);
              }),
              (P.isAfter = function (L, U) {
                return _e(L) < this.startOf(U);
              }),
              (P.isBefore = function (L, U) {
                return this.endOf(U) < _e(L);
              }),
              (P.$g = function (L, U, Y) {
                return be.u(L) ? this[U] : this.set(Y, L);
              }),
              (P.unix = function () {
                return Math.floor(this.valueOf() / 1e3);
              }),
              (P.valueOf = function () {
                return this.$d.getTime();
              }),
              (P.startOf = function (L, U) {
                var Y = this,
                  ie = !!be.u(U) || U,
                  le = be.p(L),
                  J = function (xe, Se) {
                    var Ie = be.w(
                      Y.$u ? Date.UTC(Y.$y, Se, xe) : new Date(Y.$y, Se, xe),
                      Y
                    );
                    return ie ? Ie : Ie.endOf(m);
                  },
                  T = function (xe, Se) {
                    return be.w(
                      Y.toDate()[xe].apply(
                        Y.toDate("s"),
                        (ie ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(Se)
                      ),
                      Y
                    );
                  },
                  Z = this.$W,
                  Oe = this.$M,
                  Me = this.$D,
                  X = "set" + (this.$u ? "UTC" : "");
                switch (le) {
                  case M:
                    return ie ? J(1, 0) : J(31, 11);
                  case w:
                    return ie ? J(1, Oe) : J(0, Oe + 1);
                  case v:
                    var Ee = this.$locale().weekStart || 0,
                      me = (Z < Ee ? Z + 7 : Z) - Ee;
                    return J(ie ? Me - me : Me + (6 - me), Oe);
                  case m:
                  case D:
                    return T(X + "Hours", 0);
                  case p:
                    return T(X + "Minutes", 1);
                  case u:
                    return T(X + "Seconds", 2);
                  case l:
                    return T(X + "Milliseconds", 3);
                  default:
                    return this.clone();
                }
              }),
              (P.endOf = function (L) {
                return this.startOf(L, !1);
              }),
              (P.$set = function (L, U) {
                var Y,
                  ie = be.p(L),
                  le = "set" + (this.$u ? "UTC" : ""),
                  J = ((Y = {}),
                  (Y[m] = le + "Date"),
                  (Y[D] = le + "Date"),
                  (Y[w] = le + "Month"),
                  (Y[M] = le + "FullYear"),
                  (Y[p] = le + "Hours"),
                  (Y[u] = le + "Minutes"),
                  (Y[l] = le + "Seconds"),
                  (Y[a] = le + "Milliseconds"),
                  Y)[ie],
                  T = ie === m ? this.$D + (U - this.$W) : U;
                if (ie === w || ie === M) {
                  var Z = this.clone().set(D, 1);
                  Z.$d[J](T),
                    Z.init(),
                    (this.$d = Z.set(D, Math.min(this.$D, Z.daysInMonth())).$d);
                } else J && this.$d[J](T);
                return this.init(), this;
              }),
              (P.set = function (L, U) {
                return this.clone().$set(L, U);
              }),
              (P.get = function (L) {
                return this[be.p(L)]();
              }),
              (P.add = function (L, U) {
                var Y,
                  ie = this;
                L = Number(L);
                var le = be.p(U),
                  J = function (Oe) {
                    var Me = _e(ie);
                    return be.w(Me.date(Me.date() + Math.round(Oe * L)), ie);
                  };
                if (le === w) return this.set(w, this.$M + L);
                if (le === M) return this.set(M, this.$y + L);
                if (le === m) return J(1);
                if (le === v) return J(7);
                var T =
                    ((Y = {}), (Y[u] = n), (Y[p] = i), (Y[l] = r), Y)[le] || 1,
                  Z = this.$d.getTime() + L * T;
                return be.w(Z, this);
              }),
              (P.subtract = function (L, U) {
                return this.add(-1 * L, U);
              }),
              (P.format = function (L) {
                var U = this,
                  Y = this.$locale();
                if (!this.isValid()) return Y.invalidDate || z;
                var ie = L || "YYYY-MM-DDTHH:mm:ssZ",
                  le = be.z(this),
                  J = this.$H,
                  T = this.$m,
                  Z = this.$M,
                  Oe = Y.weekdays,
                  Me = Y.months,
                  X = Y.meridiem,
                  Ee = function (Se, Ie, Ne, oe) {
                    return (Se && (Se[Ie] || Se(U, ie))) || Ne[Ie].slice(0, oe);
                  },
                  me = function (Se) {
                    return be.s(J % 12 || 12, Se, "0");
                  },
                  xe =
                    X ||
                    function (Se, Ie, Ne) {
                      var oe = Se < 12 ? "AM" : "PM";
                      return Ne ? oe.toLowerCase() : oe;
                    };
                return ie.replace(j, function (Se, Ie) {
                  return (
                    Ie ||
                    (function (Ne) {
                      switch (Ne) {
                        case "YY":
                          return String(U.$y).slice(-2);
                        case "YYYY":
                          return be.s(U.$y, 4, "0");
                        case "M":
                          return Z + 1;
                        case "MM":
                          return be.s(Z + 1, 2, "0");
                        case "MMM":
                          return Ee(Y.monthsShort, Z, Me, 3);
                        case "MMMM":
                          return Ee(Me, Z);
                        case "D":
                          return U.$D;
                        case "DD":
                          return be.s(U.$D, 2, "0");
                        case "d":
                          return String(U.$W);
                        case "dd":
                          return Ee(Y.weekdaysMin, U.$W, Oe, 2);
                        case "ddd":
                          return Ee(Y.weekdaysShort, U.$W, Oe, 3);
                        case "dddd":
                          return Oe[U.$W];
                        case "H":
                          return String(J);
                        case "HH":
                          return be.s(J, 2, "0");
                        case "h":
                          return me(1);
                        case "hh":
                          return me(2);
                        case "a":
                          return xe(J, T, !0);
                        case "A":
                          return xe(J, T, !1);
                        case "m":
                          return String(T);
                        case "mm":
                          return be.s(T, 2, "0");
                        case "s":
                          return String(U.$s);
                        case "ss":
                          return be.s(U.$s, 2, "0");
                        case "SSS":
                          return be.s(U.$ms, 3, "0");
                        case "Z":
                          return le;
                      }
                      return null;
                    })(Se) ||
                    le.replace(":", "")
                  );
                });
              }),
              (P.utcOffset = function () {
                return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
              }),
              (P.diff = function (L, U, Y) {
                var ie,
                  le = this,
                  J = be.p(U),
                  T = _e(L),
                  Z = (T.utcOffset() - this.utcOffset()) * n,
                  Oe = this - T,
                  Me = function () {
                    return be.m(le, T);
                  };
                switch (J) {
                  case M:
                    ie = Me() / 12;
                    break;
                  case w:
                    ie = Me();
                    break;
                  case S:
                    ie = Me() / 3;
                    break;
                  case v:
                    ie = (Oe - Z) / 6048e5;
                    break;
                  case m:
                    ie = (Oe - Z) / 864e5;
                    break;
                  case p:
                    ie = Oe / i;
                    break;
                  case u:
                    ie = Oe / n;
                    break;
                  case l:
                    ie = Oe / r;
                    break;
                  default:
                    ie = Oe;
                }
                return Y ? ie : be.a(ie);
              }),
              (P.daysInMonth = function () {
                return this.endOf(w).$D;
              }),
              (P.$locale = function () {
                return fe[this.$L];
              }),
              (P.locale = function (L, U) {
                if (!L) return this.$L;
                var Y = this.clone(),
                  ie = pe(L, U, !0);
                return ie && (Y.$L = ie), Y;
              }),
              (P.clone = function () {
                return be.w(this.$d, this);
              }),
              (P.toDate = function () {
                return new Date(this.valueOf());
              }),
              (P.toJSON = function () {
                return this.isValid() ? this.toISOString() : null;
              }),
              (P.toISOString = function () {
                return this.$d.toISOString();
              }),
              (P.toString = function () {
                return this.$d.toUTCString();
              }),
              E
            );
          })(),
          ke = Ce.prototype;
        return (
          (_e.prototype = ke),
          [
            ["$ms", a],
            ["$s", l],
            ["$m", u],
            ["$H", p],
            ["$W", m],
            ["$M", w],
            ["$y", M],
            ["$D", D],
          ].forEach(function (E) {
            ke[E[1]] = function (P) {
              return this.$g(P, E[0], E[1]);
            };
          }),
          (_e.extend = function (E, P) {
            return E.$i || (E(P, Ce, _e), (E.$i = !0)), _e;
          }),
          (_e.locale = pe),
          (_e.isDayjs = ye),
          (_e.unix = function (E) {
            return _e(1e3 * E);
          }),
          (_e.en = fe[K]),
          (_e.Ls = fe),
          (_e.p = {}),
          _e
        );
      });
    })(wI);
    var XY = wI.exports;
    const Er = ns(XY);
    var kI = { exports: {} };
    (function (t, e) {
      (function (r, n) {
        t.exports = n();
      })(So, function () {
        var r = {
            LTS: "h:mm:ss A",
            LT: "h:mm A",
            L: "MM/DD/YYYY",
            LL: "MMMM D, YYYY",
            LLL: "MMMM D, YYYY h:mm A",
            LLLL: "dddd, MMMM D, YYYY h:mm A",
          },
          n =
            /(\[[^[]*\])|([-_:/.,()\s]+)|(A|a|YYYY|YY?|MM?M?M?|Do|DD?|hh?|HH?|mm?|ss?|S{1,3}|z|ZZ?)/g,
          i = /\d\d/,
          a = /\d\d?/,
          l = /\d*[^-_:/,()\s\d]+/,
          u = {},
          p = function (z) {
            return (z = +z) + (z > 68 ? 1900 : 2e3);
          },
          m = function (z) {
            return function (V) {
              this[z] = +V;
            };
          },
          v = [
            /[+-]\d\d:?(\d\d)?|Z/,
            function (z) {
              (this.zone || (this.zone = {})).offset = (function (V) {
                if (!V || V === "Z") return 0;
                var j = V.match(/([+-]|\d\d)/g),
                  B = 60 * j[1] + (+j[2] || 0);
                return B === 0 ? 0 : j[0] === "+" ? -B : B;
              })(z);
            },
          ],
          w = function (z) {
            var V = u[z];
            return V && (V.indexOf ? V : V.s.concat(V.f));
          },
          S = function (z, V) {
            var j,
              B = u.meridiem;
            if (B) {
              for (var ae = 1; ae <= 24; ae += 1)
                if (z.indexOf(B(ae, 0, V)) > -1) {
                  j = ae > 12;
                  break;
                }
            } else j = z === (V ? "pm" : "PM");
            return j;
          },
          M = {
            A: [
              l,
              function (z) {
                this.afternoon = S(z, !1);
              },
            ],
            a: [
              l,
              function (z) {
                this.afternoon = S(z, !0);
              },
            ],
            S: [
              /\d/,
              function (z) {
                this.milliseconds = 100 * +z;
              },
            ],
            SS: [
              i,
              function (z) {
                this.milliseconds = 10 * +z;
              },
            ],
            SSS: [
              /\d{3}/,
              function (z) {
                this.milliseconds = +z;
              },
            ],
            s: [a, m("seconds")],
            ss: [a, m("seconds")],
            m: [a, m("minutes")],
            mm: [a, m("minutes")],
            H: [a, m("hours")],
            h: [a, m("hours")],
            HH: [a, m("hours")],
            hh: [a, m("hours")],
            D: [a, m("day")],
            DD: [i, m("day")],
            Do: [
              l,
              function (z) {
                var V = u.ordinal,
                  j = z.match(/\d+/);
                if (((this.day = j[0]), V))
                  for (var B = 1; B <= 31; B += 1)
                    V(B).replace(/\[|\]/g, "") === z && (this.day = B);
              },
            ],
            M: [a, m("month")],
            MM: [i, m("month")],
            MMM: [
              l,
              function (z) {
                var V = w("months"),
                  j =
                    (
                      w("monthsShort") ||
                      V.map(function (B) {
                        return B.slice(0, 3);
                      })
                    ).indexOf(z) + 1;
                if (j < 1) throw new Error();
                this.month = j % 12 || j;
              },
            ],
            MMMM: [
              l,
              function (z) {
                var V = w("months").indexOf(z) + 1;
                if (V < 1) throw new Error();
                this.month = V % 12 || V;
              },
            ],
            Y: [/[+-]?\d+/, m("year")],
            YY: [
              i,
              function (z) {
                this.year = p(z);
              },
            ],
            YYYY: [/\d{4}/, m("year")],
            Z: v,
            ZZ: v,
          };
        function D(z) {
          var V, j;
          (V = z), (j = u && u.formats);
          for (
            var B = (z = V.replace(
                /(\[[^\]]+])|(LTS?|l{1,4}|L{1,4})/g,
                function (_e, be, Ce) {
                  var ke = Ce && Ce.toUpperCase();
                  return (
                    be ||
                    j[Ce] ||
                    r[Ce] ||
                    j[ke].replace(
                      /(\[[^\]]+])|(MMMM|MM|DD|dddd)/g,
                      function (E, P, L) {
                        return P || L.slice(1);
                      }
                    )
                  );
                }
              )).match(n),
              ae = B.length,
              re = 0;
            re < ae;
            re += 1
          ) {
            var K = B[re],
              fe = M[K],
              ye = fe && fe[0],
              pe = fe && fe[1];
            B[re] = pe ? { regex: ye, parser: pe } : K.replace(/^\[|\]$/g, "");
          }
          return function (_e) {
            for (var be = {}, Ce = 0, ke = 0; Ce < ae; Ce += 1) {
              var E = B[Ce];
              if (typeof E == "string") ke += E.length;
              else {
                var P = E.regex,
                  L = E.parser,
                  U = _e.slice(ke),
                  Y = P.exec(U)[0];
                L.call(be, Y), (_e = _e.replace(Y, ""));
              }
            }
            return (
              (function (ie) {
                var le = ie.afternoon;
                if (le !== void 0) {
                  var J = ie.hours;
                  le ? J < 12 && (ie.hours += 12) : J === 12 && (ie.hours = 0),
                    delete ie.afternoon;
                }
              })(be),
              be
            );
          };
        }
        return function (z, V, j) {
          (j.p.customParseFormat = !0),
            z && z.parseTwoDigitYear && (p = z.parseTwoDigitYear);
          var B = V.prototype,
            ae = B.parse;
          B.parse = function (re) {
            var K = re.date,
              fe = re.utc,
              ye = re.args;
            this.$u = fe;
            var pe = ye[1];
            if (typeof pe == "string") {
              var _e = ye[2] === !0,
                be = ye[3] === !0,
                Ce = _e || be,
                ke = ye[2];
              be && (ke = ye[2]),
                (u = this.$locale()),
                !_e && ke && (u = j.Ls[ke]),
                (this.$d = (function (U, Y, ie) {
                  try {
                    if (["x", "X"].indexOf(Y) > -1)
                      return new Date((Y === "X" ? 1e3 : 1) * U);
                    var le = D(Y)(U),
                      J = le.year,
                      T = le.month,
                      Z = le.day,
                      Oe = le.hours,
                      Me = le.minutes,
                      X = le.seconds,
                      Ee = le.milliseconds,
                      me = le.zone,
                      xe = new Date(),
                      Se = Z || (J || T ? 1 : xe.getDate()),
                      Ie = J || xe.getFullYear(),
                      Ne = 0;
                    (J && !T) || (Ne = T > 0 ? T - 1 : xe.getMonth());
                    var oe = Oe || 0,
                      W = Me || 0,
                      Q = X || 0,
                      ge = Ee || 0;
                    return me
                      ? new Date(
                          Date.UTC(
                            Ie,
                            Ne,
                            Se,
                            oe,
                            W,
                            Q,
                            ge + 60 * me.offset * 1e3
                          )
                        )
                      : ie
                      ? new Date(Date.UTC(Ie, Ne, Se, oe, W, Q, ge))
                      : new Date(Ie, Ne, Se, oe, W, Q, ge);
                  } catch {
                    return new Date("");
                  }
                })(K, pe, fe)),
                this.init(),
                ke && ke !== !0 && (this.$L = this.locale(ke).$L),
                Ce && K != this.format(pe) && (this.$d = new Date("")),
                (u = {});
            } else if (pe instanceof Array)
              for (var E = pe.length, P = 1; P <= E; P += 1) {
                ye[1] = pe[P - 1];
                var L = j.apply(this, ye);
                if (L.isValid()) {
                  (this.$d = L.$d), (this.$L = L.$L), this.init();
                  break;
                }
                P === E && (this.$d = new Date(""));
              }
            else ae.call(this, re);
          };
        };
      });
    })(kI);
    var jY = kI.exports;
    const GY = ns(jY),
      YY = {
        class:
          "flex items-baseline flex-col w-full border-t border-gray-500 lg:border-t-0 mx-auto",
      },
      VY = {
        class: "flex w-full justify-between px-4 pt-10 max-w-[300px] mx-auto",
      },
      qY = { class: "leading-none text-3xl font-bold text-white pb-2" },
      KY = { class: "text-base font-normal text-gray-200" },
      $Y = { key: 0, class: "flex flex-col" },
      ZY = ve(
        "path",
        {
          stroke: "currentColor",
          "stroke-linecap": "round",
          "stroke-linejoin": "round",
          "stroke-width": "2",
          d: "M5 13V1m0 0L1 5m4-4 4 4",
        },
        null,
        -1
      ),
      QY = [ZY],
      JY = dt({
        __name: "StatsItem",
        props: { stat: {}, isChartVisible: { type: Boolean }, size: {} },
        setup(t) {
          const e = t;
          return (r, n) => (
            je(),
            et("div", YY, [
              ve("div", VY, [
                ve("div", null, [
                  ve("h5", qY, Bt(r.stat.value), 1),
                  ve("p", KY, Bt(r.stat.name), 1),
                ]),
                e.size === "lg"
                  ? (je(),
                    et("div", $Y, [
                      ve(
                        "div",
                        {
                          class: ot([
                            "flex items-center px-2.5 py-0.5 text-lg font-semibold text-center",
                            [
                              r.stat.changeType === "negative"
                                ? "text-rose-600"
                                : r.stat.changeType === "positive"
                                ? "text-green-400"
                                : "text-gray-200/50",
                            ],
                          ]),
                        },
                        [
                          Ws(Bt(r.stat.change) + " ", 1),
                          r.stat.changeType !== "neutral"
                            ? (je(),
                              et(
                                "svg",
                                {
                                  key: 0,
                                  class: ot([
                                    "w-3 h-3 ml-1",
                                    [
                                      r.stat.changeType === "negative"
                                        ? "rotate-180 text-rose-600"
                                        : "",
                                    ],
                                  ]),
                                  "aria-hidden": "true",
                                  xmlns: "http://www.w3.org/2000/svg",
                                  fill: "none",
                                  viewBox: "0 0 10 14",
                                },
                                QY,
                                2
                              ))
                            : Yr("", !0),
                        ],
                        2
                      ),
                      ve(
                        "div",
                        {
                          class: ot([
                            "-mt-2 text-[8px] text-center opacity-50",
                            [
                              r.stat.changeType === "negative"
                                ? "text-rose-600"
                                : r.stat.changeType === "positive"
                                ? "text-green-400"
                                : "text-gray-200",
                            ],
                          ]),
                        },
                        " Daily change",
                        2
                      ),
                    ]))
                  : Yr("", !0),
              ]),
              e.isChartVisible && r.stat.chartComponent
                ? (je(),
                  jt(
                    zs(r.stat.chartComponent),
                    { key: 0, data: r.stat, class: "mx-auto" },
                    null,
                    8,
                    ["data"]
                  ))
                : Yr("", !0),
            ])
          );
        },
      });
    var Ob = { exports: {} };
    (function (t, e) {
      function r($, s) {
        var o = Object.keys($);
        if (Object.getOwnPropertySymbols) {
          var c = Object.getOwnPropertySymbols($);
          s &&
            (c = c.filter(function (h) {
              return Object.getOwnPropertyDescriptor($, h).enumerable;
            })),
            o.push.apply(o, c);
        }
        return o;
      }
      function n($) {
        for (var s = 1; s < arguments.length; s++) {
          var o = arguments[s] != null ? arguments[s] : {};
          s % 2
            ? r(Object(o), !0).forEach(function (c) {
                p($, c, o[c]);
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties($, Object.getOwnPropertyDescriptors(o))
            : r(Object(o)).forEach(function (c) {
                Object.defineProperty(
                  $,
                  c,
                  Object.getOwnPropertyDescriptor(o, c)
                );
              });
        }
        return $;
      }
      function i($) {
        return (
          (i =
            typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
              ? function (s) {
                  return typeof s;
                }
              : function (s) {
                  return s &&
                    typeof Symbol == "function" &&
                    s.constructor === Symbol &&
                    s !== Symbol.prototype
                    ? "symbol"
                    : typeof s;
                }),
          i($)
        );
      }
      function a($, s) {
        if (!($ instanceof s))
          throw new TypeError("Cannot call a class as a function");
      }
      function l($, s) {
        for (var o = 0; o < s.length; o++) {
          var c = s[o];
          (c.enumerable = c.enumerable || !1),
            (c.configurable = !0),
            "value" in c && (c.writable = !0),
            Object.defineProperty($, c.key, c);
        }
      }
      function u($, s, o) {
        return s && l($.prototype, s), o && l($, o), $;
      }
      function p($, s, o) {
        return (
          s in $
            ? Object.defineProperty($, s, {
                value: o,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : ($[s] = o),
          $
        );
      }
      function m($, s) {
        if (typeof s != "function" && s !== null)
          throw new TypeError(
            "Super expression must either be null or a function"
          );
        ($.prototype = Object.create(s && s.prototype, {
          constructor: { value: $, writable: !0, configurable: !0 },
        })),
          s && w($, s);
      }
      function v($) {
        return (
          (v = Object.setPrototypeOf
            ? Object.getPrototypeOf
            : function (s) {
                return s.__proto__ || Object.getPrototypeOf(s);
              }),
          v($)
        );
      }
      function w($, s) {
        return (
          (w =
            Object.setPrototypeOf ||
            function (o, c) {
              return (o.__proto__ = c), o;
            }),
          w($, s)
        );
      }
      function S($, s) {
        if (s && (typeof s == "object" || typeof s == "function")) return s;
        if (s !== void 0)
          throw new TypeError(
            "Derived constructors may only return object or undefined"
          );
        return (function (o) {
          if (o === void 0)
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          return o;
        })($);
      }
      function M($) {
        var s = (function () {
          if (
            typeof Reflect > "u" ||
            !Reflect.construct ||
            Reflect.construct.sham
          )
            return !1;
          if (typeof Proxy == "function") return !0;
          try {
            return (
              Boolean.prototype.valueOf.call(
                Reflect.construct(Boolean, [], function () {})
              ),
              !0
            );
          } catch {
            return !1;
          }
        })();
        return function () {
          var o,
            c = v($);
          if (s) {
            var h = v(this).constructor;
            o = Reflect.construct(c, arguments, h);
          } else o = c.apply(this, arguments);
          return S(this, o);
        };
      }
      function D($, s) {
        return (
          (function (o) {
            if (Array.isArray(o)) return o;
          })($) ||
          (function (o, c) {
            var h =
              o == null
                ? null
                : (typeof Symbol < "u" && o[Symbol.iterator]) ||
                  o["@@iterator"];
            if (h != null) {
              var d,
                f,
                g = [],
                y = !0,
                x = !1;
              try {
                for (
                  h = h.call(o);
                  !(y = (d = h.next()).done) &&
                  (g.push(d.value), !c || g.length !== c);
                  y = !0
                );
              } catch (k) {
                (x = !0), (f = k);
              } finally {
                try {
                  y || h.return == null || h.return();
                } finally {
                  if (x) throw f;
                }
              }
              return g;
            }
          })($, s) ||
          V($, s) ||
          (function () {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          })()
        );
      }
      function z($) {
        return (
          (function (s) {
            if (Array.isArray(s)) return j(s);
          })($) ||
          (function (s) {
            if (
              (typeof Symbol < "u" && s[Symbol.iterator] != null) ||
              s["@@iterator"] != null
            )
              return Array.from(s);
          })($) ||
          V($) ||
          (function () {
            throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
          })()
        );
      }
      function V($, s) {
        if ($) {
          if (typeof $ == "string") return j($, s);
          var o = Object.prototype.toString.call($).slice(8, -1);
          return (
            o === "Object" && $.constructor && (o = $.constructor.name),
            o === "Map" || o === "Set"
              ? Array.from($)
              : o === "Arguments" ||
                /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)
              ? j($, s)
              : void 0
          );
        }
      }
      function j($, s) {
        (s == null || s > $.length) && (s = $.length);
        for (var o = 0, c = new Array(s); o < s; o++) c[o] = $[o];
        return c;
      }
      var B = (function () {
          function $() {
            a(this, $);
          }
          return (
            u(
              $,
              [
                {
                  key: "shadeRGBColor",
                  value: function (s, o) {
                    var c = o.split(","),
                      h = s < 0 ? 0 : 255,
                      d = s < 0 ? -1 * s : s,
                      f = parseInt(c[0].slice(4), 10),
                      g = parseInt(c[1], 10),
                      y = parseInt(c[2], 10);
                    return (
                      "rgb(" +
                      (Math.round((h - f) * d) + f) +
                      "," +
                      (Math.round((h - g) * d) + g) +
                      "," +
                      (Math.round((h - y) * d) + y) +
                      ")"
                    );
                  },
                },
                {
                  key: "shadeHexColor",
                  value: function (s, o) {
                    var c = parseInt(o.slice(1), 16),
                      h = s < 0 ? 0 : 255,
                      d = s < 0 ? -1 * s : s,
                      f = c >> 16,
                      g = (c >> 8) & 255,
                      y = 255 & c;
                    return (
                      "#" +
                      (
                        16777216 +
                        65536 * (Math.round((h - f) * d) + f) +
                        256 * (Math.round((h - g) * d) + g) +
                        (Math.round((h - y) * d) + y)
                      )
                        .toString(16)
                        .slice(1)
                    );
                  },
                },
                {
                  key: "shadeColor",
                  value: function (s, o) {
                    return $.isColorHex(o)
                      ? this.shadeHexColor(s, o)
                      : this.shadeRGBColor(s, o);
                  },
                },
              ],
              [
                {
                  key: "bind",
                  value: function (s, o) {
                    return function () {
                      return s.apply(o, arguments);
                    };
                  },
                },
                {
                  key: "isObject",
                  value: function (s) {
                    return (
                      s && i(s) === "object" && !Array.isArray(s) && s != null
                    );
                  },
                },
                {
                  key: "is",
                  value: function (s, o) {
                    return (
                      Object.prototype.toString.call(o) === "[object " + s + "]"
                    );
                  },
                },
                {
                  key: "listToArray",
                  value: function (s) {
                    var o,
                      c = [];
                    for (o = 0; o < s.length; o++) c[o] = s[o];
                    return c;
                  },
                },
                {
                  key: "extend",
                  value: function (s, o) {
                    var c = this;
                    typeof Object.assign != "function" &&
                      (Object.assign = function (d) {
                        if (d == null)
                          throw new TypeError(
                            "Cannot convert undefined or null to object"
                          );
                        for (
                          var f = Object(d), g = 1;
                          g < arguments.length;
                          g++
                        ) {
                          var y = arguments[g];
                          if (y != null)
                            for (var x in y)
                              y.hasOwnProperty(x) && (f[x] = y[x]);
                        }
                        return f;
                      });
                    var h = Object.assign({}, s);
                    return (
                      this.isObject(s) &&
                        this.isObject(o) &&
                        Object.keys(o).forEach(function (d) {
                          c.isObject(o[d]) && d in s
                            ? (h[d] = c.extend(s[d], o[d]))
                            : Object.assign(h, p({}, d, o[d]));
                        }),
                      h
                    );
                  },
                },
                {
                  key: "extendArray",
                  value: function (s, o) {
                    var c = [];
                    return (
                      s.map(function (h) {
                        c.push($.extend(o, h));
                      }),
                      (s = c)
                    );
                  },
                },
                {
                  key: "monthMod",
                  value: function (s) {
                    return s % 12;
                  },
                },
                {
                  key: "clone",
                  value: function (s) {
                    if ($.is("Array", s)) {
                      for (var o = [], c = 0; c < s.length; c++)
                        o[c] = this.clone(s[c]);
                      return o;
                    }
                    if ($.is("Null", s)) return null;
                    if ($.is("Date", s)) return s;
                    if (i(s) === "object") {
                      var h = {};
                      for (var d in s)
                        s.hasOwnProperty(d) && (h[d] = this.clone(s[d]));
                      return h;
                    }
                    return s;
                  },
                },
                {
                  key: "log10",
                  value: function (s) {
                    return Math.log(s) / Math.LN10;
                  },
                },
                {
                  key: "roundToBase10",
                  value: function (s) {
                    return Math.pow(10, Math.floor(Math.log10(s)));
                  },
                },
                {
                  key: "roundToBase",
                  value: function (s, o) {
                    return Math.pow(o, Math.floor(Math.log(s) / Math.log(o)));
                  },
                },
                {
                  key: "parseNumber",
                  value: function (s) {
                    return s === null ? s : parseFloat(s);
                  },
                },
                {
                  key: "stripNumber",
                  value: function (s) {
                    var o =
                      arguments.length > 1 && arguments[1] !== void 0
                        ? arguments[1]
                        : 2;
                    return parseFloat(s.toPrecision(o));
                  },
                },
                {
                  key: "randomId",
                  value: function () {
                    return (Math.random() + 1).toString(36).substring(4);
                  },
                },
                {
                  key: "noExponents",
                  value: function (s) {
                    var o = String(s).split(/[eE]/);
                    if (o.length === 1) return o[0];
                    var c = "",
                      h = s < 0 ? "-" : "",
                      d = o[0].replace(".", ""),
                      f = Number(o[1]) + 1;
                    if (f < 0) {
                      for (c = h + "0."; f++; ) c += "0";
                      return c + d.replace(/^-/, "");
                    }
                    for (f -= d.length; f--; ) c += "0";
                    return d + c;
                  },
                },
                {
                  key: "getDimensions",
                  value: function (s) {
                    var o = getComputedStyle(s, null),
                      c = s.clientHeight,
                      h = s.clientWidth;
                    return (
                      (c -=
                        parseFloat(o.paddingTop) + parseFloat(o.paddingBottom)),
                      [
                        (h -=
                          parseFloat(o.paddingLeft) +
                          parseFloat(o.paddingRight)),
                        c,
                      ]
                    );
                  },
                },
                {
                  key: "getBoundingClientRect",
                  value: function (s) {
                    var o = s.getBoundingClientRect();
                    return {
                      top: o.top,
                      right: o.right,
                      bottom: o.bottom,
                      left: o.left,
                      width: s.clientWidth,
                      height: s.clientHeight,
                      x: o.left,
                      y: o.top,
                    };
                  },
                },
                {
                  key: "getLargestStringFromArr",
                  value: function (s) {
                    return s.reduce(function (o, c) {
                      return (
                        Array.isArray(c) &&
                          (c = c.reduce(function (h, d) {
                            return h.length > d.length ? h : d;
                          })),
                        o.length > c.length ? o : c
                      );
                    }, 0);
                  },
                },
                {
                  key: "hexToRgba",
                  value: function () {
                    var s =
                        arguments.length > 0 && arguments[0] !== void 0
                          ? arguments[0]
                          : "#999999",
                      o =
                        arguments.length > 1 && arguments[1] !== void 0
                          ? arguments[1]
                          : 0.6;
                    s.substring(0, 1) !== "#" && (s = "#999999");
                    var c = s.replace("#", "");
                    c = c.match(new RegExp("(.{" + c.length / 3 + "})", "g"));
                    for (var h = 0; h < c.length; h++)
                      c[h] = parseInt(
                        c[h].length === 1 ? c[h] + c[h] : c[h],
                        16
                      );
                    return (
                      o !== void 0 && c.push(o), "rgba(" + c.join(",") + ")"
                    );
                  },
                },
                {
                  key: "getOpacityFromRGBA",
                  value: function (s) {
                    return parseFloat(s.replace(/^.*,(.+)\)/, "$1"));
                  },
                },
                {
                  key: "rgb2hex",
                  value: function (s) {
                    return (s = s.match(
                      /^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i
                    )) && s.length === 4
                      ? "#" +
                          ("0" + parseInt(s[1], 10).toString(16)).slice(-2) +
                          ("0" + parseInt(s[2], 10).toString(16)).slice(-2) +
                          ("0" + parseInt(s[3], 10).toString(16)).slice(-2)
                      : "";
                  },
                },
                {
                  key: "isColorHex",
                  value: function (s) {
                    return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(
                      s
                    );
                  },
                },
                {
                  key: "getPolygonPos",
                  value: function (s, o) {
                    for (var c = [], h = (2 * Math.PI) / o, d = 0; d < o; d++) {
                      var f = {};
                      (f.x = s * Math.sin(d * h)),
                        (f.y = -s * Math.cos(d * h)),
                        c.push(f);
                    }
                    return c;
                  },
                },
                {
                  key: "polarToCartesian",
                  value: function (s, o, c, h) {
                    var d = ((h - 90) * Math.PI) / 180;
                    return { x: s + c * Math.cos(d), y: o + c * Math.sin(d) };
                  },
                },
                {
                  key: "escapeString",
                  value: function (s) {
                    var o =
                        arguments.length > 1 && arguments[1] !== void 0
                          ? arguments[1]
                          : "x",
                      c = s.toString().slice();
                    return (c = c.replace(
                      /[` ~!@#$%^&*()|+\=?;:'",.<>{}[\]\\/]/gi,
                      o
                    ));
                  },
                },
                {
                  key: "negToZero",
                  value: function (s) {
                    return s < 0 ? 0 : s;
                  },
                },
                {
                  key: "moveIndexInArray",
                  value: function (s, o, c) {
                    if (c >= s.length)
                      for (var h = c - s.length + 1; h--; ) s.push(void 0);
                    return s.splice(c, 0, s.splice(o, 1)[0]), s;
                  },
                },
                {
                  key: "extractNumber",
                  value: function (s) {
                    return parseFloat(s.replace(/[^\d.]*/g, ""));
                  },
                },
                {
                  key: "findAncestor",
                  value: function (s, o) {
                    for (; (s = s.parentElement) && !s.classList.contains(o); );
                    return s;
                  },
                },
                {
                  key: "setELstyles",
                  value: function (s, o) {
                    for (var c in o)
                      o.hasOwnProperty(c) && (s.style.key = o[c]);
                  },
                },
                {
                  key: "isNumber",
                  value: function (s) {
                    return (
                      !isNaN(s) &&
                      parseFloat(Number(s)) === s &&
                      !isNaN(parseInt(s, 10))
                    );
                  },
                },
                {
                  key: "isFloat",
                  value: function (s) {
                    return Number(s) === s && s % 1 != 0;
                  },
                },
                {
                  key: "isSafari",
                  value: function () {
                    return /^((?!chrome|android).)*safari/i.test(
                      navigator.userAgent
                    );
                  },
                },
                {
                  key: "isFirefox",
                  value: function () {
                    return (
                      navigator.userAgent.toLowerCase().indexOf("firefox") > -1
                    );
                  },
                },
                {
                  key: "isIE11",
                  value: function () {
                    if (
                      window.navigator.userAgent.indexOf("MSIE") !== -1 ||
                      window.navigator.appVersion.indexOf("Trident/") > -1
                    )
                      return !0;
                  },
                },
                {
                  key: "isIE",
                  value: function () {
                    var s = window.navigator.userAgent,
                      o = s.indexOf("MSIE ");
                    if (o > 0)
                      return parseInt(
                        s.substring(o + 5, s.indexOf(".", o)),
                        10
                      );
                    if (s.indexOf("Trident/") > 0) {
                      var c = s.indexOf("rv:");
                      return parseInt(
                        s.substring(c + 3, s.indexOf(".", c)),
                        10
                      );
                    }
                    var h = s.indexOf("Edge/");
                    return (
                      h > 0 &&
                      parseInt(s.substring(h + 5, s.indexOf(".", h)), 10)
                    );
                  },
                },
              ]
            ),
            $
          );
        })(),
        ae = (function () {
          function $(s) {
            a(this, $),
              (this.ctx = s),
              (this.w = s.w),
              this.setEasingFunctions();
          }
          return (
            u($, [
              {
                key: "setEasingFunctions",
                value: function () {
                  var s;
                  if (!this.w.globals.easing) {
                    switch (this.w.config.chart.animations.easing) {
                      case "linear":
                        s = "-";
                        break;
                      case "easein":
                        s = "<";
                        break;
                      case "easeout":
                        s = ">";
                        break;
                      case "easeinout":
                      default:
                        s = "<>";
                        break;
                      case "swing":
                        s = function (o) {
                          var c = 1.70158;
                          return (o -= 1) * o * ((c + 1) * o + c) + 1;
                        };
                        break;
                      case "bounce":
                        s = function (o) {
                          return o < 1 / 2.75
                            ? 7.5625 * o * o
                            : o < 2 / 2.75
                            ? 7.5625 * (o -= 1.5 / 2.75) * o + 0.75
                            : o < 2.5 / 2.75
                            ? 7.5625 * (o -= 2.25 / 2.75) * o + 0.9375
                            : 7.5625 * (o -= 2.625 / 2.75) * o + 0.984375;
                        };
                        break;
                      case "elastic":
                        s = function (o) {
                          return o === !!o
                            ? o
                            : Math.pow(2, -10 * o) *
                                Math.sin(((o - 0.075) * (2 * Math.PI)) / 0.3) +
                                1;
                        };
                    }
                    this.w.globals.easing = s;
                  }
                },
              },
              {
                key: "animateLine",
                value: function (s, o, c, h) {
                  s.attr(o).animate(h).attr(c);
                },
              },
              {
                key: "animateMarker",
                value: function (s, o, c, h, d, f) {
                  o || (o = 0),
                    s
                      .attr({ r: o, width: o, height: o })
                      .animate(h, d)
                      .attr({ r: c, width: c.width, height: c.height })
                      .afterAll(function () {
                        f();
                      });
                },
              },
              {
                key: "animateCircle",
                value: function (s, o, c, h, d) {
                  s.attr({ r: o.r, cx: o.cx, cy: o.cy })
                    .animate(h, d)
                    .attr({ r: c.r, cx: c.cx, cy: c.cy });
                },
              },
              {
                key: "animateRect",
                value: function (s, o, c, h, d) {
                  s.attr(o)
                    .animate(h)
                    .attr(c)
                    .afterAll(function () {
                      return d();
                    });
                },
              },
              {
                key: "animatePathsGradually",
                value: function (s) {
                  var o = s.el,
                    c = s.realIndex,
                    h = s.j,
                    d = s.fill,
                    f = s.pathFrom,
                    g = s.pathTo,
                    y = s.speed,
                    x = s.delay,
                    k = this.w,
                    _ = 0;
                  k.config.chart.animations.animateGradually.enabled &&
                    (_ = k.config.chart.animations.animateGradually.delay),
                    k.config.chart.animations.dynamicAnimation.enabled &&
                      k.globals.dataChanged &&
                      k.config.chart.type !== "bar" &&
                      (_ = 0),
                    this.morphSVG(
                      o,
                      c,
                      h,
                      k.config.chart.type !== "line" || k.globals.comboCharts
                        ? d
                        : "stroke",
                      f,
                      g,
                      y,
                      x * _
                    );
                },
              },
              {
                key: "showDelayedElements",
                value: function () {
                  this.w.globals.delayedElements.forEach(function (s) {
                    var o = s.el;
                    o.classList.remove("apexcharts-element-hidden"),
                      o.classList.add("apexcharts-hidden-element-shown");
                  });
                },
              },
              {
                key: "animationCompleted",
                value: function (s) {
                  var o = this.w;
                  o.globals.animationEnded ||
                    ((o.globals.animationEnded = !0),
                    this.showDelayedElements(),
                    typeof o.config.chart.events.animationEnd == "function" &&
                      o.config.chart.events.animationEnd(this.ctx, {
                        el: s,
                        w: o,
                      }));
                },
              },
              {
                key: "morphSVG",
                value: function (s, o, c, h, d, f, g, y) {
                  var x = this,
                    k = this.w;
                  d || (d = s.attr("pathFrom")), f || (f = s.attr("pathTo"));
                  var _ = function (A) {
                    return (
                      k.config.chart.type === "radar" && (g = 1),
                      "M 0 ".concat(k.globals.gridHeight)
                    );
                  };
                  (!d ||
                    d.indexOf("undefined") > -1 ||
                    d.indexOf("NaN") > -1) &&
                    (d = _()),
                    (!f ||
                      f.indexOf("undefined") > -1 ||
                      f.indexOf("NaN") > -1) &&
                      (f = _()),
                    k.globals.shouldAnimate || (g = 1),
                    s
                      .plot(d)
                      .animate(1, k.globals.easing, y)
                      .plot(d)
                      .animate(g, k.globals.easing, y)
                      .plot(f)
                      .afterAll(function () {
                        B.isNumber(c)
                          ? c ===
                              k.globals.series[k.globals.maxValsInArrayIndex]
                                .length -
                                2 &&
                            k.globals.shouldAnimate &&
                            x.animationCompleted(s)
                          : h !== "none" &&
                            k.globals.shouldAnimate &&
                            ((!k.globals.comboCharts &&
                              o === k.globals.series.length - 1) ||
                              k.globals.comboCharts) &&
                            x.animationCompleted(s),
                          x.showDelayedElements();
                      });
                },
              },
            ]),
            $
          );
        })(),
        re = (function () {
          function $(s) {
            a(this, $), (this.ctx = s), (this.w = s.w);
          }
          return (
            u($, [
              {
                key: "getDefaultFilter",
                value: function (s, o) {
                  var c = this.w;
                  s.unfilter(!0),
                    new window.SVG.Filter().size("120%", "180%", "-5%", "-40%"),
                    c.config.states.normal.filter !== "none"
                      ? this.applyFilter(
                          s,
                          o,
                          c.config.states.normal.filter.type,
                          c.config.states.normal.filter.value
                        )
                      : c.config.chart.dropShadow.enabled &&
                        this.dropShadow(s, c.config.chart.dropShadow, o);
                },
              },
              {
                key: "addNormalFilter",
                value: function (s, o) {
                  var c = this.w;
                  c.config.chart.dropShadow.enabled &&
                    !s.node.classList.contains("apexcharts-marker") &&
                    this.dropShadow(s, c.config.chart.dropShadow, o);
                },
              },
              {
                key: "addLightenFilter",
                value: function (s, o, c) {
                  var h = this,
                    d = this.w,
                    f = c.intensity;
                  s.unfilter(!0),
                    new window.SVG.Filter(),
                    s.filter(function (g) {
                      var y = d.config.chart.dropShadow;
                      (y.enabled ? h.addShadow(g, o, y) : g).componentTransfer({
                        rgb: { type: "linear", slope: 1.5, intercept: f },
                      });
                    }),
                    s.filterer.node.setAttribute(
                      "filterUnits",
                      "userSpaceOnUse"
                    ),
                    this._scaleFilterSize(s.filterer.node);
                },
              },
              {
                key: "addDarkenFilter",
                value: function (s, o, c) {
                  var h = this,
                    d = this.w,
                    f = c.intensity;
                  s.unfilter(!0),
                    new window.SVG.Filter(),
                    s.filter(function (g) {
                      var y = d.config.chart.dropShadow;
                      (y.enabled ? h.addShadow(g, o, y) : g).componentTransfer({
                        rgb: { type: "linear", slope: f },
                      });
                    }),
                    s.filterer.node.setAttribute(
                      "filterUnits",
                      "userSpaceOnUse"
                    ),
                    this._scaleFilterSize(s.filterer.node);
                },
              },
              {
                key: "applyFilter",
                value: function (s, o, c) {
                  var h =
                    arguments.length > 3 && arguments[3] !== void 0
                      ? arguments[3]
                      : 0.5;
                  switch (c) {
                    case "none":
                      this.addNormalFilter(s, o);
                      break;
                    case "lighten":
                      this.addLightenFilter(s, o, { intensity: h });
                      break;
                    case "darken":
                      this.addDarkenFilter(s, o, { intensity: h });
                  }
                },
              },
              {
                key: "addShadow",
                value: function (s, o, c) {
                  var h = c.blur,
                    d = c.top,
                    f = c.left,
                    g = c.color,
                    y = c.opacity,
                    x = s
                      .flood(Array.isArray(g) ? g[o] : g, y)
                      .composite(s.sourceAlpha, "in")
                      .offset(f, d)
                      .gaussianBlur(h)
                      .merge(s.source);
                  return s.blend(s.source, x);
                },
              },
              {
                key: "dropShadow",
                value: function (s, o) {
                  var c =
                      arguments.length > 2 && arguments[2] !== void 0
                        ? arguments[2]
                        : 0,
                    h = o.top,
                    d = o.left,
                    f = o.blur,
                    g = o.color,
                    y = o.opacity,
                    x = o.noUserSpaceOnUse,
                    k = this.w;
                  return (
                    s.unfilter(!0),
                    (B.isIE() && k.config.chart.type === "radialBar") ||
                      ((g = Array.isArray(g) ? g[c] : g),
                      s.filter(function (_) {
                        var A = null;
                        (A =
                          B.isSafari() || B.isFirefox() || B.isIE()
                            ? _.flood(g, y)
                                .composite(_.sourceAlpha, "in")
                                .offset(d, h)
                                .gaussianBlur(f)
                            : _.flood(g, y)
                                .composite(_.sourceAlpha, "in")
                                .offset(d, h)
                                .gaussianBlur(f)
                                .merge(_.source)),
                          _.blend(_.source, A);
                      }),
                      x ||
                        s.filterer.node.setAttribute(
                          "filterUnits",
                          "userSpaceOnUse"
                        ),
                      this._scaleFilterSize(s.filterer.node)),
                    s
                  );
                },
              },
              {
                key: "setSelectionFilter",
                value: function (s, o, c) {
                  var h = this.w;
                  if (
                    h.globals.selectedDataPoints[o] !== void 0 &&
                    h.globals.selectedDataPoints[o].indexOf(c) > -1
                  ) {
                    s.node.setAttribute("selected", !0);
                    var d = h.config.states.active.filter;
                    d !== "none" && this.applyFilter(s, o, d.type, d.value);
                  }
                },
              },
              {
                key: "_scaleFilterSize",
                value: function (s) {
                  (function (o) {
                    for (var c in o)
                      o.hasOwnProperty(c) && s.setAttribute(c, o[c]);
                  })({ width: "200%", height: "200%", x: "-50%", y: "-50%" });
                },
              },
            ]),
            $
          );
        })(),
        K = (function () {
          function $(s) {
            a(this, $), (this.ctx = s), (this.w = s.w);
          }
          return (
            u(
              $,
              [
                {
                  key: "roundPathCorners",
                  value: function (s, o) {
                    function c(he, we, Ae) {
                      var Le = we.x - he.x,
                        ze = we.y - he.y,
                        De = Math.sqrt(Le * Le + ze * ze);
                      return h(he, we, Math.min(1, Ae / De));
                    }
                    function h(he, we, Ae) {
                      return {
                        x: he.x + (we.x - he.x) * Ae,
                        y: he.y + (we.y - he.y) * Ae,
                      };
                    }
                    function d(he, we) {
                      he.length > 2 &&
                        ((he[he.length - 2] = we.x),
                        (he[he.length - 1] = we.y));
                    }
                    function f(he) {
                      return {
                        x: parseFloat(he[he.length - 2]),
                        y: parseFloat(he[he.length - 1]),
                      };
                    }
                    s.indexOf("NaN") > -1 && (s = "");
                    var g = s
                        .split(/[,\s]/)
                        .reduce(function (he, we) {
                          var Ae = we.match("([a-zA-Z])(.+)");
                          return (
                            Ae ? (he.push(Ae[1]), he.push(Ae[2])) : he.push(we),
                            he
                          );
                        }, [])
                        .reduce(function (he, we) {
                          return (
                            parseFloat(we) == we && he.length
                              ? he[he.length - 1].push(we)
                              : he.push([we]),
                            he
                          );
                        }, []),
                      y = [];
                    if (g.length > 1) {
                      var x = f(g[0]),
                        k = null;
                      g[g.length - 1][0] == "Z" &&
                        g[0].length > 2 &&
                        ((k = ["L", x.x, x.y]), (g[g.length - 1] = k)),
                        y.push(g[0]);
                      for (var _ = 1; _ < g.length; _++) {
                        var A = y[y.length - 1],
                          O = g[_],
                          N = O == k ? g[1] : g[_ + 1];
                        if (
                          N &&
                          A &&
                          A.length > 2 &&
                          O[0] == "L" &&
                          N.length > 2 &&
                          N[0] == "L"
                        ) {
                          var H,
                            G,
                            te = f(A),
                            se = f(O),
                            b = f(N);
                          (H = c(se, te, o)),
                            (G = c(se, b, o)),
                            d(O, H),
                            (O.origPoint = se),
                            y.push(O);
                          var C = h(H, se, 0.5),
                            F = h(se, G, 0.5),
                            ee = ["C", C.x, C.y, F.x, F.y, G.x, G.y];
                          (ee.origPoint = se), y.push(ee);
                        } else y.push(O);
                      }
                      if (k) {
                        var ue = f(y[y.length - 1]);
                        y.push(["Z"]), d(y[0], ue);
                      }
                    } else y = g;
                    return y.reduce(function (he, we) {
                      return he + we.join(" ") + " ";
                    }, "");
                  },
                },
                {
                  key: "drawLine",
                  value: function (s, o, c, h) {
                    var d =
                        arguments.length > 4 && arguments[4] !== void 0
                          ? arguments[4]
                          : "#a8a8a8",
                      f =
                        arguments.length > 5 && arguments[5] !== void 0
                          ? arguments[5]
                          : 0,
                      g =
                        arguments.length > 6 && arguments[6] !== void 0
                          ? arguments[6]
                          : null,
                      y =
                        arguments.length > 7 && arguments[7] !== void 0
                          ? arguments[7]
                          : "butt";
                    return this.w.globals.dom.Paper.line().attr({
                      x1: s,
                      y1: o,
                      x2: c,
                      y2: h,
                      stroke: d,
                      "stroke-dasharray": f,
                      "stroke-width": g,
                      "stroke-linecap": y,
                    });
                  },
                },
                {
                  key: "drawRect",
                  value: function () {
                    var s =
                        arguments.length > 0 && arguments[0] !== void 0
                          ? arguments[0]
                          : 0,
                      o =
                        arguments.length > 1 && arguments[1] !== void 0
                          ? arguments[1]
                          : 0,
                      c =
                        arguments.length > 2 && arguments[2] !== void 0
                          ? arguments[2]
                          : 0,
                      h =
                        arguments.length > 3 && arguments[3] !== void 0
                          ? arguments[3]
                          : 0,
                      d =
                        arguments.length > 4 && arguments[4] !== void 0
                          ? arguments[4]
                          : 0,
                      f =
                        arguments.length > 5 && arguments[5] !== void 0
                          ? arguments[5]
                          : "#fefefe",
                      g =
                        arguments.length > 6 && arguments[6] !== void 0
                          ? arguments[6]
                          : 1,
                      y =
                        arguments.length > 7 && arguments[7] !== void 0
                          ? arguments[7]
                          : null,
                      x =
                        arguments.length > 8 && arguments[8] !== void 0
                          ? arguments[8]
                          : null,
                      k =
                        arguments.length > 9 && arguments[9] !== void 0
                          ? arguments[9]
                          : 0,
                      _ = this.w.globals.dom.Paper.rect();
                    return (
                      _.attr({
                        x: s,
                        y: o,
                        width: c > 0 ? c : 0,
                        height: h > 0 ? h : 0,
                        rx: d,
                        ry: d,
                        opacity: g,
                        "stroke-width": y !== null ? y : 0,
                        stroke: x !== null ? x : "none",
                        "stroke-dasharray": k,
                      }),
                      _.node.setAttribute("fill", f),
                      _
                    );
                  },
                },
                {
                  key: "drawPolygon",
                  value: function (s) {
                    var o =
                        arguments.length > 1 && arguments[1] !== void 0
                          ? arguments[1]
                          : "#e1e1e1",
                      c =
                        arguments.length > 2 && arguments[2] !== void 0
                          ? arguments[2]
                          : 1,
                      h =
                        arguments.length > 3 && arguments[3] !== void 0
                          ? arguments[3]
                          : "none";
                    return this.w.globals.dom.Paper.polygon(s).attr({
                      fill: h,
                      stroke: o,
                      "stroke-width": c,
                    });
                  },
                },
                {
                  key: "drawCircle",
                  value: function (s) {
                    var o =
                      arguments.length > 1 && arguments[1] !== void 0
                        ? arguments[1]
                        : null;
                    s < 0 && (s = 0);
                    var c = this.w.globals.dom.Paper.circle(2 * s);
                    return o !== null && c.attr(o), c;
                  },
                },
                {
                  key: "drawPath",
                  value: function (s) {
                    var o = s.d,
                      c = o === void 0 ? "" : o,
                      h = s.stroke,
                      d = h === void 0 ? "#a8a8a8" : h,
                      f = s.strokeWidth,
                      g = f === void 0 ? 1 : f,
                      y = s.fill,
                      x = s.fillOpacity,
                      k = x === void 0 ? 1 : x,
                      _ = s.strokeOpacity,
                      A = _ === void 0 ? 1 : _,
                      O = s.classes,
                      N = s.strokeLinecap,
                      H = N === void 0 ? null : N,
                      G = s.strokeDashArray,
                      te = G === void 0 ? 0 : G,
                      se = this.w;
                    return (
                      H === null && (H = se.config.stroke.lineCap),
                      (c.indexOf("undefined") > -1 || c.indexOf("NaN") > -1) &&
                        (c = "M 0 ".concat(se.globals.gridHeight)),
                      se.globals.dom.Paper.path(c).attr({
                        fill: y,
                        "fill-opacity": k,
                        stroke: d,
                        "stroke-opacity": A,
                        "stroke-linecap": H,
                        "stroke-width": g,
                        "stroke-dasharray": te,
                        class: O,
                      })
                    );
                  },
                },
                {
                  key: "group",
                  value: function () {
                    var s =
                        arguments.length > 0 && arguments[0] !== void 0
                          ? arguments[0]
                          : null,
                      o = this.w.globals.dom.Paper.group();
                    return s !== null && o.attr(s), o;
                  },
                },
                {
                  key: "move",
                  value: function (s, o) {
                    var c = ["M", s, o].join(" ");
                    return c;
                  },
                },
                {
                  key: "line",
                  value: function (s, o) {
                    var c =
                        arguments.length > 2 && arguments[2] !== void 0
                          ? arguments[2]
                          : null,
                      h = null;
                    return (
                      c === null
                        ? (h = [" L", s, o].join(" "))
                        : c === "H"
                        ? (h = [" H", s].join(" "))
                        : c === "V" && (h = [" V", o].join(" ")),
                      h
                    );
                  },
                },
                {
                  key: "curve",
                  value: function (s, o, c, h, d, f) {
                    var g = ["C", s, o, c, h, d, f].join(" ");
                    return g;
                  },
                },
                {
                  key: "quadraticCurve",
                  value: function (s, o, c, h) {
                    return ["Q", s, o, c, h].join(" ");
                  },
                },
                {
                  key: "arc",
                  value: function (s, o, c, h, d, f, g) {
                    var y = "A";
                    arguments.length > 7 &&
                      arguments[7] !== void 0 &&
                      arguments[7] &&
                      (y = "a");
                    var x = [y, s, o, c, h, d, f, g].join(" ");
                    return x;
                  },
                },
                {
                  key: "renderPaths",
                  value: function (s) {
                    var o,
                      c = s.j,
                      h = s.realIndex,
                      d = s.pathFrom,
                      f = s.pathTo,
                      g = s.stroke,
                      y = s.strokeWidth,
                      x = s.strokeLinecap,
                      k = s.fill,
                      _ = s.animationDelay,
                      A = s.initialSpeed,
                      O = s.dataChangeSpeed,
                      N = s.className,
                      H = s.shouldClipToGrid,
                      G = H === void 0 || H,
                      te = s.bindEventsOnPaths,
                      se = te === void 0 || te,
                      b = s.drawShadow,
                      C = b === void 0 || b,
                      F = this.w,
                      ee = new re(this.ctx),
                      ue = new ae(this.ctx),
                      he = this.w.config.chart.animations.enabled,
                      we =
                        he &&
                        this.w.config.chart.animations.dynamicAnimation.enabled,
                      Ae = !!(
                        (he && !F.globals.resized) ||
                        (we && F.globals.dataChanged && F.globals.shouldAnimate)
                      );
                    Ae ? (o = d) : ((o = f), (F.globals.animationEnded = !0));
                    var Le = F.config.stroke.dashArray,
                      ze = 0;
                    ze = Array.isArray(Le) ? Le[h] : F.config.stroke.dashArray;
                    var De = this.drawPath({
                      d: o,
                      stroke: g,
                      strokeWidth: y,
                      fill: k,
                      fillOpacity: 1,
                      classes: N,
                      strokeLinecap: x,
                      strokeDashArray: ze,
                    });
                    if (
                      (De.attr("index", h),
                      G &&
                        De.attr({
                          "clip-path": "url(#gridRectMask".concat(
                            F.globals.cuid,
                            ")"
                          ),
                        }),
                      F.config.states.normal.filter.type !== "none")
                    )
                      ee.getDefaultFilter(De, h);
                    else if (
                      F.config.chart.dropShadow.enabled &&
                      C &&
                      (!F.config.chart.dropShadow.enabledOnSeries ||
                        (F.config.chart.dropShadow.enabledOnSeries &&
                          F.config.chart.dropShadow.enabledOnSeries.indexOf(
                            h
                          ) !== -1))
                    ) {
                      var Ge = F.config.chart.dropShadow;
                      ee.dropShadow(De, Ge, h);
                    }
                    se &&
                      (De.node.addEventListener(
                        "mouseenter",
                        this.pathMouseEnter.bind(this, De)
                      ),
                      De.node.addEventListener(
                        "mouseleave",
                        this.pathMouseLeave.bind(this, De)
                      ),
                      De.node.addEventListener(
                        "mousedown",
                        this.pathMouseDown.bind(this, De)
                      )),
                      De.attr({ pathTo: f, pathFrom: d });
                    var it = {
                      el: De,
                      j: c,
                      realIndex: h,
                      pathFrom: d,
                      pathTo: f,
                      fill: k,
                      strokeWidth: y,
                      delay: _,
                    };
                    return (
                      !he || F.globals.resized || F.globals.dataChanged
                        ? (!F.globals.resized && F.globals.dataChanged) ||
                          ue.showDelayedElements()
                        : ue.animatePathsGradually(
                            n(n({}, it), {}, { speed: A })
                          ),
                      F.globals.dataChanged &&
                        we &&
                        Ae &&
                        ue.animatePathsGradually(
                          n(n({}, it), {}, { speed: O })
                        ),
                      De
                    );
                  },
                },
                {
                  key: "drawPattern",
                  value: function (s, o, c) {
                    var h =
                        arguments.length > 3 && arguments[3] !== void 0
                          ? arguments[3]
                          : "#a8a8a8",
                      d =
                        arguments.length > 4 && arguments[4] !== void 0
                          ? arguments[4]
                          : 0;
                    return this.w.globals.dom.Paper.pattern(o, c, function (f) {
                      s === "horizontalLines"
                        ? f.line(0, 0, c, 0).stroke({ color: h, width: d + 1 })
                        : s === "verticalLines"
                        ? f.line(0, 0, 0, o).stroke({ color: h, width: d + 1 })
                        : s === "slantedLines"
                        ? f.line(0, 0, o, c).stroke({ color: h, width: d })
                        : s === "squares"
                        ? f
                            .rect(o, c)
                            .fill("none")
                            .stroke({ color: h, width: d })
                        : s === "circles" &&
                          f
                            .circle(o)
                            .fill("none")
                            .stroke({ color: h, width: d });
                    });
                  },
                },
                {
                  key: "drawGradient",
                  value: function (s, o, c, h, d) {
                    var f,
                      g =
                        arguments.length > 5 && arguments[5] !== void 0
                          ? arguments[5]
                          : null,
                      y =
                        arguments.length > 6 && arguments[6] !== void 0
                          ? arguments[6]
                          : null,
                      x =
                        arguments.length > 7 && arguments[7] !== void 0
                          ? arguments[7]
                          : null,
                      k =
                        arguments.length > 8 && arguments[8] !== void 0
                          ? arguments[8]
                          : 0,
                      _ = this.w;
                    o.length < 9 &&
                      o.indexOf("#") === 0 &&
                      (o = B.hexToRgba(o, h)),
                      c.length < 9 &&
                        c.indexOf("#") === 0 &&
                        (c = B.hexToRgba(c, d));
                    var A = 0,
                      O = 1,
                      N = 1,
                      H = null;
                    y !== null &&
                      ((A = y[0] !== void 0 ? y[0] / 100 : 0),
                      (O = y[1] !== void 0 ? y[1] / 100 : 1),
                      (N = y[2] !== void 0 ? y[2] / 100 : 1),
                      (H = y[3] !== void 0 ? y[3] / 100 : null));
                    var G = !(
                      _.config.chart.type !== "donut" &&
                      _.config.chart.type !== "pie" &&
                      _.config.chart.type !== "polarArea" &&
                      _.config.chart.type !== "bubble"
                    );
                    if (
                      ((f =
                        x === null || x.length === 0
                          ? _.globals.dom.Paper.gradient(
                              G ? "radial" : "linear",
                              function (b) {
                                b.at(A, o, h),
                                  b.at(O, c, d),
                                  b.at(N, c, d),
                                  H !== null && b.at(H, o, h);
                              }
                            )
                          : _.globals.dom.Paper.gradient(
                              G ? "radial" : "linear",
                              function (b) {
                                (Array.isArray(x[k]) ? x[k] : x).forEach(
                                  function (C) {
                                    b.at(C.offset / 100, C.color, C.opacity);
                                  }
                                );
                              }
                            )),
                      G)
                    ) {
                      var te = _.globals.gridWidth / 2,
                        se = _.globals.gridHeight / 2;
                      _.config.chart.type !== "bubble"
                        ? f.attr({
                            gradientUnits: "userSpaceOnUse",
                            cx: te,
                            cy: se,
                            r: g,
                          })
                        : f.attr({
                            cx: 0.5,
                            cy: 0.5,
                            r: 0.8,
                            fx: 0.2,
                            fy: 0.2,
                          });
                    } else
                      s === "vertical"
                        ? f.from(0, 0).to(0, 1)
                        : s === "diagonal"
                        ? f.from(0, 0).to(1, 1)
                        : s === "horizontal"
                        ? f.from(0, 1).to(1, 1)
                        : s === "diagonal2" && f.from(1, 0).to(0, 1);
                    return f;
                  },
                },
                {
                  key: "getTextBasedOnMaxWidth",
                  value: function (s) {
                    var o = s.text,
                      c = s.maxWidth,
                      h = s.fontSize,
                      d = s.fontFamily,
                      f = this.getTextRects(o, h, d),
                      g = f.width / o.length,
                      y = Math.floor(c / g);
                    return c < f.width ? o.slice(0, y - 3) + "..." : o;
                  },
                },
                {
                  key: "drawText",
                  value: function (s) {
                    var o = this,
                      c = s.x,
                      h = s.y,
                      d = s.text,
                      f = s.textAnchor,
                      g = s.fontSize,
                      y = s.fontFamily,
                      x = s.fontWeight,
                      k = s.foreColor,
                      _ = s.opacity,
                      A = s.maxWidth,
                      O = s.cssClass,
                      N = O === void 0 ? "" : O,
                      H = s.isPlainText,
                      G = H === void 0 || H,
                      te = this.w;
                    d === void 0 && (d = "");
                    var se = d;
                    f || (f = "start"),
                      (k && k.length) || (k = te.config.chart.foreColor),
                      (y = y || te.config.chart.fontFamily),
                      (x = x || "regular");
                    var b,
                      C = {
                        maxWidth: A,
                        fontSize: (g = g || "11px"),
                        fontFamily: y,
                      };
                    return (
                      Array.isArray(d)
                        ? (b = te.globals.dom.Paper.text(function (F) {
                            for (var ee = 0; ee < d.length; ee++)
                              (se = d[ee]),
                                A &&
                                  (se = o.getTextBasedOnMaxWidth(
                                    n({ text: d[ee] }, C)
                                  )),
                                ee === 0 ? F.tspan(se) : F.tspan(se).newLine();
                          }))
                        : (A &&
                            (se = this.getTextBasedOnMaxWidth(
                              n({ text: d }, C)
                            )),
                          (b = G
                            ? te.globals.dom.Paper.plain(d)
                            : te.globals.dom.Paper.text(function (F) {
                                return F.tspan(se);
                              }))),
                      b.attr({
                        x: c,
                        y: h,
                        "text-anchor": f,
                        "dominant-baseline": "auto",
                        "font-size": g,
                        "font-family": y,
                        "font-weight": x,
                        fill: k,
                        class: "apexcharts-text " + N,
                      }),
                      (b.node.style.fontFamily = y),
                      (b.node.style.opacity = _),
                      b
                    );
                  },
                },
                {
                  key: "drawMarker",
                  value: function (s, o, c) {
                    s = s || 0;
                    var h = c.pSize || 0,
                      d = null;
                    if (c.shape === "square" || c.shape === "rect") {
                      var f = c.pRadius === void 0 ? h / 2 : c.pRadius;
                      (o !== null && h) || ((h = 0), (f = 0));
                      var g = 1.2 * h + f,
                        y = this.drawRect(g, g, g, g, f);
                      y.attr({
                        x: s - g / 2,
                        y: o - g / 2,
                        cx: s,
                        cy: o,
                        class: c.class ? c.class : "",
                        fill: c.pointFillColor,
                        "fill-opacity": c.pointFillOpacity
                          ? c.pointFillOpacity
                          : 1,
                        stroke: c.pointStrokeColor,
                        "stroke-width": c.pointStrokeWidth
                          ? c.pointStrokeWidth
                          : 0,
                        "stroke-opacity": c.pointStrokeOpacity
                          ? c.pointStrokeOpacity
                          : 1,
                      }),
                        (d = y);
                    } else
                      (c.shape !== "circle" && c.shape) ||
                        (B.isNumber(o) || ((h = 0), (o = 0)),
                        (d = this.drawCircle(h, {
                          cx: s,
                          cy: o,
                          class: c.class ? c.class : "",
                          stroke: c.pointStrokeColor,
                          fill: c.pointFillColor,
                          "fill-opacity": c.pointFillOpacity
                            ? c.pointFillOpacity
                            : 1,
                          "stroke-width": c.pointStrokeWidth
                            ? c.pointStrokeWidth
                            : 0,
                          "stroke-opacity": c.pointStrokeOpacity
                            ? c.pointStrokeOpacity
                            : 1,
                        })));
                    return d;
                  },
                },
                {
                  key: "pathMouseEnter",
                  value: function (s, o) {
                    var c = this.w,
                      h = new re(this.ctx),
                      d = parseInt(s.node.getAttribute("index"), 10),
                      f = parseInt(s.node.getAttribute("j"), 10);
                    if (
                      (typeof c.config.chart.events.dataPointMouseEnter ==
                        "function" &&
                        c.config.chart.events.dataPointMouseEnter(o, this.ctx, {
                          seriesIndex: d,
                          dataPointIndex: f,
                          w: c,
                        }),
                      this.ctx.events.fireEvent("dataPointMouseEnter", [
                        o,
                        this.ctx,
                        { seriesIndex: d, dataPointIndex: f, w: c },
                      ]),
                      (c.config.states.active.filter.type === "none" ||
                        s.node.getAttribute("selected") !== "true") &&
                        c.config.states.hover.filter.type !== "none" &&
                        !c.globals.isTouchDevice)
                    ) {
                      var g = c.config.states.hover.filter;
                      h.applyFilter(s, d, g.type, g.value);
                    }
                  },
                },
                {
                  key: "pathMouseLeave",
                  value: function (s, o) {
                    var c = this.w,
                      h = new re(this.ctx),
                      d = parseInt(s.node.getAttribute("index"), 10),
                      f = parseInt(s.node.getAttribute("j"), 10);
                    typeof c.config.chart.events.dataPointMouseLeave ==
                      "function" &&
                      c.config.chart.events.dataPointMouseLeave(o, this.ctx, {
                        seriesIndex: d,
                        dataPointIndex: f,
                        w: c,
                      }),
                      this.ctx.events.fireEvent("dataPointMouseLeave", [
                        o,
                        this.ctx,
                        { seriesIndex: d, dataPointIndex: f, w: c },
                      ]),
                      (c.config.states.active.filter.type !== "none" &&
                        s.node.getAttribute("selected") === "true") ||
                        (c.config.states.hover.filter.type !== "none" &&
                          h.getDefaultFilter(s, d));
                  },
                },
                {
                  key: "pathMouseDown",
                  value: function (s, o) {
                    var c = this.w,
                      h = new re(this.ctx),
                      d = parseInt(s.node.getAttribute("index"), 10),
                      f = parseInt(s.node.getAttribute("j"), 10),
                      g = "false";
                    if (s.node.getAttribute("selected") === "true") {
                      if (
                        (s.node.setAttribute("selected", "false"),
                        c.globals.selectedDataPoints[d].indexOf(f) > -1)
                      ) {
                        var y = c.globals.selectedDataPoints[d].indexOf(f);
                        c.globals.selectedDataPoints[d].splice(y, 1);
                      }
                    } else {
                      if (
                        !c.config.states.active
                          .allowMultipleDataPointsSelection &&
                        c.globals.selectedDataPoints.length > 0
                      ) {
                        c.globals.selectedDataPoints = [];
                        var x = c.globals.dom.Paper.select(
                            ".apexcharts-series path"
                          ).members,
                          k = c.globals.dom.Paper.select(
                            ".apexcharts-series circle, .apexcharts-series rect"
                          ).members,
                          _ = function (N) {
                            Array.prototype.forEach.call(N, function (H) {
                              H.node.setAttribute("selected", "false"),
                                h.getDefaultFilter(H, d);
                            });
                          };
                        _(x), _(k);
                      }
                      s.node.setAttribute("selected", "true"),
                        (g = "true"),
                        c.globals.selectedDataPoints[d] === void 0 &&
                          (c.globals.selectedDataPoints[d] = []),
                        c.globals.selectedDataPoints[d].push(f);
                    }
                    if (g === "true") {
                      var A = c.config.states.active.filter;
                      if (A !== "none") h.applyFilter(s, d, A.type, A.value);
                      else if (
                        c.config.states.hover.filter !== "none" &&
                        !c.globals.isTouchDevice
                      ) {
                        var O = c.config.states.hover.filter;
                        h.applyFilter(s, d, O.type, O.value);
                      }
                    } else
                      c.config.states.active.filter.type !== "none" &&
                        (c.config.states.hover.filter.type === "none" ||
                        c.globals.isTouchDevice
                          ? h.getDefaultFilter(s, d)
                          : ((O = c.config.states.hover.filter),
                            h.applyFilter(s, d, O.type, O.value)));
                    typeof c.config.chart.events.dataPointSelection ==
                      "function" &&
                      c.config.chart.events.dataPointSelection(o, this.ctx, {
                        selectedDataPoints: c.globals.selectedDataPoints,
                        seriesIndex: d,
                        dataPointIndex: f,
                        w: c,
                      }),
                      o &&
                        this.ctx.events.fireEvent("dataPointSelection", [
                          o,
                          this.ctx,
                          {
                            selectedDataPoints: c.globals.selectedDataPoints,
                            seriesIndex: d,
                            dataPointIndex: f,
                            w: c,
                          },
                        ]);
                  },
                },
                {
                  key: "rotateAroundCenter",
                  value: function (s) {
                    var o = {};
                    return (
                      s && typeof s.getBBox == "function" && (o = s.getBBox()),
                      { x: o.x + o.width / 2, y: o.y + o.height / 2 }
                    );
                  },
                },
                {
                  key: "getTextRects",
                  value: function (s, o, c, h) {
                    var d =
                        !(arguments.length > 4 && arguments[4] !== void 0) ||
                        arguments[4],
                      f = this.w,
                      g = this.drawText({
                        x: -200,
                        y: -200,
                        text: s,
                        textAnchor: "start",
                        fontSize: o,
                        fontFamily: c,
                        foreColor: "#fff",
                        opacity: 0,
                      });
                    h && g.attr("transform", h), f.globals.dom.Paper.add(g);
                    var y = g.bbox();
                    return (
                      d || (y = g.node.getBoundingClientRect()),
                      g.remove(),
                      { width: y.width, height: y.height }
                    );
                  },
                },
                {
                  key: "placeTextWithEllipsis",
                  value: function (s, o, c) {
                    if (
                      typeof s.getComputedTextLength == "function" &&
                      ((s.textContent = o),
                      o.length > 0 && s.getComputedTextLength() >= c / 1.1)
                    ) {
                      for (var h = o.length - 3; h > 0; h -= 3)
                        if (s.getSubStringLength(0, h) <= c / 1.1)
                          return void (s.textContent =
                            o.substring(0, h) + "...");
                      s.textContent = ".";
                    }
                  },
                },
              ],
              [
                {
                  key: "setAttrs",
                  value: function (s, o) {
                    for (var c in o)
                      o.hasOwnProperty(c) && s.setAttribute(c, o[c]);
                  },
                },
              ]
            ),
            $
          );
        })(),
        fe = (function () {
          function $(s) {
            a(this, $), (this.ctx = s), (this.w = s.w);
          }
          return (
            u(
              $,
              [
                {
                  key: "getStackedSeriesTotals",
                  value: function () {
                    var s =
                        arguments.length > 0 && arguments[0] !== void 0
                          ? arguments[0]
                          : [],
                      o = this.w,
                      c = [];
                    if (o.globals.series.length === 0) return c;
                    for (
                      var h = 0;
                      h <
                      o.globals.series[o.globals.maxValsInArrayIndex].length;
                      h++
                    ) {
                      for (var d = 0, f = 0; f < o.globals.series.length; f++)
                        o.globals.series[f][h] !== void 0 &&
                          s.indexOf(f) === -1 &&
                          (d += o.globals.series[f][h]);
                      c.push(d);
                    }
                    return c;
                  },
                },
                {
                  key: "getSeriesTotalByIndex",
                  value: function () {
                    var s =
                      arguments.length > 0 && arguments[0] !== void 0
                        ? arguments[0]
                        : null;
                    return s === null
                      ? this.w.config.series.reduce(function (o, c) {
                          return o + c;
                        }, 0)
                      : this.w.globals.series[s].reduce(function (o, c) {
                          return o + c;
                        }, 0);
                  },
                },
                {
                  key: "isSeriesNull",
                  value: function () {
                    var s =
                      arguments.length > 0 && arguments[0] !== void 0
                        ? arguments[0]
                        : null;
                    return (
                      (s === null
                        ? this.w.config.series.filter(function (o) {
                            return o !== null;
                          })
                        : this.w.config.series[s].data.filter(function (o) {
                            return o !== null;
                          })
                      ).length === 0
                    );
                  },
                },
                {
                  key: "seriesHaveSameValues",
                  value: function (s) {
                    return this.w.globals.series[s].every(function (o, c, h) {
                      return o === h[0];
                    });
                  },
                },
                {
                  key: "getCategoryLabels",
                  value: function (s) {
                    var o = this.w,
                      c = s.slice();
                    return (
                      o.config.xaxis.convertedCatToNumeric &&
                        (c = s.map(function (h, d) {
                          return o.config.xaxis.labels.formatter(
                            h - o.globals.minX + 1
                          );
                        })),
                      c
                    );
                  },
                },
                {
                  key: "getLargestSeries",
                  value: function () {
                    var s = this.w;
                    s.globals.maxValsInArrayIndex = s.globals.series
                      .map(function (o) {
                        return o.length;
                      })
                      .indexOf(
                        Math.max.apply(
                          Math,
                          s.globals.series.map(function (o) {
                            return o.length;
                          })
                        )
                      );
                  },
                },
                {
                  key: "getLargestMarkerSize",
                  value: function () {
                    var s = this.w,
                      o = 0;
                    return (
                      s.globals.markers.size.forEach(function (c) {
                        o = Math.max(o, c);
                      }),
                      s.config.markers.discrete &&
                        s.config.markers.discrete.length &&
                        s.config.markers.discrete.forEach(function (c) {
                          o = Math.max(o, c.size);
                        }),
                      o > 0 && (o += s.config.markers.hover.sizeOffset + 1),
                      (s.globals.markers.largestSize = o),
                      o
                    );
                  },
                },
                {
                  key: "getSeriesTotals",
                  value: function () {
                    var s = this.w;
                    s.globals.seriesTotals = s.globals.series.map(function (
                      o,
                      c
                    ) {
                      var h = 0;
                      if (Array.isArray(o))
                        for (var d = 0; d < o.length; d++) h += o[d];
                      else h += o;
                      return h;
                    });
                  },
                },
                {
                  key: "getSeriesTotalsXRange",
                  value: function (s, o) {
                    var c = this.w;
                    return c.globals.series.map(function (h, d) {
                      for (var f = 0, g = 0; g < h.length; g++)
                        c.globals.seriesX[d][g] > s &&
                          c.globals.seriesX[d][g] < o &&
                          (f += h[g]);
                      return f;
                    });
                  },
                },
                {
                  key: "getPercentSeries",
                  value: function () {
                    var s = this.w;
                    s.globals.seriesPercent = s.globals.series.map(function (
                      o,
                      c
                    ) {
                      var h = [];
                      if (Array.isArray(o))
                        for (var d = 0; d < o.length; d++) {
                          var f = s.globals.stackedSeriesTotals[d],
                            g = 0;
                          f && (g = (100 * o[d]) / f), h.push(g);
                        }
                      else {
                        var y =
                          (100 * o) /
                          s.globals.seriesTotals.reduce(function (x, k) {
                            return x + k;
                          }, 0);
                        h.push(y);
                      }
                      return h;
                    });
                  },
                },
                {
                  key: "getCalculatedRatios",
                  value: function () {
                    var s,
                      o,
                      c,
                      h,
                      d = this.w.globals,
                      f = [],
                      g = 0,
                      y = [],
                      x = 0.1,
                      k = 0;
                    if (((d.yRange = []), d.isMultipleYAxis))
                      for (var _ = 0; _ < d.minYArr.length; _++)
                        d.yRange.push(Math.abs(d.minYArr[_] - d.maxYArr[_])),
                          y.push(0);
                    else d.yRange.push(Math.abs(d.minY - d.maxY));
                    (d.xRange = Math.abs(d.maxX - d.minX)),
                      (d.zRange = Math.abs(d.maxZ - d.minZ));
                    for (var A = 0; A < d.yRange.length; A++)
                      f.push(d.yRange[A] / d.gridHeight);
                    if (
                      ((o = d.xRange / d.gridWidth),
                      (c =
                        Math.abs(d.initialMaxX - d.initialMinX) / d.gridWidth),
                      (s = d.yRange / d.gridWidth),
                      (h = d.xRange / d.gridHeight),
                      (g = (d.zRange / d.gridHeight) * 16) || (g = 1),
                      d.minY !== Number.MIN_VALUE &&
                        Math.abs(d.minY) !== 0 &&
                        (d.hasNegs = !0),
                      d.isMultipleYAxis)
                    ) {
                      y = [];
                      for (var O = 0; O < f.length; O++)
                        y.push(-d.minYArr[O] / f[O]);
                    } else
                      y.push(-d.minY / f[0]),
                        d.minY !== Number.MIN_VALUE &&
                          Math.abs(d.minY) !== 0 &&
                          ((x = -d.minY / s), (k = d.minX / o));
                    return {
                      yRatio: f,
                      invertedYRatio: s,
                      zRatio: g,
                      xRatio: o,
                      initialXRatio: c,
                      invertedXRatio: h,
                      baseLineInvertedY: x,
                      baseLineY: y,
                      baseLineX: k,
                    };
                  },
                },
                {
                  key: "getLogSeries",
                  value: function (s) {
                    var o = this,
                      c = this.w;
                    return (
                      (c.globals.seriesLog = s.map(function (h, d) {
                        return c.config.yaxis[d] &&
                          c.config.yaxis[d].logarithmic
                          ? h.map(function (f) {
                              return f === null
                                ? null
                                : o.getLogVal(c.config.yaxis[d].logBase, f, d);
                            })
                          : h;
                      })),
                      c.globals.invalidLogScale ? s : c.globals.seriesLog
                    );
                  },
                },
                {
                  key: "getBaseLog",
                  value: function (s, o) {
                    return Math.log(o) / Math.log(s);
                  },
                },
                {
                  key: "getLogVal",
                  value: function (s, o, c) {
                    if (o === 0) return 0;
                    var h = this.w,
                      d =
                        h.globals.minYArr[c] === 0
                          ? -1
                          : this.getBaseLog(s, h.globals.minYArr[c]),
                      f =
                        (h.globals.maxYArr[c] === 0
                          ? 0
                          : this.getBaseLog(s, h.globals.maxYArr[c])) - d;
                    return o < 1 ? o / f : (this.getBaseLog(s, o) - d) / f;
                  },
                },
                {
                  key: "getLogYRatios",
                  value: function (s) {
                    var o = this,
                      c = this.w,
                      h = this.w.globals;
                    return (
                      (h.yLogRatio = s.slice()),
                      (h.logYRange = h.yRange.map(function (d, f) {
                        if (
                          c.config.yaxis[f] &&
                          o.w.config.yaxis[f].logarithmic
                        ) {
                          var g,
                            y = -Number.MAX_VALUE,
                            x = Number.MIN_VALUE;
                          return (
                            h.seriesLog.forEach(function (k, _) {
                              k.forEach(function (A) {
                                c.config.yaxis[_] &&
                                  c.config.yaxis[_].logarithmic &&
                                  ((y = Math.max(A, y)), (x = Math.min(A, x)));
                              });
                            }),
                            (g = Math.pow(
                              h.yRange[f],
                              Math.abs(x - y) / h.yRange[f]
                            )),
                            (h.yLogRatio[f] = g / h.gridHeight),
                            g
                          );
                        }
                      })),
                      h.invalidLogScale ? s.slice() : h.yLogRatio
                    );
                  },
                },
              ],
              [
                {
                  key: "checkComboSeries",
                  value: function (s) {
                    var o = !1,
                      c = 0,
                      h = 0;
                    return (
                      s.length &&
                        s[0].type !== void 0 &&
                        s.forEach(function (d) {
                          (d.type !== "bar" &&
                            d.type !== "column" &&
                            d.type !== "candlestick" &&
                            d.type !== "boxPlot") ||
                            c++,
                            d.type !== void 0 && h++;
                        }),
                      h > 0 && (o = !0),
                      { comboBarCount: c, comboCharts: o }
                    );
                  },
                },
                {
                  key: "extendArrayProps",
                  value: function (s, o, c) {
                    return (
                      o.yaxis && (o = s.extendYAxis(o, c)),
                      o.annotations &&
                        (o.annotations.yaxis &&
                          (o = s.extendYAxisAnnotations(o)),
                        o.annotations.xaxis &&
                          (o = s.extendXAxisAnnotations(o)),
                        o.annotations.points &&
                          (o = s.extendPointAnnotations(o))),
                      o
                    );
                  },
                },
              ]
            ),
            $
          );
        })(),
        ye = (function () {
          function $(s) {
            a(this, $), (this.w = s.w), (this.annoCtx = s);
          }
          return (
            u($, [
              {
                key: "setOrientations",
                value: function (s) {
                  var o =
                      arguments.length > 1 && arguments[1] !== void 0
                        ? arguments[1]
                        : null,
                    c = this.w;
                  if (s.label.orientation === "vertical") {
                    var h = o !== null ? o : 0,
                      d = c.globals.dom.baseEl.querySelector(
                        ".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='".concat(
                          h,
                          "']"
                        )
                      );
                    if (d !== null) {
                      var f = d.getBoundingClientRect();
                      d.setAttribute(
                        "x",
                        parseFloat(d.getAttribute("x")) - f.height + 4
                      ),
                        s.label.position === "top"
                          ? d.setAttribute(
                              "y",
                              parseFloat(d.getAttribute("y")) + f.width
                            )
                          : d.setAttribute(
                              "y",
                              parseFloat(d.getAttribute("y")) - f.width
                            );
                      var g = this.annoCtx.graphics.rotateAroundCenter(d),
                        y = g.x,
                        x = g.y;
                      d.setAttribute(
                        "transform",
                        "rotate(-90 ".concat(y, " ").concat(x, ")")
                      );
                    }
                  }
                },
              },
              {
                key: "addBackgroundToAnno",
                value: function (s, o) {
                  var c = this.w;
                  if (
                    !s ||
                    o.label.text === void 0 ||
                    (o.label.text !== void 0 && !String(o.label.text).trim())
                  )
                    return null;
                  var h = c.globals.dom.baseEl
                      .querySelector(".apexcharts-grid")
                      .getBoundingClientRect(),
                    d = s.getBoundingClientRect(),
                    f = o.label.style.padding.left,
                    g = o.label.style.padding.right,
                    y = o.label.style.padding.top,
                    x = o.label.style.padding.bottom;
                  o.label.orientation === "vertical" &&
                    ((y = o.label.style.padding.left),
                    (x = o.label.style.padding.right),
                    (f = o.label.style.padding.top),
                    (g = o.label.style.padding.bottom));
                  var k = d.left - h.left - f,
                    _ = d.top - h.top - y,
                    A = this.annoCtx.graphics.drawRect(
                      k - c.globals.barPadForNumericAxis,
                      _,
                      d.width + f + g,
                      d.height + y + x,
                      o.label.borderRadius,
                      o.label.style.background,
                      1,
                      o.label.borderWidth,
                      o.label.borderColor,
                      0
                    );
                  return o.id && A.node.classList.add(o.id), A;
                },
              },
              {
                key: "annotationsBackground",
                value: function () {
                  var s = this,
                    o = this.w,
                    c = function (h, d, f) {
                      var g = o.globals.dom.baseEl.querySelector(
                        ".apexcharts-"
                          .concat(f, "-annotations .apexcharts-")
                          .concat(f, "-annotation-label[rel='")
                          .concat(d, "']")
                      );
                      if (g) {
                        var y = g.parentNode,
                          x = s.addBackgroundToAnno(g, h);
                        x &&
                          (y.insertBefore(x.node, g),
                          h.label.mouseEnter &&
                            x.node.addEventListener(
                              "mouseenter",
                              h.label.mouseEnter.bind(s, h)
                            ),
                          h.label.mouseLeave &&
                            x.node.addEventListener(
                              "mouseleave",
                              h.label.mouseLeave.bind(s, h)
                            ),
                          h.label.click &&
                            x.node.addEventListener(
                              "click",
                              h.label.click.bind(s, h)
                            ));
                      }
                    };
                  o.config.annotations.xaxis.map(function (h, d) {
                    c(h, d, "xaxis");
                  }),
                    o.config.annotations.yaxis.map(function (h, d) {
                      c(h, d, "yaxis");
                    }),
                    o.config.annotations.points.map(function (h, d) {
                      c(h, d, "point");
                    });
                },
              },
              {
                key: "getY1Y2",
                value: function (s, o) {
                  var c,
                    h = s === "y1" ? o.y : o.y2,
                    d = this.w;
                  if (this.annoCtx.invertAxis) {
                    var f = d.globals.labels.indexOf(h);
                    d.config.xaxis.convertedCatToNumeric &&
                      (f = d.globals.categoryLabels.indexOf(h));
                    var g = d.globals.dom.baseEl.querySelector(
                      ".apexcharts-yaxis-texts-g text:nth-child(" +
                        (f + 1) +
                        ")"
                    );
                    g && (c = parseFloat(g.getAttribute("y")));
                  } else {
                    var y;
                    d.config.yaxis[o.yAxisIndex].logarithmic
                      ? (y =
                          (h = new fe(this.annoCtx.ctx).getLogVal(
                            h,
                            o.yAxisIndex
                          )) / d.globals.yLogRatio[o.yAxisIndex])
                      : (y =
                          (h - d.globals.minYArr[o.yAxisIndex]) /
                          (d.globals.yRange[o.yAxisIndex] /
                            d.globals.gridHeight)),
                      (c = d.globals.gridHeight - y),
                      !o.marker || (o.y !== void 0 && o.y !== null) || (c = 0),
                      d.config.yaxis[o.yAxisIndex] &&
                        d.config.yaxis[o.yAxisIndex].reversed &&
                        (c = y);
                  }
                  return (
                    typeof h == "string" &&
                      h.indexOf("px") > -1 &&
                      (c = parseFloat(h)),
                    c
                  );
                },
              },
              {
                key: "getX1X2",
                value: function (s, o) {
                  var c = this.w,
                    h = this.annoCtx.invertAxis
                      ? c.globals.minY
                      : c.globals.minX,
                    d = this.annoCtx.invertAxis
                      ? c.globals.maxY
                      : c.globals.maxX,
                    f = this.annoCtx.invertAxis
                      ? c.globals.yRange[0]
                      : c.globals.xRange,
                    g = (o.x - h) / (f / c.globals.gridWidth);
                  this.annoCtx.inversedReversedAxis &&
                    (g = (d - o.x) / (f / c.globals.gridWidth)),
                    (c.config.xaxis.type !== "category" &&
                      !c.config.xaxis.convertedCatToNumeric) ||
                      this.annoCtx.invertAxis ||
                      c.globals.dataFormatXNumeric ||
                      (g = this.getStringX(o.x));
                  var y = (o.x2 - h) / (f / c.globals.gridWidth);
                  return (
                    this.annoCtx.inversedReversedAxis &&
                      (y = (d - o.x2) / (f / c.globals.gridWidth)),
                    (c.config.xaxis.type !== "category" &&
                      !c.config.xaxis.convertedCatToNumeric) ||
                      this.annoCtx.invertAxis ||
                      c.globals.dataFormatXNumeric ||
                      (y = this.getStringX(o.x2)),
                    (o.x !== void 0 && o.x !== null) ||
                      !o.marker ||
                      (g = c.globals.gridWidth),
                    s === "x1" &&
                      typeof o.x == "string" &&
                      o.x.indexOf("px") > -1 &&
                      (g = parseFloat(o.x)),
                    s === "x2" &&
                      typeof o.x2 == "string" &&
                      o.x2.indexOf("px") > -1 &&
                      (y = parseFloat(o.x2)),
                    s === "x1" ? g : y
                  );
                },
              },
              {
                key: "getStringX",
                value: function (s) {
                  var o = this.w,
                    c = s;
                  o.config.xaxis.convertedCatToNumeric &&
                    o.globals.categoryLabels.length &&
                    (s = o.globals.categoryLabels.indexOf(s) + 1);
                  var h = o.globals.labels.indexOf(s),
                    d = o.globals.dom.baseEl.querySelector(
                      ".apexcharts-xaxis-texts-g text:nth-child(" +
                        (h + 1) +
                        ")"
                    );
                  return d && (c = parseFloat(d.getAttribute("x"))), c;
                },
              },
            ]),
            $
          );
        })(),
        pe = (function () {
          function $(s) {
            a(this, $),
              (this.w = s.w),
              (this.annoCtx = s),
              (this.invertAxis = this.annoCtx.invertAxis),
              (this.helpers = new ye(this.annoCtx));
          }
          return (
            u($, [
              {
                key: "addXaxisAnnotation",
                value: function (s, o, c) {
                  var h,
                    d = this.w,
                    f = this.helpers.getX1X2("x1", s),
                    g = s.label.text,
                    y = s.strokeDashArray;
                  if (B.isNumber(f)) {
                    if (s.x2 === null || s.x2 === void 0) {
                      var x = this.annoCtx.graphics.drawLine(
                        f + s.offsetX,
                        0 + s.offsetY,
                        f + s.offsetX,
                        d.globals.gridHeight + s.offsetY,
                        s.borderColor,
                        y,
                        s.borderWidth
                      );
                      o.appendChild(x.node), s.id && x.node.classList.add(s.id);
                    } else {
                      if ((h = this.helpers.getX1X2("x2", s)) < f) {
                        var k = f;
                        (f = h), (h = k);
                      }
                      var _ = this.annoCtx.graphics.drawRect(
                        f + s.offsetX,
                        0 + s.offsetY,
                        h - f,
                        d.globals.gridHeight + s.offsetY,
                        0,
                        s.fillColor,
                        s.opacity,
                        1,
                        s.borderColor,
                        y
                      );
                      _.node.classList.add("apexcharts-annotation-rect"),
                        _.attr(
                          "clip-path",
                          "url(#gridRectMask".concat(d.globals.cuid, ")")
                        ),
                        o.appendChild(_.node),
                        s.id && _.node.classList.add(s.id);
                    }
                    var A = this.annoCtx.graphics.getTextRects(
                        g,
                        parseFloat(s.label.style.fontSize)
                      ),
                      O =
                        s.label.position === "top"
                          ? 4
                          : s.label.position === "center"
                          ? d.globals.gridHeight / 2 +
                            (s.label.orientation === "vertical"
                              ? A.width / 2
                              : 0)
                          : d.globals.gridHeight,
                      N = this.annoCtx.graphics.drawText({
                        x: f + s.label.offsetX,
                        y:
                          O +
                          s.label.offsetY -
                          (s.label.orientation === "vertical"
                            ? s.label.position === "top"
                              ? A.width / 2 - 12
                              : -A.width / 2
                            : 0),
                        text: g,
                        textAnchor: s.label.textAnchor,
                        fontSize: s.label.style.fontSize,
                        fontFamily: s.label.style.fontFamily,
                        fontWeight: s.label.style.fontWeight,
                        foreColor: s.label.style.color,
                        cssClass: "apexcharts-xaxis-annotation-label "
                          .concat(s.label.style.cssClass, " ")
                          .concat(s.id ? s.id : ""),
                      });
                    N.attr({ rel: c }),
                      o.appendChild(N.node),
                      this.annoCtx.helpers.setOrientations(s, c);
                  }
                },
              },
              {
                key: "drawXAxisAnnotations",
                value: function () {
                  var s = this,
                    o = this.w,
                    c = this.annoCtx.graphics.group({
                      class: "apexcharts-xaxis-annotations",
                    });
                  return (
                    o.config.annotations.xaxis.map(function (h, d) {
                      s.addXaxisAnnotation(h, c.node, d);
                    }),
                    c
                  );
                },
              },
            ]),
            $
          );
        })(),
        _e = (function () {
          function $(s) {
            a(this, $),
              (this.w = s.w),
              (this.annoCtx = s),
              (this.helpers = new ye(this.annoCtx));
          }
          return (
            u($, [
              {
                key: "addYaxisAnnotation",
                value: function (s, o, c) {
                  var h,
                    d = this.w,
                    f = s.strokeDashArray,
                    g = this.helpers.getY1Y2("y1", s),
                    y = s.label.text;
                  if (s.y2 === null || s.y2 === void 0) {
                    var x = this.annoCtx.graphics.drawLine(
                      0 + s.offsetX,
                      g + s.offsetY,
                      this._getYAxisAnnotationWidth(s),
                      g + s.offsetY,
                      s.borderColor,
                      f,
                      s.borderWidth
                    );
                    o.appendChild(x.node), s.id && x.node.classList.add(s.id);
                  } else {
                    if ((h = this.helpers.getY1Y2("y2", s)) > g) {
                      var k = g;
                      (g = h), (h = k);
                    }
                    var _ = this.annoCtx.graphics.drawRect(
                      0 + s.offsetX,
                      h + s.offsetY,
                      this._getYAxisAnnotationWidth(s),
                      g - h,
                      0,
                      s.fillColor,
                      s.opacity,
                      1,
                      s.borderColor,
                      f
                    );
                    _.node.classList.add("apexcharts-annotation-rect"),
                      _.attr(
                        "clip-path",
                        "url(#gridRectMask".concat(d.globals.cuid, ")")
                      ),
                      o.appendChild(_.node),
                      s.id && _.node.classList.add(s.id);
                  }
                  var A =
                      s.label.position === "right"
                        ? d.globals.gridWidth
                        : s.label.position === "center"
                        ? d.globals.gridWidth / 2
                        : 0,
                    O = this.annoCtx.graphics.drawText({
                      x: A + s.label.offsetX,
                      y: (h ?? g) + s.label.offsetY - 3,
                      text: y,
                      textAnchor: s.label.textAnchor,
                      fontSize: s.label.style.fontSize,
                      fontFamily: s.label.style.fontFamily,
                      fontWeight: s.label.style.fontWeight,
                      foreColor: s.label.style.color,
                      cssClass: "apexcharts-yaxis-annotation-label "
                        .concat(s.label.style.cssClass, " ")
                        .concat(s.id ? s.id : ""),
                    });
                  O.attr({ rel: c }), o.appendChild(O.node);
                },
              },
              {
                key: "_getYAxisAnnotationWidth",
                value: function (s) {
                  var o = this.w;
                  return (
                    o.globals.gridWidth,
                    (s.width.indexOf("%") > -1
                      ? (o.globals.gridWidth * parseInt(s.width, 10)) / 100
                      : parseInt(s.width, 10)) + s.offsetX
                  );
                },
              },
              {
                key: "drawYAxisAnnotations",
                value: function () {
                  var s = this,
                    o = this.w,
                    c = this.annoCtx.graphics.group({
                      class: "apexcharts-yaxis-annotations",
                    });
                  return (
                    o.config.annotations.yaxis.map(function (h, d) {
                      s.addYaxisAnnotation(h, c.node, d);
                    }),
                    c
                  );
                },
              },
            ]),
            $
          );
        })(),
        be = (function () {
          function $(s) {
            a(this, $),
              (this.w = s.w),
              (this.annoCtx = s),
              (this.helpers = new ye(this.annoCtx));
          }
          return (
            u($, [
              {
                key: "addPointAnnotation",
                value: function (s, o, c) {
                  this.w;
                  var h = this.helpers.getX1X2("x1", s),
                    d = this.helpers.getY1Y2("y1", s);
                  if (B.isNumber(h)) {
                    var f = {
                        pSize: s.marker.size,
                        pointStrokeWidth: s.marker.strokeWidth,
                        pointFillColor: s.marker.fillColor,
                        pointStrokeColor: s.marker.strokeColor,
                        shape: s.marker.shape,
                        pRadius: s.marker.radius,
                        class: "apexcharts-point-annotation-marker "
                          .concat(s.marker.cssClass, " ")
                          .concat(s.id ? s.id : ""),
                      },
                      g = this.annoCtx.graphics.drawMarker(
                        h + s.marker.offsetX,
                        d + s.marker.offsetY,
                        f
                      );
                    o.appendChild(g.node);
                    var y = s.label.text ? s.label.text : "",
                      x = this.annoCtx.graphics.drawText({
                        x: h + s.label.offsetX,
                        y:
                          d +
                          s.label.offsetY -
                          s.marker.size -
                          parseFloat(s.label.style.fontSize) / 1.6,
                        text: y,
                        textAnchor: s.label.textAnchor,
                        fontSize: s.label.style.fontSize,
                        fontFamily: s.label.style.fontFamily,
                        fontWeight: s.label.style.fontWeight,
                        foreColor: s.label.style.color,
                        cssClass: "apexcharts-point-annotation-label "
                          .concat(s.label.style.cssClass, " ")
                          .concat(s.id ? s.id : ""),
                      });
                    if (
                      (x.attr({ rel: c }),
                      o.appendChild(x.node),
                      s.customSVG.SVG)
                    ) {
                      var k = this.annoCtx.graphics.group({
                        class:
                          "apexcharts-point-annotations-custom-svg " +
                          s.customSVG.cssClass,
                      });
                      k.attr({
                        transform: "translate("
                          .concat(h + s.customSVG.offsetX, ", ")
                          .concat(d + s.customSVG.offsetY, ")"),
                      }),
                        (k.node.innerHTML = s.customSVG.SVG),
                        o.appendChild(k.node);
                    }
                    if (s.image.path) {
                      var _ = s.image.width ? s.image.width : 20,
                        A = s.image.height ? s.image.height : 20;
                      g = this.annoCtx.addImage({
                        x: h + s.image.offsetX - _ / 2,
                        y: d + s.image.offsetY - A / 2,
                        width: _,
                        height: A,
                        path: s.image.path,
                        appendTo: ".apexcharts-point-annotations",
                      });
                    }
                    s.mouseEnter &&
                      g.node.addEventListener(
                        "mouseenter",
                        s.mouseEnter.bind(this, s)
                      ),
                      s.mouseLeave &&
                        g.node.addEventListener(
                          "mouseleave",
                          s.mouseLeave.bind(this, s)
                        ),
                      s.click &&
                        g.node.addEventListener("click", s.click.bind(this, s));
                  }
                },
              },
              {
                key: "drawPointAnnotations",
                value: function () {
                  var s = this,
                    o = this.w,
                    c = this.annoCtx.graphics.group({
                      class: "apexcharts-point-annotations",
                    });
                  return (
                    o.config.annotations.points.map(function (h, d) {
                      s.addPointAnnotation(h, c.node, d);
                    }),
                    c
                  );
                },
              },
            ]),
            $
          );
        })(),
        Ce = {
          name: "en",
          options: {
            months: [
              "January",
              "February",
              "March",
              "April",
              "May",
              "June",
              "July",
              "August",
              "September",
              "October",
              "November",
              "December",
            ],
            shortMonths: [
              "Jan",
              "Feb",
              "Mar",
              "Apr",
              "May",
              "Jun",
              "Jul",
              "Aug",
              "Sep",
              "Oct",
              "Nov",
              "Dec",
            ],
            days: [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday",
            ],
            shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            toolbar: {
              exportToSVG: "Download SVG",
              exportToPNG: "Download PNG",
              exportToCSV: "Download CSV",
              menu: "Menu",
              selection: "Selection",
              selectionZoom: "Selection Zoom",
              zoomIn: "Zoom In",
              zoomOut: "Zoom Out",
              pan: "Panning",
              reset: "Reset Zoom",
            },
          },
        },
        ke = (function () {
          function $() {
            a(this, $),
              (this.yAxis = {
                show: !0,
                showAlways: !1,
                showForNullSeries: !0,
                seriesName: void 0,
                opposite: !1,
                reversed: !1,
                logarithmic: !1,
                logBase: 10,
                tickAmount: void 0,
                forceNiceScale: !1,
                max: void 0,
                min: void 0,
                floating: !1,
                decimalsInFloat: void 0,
                labels: {
                  show: !0,
                  minWidth: 0,
                  maxWidth: 160,
                  offsetX: 0,
                  offsetY: 0,
                  align: void 0,
                  rotate: 0,
                  padding: 20,
                  style: {
                    colors: [],
                    fontSize: "11px",
                    fontWeight: 400,
                    fontFamily: void 0,
                    cssClass: "",
                  },
                  formatter: void 0,
                },
                axisBorder: {
                  show: !1,
                  color: "#e0e0e0",
                  width: 1,
                  offsetX: 0,
                  offsetY: 0,
                },
                axisTicks: {
                  show: !1,
                  color: "#e0e0e0",
                  width: 6,
                  offsetX: 0,
                  offsetY: 0,
                },
                title: {
                  text: void 0,
                  rotate: -90,
                  offsetY: 0,
                  offsetX: 0,
                  style: {
                    color: void 0,
                    fontSize: "11px",
                    fontWeight: 900,
                    fontFamily: void 0,
                    cssClass: "",
                  },
                },
                tooltip: { enabled: !1, offsetX: 0 },
                crosshairs: {
                  show: !0,
                  position: "front",
                  stroke: { color: "#b6b6b6", width: 1, dashArray: 0 },
                },
              }),
              (this.pointAnnotation = {
                id: void 0,
                x: 0,
                y: null,
                yAxisIndex: 0,
                seriesIndex: 0,
                mouseEnter: void 0,
                mouseLeave: void 0,
                click: void 0,
                marker: {
                  size: 4,
                  fillColor: "#fff",
                  strokeWidth: 2,
                  strokeColor: "#333",
                  shape: "circle",
                  offsetX: 0,
                  offsetY: 0,
                  radius: 2,
                  cssClass: "",
                },
                label: {
                  borderColor: "#c2c2c2",
                  borderWidth: 1,
                  borderRadius: 2,
                  text: void 0,
                  textAnchor: "middle",
                  offsetX: 0,
                  offsetY: 0,
                  mouseEnter: void 0,
                  mouseLeave: void 0,
                  click: void 0,
                  style: {
                    background: "#fff",
                    color: void 0,
                    fontSize: "11px",
                    fontFamily: void 0,
                    fontWeight: 400,
                    cssClass: "",
                    padding: { left: 5, right: 5, top: 2, bottom: 2 },
                  },
                },
                customSVG: {
                  SVG: void 0,
                  cssClass: void 0,
                  offsetX: 0,
                  offsetY: 0,
                },
                image: {
                  path: void 0,
                  width: 20,
                  height: 20,
                  offsetX: 0,
                  offsetY: 0,
                },
              }),
              (this.yAxisAnnotation = {
                id: void 0,
                y: 0,
                y2: null,
                strokeDashArray: 1,
                fillColor: "#c2c2c2",
                borderColor: "#c2c2c2",
                borderWidth: 1,
                opacity: 0.3,
                offsetX: 0,
                offsetY: 0,
                width: "100%",
                yAxisIndex: 0,
                label: {
                  borderColor: "#c2c2c2",
                  borderWidth: 1,
                  borderRadius: 2,
                  text: void 0,
                  textAnchor: "end",
                  position: "right",
                  offsetX: 0,
                  offsetY: -3,
                  mouseEnter: void 0,
                  mouseLeave: void 0,
                  click: void 0,
                  style: {
                    background: "#fff",
                    color: void 0,
                    fontSize: "11px",
                    fontFamily: void 0,
                    fontWeight: 400,
                    cssClass: "",
                    padding: { left: 5, right: 5, top: 2, bottom: 2 },
                  },
                },
              }),
              (this.xAxisAnnotation = {
                id: void 0,
                x: 0,
                x2: null,
                strokeDashArray: 1,
                fillColor: "#c2c2c2",
                borderColor: "#c2c2c2",
                borderWidth: 1,
                opacity: 0.3,
                offsetX: 0,
                offsetY: 0,
                label: {
                  borderColor: "#c2c2c2",
                  borderWidth: 1,
                  borderRadius: 2,
                  text: void 0,
                  textAnchor: "middle",
                  orientation: "vertical",
                  position: "top",
                  offsetX: 0,
                  offsetY: 0,
                  mouseEnter: void 0,
                  mouseLeave: void 0,
                  click: void 0,
                  style: {
                    background: "#fff",
                    color: void 0,
                    fontSize: "11px",
                    fontFamily: void 0,
                    fontWeight: 400,
                    cssClass: "",
                    padding: { left: 5, right: 5, top: 2, bottom: 2 },
                  },
                },
              }),
              (this.text = {
                x: 0,
                y: 0,
                text: "",
                textAnchor: "start",
                foreColor: void 0,
                fontSize: "13px",
                fontFamily: void 0,
                fontWeight: 400,
                appendTo: ".apexcharts-annotations",
                backgroundColor: "transparent",
                borderColor: "#c2c2c2",
                borderRadius: 0,
                borderWidth: 0,
                paddingLeft: 4,
                paddingRight: 4,
                paddingTop: 2,
                paddingBottom: 2,
              });
          }
          return (
            u($, [
              {
                key: "init",
                value: function () {
                  return {
                    annotations: {
                      yaxis: [this.yAxisAnnotation],
                      xaxis: [this.xAxisAnnotation],
                      points: [this.pointAnnotation],
                      texts: [],
                      images: [],
                      shapes: [],
                    },
                    chart: {
                      animations: {
                        enabled: !0,
                        easing: "easeinout",
                        speed: 800,
                        animateGradually: { delay: 150, enabled: !0 },
                        dynamicAnimation: { enabled: !0, speed: 350 },
                      },
                      background: "transparent",
                      locales: [Ce],
                      defaultLocale: "en",
                      dropShadow: {
                        enabled: !1,
                        enabledOnSeries: void 0,
                        top: 2,
                        left: 2,
                        blur: 4,
                        color: "#000",
                        opacity: 0.35,
                      },
                      events: {
                        animationEnd: void 0,
                        beforeMount: void 0,
                        mounted: void 0,
                        updated: void 0,
                        click: void 0,
                        mouseMove: void 0,
                        mouseLeave: void 0,
                        xAxisLabelClick: void 0,
                        legendClick: void 0,
                        markerClick: void 0,
                        selection: void 0,
                        dataPointSelection: void 0,
                        dataPointMouseEnter: void 0,
                        dataPointMouseLeave: void 0,
                        beforeZoom: void 0,
                        beforeResetZoom: void 0,
                        zoomed: void 0,
                        scrolled: void 0,
                        brushScrolled: void 0,
                      },
                      foreColor: "#373d3f",
                      fontFamily: "Helvetica, Arial, sans-serif",
                      height: "auto",
                      parentHeightOffset: 15,
                      redrawOnParentResize: !0,
                      redrawOnWindowResize: !0,
                      id: void 0,
                      group: void 0,
                      offsetX: 0,
                      offsetY: 0,
                      selection: {
                        enabled: !1,
                        type: "x",
                        fill: { color: "#24292e", opacity: 0.1 },
                        stroke: {
                          width: 1,
                          color: "#24292e",
                          opacity: 0.4,
                          dashArray: 3,
                        },
                        xaxis: { min: void 0, max: void 0 },
                        yaxis: { min: void 0, max: void 0 },
                      },
                      sparkline: { enabled: !1 },
                      brush: {
                        enabled: !1,
                        autoScaleYaxis: !0,
                        target: void 0,
                        targets: void 0,
                      },
                      stacked: !1,
                      stackType: "normal",
                      toolbar: {
                        show: !0,
                        offsetX: 0,
                        offsetY: 0,
                        tools: {
                          download: !0,
                          selection: !0,
                          zoom: !0,
                          zoomin: !0,
                          zoomout: !0,
                          pan: !0,
                          reset: !0,
                          customIcons: [],
                        },
                        export: {
                          csv: {
                            filename: void 0,
                            columnDelimiter: ",",
                            headerCategory: "category",
                            headerValue: "value",
                            dateFormatter: function (s) {
                              return new Date(s).toDateString();
                            },
                          },
                          png: { filename: void 0 },
                          svg: { filename: void 0 },
                        },
                        autoSelected: "zoom",
                      },
                      type: "line",
                      width: "100%",
                      zoom: {
                        enabled: !0,
                        type: "x",
                        autoScaleYaxis: !1,
                        zoomedArea: {
                          fill: { color: "#90CAF9", opacity: 0.4 },
                          stroke: { color: "#0D47A1", opacity: 0.4, width: 1 },
                        },
                      },
                    },
                    plotOptions: {
                      area: { fillTo: "origin" },
                      bar: {
                        horizontal: !1,
                        columnWidth: "70%",
                        barHeight: "70%",
                        distributed: !1,
                        borderRadius: 0,
                        borderRadiusApplication: "around",
                        borderRadiusWhenStacked: "last",
                        rangeBarOverlap: !0,
                        rangeBarGroupRows: !1,
                        hideZeroBarsWhenGrouped: !1,
                        isDumbbell: !1,
                        dumbbellColors: void 0,
                        isFunnel: !1,
                        isFunnel3d: !0,
                        colors: {
                          ranges: [],
                          backgroundBarColors: [],
                          backgroundBarOpacity: 1,
                          backgroundBarRadius: 0,
                        },
                        dataLabels: {
                          position: "top",
                          maxItems: 100,
                          hideOverflowingLabels: !0,
                          orientation: "horizontal",
                          total: {
                            enabled: !1,
                            formatter: void 0,
                            offsetX: 0,
                            offsetY: 0,
                            style: {
                              color: "#373d3f",
                              fontSize: "12px",
                              fontFamily: void 0,
                              fontWeight: 600,
                            },
                          },
                        },
                      },
                      bubble: {
                        zScaling: !0,
                        minBubbleRadius: void 0,
                        maxBubbleRadius: void 0,
                      },
                      candlestick: {
                        colors: { upward: "#00B746", downward: "#EF403C" },
                        wick: { useFillColor: !0 },
                      },
                      boxPlot: {
                        colors: { upper: "#00E396", lower: "#008FFB" },
                      },
                      heatmap: {
                        radius: 2,
                        enableShades: !0,
                        shadeIntensity: 0.5,
                        reverseNegativeShade: !1,
                        distributed: !1,
                        useFillColorAsStroke: !1,
                        colorScale: {
                          inverse: !1,
                          ranges: [],
                          min: void 0,
                          max: void 0,
                        },
                      },
                      treemap: {
                        enableShades: !0,
                        shadeIntensity: 0.5,
                        distributed: !1,
                        reverseNegativeShade: !1,
                        useFillColorAsStroke: !1,
                        dataLabels: { format: "scale" },
                        colorScale: {
                          inverse: !1,
                          ranges: [],
                          min: void 0,
                          max: void 0,
                        },
                      },
                      radialBar: {
                        inverseOrder: !1,
                        startAngle: 0,
                        endAngle: 360,
                        offsetX: 0,
                        offsetY: 0,
                        hollow: {
                          margin: 5,
                          size: "50%",
                          background: "transparent",
                          image: void 0,
                          imageWidth: 150,
                          imageHeight: 150,
                          imageOffsetX: 0,
                          imageOffsetY: 0,
                          imageClipped: !0,
                          position: "front",
                          dropShadow: {
                            enabled: !1,
                            top: 0,
                            left: 0,
                            blur: 3,
                            color: "#000",
                            opacity: 0.5,
                          },
                        },
                        track: {
                          show: !0,
                          startAngle: void 0,
                          endAngle: void 0,
                          background: "#f2f2f2",
                          strokeWidth: "97%",
                          opacity: 1,
                          margin: 5,
                          dropShadow: {
                            enabled: !1,
                            top: 0,
                            left: 0,
                            blur: 3,
                            color: "#000",
                            opacity: 0.5,
                          },
                        },
                        dataLabels: {
                          show: !0,
                          name: {
                            show: !0,
                            fontSize: "16px",
                            fontFamily: void 0,
                            fontWeight: 600,
                            color: void 0,
                            offsetY: 0,
                            formatter: function (s) {
                              return s;
                            },
                          },
                          value: {
                            show: !0,
                            fontSize: "14px",
                            fontFamily: void 0,
                            fontWeight: 400,
                            color: void 0,
                            offsetY: 16,
                            formatter: function (s) {
                              return s + "%";
                            },
                          },
                          total: {
                            show: !1,
                            label: "Total",
                            fontSize: "16px",
                            fontWeight: 600,
                            fontFamily: void 0,
                            color: void 0,
                            formatter: function (s) {
                              return (
                                s.globals.seriesTotals.reduce(function (o, c) {
                                  return o + c;
                                }, 0) /
                                  s.globals.series.length +
                                "%"
                              );
                            },
                          },
                        },
                      },
                      pie: {
                        customScale: 1,
                        offsetX: 0,
                        offsetY: 0,
                        startAngle: 0,
                        endAngle: 360,
                        expandOnClick: !0,
                        dataLabels: { offset: 0, minAngleToShowLabel: 10 },
                        donut: {
                          size: "65%",
                          background: "transparent",
                          labels: {
                            show: !1,
                            name: {
                              show: !0,
                              fontSize: "16px",
                              fontFamily: void 0,
                              fontWeight: 600,
                              color: void 0,
                              offsetY: -10,
                              formatter: function (s) {
                                return s;
                              },
                            },
                            value: {
                              show: !0,
                              fontSize: "20px",
                              fontFamily: void 0,
                              fontWeight: 400,
                              color: void 0,
                              offsetY: 10,
                              formatter: function (s) {
                                return s;
                              },
                            },
                            total: {
                              show: !1,
                              showAlways: !1,
                              label: "Total",
                              fontSize: "16px",
                              fontWeight: 400,
                              fontFamily: void 0,
                              color: void 0,
                              formatter: function (s) {
                                return s.globals.seriesTotals.reduce(function (
                                  o,
                                  c
                                ) {
                                  return o + c;
                                },
                                0);
                              },
                            },
                          },
                        },
                      },
                      polarArea: {
                        rings: { strokeWidth: 1, strokeColor: "#e8e8e8" },
                        spokes: { strokeWidth: 1, connectorColors: "#e8e8e8" },
                      },
                      radar: {
                        size: void 0,
                        offsetX: 0,
                        offsetY: 0,
                        polygons: {
                          strokeWidth: 1,
                          strokeColors: "#e8e8e8",
                          connectorColors: "#e8e8e8",
                          fill: { colors: void 0 },
                        },
                      },
                    },
                    colors: void 0,
                    dataLabels: {
                      enabled: !0,
                      enabledOnSeries: void 0,
                      formatter: function (s) {
                        return s !== null ? s : "";
                      },
                      textAnchor: "middle",
                      distributed: !1,
                      offsetX: 0,
                      offsetY: 0,
                      style: {
                        fontSize: "12px",
                        fontFamily: void 0,
                        fontWeight: 600,
                        colors: void 0,
                      },
                      background: {
                        enabled: !0,
                        foreColor: "#fff",
                        borderRadius: 2,
                        padding: 4,
                        opacity: 0.9,
                        borderWidth: 1,
                        borderColor: "#fff",
                        dropShadow: {
                          enabled: !1,
                          top: 1,
                          left: 1,
                          blur: 1,
                          color: "#000",
                          opacity: 0.45,
                        },
                      },
                      dropShadow: {
                        enabled: !1,
                        top: 1,
                        left: 1,
                        blur: 1,
                        color: "#000",
                        opacity: 0.45,
                      },
                    },
                    fill: {
                      type: "solid",
                      colors: void 0,
                      opacity: 0.85,
                      gradient: {
                        shade: "dark",
                        type: "horizontal",
                        shadeIntensity: 0.5,
                        gradientToColors: void 0,
                        inverseColors: !0,
                        opacityFrom: 1,
                        opacityTo: 1,
                        stops: [0, 50, 100],
                        colorStops: [],
                      },
                      image: { src: [], width: void 0, height: void 0 },
                      pattern: {
                        style: "squares",
                        width: 6,
                        height: 6,
                        strokeWidth: 2,
                      },
                    },
                    forecastDataPoints: {
                      count: 0,
                      fillOpacity: 0.5,
                      strokeWidth: void 0,
                      dashArray: 4,
                    },
                    grid: {
                      show: !0,
                      borderColor: "#e0e0e0",
                      strokeDashArray: 0,
                      position: "back",
                      xaxis: { lines: { show: !1 } },
                      yaxis: { lines: { show: !0 } },
                      row: { colors: void 0, opacity: 0.5 },
                      column: { colors: void 0, opacity: 0.5 },
                      padding: { top: 0, right: 10, bottom: 0, left: 12 },
                    },
                    labels: [],
                    legend: {
                      show: !0,
                      showForSingleSeries: !1,
                      showForNullSeries: !0,
                      showForZeroSeries: !0,
                      floating: !1,
                      position: "bottom",
                      horizontalAlign: "center",
                      inverseOrder: !1,
                      fontSize: "12px",
                      fontFamily: void 0,
                      fontWeight: 400,
                      width: void 0,
                      height: void 0,
                      formatter: void 0,
                      tooltipHoverFormatter: void 0,
                      offsetX: -20,
                      offsetY: 4,
                      customLegendItems: [],
                      labels: { colors: void 0, useSeriesColors: !1 },
                      markers: {
                        width: 12,
                        height: 12,
                        strokeWidth: 0,
                        fillColors: void 0,
                        strokeColor: "#fff",
                        radius: 12,
                        customHTML: void 0,
                        offsetX: 0,
                        offsetY: 0,
                        onClick: void 0,
                      },
                      itemMargin: { horizontal: 5, vertical: 2 },
                      onItemClick: { toggleDataSeries: !0 },
                      onItemHover: { highlightDataSeries: !0 },
                    },
                    markers: {
                      discrete: [],
                      size: 0,
                      colors: void 0,
                      strokeColors: "#fff",
                      strokeWidth: 2,
                      strokeOpacity: 0.9,
                      strokeDashArray: 0,
                      fillOpacity: 1,
                      shape: "circle",
                      width: 8,
                      height: 8,
                      radius: 2,
                      offsetX: 0,
                      offsetY: 0,
                      onClick: void 0,
                      onDblClick: void 0,
                      showNullDataPoints: !0,
                      hover: { size: void 0, sizeOffset: 3 },
                    },
                    noData: {
                      text: void 0,
                      align: "center",
                      verticalAlign: "middle",
                      offsetX: 0,
                      offsetY: 0,
                      style: {
                        color: void 0,
                        fontSize: "14px",
                        fontFamily: void 0,
                      },
                    },
                    responsive: [],
                    series: void 0,
                    states: {
                      normal: { filter: { type: "none", value: 0 } },
                      hover: { filter: { type: "lighten", value: 0.1 } },
                      active: {
                        allowMultipleDataPointsSelection: !1,
                        filter: { type: "darken", value: 0.5 },
                      },
                    },
                    title: {
                      text: void 0,
                      align: "left",
                      margin: 5,
                      offsetX: 0,
                      offsetY: 0,
                      floating: !1,
                      style: {
                        fontSize: "14px",
                        fontWeight: 900,
                        fontFamily: void 0,
                        color: void 0,
                      },
                    },
                    subtitle: {
                      text: void 0,
                      align: "left",
                      margin: 5,
                      offsetX: 0,
                      offsetY: 30,
                      floating: !1,
                      style: {
                        fontSize: "12px",
                        fontWeight: 400,
                        fontFamily: void 0,
                        color: void 0,
                      },
                    },
                    stroke: {
                      show: !0,
                      curve: "smooth",
                      lineCap: "butt",
                      width: 2,
                      colors: void 0,
                      dashArray: 0,
                      fill: {
                        type: "solid",
                        colors: void 0,
                        opacity: 0.85,
                        gradient: {
                          shade: "dark",
                          type: "horizontal",
                          shadeIntensity: 0.5,
                          gradientToColors: void 0,
                          inverseColors: !0,
                          opacityFrom: 1,
                          opacityTo: 1,
                          stops: [0, 50, 100],
                          colorStops: [],
                        },
                      },
                    },
                    tooltip: {
                      enabled: !0,
                      enabledOnSeries: void 0,
                      shared: !0,
                      followCursor: !1,
                      intersect: !1,
                      inverseOrder: !1,
                      custom: void 0,
                      fillSeriesColor: !1,
                      theme: "light",
                      cssClass: "",
                      style: { fontSize: "12px", fontFamily: void 0 },
                      onDatasetHover: { highlightDataSeries: !1 },
                      x: { show: !0, format: "dd MMM", formatter: void 0 },
                      y: {
                        formatter: void 0,
                        title: {
                          formatter: function (s) {
                            return s ? s + ": " : "";
                          },
                        },
                      },
                      z: { formatter: void 0, title: "Size: " },
                      marker: { show: !0, fillColors: void 0 },
                      items: { display: "flex" },
                      fixed: {
                        enabled: !1,
                        position: "topRight",
                        offsetX: 0,
                        offsetY: 0,
                      },
                    },
                    xaxis: {
                      type: "category",
                      categories: [],
                      convertedCatToNumeric: !1,
                      offsetX: 0,
                      offsetY: 0,
                      overwriteCategories: void 0,
                      labels: {
                        show: !0,
                        rotate: -45,
                        rotateAlways: !1,
                        hideOverlappingLabels: !0,
                        trim: !1,
                        minHeight: void 0,
                        maxHeight: 120,
                        showDuplicates: !0,
                        style: {
                          colors: [],
                          fontSize: "12px",
                          fontWeight: 400,
                          fontFamily: void 0,
                          cssClass: "",
                        },
                        offsetX: 0,
                        offsetY: 0,
                        format: void 0,
                        formatter: void 0,
                        datetimeUTC: !0,
                        datetimeFormatter: {
                          year: "yyyy",
                          month: "MMM 'yy",
                          day: "dd MMM",
                          hour: "HH:mm",
                          minute: "HH:mm:ss",
                          second: "HH:mm:ss",
                        },
                      },
                      group: {
                        groups: [],
                        style: {
                          colors: [],
                          fontSize: "12px",
                          fontWeight: 400,
                          fontFamily: void 0,
                          cssClass: "",
                        },
                      },
                      axisBorder: {
                        show: !0,
                        color: "#e0e0e0",
                        width: "100%",
                        height: 1,
                        offsetX: 0,
                        offsetY: 0,
                      },
                      axisTicks: {
                        show: !0,
                        color: "#e0e0e0",
                        height: 6,
                        offsetX: 0,
                        offsetY: 0,
                      },
                      tickAmount: void 0,
                      tickPlacement: "on",
                      min: void 0,
                      max: void 0,
                      range: void 0,
                      floating: !1,
                      decimalsInFloat: void 0,
                      position: "bottom",
                      title: {
                        text: void 0,
                        offsetX: 0,
                        offsetY: 0,
                        style: {
                          color: void 0,
                          fontSize: "12px",
                          fontWeight: 900,
                          fontFamily: void 0,
                          cssClass: "",
                        },
                      },
                      crosshairs: {
                        show: !0,
                        width: 1,
                        position: "back",
                        opacity: 0.9,
                        stroke: { color: "#b6b6b6", width: 1, dashArray: 3 },
                        fill: {
                          type: "solid",
                          color: "#B1B9C4",
                          gradient: {
                            colorFrom: "#D8E3F0",
                            colorTo: "#BED1E6",
                            stops: [0, 100],
                            opacityFrom: 0.4,
                            opacityTo: 0.5,
                          },
                        },
                        dropShadow: {
                          enabled: !1,
                          left: 0,
                          top: 0,
                          blur: 1,
                          opacity: 0.4,
                        },
                      },
                      tooltip: {
                        enabled: !0,
                        offsetY: 0,
                        formatter: void 0,
                        style: { fontSize: "12px", fontFamily: void 0 },
                      },
                    },
                    yaxis: this.yAxis,
                    theme: {
                      mode: "light",
                      palette: "palette1",
                      monochrome: {
                        enabled: !1,
                        color: "#008FFB",
                        shadeTo: "light",
                        shadeIntensity: 0.65,
                      },
                    },
                  };
                },
              },
            ]),
            $
          );
        })(),
        E = (function () {
          function $(s) {
            a(this, $),
              (this.ctx = s),
              (this.w = s.w),
              (this.graphics = new K(this.ctx)),
              this.w.globals.isBarHorizontal && (this.invertAxis = !0),
              (this.helpers = new ye(this)),
              (this.xAxisAnnotations = new pe(this)),
              (this.yAxisAnnotations = new _e(this)),
              (this.pointsAnnotations = new be(this)),
              this.w.globals.isBarHorizontal &&
                this.w.config.yaxis[0].reversed &&
                (this.inversedReversedAxis = !0),
              (this.xDivision =
                this.w.globals.gridWidth / this.w.globals.dataPoints);
          }
          return (
            u($, [
              {
                key: "drawAxesAnnotations",
                value: function () {
                  var s = this.w;
                  if (s.globals.axisCharts) {
                    for (
                      var o = this.yAxisAnnotations.drawYAxisAnnotations(),
                        c = this.xAxisAnnotations.drawXAxisAnnotations(),
                        h = this.pointsAnnotations.drawPointAnnotations(),
                        d = s.config.chart.animations.enabled,
                        f = [o, c, h],
                        g = [c.node, o.node, h.node],
                        y = 0;
                      y < 3;
                      y++
                    )
                      s.globals.dom.elGraphical.add(f[y]),
                        !d ||
                          s.globals.resized ||
                          s.globals.dataChanged ||
                          (s.config.chart.type !== "scatter" &&
                            s.config.chart.type !== "bubble" &&
                            s.globals.dataPoints > 1 &&
                            g[y].classList.add("apexcharts-element-hidden")),
                        s.globals.delayedElements.push({ el: g[y], index: 0 });
                    this.helpers.annotationsBackground();
                  }
                },
              },
              {
                key: "drawImageAnnos",
                value: function () {
                  var s = this;
                  this.w.config.annotations.images.map(function (o, c) {
                    s.addImage(o, c);
                  });
                },
              },
              {
                key: "drawTextAnnos",
                value: function () {
                  var s = this;
                  this.w.config.annotations.texts.map(function (o, c) {
                    s.addText(o, c);
                  });
                },
              },
              {
                key: "addXaxisAnnotation",
                value: function (s, o, c) {
                  this.xAxisAnnotations.addXaxisAnnotation(s, o, c);
                },
              },
              {
                key: "addYaxisAnnotation",
                value: function (s, o, c) {
                  this.yAxisAnnotations.addYaxisAnnotation(s, o, c);
                },
              },
              {
                key: "addPointAnnotation",
                value: function (s, o, c) {
                  this.pointsAnnotations.addPointAnnotation(s, o, c);
                },
              },
              {
                key: "addText",
                value: function (s, o) {
                  var c = s.x,
                    h = s.y,
                    d = s.text,
                    f = s.textAnchor,
                    g = s.foreColor,
                    y = s.fontSize,
                    x = s.fontFamily,
                    k = s.fontWeight,
                    _ = s.cssClass,
                    A = s.backgroundColor,
                    O = s.borderWidth,
                    N = s.strokeDashArray,
                    H = s.borderRadius,
                    G = s.borderColor,
                    te = s.appendTo,
                    se = te === void 0 ? ".apexcharts-annotations" : te,
                    b = s.paddingLeft,
                    C = b === void 0 ? 4 : b,
                    F = s.paddingRight,
                    ee = F === void 0 ? 4 : F,
                    ue = s.paddingBottom,
                    he = ue === void 0 ? 2 : ue,
                    we = s.paddingTop,
                    Ae = we === void 0 ? 2 : we,
                    Le = this.w,
                    ze = this.graphics.drawText({
                      x: c,
                      y: h,
                      text: d,
                      textAnchor: f || "start",
                      fontSize: y || "12px",
                      fontWeight: k || "regular",
                      fontFamily: x || Le.config.chart.fontFamily,
                      foreColor: g || Le.config.chart.foreColor,
                      cssClass: _,
                    }),
                    De = Le.globals.dom.baseEl.querySelector(se);
                  De && De.appendChild(ze.node);
                  var Ge = ze.bbox();
                  if (d) {
                    var it = this.graphics.drawRect(
                      Ge.x - C,
                      Ge.y - Ae,
                      Ge.width + C + ee,
                      Ge.height + he + Ae,
                      H,
                      A || "transparent",
                      1,
                      O,
                      G,
                      N
                    );
                    De.insertBefore(it.node, ze.node);
                  }
                },
              },
              {
                key: "addImage",
                value: function (s, o) {
                  var c = this.w,
                    h = s.path,
                    d = s.x,
                    f = d === void 0 ? 0 : d,
                    g = s.y,
                    y = g === void 0 ? 0 : g,
                    x = s.width,
                    k = x === void 0 ? 20 : x,
                    _ = s.height,
                    A = _ === void 0 ? 20 : _,
                    O = s.appendTo,
                    N = O === void 0 ? ".apexcharts-annotations" : O,
                    H = c.globals.dom.Paper.image(h);
                  H.size(k, A).move(f, y);
                  var G = c.globals.dom.baseEl.querySelector(N);
                  return G && G.appendChild(H.node), H;
                },
              },
              {
                key: "addXaxisAnnotationExternal",
                value: function (s, o, c) {
                  return (
                    this.addAnnotationExternal({
                      params: s,
                      pushToMemory: o,
                      context: c,
                      type: "xaxis",
                      contextMethod: c.addXaxisAnnotation,
                    }),
                    c
                  );
                },
              },
              {
                key: "addYaxisAnnotationExternal",
                value: function (s, o, c) {
                  return (
                    this.addAnnotationExternal({
                      params: s,
                      pushToMemory: o,
                      context: c,
                      type: "yaxis",
                      contextMethod: c.addYaxisAnnotation,
                    }),
                    c
                  );
                },
              },
              {
                key: "addPointAnnotationExternal",
                value: function (s, o, c) {
                  return (
                    this.invertAxis === void 0 &&
                      (this.invertAxis = c.w.globals.isBarHorizontal),
                    this.addAnnotationExternal({
                      params: s,
                      pushToMemory: o,
                      context: c,
                      type: "point",
                      contextMethod: c.addPointAnnotation,
                    }),
                    c
                  );
                },
              },
              {
                key: "addAnnotationExternal",
                value: function (s) {
                  var o = s.params,
                    c = s.pushToMemory,
                    h = s.context,
                    d = s.type,
                    f = s.contextMethod,
                    g = h,
                    y = g.w,
                    x = y.globals.dom.baseEl.querySelector(
                      ".apexcharts-".concat(d, "-annotations")
                    ),
                    k = x.childNodes.length + 1,
                    _ = new ke(),
                    A = Object.assign(
                      {},
                      d === "xaxis"
                        ? _.xAxisAnnotation
                        : d === "yaxis"
                        ? _.yAxisAnnotation
                        : _.pointAnnotation
                    ),
                    O = B.extend(A, o);
                  switch (d) {
                    case "xaxis":
                      this.addXaxisAnnotation(O, x, k);
                      break;
                    case "yaxis":
                      this.addYaxisAnnotation(O, x, k);
                      break;
                    case "point":
                      this.addPointAnnotation(O, x, k);
                  }
                  var N = y.globals.dom.baseEl.querySelector(
                      ".apexcharts-"
                        .concat(d, "-annotations .apexcharts-")
                        .concat(d, "-annotation-label[rel='")
                        .concat(k, "']")
                    ),
                    H = this.helpers.addBackgroundToAnno(N, O);
                  return (
                    H && x.insertBefore(H.node, N),
                    c &&
                      y.globals.memory.methodsToExec.push({
                        context: g,
                        id: O.id ? O.id : B.randomId(),
                        method: f,
                        label: "addAnnotation",
                        params: o,
                      }),
                    h
                  );
                },
              },
              {
                key: "clearAnnotations",
                value: function (s) {
                  var o = s.w,
                    c = o.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations"
                    );
                  o.globals.memory.methodsToExec.map(function (h, d) {
                    (h.label !== "addText" && h.label !== "addAnnotation") ||
                      o.globals.memory.methodsToExec.splice(d, 1);
                  }),
                    (c = B.listToArray(c)),
                    Array.prototype.forEach.call(c, function (h) {
                      for (; h.firstChild; ) h.removeChild(h.firstChild);
                    });
                },
              },
              {
                key: "removeAnnotation",
                value: function (s, o) {
                  var c = s.w,
                    h = c.globals.dom.baseEl.querySelectorAll(".".concat(o));
                  h &&
                    (c.globals.memory.methodsToExec.map(function (d, f) {
                      d.id === o && c.globals.memory.methodsToExec.splice(f, 1);
                    }),
                    Array.prototype.forEach.call(h, function (d) {
                      d.parentElement.removeChild(d);
                    }));
                },
              },
            ]),
            $
          );
        })(),
        P = (function () {
          function $(s) {
            a(this, $),
              (this.ctx = s),
              (this.w = s.w),
              (this.months31 = [1, 3, 5, 7, 8, 10, 12]),
              (this.months30 = [2, 4, 6, 9, 11]),
              (this.daysCntOfYear = [
                0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334,
              ]);
          }
          return (
            u($, [
              {
                key: "isValidDate",
                value: function (s) {
                  return !isNaN(this.parseDate(s));
                },
              },
              {
                key: "getTimeStamp",
                value: function (s) {
                  return Date.parse(s)
                    ? this.w.config.xaxis.labels.datetimeUTC
                      ? new Date(
                          new Date(s).toISOString().substr(0, 25)
                        ).getTime()
                      : new Date(s).getTime()
                    : s;
                },
              },
              {
                key: "getDate",
                value: function (s) {
                  return this.w.config.xaxis.labels.datetimeUTC
                    ? new Date(new Date(s).toUTCString())
                    : new Date(s);
                },
              },
              {
                key: "parseDate",
                value: function (s) {
                  var o = Date.parse(s);
                  if (!isNaN(o)) return this.getTimeStamp(s);
                  var c = Date.parse(
                    s.replace(/-/g, "/").replace(/[a-z]+/gi, " ")
                  );
                  return (c = this.getTimeStamp(c));
                },
              },
              {
                key: "parseDateWithTimezone",
                value: function (s) {
                  return Date.parse(
                    s.replace(/-/g, "/").replace(/[a-z]+/gi, " ")
                  );
                },
              },
              {
                key: "formatDate",
                value: function (s, o) {
                  var c = this.w.globals.locale,
                    h = this.w.config.xaxis.labels.datetimeUTC,
                    d = ["\0"].concat(z(c.months)),
                    f = [""].concat(z(c.shortMonths)),
                    g = [""].concat(z(c.days)),
                    y = [""].concat(z(c.shortDays));
                  function x(he, we) {
                    var Ae = he + "";
                    for (we = we || 2; Ae.length < we; ) Ae = "0" + Ae;
                    return Ae;
                  }
                  var k = h ? s.getUTCFullYear() : s.getFullYear();
                  o = (o = (o = o.replace(/(^|[^\\])yyyy+/g, "$1" + k)).replace(
                    /(^|[^\\])yy/g,
                    "$1" + k.toString().substr(2, 2)
                  )).replace(/(^|[^\\])y/g, "$1" + k);
                  var _ = (h ? s.getUTCMonth() : s.getMonth()) + 1;
                  o = (o = (o = (o = o.replace(
                    /(^|[^\\])MMMM+/g,
                    "$1" + d[0]
                  )).replace(/(^|[^\\])MMM/g, "$1" + f[0])).replace(
                    /(^|[^\\])MM/g,
                    "$1" + x(_)
                  )).replace(/(^|[^\\])M/g, "$1" + _);
                  var A = h ? s.getUTCDate() : s.getDate();
                  o = (o = (o = (o = o.replace(
                    /(^|[^\\])dddd+/g,
                    "$1" + g[0]
                  )).replace(/(^|[^\\])ddd/g, "$1" + y[0])).replace(
                    /(^|[^\\])dd/g,
                    "$1" + x(A)
                  )).replace(/(^|[^\\])d/g, "$1" + A);
                  var O = h ? s.getUTCHours() : s.getHours(),
                    N = O > 12 ? O - 12 : O === 0 ? 12 : O;
                  o = (o = (o = (o = o.replace(
                    /(^|[^\\])HH+/g,
                    "$1" + x(O)
                  )).replace(/(^|[^\\])H/g, "$1" + O)).replace(
                    /(^|[^\\])hh+/g,
                    "$1" + x(N)
                  )).replace(/(^|[^\\])h/g, "$1" + N);
                  var H = h ? s.getUTCMinutes() : s.getMinutes();
                  o = (o = o.replace(/(^|[^\\])mm+/g, "$1" + x(H))).replace(
                    /(^|[^\\])m/g,
                    "$1" + H
                  );
                  var G = h ? s.getUTCSeconds() : s.getSeconds();
                  o = (o = o.replace(/(^|[^\\])ss+/g, "$1" + x(G))).replace(
                    /(^|[^\\])s/g,
                    "$1" + G
                  );
                  var te = h ? s.getUTCMilliseconds() : s.getMilliseconds();
                  (o = o.replace(/(^|[^\\])fff+/g, "$1" + x(te, 3))),
                    (te = Math.round(te / 10)),
                    (o = o.replace(/(^|[^\\])ff/g, "$1" + x(te))),
                    (te = Math.round(te / 10));
                  var se = O < 12 ? "AM" : "PM";
                  o = (o = (o = o.replace(/(^|[^\\])f/g, "$1" + te)).replace(
                    /(^|[^\\])TT+/g,
                    "$1" + se
                  )).replace(/(^|[^\\])T/g, "$1" + se.charAt(0));
                  var b = se.toLowerCase();
                  o = (o = o.replace(/(^|[^\\])tt+/g, "$1" + b)).replace(
                    /(^|[^\\])t/g,
                    "$1" + b.charAt(0)
                  );
                  var C = -s.getTimezoneOffset(),
                    F = h || !C ? "Z" : C > 0 ? "+" : "-";
                  if (!h) {
                    var ee = (C = Math.abs(C)) % 60;
                    F += x(Math.floor(C / 60)) + ":" + x(ee);
                  }
                  o = o.replace(/(^|[^\\])K/g, "$1" + F);
                  var ue = (h ? s.getUTCDay() : s.getDay()) + 1;
                  return (o = (o = (o = (o = (o = o.replace(
                    new RegExp(g[0], "g"),
                    g[ue]
                  )).replace(new RegExp(y[0], "g"), y[ue])).replace(
                    new RegExp(d[0], "g"),
                    d[_]
                  )).replace(new RegExp(f[0], "g"), f[_])).replace(
                    /\\(.)/g,
                    "$1"
                  ));
                },
              },
              {
                key: "getTimeUnitsfromTimestamp",
                value: function (s, o, c) {
                  var h = this.w;
                  h.config.xaxis.min !== void 0 && (s = h.config.xaxis.min),
                    h.config.xaxis.max !== void 0 && (o = h.config.xaxis.max);
                  var d = this.getDate(s),
                    f = this.getDate(o),
                    g = this.formatDate(d, "yyyy MM dd HH mm ss fff").split(
                      " "
                    ),
                    y = this.formatDate(f, "yyyy MM dd HH mm ss fff").split(
                      " "
                    );
                  return {
                    minMillisecond: parseInt(g[6], 10),
                    maxMillisecond: parseInt(y[6], 10),
                    minSecond: parseInt(g[5], 10),
                    maxSecond: parseInt(y[5], 10),
                    minMinute: parseInt(g[4], 10),
                    maxMinute: parseInt(y[4], 10),
                    minHour: parseInt(g[3], 10),
                    maxHour: parseInt(y[3], 10),
                    minDate: parseInt(g[2], 10),
                    maxDate: parseInt(y[2], 10),
                    minMonth: parseInt(g[1], 10) - 1,
                    maxMonth: parseInt(y[1], 10) - 1,
                    minYear: parseInt(g[0], 10),
                    maxYear: parseInt(y[0], 10),
                  };
                },
              },
              {
                key: "isLeapYear",
                value: function (s) {
                  return (s % 4 == 0 && s % 100 != 0) || s % 400 == 0;
                },
              },
              {
                key: "calculcateLastDaysOfMonth",
                value: function (s, o, c) {
                  return this.determineDaysOfMonths(s, o) - c;
                },
              },
              {
                key: "determineDaysOfYear",
                value: function (s) {
                  var o = 365;
                  return this.isLeapYear(s) && (o = 366), o;
                },
              },
              {
                key: "determineRemainingDaysOfYear",
                value: function (s, o, c) {
                  var h = this.daysCntOfYear[o] + c;
                  return o > 1 && this.isLeapYear() && h++, h;
                },
              },
              {
                key: "determineDaysOfMonths",
                value: function (s, o) {
                  var c = 30;
                  switch (((s = B.monthMod(s)), !0)) {
                    case this.months30.indexOf(s) > -1:
                      s === 2 && (c = this.isLeapYear(o) ? 29 : 28);
                      break;
                    case this.months31.indexOf(s) > -1:
                    default:
                      c = 31;
                  }
                  return c;
                },
              },
            ]),
            $
          );
        })(),
        L = (function () {
          function $(s) {
            a(this, $),
              (this.ctx = s),
              (this.w = s.w),
              (this.tooltipKeyFormat = "dd MMM");
          }
          return (
            u($, [
              {
                key: "xLabelFormat",
                value: function (s, o, c, h) {
                  var d = this.w;
                  if (
                    d.config.xaxis.type === "datetime" &&
                    d.config.xaxis.labels.formatter === void 0 &&
                    d.config.tooltip.x.formatter === void 0
                  ) {
                    var f = new P(this.ctx);
                    return f.formatDate(
                      f.getDate(o),
                      d.config.tooltip.x.format
                    );
                  }
                  return s(o, c, h);
                },
              },
              {
                key: "defaultGeneralFormatter",
                value: function (s) {
                  return Array.isArray(s)
                    ? s.map(function (o) {
                        return o;
                      })
                    : s;
                },
              },
              {
                key: "defaultYFormatter",
                value: function (s, o, c) {
                  var h = this.w;
                  return (
                    B.isNumber(s) &&
                      (s =
                        h.globals.yValueDecimal !== 0
                          ? s.toFixed(
                              o.decimalsInFloat !== void 0
                                ? o.decimalsInFloat
                                : h.globals.yValueDecimal
                            )
                          : h.globals.maxYArr[c] - h.globals.minYArr[c] < 5
                          ? s.toFixed(1)
                          : s.toFixed(0)),
                    s
                  );
                },
              },
              {
                key: "setLabelFormatters",
                value: function () {
                  var s = this,
                    o = this.w;
                  return (
                    (o.globals.xaxisTooltipFormatter = function (c) {
                      return s.defaultGeneralFormatter(c);
                    }),
                    (o.globals.ttKeyFormatter = function (c) {
                      return s.defaultGeneralFormatter(c);
                    }),
                    (o.globals.ttZFormatter = function (c) {
                      return c;
                    }),
                    (o.globals.legendFormatter = function (c) {
                      return s.defaultGeneralFormatter(c);
                    }),
                    o.config.xaxis.labels.formatter !== void 0
                      ? (o.globals.xLabelFormatter =
                          o.config.xaxis.labels.formatter)
                      : (o.globals.xLabelFormatter = function (c) {
                          if (B.isNumber(c)) {
                            if (
                              !o.config.xaxis.convertedCatToNumeric &&
                              o.config.xaxis.type === "numeric"
                            ) {
                              if (B.isNumber(o.config.xaxis.decimalsInFloat))
                                return c.toFixed(
                                  o.config.xaxis.decimalsInFloat
                                );
                              var h = o.globals.maxX - o.globals.minX;
                              return h > 0 && h < 100
                                ? c.toFixed(1)
                                : c.toFixed(0);
                            }
                            return o.globals.isBarHorizontal &&
                              o.globals.maxY - o.globals.minYArr < 4
                              ? c.toFixed(1)
                              : c.toFixed(0);
                          }
                          return c;
                        }),
                    typeof o.config.tooltip.x.formatter == "function"
                      ? (o.globals.ttKeyFormatter =
                          o.config.tooltip.x.formatter)
                      : (o.globals.ttKeyFormatter = o.globals.xLabelFormatter),
                    typeof o.config.xaxis.tooltip.formatter == "function" &&
                      (o.globals.xaxisTooltipFormatter =
                        o.config.xaxis.tooltip.formatter),
                    (Array.isArray(o.config.tooltip.y) ||
                      o.config.tooltip.y.formatter !== void 0) &&
                      (o.globals.ttVal = o.config.tooltip.y),
                    o.config.tooltip.z.formatter !== void 0 &&
                      (o.globals.ttZFormatter = o.config.tooltip.z.formatter),
                    o.config.legend.formatter !== void 0 &&
                      (o.globals.legendFormatter = o.config.legend.formatter),
                    o.config.yaxis.forEach(function (c, h) {
                      c.labels.formatter !== void 0
                        ? (o.globals.yLabelFormatters[h] = c.labels.formatter)
                        : (o.globals.yLabelFormatters[h] = function (d) {
                            return o.globals.xyCharts
                              ? Array.isArray(d)
                                ? d.map(function (f) {
                                    return s.defaultYFormatter(f, c, h);
                                  })
                                : s.defaultYFormatter(d, c, h)
                              : d;
                          });
                    }),
                    o.globals
                  );
                },
              },
              {
                key: "heatmapLabelFormatters",
                value: function () {
                  var s = this.w;
                  if (s.config.chart.type === "heatmap") {
                    s.globals.yAxisScale[0].result =
                      s.globals.seriesNames.slice();
                    var o = s.globals.seriesNames.reduce(function (c, h) {
                      return c.length > h.length ? c : h;
                    }, 0);
                    (s.globals.yAxisScale[0].niceMax = o),
                      (s.globals.yAxisScale[0].niceMin = o);
                  }
                },
              },
            ]),
            $
          );
        })(),
        U = function ($) {
          var s,
            o = $.isTimeline,
            c = $.ctx,
            h = $.seriesIndex,
            d = $.dataPointIndex,
            f = $.y1,
            g = $.y2,
            y = $.w,
            x = y.globals.seriesRangeStart[h][d],
            k = y.globals.seriesRangeEnd[h][d],
            _ = y.globals.labels[d],
            A = y.config.series[h].name ? y.config.series[h].name : "",
            O = y.globals.ttKeyFormatter,
            N = y.config.tooltip.y.title.formatter,
            H = { w: y, seriesIndex: h, dataPointIndex: d, start: x, end: k };
          typeof N == "function" && (A = N(A, H)),
            (s = y.config.series[h].data[d]) !== null &&
              s !== void 0 &&
              s.x &&
              (_ = y.config.series[h].data[d].x),
            o ||
              (y.config.xaxis.type === "datetime" &&
                (_ = new L(c).xLabelFormat(y.globals.ttKeyFormatter, _, _, {
                  i: void 0,
                  dateFormatter: new P(c).formatDate,
                  w: y,
                }))),
            typeof O == "function" && (_ = O(_, H)),
            Number.isFinite(f) && Number.isFinite(g) && ((x = f), (k = g));
          var G = "",
            te = "",
            se = y.globals.colors[h];
          if (y.config.tooltip.x.formatter === void 0)
            if (y.config.xaxis.type === "datetime") {
              var b = new P(c);
              (G = b.formatDate(b.getDate(x), y.config.tooltip.x.format)),
                (te = b.formatDate(b.getDate(k), y.config.tooltip.x.format));
            } else (G = x), (te = k);
          else
            (G = y.config.tooltip.x.formatter(x)),
              (te = y.config.tooltip.x.formatter(k));
          return {
            start: x,
            end: k,
            startVal: G,
            endVal: te,
            ylabel: _,
            color: se,
            seriesName: A,
          };
        },
        Y = function ($) {
          var s = $.color,
            o = $.seriesName,
            c = $.ylabel,
            h = $.start,
            d = $.end,
            f = $.seriesIndex,
            g = $.dataPointIndex,
            y = $.ctx.tooltip.tooltipLabels.getFormatters(f);
          (h = y.yLbFormatter(h)), (d = y.yLbFormatter(d));
          var x = y.yLbFormatter($.w.globals.series[f][g]),
            k = `<span class="value start-value">
  `
              .concat(
                h,
                `
  </span> <span class="separator">-</span> <span class="value end-value">
  `
              )
              .concat(
                d,
                `
  </span>`
              );
          return (
            '<div class="apexcharts-tooltip-rangebar"><div> <span class="series-name" style="color: ' +
            s +
            '">' +
            (o || "") +
            '</span></div><div> <span class="category">' +
            c +
            ": </span> " +
            ($.w.globals.comboCharts
              ? $.w.config.series[f].type === "rangeArea" ||
                $.w.config.series[f].type === "rangeBar"
                ? k
                : "<span>".concat(x, "</span>")
              : k) +
            " </div></div>"
          );
        },
        ie = (function () {
          function $(s) {
            a(this, $), (this.opts = s);
          }
          return (
            u($, [
              {
                key: "hideYAxis",
                value: function () {
                  (this.opts.yaxis[0].show = !1),
                    (this.opts.yaxis[0].title.text = ""),
                    (this.opts.yaxis[0].axisBorder.show = !1),
                    (this.opts.yaxis[0].axisTicks.show = !1),
                    (this.opts.yaxis[0].floating = !0);
                },
              },
              {
                key: "line",
                value: function () {
                  return {
                    chart: { animations: { easing: "swing" } },
                    dataLabels: { enabled: !1 },
                    stroke: { width: 5, curve: "straight" },
                    markers: { size: 0, hover: { sizeOffset: 6 } },
                    xaxis: { crosshairs: { width: 1 } },
                  };
                },
              },
              {
                key: "sparkline",
                value: function (s) {
                  return (
                    this.hideYAxis(),
                    B.extend(s, {
                      grid: {
                        show: !1,
                        padding: { left: 0, right: 0, top: 0, bottom: 0 },
                      },
                      legend: { show: !1 },
                      xaxis: {
                        labels: { show: !1 },
                        tooltip: { enabled: !1 },
                        axisBorder: { show: !1 },
                        axisTicks: { show: !1 },
                      },
                      chart: { toolbar: { show: !1 }, zoom: { enabled: !1 } },
                      dataLabels: { enabled: !1 },
                    })
                  );
                },
              },
              {
                key: "bar",
                value: function () {
                  return {
                    chart: { stacked: !1, animations: { easing: "swing" } },
                    plotOptions: {
                      bar: { dataLabels: { position: "center" } },
                    },
                    dataLabels: {
                      style: { colors: ["#fff"] },
                      background: { enabled: !1 },
                    },
                    stroke: { width: 0, lineCap: "round" },
                    fill: { opacity: 0.85 },
                    legend: {
                      markers: { shape: "square", radius: 2, size: 8 },
                    },
                    tooltip: { shared: !1, intersect: !0 },
                    xaxis: {
                      tooltip: { enabled: !1 },
                      tickPlacement: "between",
                      crosshairs: {
                        width: "barWidth",
                        position: "back",
                        fill: { type: "gradient" },
                        dropShadow: { enabled: !1 },
                        stroke: { width: 0 },
                      },
                    },
                  };
                },
              },
              {
                key: "funnel",
                value: function () {
                  return (
                    this.hideYAxis(),
                    n(
                      n({}, this.bar()),
                      {},
                      {
                        chart: {
                          animations: {
                            easing: "linear",
                            speed: 800,
                            animateGradually: { enabled: !1 },
                          },
                        },
                        plotOptions: {
                          bar: {
                            horizontal: !0,
                            borderRadiusApplication: "around",
                            borderRadius: 0,
                            dataLabels: { position: "center" },
                          },
                        },
                        grid: { show: !1, padding: { left: 0, right: 0 } },
                        xaxis: {
                          labels: { show: !1 },
                          tooltip: { enabled: !1 },
                          axisBorder: { show: !1 },
                          axisTicks: { show: !1 },
                        },
                      }
                    )
                  );
                },
              },
              {
                key: "candlestick",
                value: function () {
                  var s = this;
                  return {
                    stroke: { width: 1, colors: ["#333"] },
                    fill: { opacity: 1 },
                    dataLabels: { enabled: !1 },
                    tooltip: {
                      shared: !0,
                      custom: function (o) {
                        var c = o.seriesIndex,
                          h = o.dataPointIndex,
                          d = o.w;
                        return s._getBoxTooltip(
                          d,
                          c,
                          h,
                          ["Open", "High", "", "Low", "Close"],
                          "candlestick"
                        );
                      },
                    },
                    states: { active: { filter: { type: "none" } } },
                    xaxis: { crosshairs: { width: 1 } },
                  };
                },
              },
              {
                key: "boxPlot",
                value: function () {
                  var s = this;
                  return {
                    chart: {
                      animations: { dynamicAnimation: { enabled: !1 } },
                    },
                    stroke: { width: 1, colors: ["#24292e"] },
                    dataLabels: { enabled: !1 },
                    tooltip: {
                      shared: !0,
                      custom: function (o) {
                        var c = o.seriesIndex,
                          h = o.dataPointIndex,
                          d = o.w;
                        return s._getBoxTooltip(
                          d,
                          c,
                          h,
                          ["Minimum", "Q1", "Median", "Q3", "Maximum"],
                          "boxPlot"
                        );
                      },
                    },
                    markers: { size: 5, strokeWidth: 1, strokeColors: "#111" },
                    xaxis: { crosshairs: { width: 1 } },
                  };
                },
              },
              {
                key: "rangeBar",
                value: function () {
                  return {
                    chart: { animations: { animateGradually: !1 } },
                    stroke: { width: 0, lineCap: "square" },
                    plotOptions: {
                      bar: {
                        borderRadius: 0,
                        dataLabels: { position: "center" },
                      },
                    },
                    dataLabels: {
                      enabled: !1,
                      formatter: function (s, o) {
                        o.ctx;
                        var c = o.seriesIndex,
                          h = o.dataPointIndex,
                          d = o.w,
                          f = function () {
                            var g = d.globals.seriesRangeStart[c][h];
                            return d.globals.seriesRangeEnd[c][h] - g;
                          };
                        return d.globals.comboCharts
                          ? d.config.series[c].type === "rangeBar" ||
                            d.config.series[c].type === "rangeArea"
                            ? f()
                            : s
                          : f();
                      },
                      background: { enabled: !1 },
                      style: { colors: ["#fff"] },
                    },
                    markers: { size: 10 },
                    tooltip: {
                      shared: !1,
                      followCursor: !0,
                      custom: function (s) {
                        return s.w.config.plotOptions &&
                          s.w.config.plotOptions.bar &&
                          s.w.config.plotOptions.bar.horizontal
                          ? (function (o) {
                              var c = U(n(n({}, o), {}, { isTimeline: !0 })),
                                h = c.color,
                                d = c.seriesName,
                                f = c.ylabel,
                                g = c.startVal,
                                y = c.endVal;
                              return Y(
                                n(
                                  n({}, o),
                                  {},
                                  {
                                    color: h,
                                    seriesName: d,
                                    ylabel: f,
                                    start: g,
                                    end: y,
                                  }
                                )
                              );
                            })(s)
                          : (function (o) {
                              var c = U(o),
                                h = c.color,
                                d = c.seriesName,
                                f = c.ylabel,
                                g = c.start,
                                y = c.end;
                              return Y(
                                n(
                                  n({}, o),
                                  {},
                                  {
                                    color: h,
                                    seriesName: d,
                                    ylabel: f,
                                    start: g,
                                    end: y,
                                  }
                                )
                              );
                            })(s);
                      },
                    },
                    xaxis: {
                      tickPlacement: "between",
                      tooltip: { enabled: !1 },
                      crosshairs: { stroke: { width: 0 } },
                    },
                  };
                },
              },
              {
                key: "dumbbell",
                value: function (s) {
                  var o, c;
                  return (
                    ((o = s.plotOptions.bar) !== null &&
                      o !== void 0 &&
                      o.barHeight) ||
                      (s.plotOptions.bar.barHeight = 2),
                    ((c = s.plotOptions.bar) !== null &&
                      c !== void 0 &&
                      c.columnWidth) ||
                      (s.plotOptions.bar.columnWidth = 2),
                    s
                  );
                },
              },
              {
                key: "area",
                value: function () {
                  return {
                    stroke: {
                      width: 4,
                      fill: {
                        type: "solid",
                        gradient: {
                          inverseColors: !1,
                          shade: "light",
                          type: "vertical",
                          opacityFrom: 0.65,
                          opacityTo: 0.5,
                          stops: [0, 100, 100],
                        },
                      },
                    },
                    fill: {
                      type: "gradient",
                      gradient: {
                        inverseColors: !1,
                        shade: "light",
                        type: "vertical",
                        opacityFrom: 0.65,
                        opacityTo: 0.5,
                        stops: [0, 100, 100],
                      },
                    },
                    markers: { size: 0, hover: { sizeOffset: 6 } },
                    tooltip: { followCursor: !1 },
                  };
                },
              },
              {
                key: "rangeArea",
                value: function () {
                  return {
                    stroke: { curve: "straight", width: 0 },
                    fill: { type: "solid", opacity: 0.6 },
                    markers: { size: 0 },
                    states: {
                      hover: { filter: { type: "none" } },
                      active: { filter: { type: "none" } },
                    },
                    tooltip: {
                      intersect: !1,
                      shared: !0,
                      followCursor: !0,
                      custom: function (s) {
                        return (function (o) {
                          var c = U(o),
                            h = c.color,
                            d = c.seriesName,
                            f = c.ylabel,
                            g = c.start,
                            y = c.end;
                          return Y(
                            n(
                              n({}, o),
                              {},
                              {
                                color: h,
                                seriesName: d,
                                ylabel: f,
                                start: g,
                                end: y,
                              }
                            )
                          );
                        })(s);
                      },
                    },
                  };
                },
              },
              {
                key: "brush",
                value: function (s) {
                  return B.extend(s, {
                    chart: {
                      toolbar: { autoSelected: "selection", show: !1 },
                      zoom: { enabled: !1 },
                    },
                    dataLabels: { enabled: !1 },
                    stroke: { width: 1 },
                    tooltip: { enabled: !1 },
                    xaxis: { tooltip: { enabled: !1 } },
                  });
                },
              },
              {
                key: "stacked100",
                value: function (s) {
                  (s.dataLabels = s.dataLabels || {}),
                    (s.dataLabels.formatter = s.dataLabels.formatter || void 0);
                  var o = s.dataLabels.formatter;
                  return (
                    s.yaxis.forEach(function (c, h) {
                      (s.yaxis[h].min = 0), (s.yaxis[h].max = 100);
                    }),
                    s.chart.type === "bar" &&
                      (s.dataLabels.formatter =
                        o ||
                        function (c) {
                          return typeof c == "number" && c
                            ? c.toFixed(0) + "%"
                            : c;
                        }),
                    s
                  );
                },
              },
              {
                key: "stackedBars",
                value: function () {
                  var s = this.bar();
                  return n(
                    n({}, s),
                    {},
                    {
                      plotOptions: n(
                        n({}, s.plotOptions),
                        {},
                        {
                          bar: n(
                            n({}, s.plotOptions.bar),
                            {},
                            {
                              borderRadiusApplication: "end",
                              borderRadiusWhenStacked: "last",
                            }
                          ),
                        }
                      ),
                    }
                  );
                },
              },
              {
                key: "convertCatToNumeric",
                value: function (s) {
                  return (s.xaxis.convertedCatToNumeric = !0), s;
                },
              },
              {
                key: "convertCatToNumericXaxis",
                value: function (s, o, c) {
                  (s.xaxis.type = "numeric"),
                    (s.xaxis.labels = s.xaxis.labels || {}),
                    (s.xaxis.labels.formatter =
                      s.xaxis.labels.formatter ||
                      function (f) {
                        return B.isNumber(f) ? Math.floor(f) : f;
                      });
                  var h = s.xaxis.labels.formatter,
                    d =
                      s.xaxis.categories && s.xaxis.categories.length
                        ? s.xaxis.categories
                        : s.labels;
                  return (
                    c &&
                      c.length &&
                      (d = c.map(function (f) {
                        return Array.isArray(f) ? f : String(f);
                      })),
                    d &&
                      d.length &&
                      (s.xaxis.labels.formatter = function (f) {
                        return B.isNumber(f) ? h(d[Math.floor(f) - 1]) : h(f);
                      }),
                    (s.xaxis.categories = []),
                    (s.labels = []),
                    (s.xaxis.tickAmount = s.xaxis.tickAmount || "dataPoints"),
                    s
                  );
                },
              },
              {
                key: "bubble",
                value: function () {
                  return {
                    dataLabels: { style: { colors: ["#fff"] } },
                    tooltip: { shared: !1, intersect: !0 },
                    xaxis: { crosshairs: { width: 0 } },
                    fill: {
                      type: "solid",
                      gradient: {
                        shade: "light",
                        inverse: !0,
                        shadeIntensity: 0.55,
                        opacityFrom: 0.4,
                        opacityTo: 0.8,
                      },
                    },
                  };
                },
              },
              {
                key: "scatter",
                value: function () {
                  return {
                    dataLabels: { enabled: !1 },
                    tooltip: { shared: !1, intersect: !0 },
                    markers: {
                      size: 6,
                      strokeWidth: 1,
                      hover: { sizeOffset: 2 },
                    },
                  };
                },
              },
              {
                key: "heatmap",
                value: function () {
                  return {
                    chart: { stacked: !1 },
                    fill: { opacity: 1 },
                    dataLabels: { style: { colors: ["#fff"] } },
                    stroke: { colors: ["#fff"] },
                    tooltip: {
                      followCursor: !0,
                      marker: { show: !1 },
                      x: { show: !1 },
                    },
                    legend: {
                      position: "top",
                      markers: { shape: "square", size: 10, offsetY: 2 },
                    },
                    grid: { padding: { right: 20 } },
                  };
                },
              },
              {
                key: "treemap",
                value: function () {
                  return {
                    chart: { zoom: { enabled: !1 } },
                    dataLabels: {
                      style: {
                        fontSize: 14,
                        fontWeight: 600,
                        colors: ["#fff"],
                      },
                    },
                    stroke: { show: !0, width: 2, colors: ["#fff"] },
                    legend: { show: !1 },
                    fill: { gradient: { stops: [0, 100] } },
                    tooltip: { followCursor: !0, x: { show: !1 } },
                    grid: { padding: { left: 0, right: 0 } },
                    xaxis: {
                      crosshairs: { show: !1 },
                      tooltip: { enabled: !1 },
                    },
                  };
                },
              },
              {
                key: "pie",
                value: function () {
                  return {
                    chart: { toolbar: { show: !1 } },
                    plotOptions: { pie: { donut: { labels: { show: !1 } } } },
                    dataLabels: {
                      formatter: function (s) {
                        return s.toFixed(1) + "%";
                      },
                      style: { colors: ["#fff"] },
                      background: { enabled: !1 },
                      dropShadow: { enabled: !0 },
                    },
                    stroke: { colors: ["#fff"] },
                    fill: {
                      opacity: 1,
                      gradient: { shade: "light", stops: [0, 100] },
                    },
                    tooltip: { theme: "dark", fillSeriesColor: !0 },
                    legend: { position: "right" },
                  };
                },
              },
              {
                key: "donut",
                value: function () {
                  return {
                    chart: { toolbar: { show: !1 } },
                    dataLabels: {
                      formatter: function (s) {
                        return s.toFixed(1) + "%";
                      },
                      style: { colors: ["#fff"] },
                      background: { enabled: !1 },
                      dropShadow: { enabled: !0 },
                    },
                    stroke: { colors: ["#fff"] },
                    fill: {
                      opacity: 1,
                      gradient: {
                        shade: "light",
                        shadeIntensity: 0.35,
                        stops: [80, 100],
                        opacityFrom: 1,
                        opacityTo: 1,
                      },
                    },
                    tooltip: { theme: "dark", fillSeriesColor: !0 },
                    legend: { position: "right" },
                  };
                },
              },
              {
                key: "polarArea",
                value: function () {
                  return (
                    (this.opts.yaxis[0].tickAmount = this.opts.yaxis[0]
                      .tickAmount
                      ? this.opts.yaxis[0].tickAmount
                      : 6),
                    {
                      chart: { toolbar: { show: !1 } },
                      dataLabels: {
                        formatter: function (s) {
                          return s.toFixed(1) + "%";
                        },
                        enabled: !1,
                      },
                      stroke: { show: !0, width: 2 },
                      fill: { opacity: 0.7 },
                      tooltip: { theme: "dark", fillSeriesColor: !0 },
                      legend: { position: "right" },
                    }
                  );
                },
              },
              {
                key: "radar",
                value: function () {
                  return (
                    (this.opts.yaxis[0].labels.offsetY = this.opts.yaxis[0]
                      .labels.offsetY
                      ? this.opts.yaxis[0].labels.offsetY
                      : 6),
                    {
                      dataLabels: { enabled: !1, style: { fontSize: "11px" } },
                      stroke: { width: 2 },
                      markers: { size: 3, strokeWidth: 1, strokeOpacity: 1 },
                      fill: { opacity: 0.2 },
                      tooltip: { shared: !1, intersect: !0, followCursor: !0 },
                      grid: { show: !1 },
                      xaxis: {
                        labels: {
                          formatter: function (s) {
                            return s;
                          },
                          style: { colors: ["#a8a8a8"], fontSize: "11px" },
                        },
                        tooltip: { enabled: !1 },
                        crosshairs: { show: !1 },
                      },
                    }
                  );
                },
              },
              {
                key: "radialBar",
                value: function () {
                  return {
                    chart: {
                      animations: {
                        dynamicAnimation: { enabled: !0, speed: 800 },
                      },
                      toolbar: { show: !1 },
                    },
                    fill: {
                      gradient: {
                        shade: "dark",
                        shadeIntensity: 0.4,
                        inverseColors: !1,
                        type: "diagonal2",
                        opacityFrom: 1,
                        opacityTo: 1,
                        stops: [70, 98, 100],
                      },
                    },
                    legend: { show: !1, position: "right" },
                    tooltip: { enabled: !1, fillSeriesColor: !0 },
                  };
                },
              },
              {
                key: "_getBoxTooltip",
                value: function (s, o, c, h, d) {
                  var f = s.globals.seriesCandleO[o][c],
                    g = s.globals.seriesCandleH[o][c],
                    y = s.globals.seriesCandleM[o][c],
                    x = s.globals.seriesCandleL[o][c],
                    k = s.globals.seriesCandleC[o][c];
                  return s.config.series[o].type &&
                    s.config.series[o].type !== d
                    ? `<div class="apexcharts-custom-tooltip">
          `
                        .concat(
                          s.config.series[o].name
                            ? s.config.series[o].name
                            : "series-" + (o + 1),
                          ": <strong>"
                        )
                        .concat(
                          s.globals.series[o][c],
                          `</strong>
        </div>`
                        )
                    : '<div class="apexcharts-tooltip-box apexcharts-tooltip-'.concat(
                        s.config.chart.type,
                        '">'
                      ) +
                        "<div>".concat(h[0], ': <span class="value">') +
                        f +
                        "</span></div>" +
                        "<div>".concat(h[1], ': <span class="value">') +
                        g +
                        "</span></div>" +
                        (y
                          ? "<div>".concat(h[2], ': <span class="value">') +
                            y +
                            "</span></div>"
                          : "") +
                        "<div>".concat(h[3], ': <span class="value">') +
                        x +
                        "</span></div>" +
                        "<div>".concat(h[4], ': <span class="value">') +
                        k +
                        "</span></div></div>";
                },
              },
            ]),
            $
          );
        })(),
        le = (function () {
          function $(s) {
            a(this, $), (this.opts = s);
          }
          return (
            u($, [
              {
                key: "init",
                value: function (s) {
                  var o = s.responsiveOverride,
                    c = this.opts,
                    h = new ke(),
                    d = new ie(c);
                  (this.chartType = c.chart.type),
                    (c = this.extendYAxis(c)),
                    (c = this.extendAnnotations(c));
                  var f = h.init(),
                    g = {};
                  if (c && i(c) === "object") {
                    var y,
                      x,
                      k,
                      _,
                      A,
                      O,
                      N,
                      H,
                      G = {};
                    (G =
                      [
                        "line",
                        "area",
                        "bar",
                        "candlestick",
                        "boxPlot",
                        "rangeBar",
                        "rangeArea",
                        "bubble",
                        "scatter",
                        "heatmap",
                        "treemap",
                        "pie",
                        "polarArea",
                        "donut",
                        "radar",
                        "radialBar",
                      ].indexOf(c.chart.type) !== -1
                        ? d[c.chart.type]()
                        : d.line()),
                      (y = c.plotOptions) !== null &&
                        y !== void 0 &&
                        (x = y.bar) !== null &&
                        x !== void 0 &&
                        x.isFunnel &&
                        (G = d.funnel()),
                      c.chart.stacked &&
                        c.chart.type === "bar" &&
                        (G = d.stackedBars()),
                      (k = c.chart.brush) !== null &&
                        k !== void 0 &&
                        k.enabled &&
                        (G = d.brush(G)),
                      c.chart.stacked &&
                        c.chart.stackType === "100%" &&
                        (c = d.stacked100(c)),
                      (_ = c.plotOptions) !== null &&
                        _ !== void 0 &&
                        (A = _.bar) !== null &&
                        A !== void 0 &&
                        A.isDumbbell &&
                        (c = d.dumbbell(c)),
                      this.checkForDarkTheme(window.Apex),
                      this.checkForDarkTheme(c),
                      (c.xaxis = c.xaxis || window.Apex.xaxis || {}),
                      o || (c.xaxis.convertedCatToNumeric = !1),
                      (((O = (c = this.checkForCatToNumericXAxis(
                        this.chartType,
                        G,
                        c
                      )).chart.sparkline) !== null &&
                        O !== void 0 &&
                        O.enabled) ||
                        ((N = window.Apex.chart) !== null &&
                          N !== void 0 &&
                          (H = N.sparkline) !== null &&
                          H !== void 0 &&
                          H.enabled)) &&
                        (G = d.sparkline(G)),
                      (g = B.extend(f, G));
                  }
                  var te = B.extend(g, window.Apex);
                  return (
                    (f = B.extend(te, c)), (f = this.handleUserInputErrors(f))
                  );
                },
              },
              {
                key: "checkForCatToNumericXAxis",
                value: function (s, o, c) {
                  var h,
                    d,
                    f = new ie(c),
                    g =
                      (s === "bar" || s === "boxPlot") &&
                      ((h = c.plotOptions) === null ||
                      h === void 0 ||
                      (d = h.bar) === null ||
                      d === void 0
                        ? void 0
                        : d.horizontal),
                    y =
                      s === "pie" ||
                      s === "polarArea" ||
                      s === "donut" ||
                      s === "radar" ||
                      s === "radialBar" ||
                      s === "heatmap",
                    x =
                      c.xaxis.type !== "datetime" && c.xaxis.type !== "numeric",
                    k = c.xaxis.tickPlacement
                      ? c.xaxis.tickPlacement
                      : o.xaxis && o.xaxis.tickPlacement;
                  return (
                    g ||
                      y ||
                      !x ||
                      k === "between" ||
                      (c = f.convertCatToNumeric(c)),
                    c
                  );
                },
              },
              {
                key: "extendYAxis",
                value: function (s, o) {
                  var c = new ke();
                  (s.yaxis === void 0 ||
                    !s.yaxis ||
                    (Array.isArray(s.yaxis) && s.yaxis.length === 0)) &&
                    (s.yaxis = {}),
                    s.yaxis.constructor !== Array &&
                      window.Apex.yaxis &&
                      window.Apex.yaxis.constructor !== Array &&
                      (s.yaxis = B.extend(s.yaxis, window.Apex.yaxis)),
                    s.yaxis.constructor !== Array
                      ? (s.yaxis = [B.extend(c.yAxis, s.yaxis)])
                      : (s.yaxis = B.extendArray(s.yaxis, c.yAxis));
                  var h = !1;
                  s.yaxis.forEach(function (f) {
                    f.logarithmic && (h = !0);
                  });
                  var d = s.series;
                  return (
                    o && !d && (d = o.config.series),
                    h &&
                      d.length !== s.yaxis.length &&
                      d.length &&
                      (s.yaxis = d.map(function (f, g) {
                        if (
                          (f.name || (d[g].name = "series-".concat(g + 1)),
                          s.yaxis[g])
                        )
                          return (
                            (s.yaxis[g].seriesName = d[g].name), s.yaxis[g]
                          );
                        var y = B.extend(c.yAxis, s.yaxis[0]);
                        return (y.show = !1), y;
                      })),
                    h &&
                      d.length > 1 &&
                      d.length !== s.yaxis.length &&
                      console.warn(
                        "A multi-series logarithmic chart should have equal number of series and y-axes. Please make sure to equalize both."
                      ),
                    s
                  );
                },
              },
              {
                key: "extendAnnotations",
                value: function (s) {
                  return (
                    s.annotations === void 0 &&
                      ((s.annotations = {}),
                      (s.annotations.yaxis = []),
                      (s.annotations.xaxis = []),
                      (s.annotations.points = [])),
                    (s = this.extendYAxisAnnotations(s)),
                    (s = this.extendXAxisAnnotations(s)),
                    (s = this.extendPointAnnotations(s))
                  );
                },
              },
              {
                key: "extendYAxisAnnotations",
                value: function (s) {
                  var o = new ke();
                  return (
                    (s.annotations.yaxis = B.extendArray(
                      s.annotations.yaxis !== void 0 ? s.annotations.yaxis : [],
                      o.yAxisAnnotation
                    )),
                    s
                  );
                },
              },
              {
                key: "extendXAxisAnnotations",
                value: function (s) {
                  var o = new ke();
                  return (
                    (s.annotations.xaxis = B.extendArray(
                      s.annotations.xaxis !== void 0 ? s.annotations.xaxis : [],
                      o.xAxisAnnotation
                    )),
                    s
                  );
                },
              },
              {
                key: "extendPointAnnotations",
                value: function (s) {
                  var o = new ke();
                  return (
                    (s.annotations.points = B.extendArray(
                      s.annotations.points !== void 0
                        ? s.annotations.points
                        : [],
                      o.pointAnnotation
                    )),
                    s
                  );
                },
              },
              {
                key: "checkForDarkTheme",
                value: function (s) {
                  s.theme &&
                    s.theme.mode === "dark" &&
                    (s.tooltip || (s.tooltip = {}),
                    s.tooltip.theme !== "light" && (s.tooltip.theme = "dark"),
                    s.chart.foreColor || (s.chart.foreColor = "#f6f7f8"),
                    s.chart.background || (s.chart.background = "#424242"),
                    s.theme.palette || (s.theme.palette = "palette4"));
                },
              },
              {
                key: "handleUserInputErrors",
                value: function (s) {
                  var o = s;
                  if (o.tooltip.shared && o.tooltip.intersect)
                    throw new Error(
                      "tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false."
                    );
                  if (o.chart.type === "bar" && o.plotOptions.bar.horizontal) {
                    if (o.yaxis.length > 1)
                      throw new Error(
                        "Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false"
                      );
                    o.yaxis[0].reversed && (o.yaxis[0].opposite = !0),
                      (o.xaxis.tooltip.enabled = !1),
                      (o.yaxis[0].tooltip.enabled = !1),
                      (o.chart.zoom.enabled = !1);
                  }
                  return (
                    (o.chart.type !== "bar" && o.chart.type !== "rangeBar") ||
                      (o.tooltip.shared &&
                        o.xaxis.crosshairs.width === "barWidth" &&
                        o.series.length > 1 &&
                        (o.xaxis.crosshairs.width = "tickWidth")),
                    (o.chart.type !== "candlestick" &&
                      o.chart.type !== "boxPlot") ||
                      (o.yaxis[0].reversed &&
                        (console.warn(
                          "Reversed y-axis in ".concat(
                            o.chart.type,
                            " chart is not supported."
                          )
                        ),
                        (o.yaxis[0].reversed = !1))),
                    o
                  );
                },
              },
            ]),
            $
          );
        })(),
        J = (function () {
          function $() {
            a(this, $);
          }
          return (
            u($, [
              {
                key: "initGlobalVars",
                value: function (s) {
                  (s.series = []),
                    (s.seriesCandleO = []),
                    (s.seriesCandleH = []),
                    (s.seriesCandleM = []),
                    (s.seriesCandleL = []),
                    (s.seriesCandleC = []),
                    (s.seriesRangeStart = []),
                    (s.seriesRangeEnd = []),
                    (s.seriesRange = []),
                    (s.seriesPercent = []),
                    (s.seriesGoals = []),
                    (s.seriesX = []),
                    (s.seriesZ = []),
                    (s.seriesNames = []),
                    (s.seriesTotals = []),
                    (s.seriesLog = []),
                    (s.seriesColors = []),
                    (s.stackedSeriesTotals = []),
                    (s.seriesXvalues = []),
                    (s.seriesYvalues = []),
                    (s.labels = []),
                    (s.hasXaxisGroups = !1),
                    (s.groups = []),
                    (s.hasSeriesGroups = !1),
                    (s.seriesGroups = []),
                    (s.categoryLabels = []),
                    (s.timescaleLabels = []),
                    (s.noLabelsProvided = !1),
                    (s.resizeTimer = null),
                    (s.selectionResizeTimer = null),
                    (s.delayedElements = []),
                    (s.pointsArray = []),
                    (s.dataLabelsRects = []),
                    (s.isXNumeric = !1),
                    (s.skipLastTimelinelabel = !1),
                    (s.skipFirstTimelinelabel = !1),
                    (s.isDataXYZ = !1),
                    (s.isMultiLineX = !1),
                    (s.isMultipleYAxis = !1),
                    (s.maxY = -Number.MAX_VALUE),
                    (s.minY = Number.MIN_VALUE),
                    (s.minYArr = []),
                    (s.maxYArr = []),
                    (s.maxX = -Number.MAX_VALUE),
                    (s.minX = Number.MAX_VALUE),
                    (s.initialMaxX = -Number.MAX_VALUE),
                    (s.initialMinX = Number.MAX_VALUE),
                    (s.maxDate = 0),
                    (s.minDate = Number.MAX_VALUE),
                    (s.minZ = Number.MAX_VALUE),
                    (s.maxZ = -Number.MAX_VALUE),
                    (s.minXDiff = Number.MAX_VALUE),
                    (s.yAxisScale = []),
                    (s.xAxisScale = null),
                    (s.xAxisTicksPositions = []),
                    (s.yLabelsCoords = []),
                    (s.yTitleCoords = []),
                    (s.barPadForNumericAxis = 0),
                    (s.padHorizontal = 0),
                    (s.xRange = 0),
                    (s.yRange = []),
                    (s.zRange = 0),
                    (s.dataPoints = 0),
                    (s.xTickAmount = 0);
                },
              },
              {
                key: "globalVars",
                value: function (s) {
                  return {
                    chartID: null,
                    cuid: null,
                    events: {
                      beforeMount: [],
                      mounted: [],
                      updated: [],
                      clicked: [],
                      selection: [],
                      dataPointSelection: [],
                      zoomed: [],
                      scrolled: [],
                    },
                    colors: [],
                    clientX: null,
                    clientY: null,
                    fill: { colors: [] },
                    stroke: { colors: [] },
                    dataLabels: { style: { colors: [] } },
                    radarPolygons: { fill: { colors: [] } },
                    markers: {
                      colors: [],
                      size: s.markers.size,
                      largestSize: 0,
                    },
                    animationEnded: !1,
                    isTouchDevice:
                      "ontouchstart" in window || navigator.msMaxTouchPoints,
                    isDirty: !1,
                    isExecCalled: !1,
                    initialConfig: null,
                    initialSeries: [],
                    lastXAxis: [],
                    lastYAxis: [],
                    columnSeries: null,
                    labels: [],
                    timescaleLabels: [],
                    noLabelsProvided: !1,
                    allSeriesCollapsed: !1,
                    collapsedSeries: [],
                    collapsedSeriesIndices: [],
                    ancillaryCollapsedSeries: [],
                    ancillaryCollapsedSeriesIndices: [],
                    risingSeries: [],
                    dataFormatXNumeric: !1,
                    capturedSeriesIndex: -1,
                    capturedDataPointIndex: -1,
                    selectedDataPoints: [],
                    goldenPadding: 35,
                    invalidLogScale: !1,
                    ignoreYAxisIndexes: [],
                    yAxisSameScaleIndices: [],
                    maxValsInArrayIndex: 0,
                    radialSize: 0,
                    selection: void 0,
                    zoomEnabled:
                      s.chart.toolbar.autoSelected === "zoom" &&
                      s.chart.toolbar.tools.zoom &&
                      s.chart.zoom.enabled,
                    panEnabled:
                      s.chart.toolbar.autoSelected === "pan" &&
                      s.chart.toolbar.tools.pan,
                    selectionEnabled:
                      s.chart.toolbar.autoSelected === "selection" &&
                      s.chart.toolbar.tools.selection,
                    yaxis: null,
                    mousedown: !1,
                    lastClientPosition: {},
                    visibleXRange: void 0,
                    yValueDecimal: 0,
                    total: 0,
                    SVGNS: "http://www.w3.org/2000/svg",
                    svgWidth: 0,
                    svgHeight: 0,
                    noData: !1,
                    locale: {},
                    dom: {},
                    memory: { methodsToExec: [] },
                    shouldAnimate: !0,
                    skipLastTimelinelabel: !1,
                    skipFirstTimelinelabel: !1,
                    delayedElements: [],
                    axisCharts: !0,
                    isDataXYZ: !1,
                    resized: !1,
                    resizeTimer: null,
                    comboCharts: !1,
                    dataChanged: !1,
                    previousPaths: [],
                    allSeriesHasEqualX: !0,
                    pointsArray: [],
                    dataLabelsRects: [],
                    lastDrawnDataLabelsIndexes: [],
                    hasNullValues: !1,
                    easing: null,
                    zoomed: !1,
                    gridWidth: 0,
                    gridHeight: 0,
                    rotateXLabels: !1,
                    defaultLabels: !1,
                    xLabelFormatter: void 0,
                    yLabelFormatters: [],
                    xaxisTooltipFormatter: void 0,
                    ttKeyFormatter: void 0,
                    ttVal: void 0,
                    ttZFormatter: void 0,
                    LINE_HEIGHT_RATIO: 1.618,
                    xAxisLabelsHeight: 0,
                    xAxisGroupLabelsHeight: 0,
                    xAxisLabelsWidth: 0,
                    yAxisLabelsWidth: 0,
                    scaleX: 1,
                    scaleY: 1,
                    translateX: 0,
                    translateY: 0,
                    translateYAxisX: [],
                    yAxisWidths: [],
                    translateXAxisY: 0,
                    translateXAxisX: 0,
                    tooltip: null,
                  };
                },
              },
              {
                key: "init",
                value: function (s) {
                  var o = this.globalVars(s);
                  return (
                    this.initGlobalVars(o),
                    (o.initialConfig = B.extend({}, s)),
                    (o.initialSeries = B.clone(s.series)),
                    (o.lastXAxis = B.clone(o.initialConfig.xaxis)),
                    (o.lastYAxis = B.clone(o.initialConfig.yaxis)),
                    o
                  );
                },
              },
            ]),
            $
          );
        })(),
        T = (function () {
          function $(s) {
            a(this, $), (this.opts = s);
          }
          return (
            u($, [
              {
                key: "init",
                value: function () {
                  var s = new le(this.opts).init({ responsiveOverride: !1 });
                  return { config: s, globals: new J().init(s) };
                },
              },
            ]),
            $
          );
        })(),
        Z = (function () {
          function $(s) {
            a(this, $),
              (this.ctx = s),
              (this.w = s.w),
              (this.opts = null),
              (this.seriesIndex = 0);
          }
          return (
            u($, [
              {
                key: "clippedImgArea",
                value: function (s) {
                  var o = this.w,
                    c = o.config,
                    h = parseInt(o.globals.gridWidth, 10),
                    d = parseInt(o.globals.gridHeight, 10),
                    f = h > d ? h : d,
                    g = s.image,
                    y = 0,
                    x = 0;
                  s.width === void 0 && s.height === void 0
                    ? c.fill.image.width !== void 0 &&
                      c.fill.image.height !== void 0
                      ? ((y = c.fill.image.width + 1),
                        (x = c.fill.image.height))
                      : ((y = f + 1), (x = f))
                    : ((y = s.width), (x = s.height));
                  var k = document.createElementNS(o.globals.SVGNS, "pattern");
                  K.setAttrs(k, {
                    id: s.patternID,
                    patternUnits: s.patternUnits
                      ? s.patternUnits
                      : "userSpaceOnUse",
                    width: y + "px",
                    height: x + "px",
                  });
                  var _ = document.createElementNS(o.globals.SVGNS, "image");
                  k.appendChild(_),
                    _.setAttributeNS(window.SVG.xlink, "href", g),
                    K.setAttrs(_, {
                      x: 0,
                      y: 0,
                      preserveAspectRatio: "none",
                      width: y + "px",
                      height: x + "px",
                    }),
                    (_.style.opacity = s.opacity),
                    o.globals.dom.elDefs.node.appendChild(k);
                },
              },
              {
                key: "getSeriesIndex",
                value: function (s) {
                  var o = this.w,
                    c = o.config.chart.type;
                  return (
                    ((c === "bar" || c === "rangeBar") &&
                      o.config.plotOptions.bar.distributed) ||
                    c === "heatmap" ||
                    c === "treemap"
                      ? (this.seriesIndex = s.seriesNumber)
                      : (this.seriesIndex =
                          s.seriesNumber % o.globals.series.length),
                    this.seriesIndex
                  );
                },
              },
              {
                key: "fillPath",
                value: function (s) {
                  var o = this.w;
                  this.opts = s;
                  var c,
                    h,
                    d,
                    f = this.w.config;
                  this.seriesIndex = this.getSeriesIndex(s);
                  var g = this.getFillColors()[this.seriesIndex];
                  o.globals.seriesColors[this.seriesIndex] !== void 0 &&
                    (g = o.globals.seriesColors[this.seriesIndex]),
                    typeof g == "function" &&
                      (g = g({
                        seriesIndex: this.seriesIndex,
                        dataPointIndex: s.dataPointIndex,
                        value: s.value,
                        w: o,
                      }));
                  var y = s.fillType
                      ? s.fillType
                      : this.getFillType(this.seriesIndex),
                    x = Array.isArray(f.fill.opacity)
                      ? f.fill.opacity[this.seriesIndex]
                      : f.fill.opacity;
                  s.color && (g = s.color);
                  var k = g;
                  if (
                    (g.indexOf("rgb") === -1
                      ? g.length < 9 && (k = B.hexToRgba(g, x))
                      : g.indexOf("rgba") > -1 && (x = B.getOpacityFromRGBA(g)),
                    s.opacity && (x = s.opacity),
                    y === "pattern" &&
                      (h = this.handlePatternFill({
                        fillConfig: s.fillConfig,
                        patternFill: h,
                        fillColor: g,
                        fillOpacity: x,
                        defaultColor: k,
                      })),
                    y === "gradient" &&
                      (d = this.handleGradientFill({
                        fillConfig: s.fillConfig,
                        fillColor: g,
                        fillOpacity: x,
                        i: this.seriesIndex,
                      })),
                    y === "image")
                  ) {
                    var _ = f.fill.image.src,
                      A = s.patternID ? s.patternID : "";
                    this.clippedImgArea({
                      opacity: x,
                      image: Array.isArray(_)
                        ? s.seriesNumber < _.length
                          ? _[s.seriesNumber]
                          : _[0]
                        : _,
                      width: s.width ? s.width : void 0,
                      height: s.height ? s.height : void 0,
                      patternUnits: s.patternUnits,
                      patternID: "pattern"
                        .concat(o.globals.cuid)
                        .concat(s.seriesNumber + 1)
                        .concat(A),
                    }),
                      (c = "url(#pattern"
                        .concat(o.globals.cuid)
                        .concat(s.seriesNumber + 1)
                        .concat(A, ")"));
                  } else c = y === "gradient" ? d : y === "pattern" ? h : k;
                  return s.solid && (c = k), c;
                },
              },
              {
                key: "getFillType",
                value: function (s) {
                  var o = this.w;
                  return Array.isArray(o.config.fill.type)
                    ? o.config.fill.type[s]
                    : o.config.fill.type;
                },
              },
              {
                key: "getFillColors",
                value: function () {
                  var s = this.w,
                    o = s.config,
                    c = this.opts,
                    h = [];
                  return (
                    s.globals.comboCharts
                      ? s.config.series[this.seriesIndex].type === "line"
                        ? Array.isArray(s.globals.stroke.colors)
                          ? (h = s.globals.stroke.colors)
                          : h.push(s.globals.stroke.colors)
                        : Array.isArray(s.globals.fill.colors)
                        ? (h = s.globals.fill.colors)
                        : h.push(s.globals.fill.colors)
                      : o.chart.type === "line"
                      ? Array.isArray(s.globals.stroke.colors)
                        ? (h = s.globals.stroke.colors)
                        : h.push(s.globals.stroke.colors)
                      : Array.isArray(s.globals.fill.colors)
                      ? (h = s.globals.fill.colors)
                      : h.push(s.globals.fill.colors),
                    c.fillColors !== void 0 &&
                      ((h = []),
                      Array.isArray(c.fillColors)
                        ? (h = c.fillColors.slice())
                        : h.push(c.fillColors)),
                    h
                  );
                },
              },
              {
                key: "handlePatternFill",
                value: function (s) {
                  var o = s.fillConfig,
                    c = s.patternFill,
                    h = s.fillColor,
                    d = s.fillOpacity,
                    f = s.defaultColor,
                    g = this.w.config.fill;
                  o && (g = o);
                  var y = this.opts,
                    x = new K(this.ctx),
                    k = Array.isArray(g.pattern.strokeWidth)
                      ? g.pattern.strokeWidth[this.seriesIndex]
                      : g.pattern.strokeWidth,
                    _ = h;
                  return (
                    Array.isArray(g.pattern.style)
                      ? (c =
                          g.pattern.style[y.seriesNumber] !== void 0
                            ? x.drawPattern(
                                g.pattern.style[y.seriesNumber],
                                g.pattern.width,
                                g.pattern.height,
                                _,
                                k,
                                d
                              )
                            : f)
                      : (c = x.drawPattern(
                          g.pattern.style,
                          g.pattern.width,
                          g.pattern.height,
                          _,
                          k,
                          d
                        )),
                    c
                  );
                },
              },
              {
                key: "handleGradientFill",
                value: function (s) {
                  var o = s.fillColor,
                    c = s.fillOpacity,
                    h = s.fillConfig,
                    d = s.i,
                    f = this.w.config.fill;
                  h && (f = n(n({}, f), h));
                  var g,
                    y = this.opts,
                    x = new K(this.ctx),
                    k = new B(),
                    _ = f.gradient.type,
                    A = o,
                    O =
                      f.gradient.opacityFrom === void 0
                        ? c
                        : Array.isArray(f.gradient.opacityFrom)
                        ? f.gradient.opacityFrom[d]
                        : f.gradient.opacityFrom;
                  A.indexOf("rgba") > -1 && (O = B.getOpacityFromRGBA(A));
                  var N =
                    f.gradient.opacityTo === void 0
                      ? c
                      : Array.isArray(f.gradient.opacityTo)
                      ? f.gradient.opacityTo[d]
                      : f.gradient.opacityTo;
                  if (
                    f.gradient.gradientToColors === void 0 ||
                    f.gradient.gradientToColors.length === 0
                  )
                    g =
                      f.gradient.shade === "dark"
                        ? k.shadeColor(
                            -1 * parseFloat(f.gradient.shadeIntensity),
                            o.indexOf("rgb") > -1 ? B.rgb2hex(o) : o
                          )
                        : k.shadeColor(
                            parseFloat(f.gradient.shadeIntensity),
                            o.indexOf("rgb") > -1 ? B.rgb2hex(o) : o
                          );
                  else if (f.gradient.gradientToColors[y.seriesNumber]) {
                    var H = f.gradient.gradientToColors[y.seriesNumber];
                    (g = H),
                      H.indexOf("rgba") > -1 && (N = B.getOpacityFromRGBA(H));
                  } else g = o;
                  if (
                    (f.gradient.gradientFrom && (A = f.gradient.gradientFrom),
                    f.gradient.gradientTo && (g = f.gradient.gradientTo),
                    f.gradient.inverseColors)
                  ) {
                    var G = A;
                    (A = g), (g = G);
                  }
                  return (
                    A.indexOf("rgb") > -1 && (A = B.rgb2hex(A)),
                    g.indexOf("rgb") > -1 && (g = B.rgb2hex(g)),
                    x.drawGradient(
                      _,
                      A,
                      g,
                      O,
                      N,
                      y.size,
                      f.gradient.stops,
                      f.gradient.colorStops,
                      d
                    )
                  );
                },
              },
            ]),
            $
          );
        })(),
        Oe = (function () {
          function $(s, o) {
            a(this, $), (this.ctx = s), (this.w = s.w);
          }
          return (
            u($, [
              {
                key: "setGlobalMarkerSize",
                value: function () {
                  var s = this.w;
                  if (
                    ((s.globals.markers.size = Array.isArray(
                      s.config.markers.size
                    )
                      ? s.config.markers.size
                      : [s.config.markers.size]),
                    s.globals.markers.size.length > 0)
                  ) {
                    if (
                      s.globals.markers.size.length <
                      s.globals.series.length + 1
                    )
                      for (var o = 0; o <= s.globals.series.length; o++)
                        s.globals.markers.size[o] === void 0 &&
                          s.globals.markers.size.push(
                            s.globals.markers.size[0]
                          );
                  } else
                    s.globals.markers.size = s.config.series.map(function (c) {
                      return s.config.markers.size;
                    });
                },
              },
              {
                key: "plotChartMarkers",
                value: function (s, o, c, h) {
                  var d,
                    f =
                      arguments.length > 4 &&
                      arguments[4] !== void 0 &&
                      arguments[4],
                    g = this.w,
                    y = o,
                    x = s,
                    k = null,
                    _ = new K(this.ctx),
                    A =
                      g.config.markers.discrete &&
                      g.config.markers.discrete.length;
                  if (
                    ((g.globals.markers.size[o] > 0 || f || A) &&
                      (k = _.group({
                        class: f || A ? "" : "apexcharts-series-markers",
                      })).attr(
                        "clip-path",
                        "url(#gridRectMarkerMask".concat(g.globals.cuid, ")")
                      ),
                    Array.isArray(x.x))
                  )
                    for (var O = 0; O < x.x.length; O++) {
                      var N = c;
                      c === 1 && O === 0 && (N = 0),
                        c === 1 && O === 1 && (N = 1);
                      var H = "apexcharts-marker";
                      if (
                        ((g.config.chart.type !== "line" &&
                          g.config.chart.type !== "area") ||
                          g.globals.comboCharts ||
                          g.config.tooltip.intersect ||
                          (H += " no-pointer-events"),
                        (Array.isArray(g.config.markers.size)
                          ? g.globals.markers.size[o] > 0
                          : g.config.markers.size > 0) ||
                          f ||
                          A)
                      ) {
                        B.isNumber(x.y[O])
                          ? (H += " w".concat(B.randomId()))
                          : (H = "apexcharts-nullpoint");
                        var G = this.getMarkerConfig({
                          cssClass: H,
                          seriesIndex: o,
                          dataPointIndex: N,
                        });
                        g.config.series[y].data[N] &&
                          (g.config.series[y].data[N].fillColor &&
                            (G.pointFillColor =
                              g.config.series[y].data[N].fillColor),
                          g.config.series[y].data[N].strokeColor &&
                            (G.pointStrokeColor =
                              g.config.series[y].data[N].strokeColor)),
                          h && (G.pSize = h),
                          (x.x[O] < 0 ||
                            x.x[O] > g.globals.gridWidth ||
                            x.y[O] < 0 ||
                            x.y[O] > g.globals.gridHeight) &&
                            (G.pSize = 0),
                          (d = _.drawMarker(x.x[O], x.y[O], G)).attr("rel", N),
                          d.attr("j", N),
                          d.attr("index", o),
                          d.node.setAttribute("default-marker-size", G.pSize),
                          new re(this.ctx).setSelectionFilter(d, o, N),
                          this.addEvents(d),
                          k && k.add(d);
                      } else
                        g.globals.pointsArray[o] === void 0 &&
                          (g.globals.pointsArray[o] = []),
                          g.globals.pointsArray[o].push([x.x[O], x.y[O]]);
                    }
                  return k;
                },
              },
              {
                key: "getMarkerConfig",
                value: function (s) {
                  var o = s.cssClass,
                    c = s.seriesIndex,
                    h = s.dataPointIndex,
                    d = h === void 0 ? null : h,
                    f = s.finishRadius,
                    g = f === void 0 ? null : f,
                    y = this.w,
                    x = this.getMarkerStyle(c),
                    k = y.globals.markers.size[c],
                    _ = y.config.markers;
                  return (
                    d !== null &&
                      _.discrete.length &&
                      _.discrete.map(function (A) {
                        A.seriesIndex === c &&
                          A.dataPointIndex === d &&
                          ((x.pointStrokeColor = A.strokeColor),
                          (x.pointFillColor = A.fillColor),
                          (k = A.size),
                          (x.pointShape = A.shape));
                      }),
                    {
                      pSize: g === null ? k : g,
                      pRadius: _.radius,
                      width: Array.isArray(_.width) ? _.width[c] : _.width,
                      height: Array.isArray(_.height) ? _.height[c] : _.height,
                      pointStrokeWidth: Array.isArray(_.strokeWidth)
                        ? _.strokeWidth[c]
                        : _.strokeWidth,
                      pointStrokeColor: x.pointStrokeColor,
                      pointFillColor: x.pointFillColor,
                      shape:
                        x.pointShape ||
                        (Array.isArray(_.shape) ? _.shape[c] : _.shape),
                      class: o,
                      pointStrokeOpacity: Array.isArray(_.strokeOpacity)
                        ? _.strokeOpacity[c]
                        : _.strokeOpacity,
                      pointStrokeDashArray: Array.isArray(_.strokeDashArray)
                        ? _.strokeDashArray[c]
                        : _.strokeDashArray,
                      pointFillOpacity: Array.isArray(_.fillOpacity)
                        ? _.fillOpacity[c]
                        : _.fillOpacity,
                      seriesIndex: c,
                    }
                  );
                },
              },
              {
                key: "addEvents",
                value: function (s) {
                  var o = this.w,
                    c = new K(this.ctx);
                  s.node.addEventListener(
                    "mouseenter",
                    c.pathMouseEnter.bind(this.ctx, s)
                  ),
                    s.node.addEventListener(
                      "mouseleave",
                      c.pathMouseLeave.bind(this.ctx, s)
                    ),
                    s.node.addEventListener(
                      "mousedown",
                      c.pathMouseDown.bind(this.ctx, s)
                    ),
                    s.node.addEventListener("click", o.config.markers.onClick),
                    s.node.addEventListener(
                      "dblclick",
                      o.config.markers.onDblClick
                    ),
                    s.node.addEventListener(
                      "touchstart",
                      c.pathMouseDown.bind(this.ctx, s),
                      { passive: !0 }
                    );
                },
              },
              {
                key: "getMarkerStyle",
                value: function (s) {
                  var o = this.w,
                    c = o.globals.markers.colors,
                    h =
                      o.config.markers.strokeColor ||
                      o.config.markers.strokeColors;
                  return {
                    pointStrokeColor: Array.isArray(h) ? h[s] : h,
                    pointFillColor: Array.isArray(c) ? c[s] : c,
                  };
                },
              },
            ]),
            $
          );
        })(),
        Me = (function () {
          function $(s) {
            a(this, $),
              (this.ctx = s),
              (this.w = s.w),
              (this.initialAnim = this.w.config.chart.animations.enabled),
              (this.dynamicAnim =
                this.initialAnim &&
                this.w.config.chart.animations.dynamicAnimation.enabled);
          }
          return (
            u($, [
              {
                key: "draw",
                value: function (s, o, c) {
                  var h = this.w,
                    d = new K(this.ctx),
                    f = c.realIndex,
                    g = c.pointsPos,
                    y = c.zRatio,
                    x = c.elParent,
                    k = d.group({
                      class:
                        "apexcharts-series-markers apexcharts-series-".concat(
                          h.config.chart.type
                        ),
                    });
                  if (
                    (k.attr(
                      "clip-path",
                      "url(#gridRectMarkerMask".concat(h.globals.cuid, ")")
                    ),
                    Array.isArray(g.x))
                  )
                    for (var _ = 0; _ < g.x.length; _++) {
                      var A = o + 1,
                        O = !0;
                      o === 0 && _ === 0 && (A = 0),
                        o === 0 && _ === 1 && (A = 1);
                      var N = 0,
                        H = h.globals.markers.size[f];
                      if (y !== 1 / 0) {
                        var G = h.config.plotOptions.bubble;
                        (H = h.globals.seriesZ[f][A]),
                          G.zScaling && (H /= y),
                          G.minBubbleRadius &&
                            H < G.minBubbleRadius &&
                            (H = G.minBubbleRadius),
                          G.maxBubbleRadius &&
                            H > G.maxBubbleRadius &&
                            (H = G.maxBubbleRadius);
                      }
                      h.config.chart.animations.enabled || (N = H);
                      var te = g.x[_],
                        se = g.y[_];
                      if (
                        ((N = N || 0),
                        (se !== null && h.globals.series[f][A] !== void 0) ||
                          (O = !1),
                        O)
                      ) {
                        var b = this.drawPoint(te, se, N, H, f, A, o);
                        k.add(b);
                      }
                      x.add(k);
                    }
                },
              },
              {
                key: "drawPoint",
                value: function (s, o, c, h, d, f, g) {
                  var y = this.w,
                    x = d,
                    k = new ae(this.ctx),
                    _ = new re(this.ctx),
                    A = new Z(this.ctx),
                    O = new Oe(this.ctx),
                    N = new K(this.ctx),
                    H = O.getMarkerConfig({
                      cssClass: "apexcharts-marker",
                      seriesIndex: x,
                      dataPointIndex: f,
                      finishRadius:
                        y.config.chart.type === "bubble" ||
                        (y.globals.comboCharts &&
                          y.config.series[d] &&
                          y.config.series[d].type === "bubble")
                          ? h
                          : null,
                    });
                  h = H.pSize;
                  var G,
                    te = A.fillPath({
                      seriesNumber: d,
                      dataPointIndex: f,
                      color: H.pointFillColor,
                      patternUnits: "objectBoundingBox",
                      value: y.globals.series[d][g],
                    });
                  if (
                    (H.shape === "circle"
                      ? (G = N.drawCircle(c))
                      : (H.shape !== "square" && H.shape !== "rect") ||
                        (G = N.drawRect(
                          0,
                          0,
                          H.width - H.pointStrokeWidth / 2,
                          H.height - H.pointStrokeWidth / 2,
                          H.pRadius
                        )),
                    y.config.series[x].data[f] &&
                      y.config.series[x].data[f].fillColor &&
                      (te = y.config.series[x].data[f].fillColor),
                    G.attr({
                      x: s - H.width / 2 - H.pointStrokeWidth / 2,
                      y: o - H.height / 2 - H.pointStrokeWidth / 2,
                      cx: s,
                      cy: o,
                      fill: te,
                      "fill-opacity": H.pointFillOpacity,
                      stroke: H.pointStrokeColor,
                      r: h,
                      "stroke-width": H.pointStrokeWidth,
                      "stroke-dasharray": H.pointStrokeDashArray,
                      "stroke-opacity": H.pointStrokeOpacity,
                    }),
                    y.config.chart.dropShadow.enabled)
                  ) {
                    var se = y.config.chart.dropShadow;
                    _.dropShadow(G, se, d);
                  }
                  if (
                    !this.initialAnim ||
                    y.globals.dataChanged ||
                    y.globals.resized
                  )
                    y.globals.animationEnded = !0;
                  else {
                    var b = y.config.chart.animations.speed;
                    k.animateMarker(
                      G,
                      0,
                      H.shape === "circle"
                        ? h
                        : { width: H.width, height: H.height },
                      b,
                      y.globals.easing,
                      function () {
                        window.setTimeout(function () {
                          k.animationCompleted(G);
                        }, 100);
                      }
                    );
                  }
                  if (y.globals.dataChanged && H.shape === "circle")
                    if (this.dynamicAnim) {
                      var C,
                        F,
                        ee,
                        ue,
                        he = y.config.chart.animations.dynamicAnimation.speed;
                      (ue =
                        y.globals.previousPaths[d] &&
                        y.globals.previousPaths[d][g]) != null &&
                        ((C = ue.x),
                        (F = ue.y),
                        (ee = ue.r !== void 0 ? ue.r : h));
                      for (
                        var we = 0;
                        we < y.globals.collapsedSeries.length;
                        we++
                      )
                        y.globals.collapsedSeries[we].index === d &&
                          ((he = 1), (h = 0));
                      s === 0 && o === 0 && (h = 0),
                        k.animateCircle(
                          G,
                          { cx: C, cy: F, r: ee },
                          { cx: s, cy: o, r: h },
                          he,
                          y.globals.easing
                        );
                    } else G.attr({ r: h });
                  return (
                    G.attr({
                      rel: f,
                      j: f,
                      index: d,
                      "default-marker-size": h,
                    }),
                    _.setSelectionFilter(G, d, f),
                    O.addEvents(G),
                    G.node.classList.add("apexcharts-marker"),
                    G
                  );
                },
              },
              {
                key: "centerTextInBubble",
                value: function (s) {
                  var o = this.w;
                  return {
                    y: (s +=
                      parseInt(o.config.dataLabels.style.fontSize, 10) / 4),
                  };
                },
              },
            ]),
            $
          );
        })(),
        X = (function () {
          function $(s) {
            a(this, $), (this.ctx = s), (this.w = s.w);
          }
          return (
            u($, [
              {
                key: "dataLabelsCorrection",
                value: function (s, o, c, h, d, f, g) {
                  var y = this.w,
                    x = !1,
                    k = new K(this.ctx).getTextRects(c, g),
                    _ = k.width,
                    A = k.height;
                  o < 0 && (o = 0),
                    o > y.globals.gridHeight + A &&
                      (o = y.globals.gridHeight + A / 2),
                    y.globals.dataLabelsRects[h] === void 0 &&
                      (y.globals.dataLabelsRects[h] = []),
                    y.globals.dataLabelsRects[h].push({
                      x: s,
                      y: o,
                      width: _,
                      height: A,
                    });
                  var O = y.globals.dataLabelsRects[h].length - 2,
                    N =
                      y.globals.lastDrawnDataLabelsIndexes[h] !== void 0
                        ? y.globals.lastDrawnDataLabelsIndexes[h][
                            y.globals.lastDrawnDataLabelsIndexes[h].length - 1
                          ]
                        : 0;
                  if (y.globals.dataLabelsRects[h][O] !== void 0) {
                    var H = y.globals.dataLabelsRects[h][N];
                    (s > H.x + H.width + 2 ||
                      o > H.y + H.height + 2 ||
                      s + _ < H.x) &&
                      (x = !0);
                  }
                  return (
                    (d === 0 || f) && (x = !0),
                    { x: s, y: o, textRects: k, drawnextLabel: x }
                  );
                },
              },
              {
                key: "drawDataLabel",
                value: function (s) {
                  var o = this,
                    c = s.type,
                    h = s.pos,
                    d = s.i,
                    f = s.j,
                    g = s.isRangeStart,
                    y = s.strokeWidth,
                    x = y === void 0 ? 2 : y,
                    k = this.w,
                    _ = new K(this.ctx),
                    A = k.config.dataLabels,
                    O = 0,
                    N = 0,
                    H = f,
                    G = null;
                  if (!A.enabled || !Array.isArray(h.x)) return G;
                  G = _.group({ class: "apexcharts-data-labels" });
                  for (var te = 0; te < h.x.length; te++)
                    if (
                      ((O = h.x[te] + A.offsetX),
                      (N = h.y[te] + A.offsetY + x),
                      !isNaN(O))
                    ) {
                      f === 1 && te === 0 && (H = 0),
                        f === 1 && te === 1 && (H = 1);
                      var se = k.globals.series[d][H];
                      c === "rangeArea" &&
                        (se = g
                          ? k.globals.seriesRangeStart[d][H]
                          : k.globals.seriesRangeEnd[d][H]);
                      var b = "",
                        C = function (F) {
                          return k.config.dataLabels.formatter(F, {
                            ctx: o.ctx,
                            seriesIndex: d,
                            dataPointIndex: H,
                            w: k,
                          });
                        };
                      k.config.chart.type === "bubble"
                        ? ((b = C((se = k.globals.seriesZ[d][H]))),
                          (N = h.y[te]),
                          (N = new Me(this.ctx).centerTextInBubble(N, d, H).y))
                        : se !== void 0 && (b = C(se)),
                        this.plotDataLabelsText({
                          x: O,
                          y: N,
                          text: b,
                          i: d,
                          j: H,
                          parent: G,
                          offsetCorrection: !0,
                          dataLabelsConfig: k.config.dataLabels,
                        });
                    }
                  return G;
                },
              },
              {
                key: "plotDataLabelsText",
                value: function (s) {
                  var o = this.w,
                    c = new K(this.ctx),
                    h = s.x,
                    d = s.y,
                    f = s.i,
                    g = s.j,
                    y = s.text,
                    x = s.textAnchor,
                    k = s.fontSize,
                    _ = s.parent,
                    A = s.dataLabelsConfig,
                    O = s.color,
                    N = s.alwaysDrawDataLabel,
                    H = s.offsetCorrection;
                  if (
                    !(
                      Array.isArray(o.config.dataLabels.enabledOnSeries) &&
                      o.config.dataLabels.enabledOnSeries.indexOf(f) < 0
                    )
                  ) {
                    var G = { x: h, y: d, drawnextLabel: !0, textRects: null };
                    H &&
                      (G = this.dataLabelsCorrection(
                        h,
                        d,
                        y,
                        f,
                        g,
                        N,
                        parseInt(A.style.fontSize, 10)
                      )),
                      o.globals.zoomed || ((h = G.x), (d = G.y)),
                      G.textRects &&
                        (h < -10 - G.textRects.width ||
                          h > o.globals.gridWidth + G.textRects.width + 10) &&
                        (y = "");
                    var te = o.globals.dataLabels.style.colors[f];
                    (((o.config.chart.type === "bar" ||
                      o.config.chart.type === "rangeBar") &&
                      o.config.plotOptions.bar.distributed) ||
                      o.config.dataLabels.distributed) &&
                      (te = o.globals.dataLabels.style.colors[g]),
                      typeof te == "function" &&
                        (te = te({
                          series: o.globals.series,
                          seriesIndex: f,
                          dataPointIndex: g,
                          w: o,
                        })),
                      O && (te = O);
                    var se = A.offsetX,
                      b = A.offsetY;
                    if (
                      ((o.config.chart.type !== "bar" &&
                        o.config.chart.type !== "rangeBar") ||
                        ((se = 0), (b = 0)),
                      G.drawnextLabel)
                    ) {
                      var C = c.drawText({
                        width: 100,
                        height: parseInt(A.style.fontSize, 10),
                        x: h + se,
                        y: d + b,
                        foreColor: te,
                        textAnchor: x || A.textAnchor,
                        text: y,
                        fontSize: k || A.style.fontSize,
                        fontFamily: A.style.fontFamily,
                        fontWeight: A.style.fontWeight || "normal",
                      });
                      if (
                        (C.attr({
                          class: "apexcharts-datalabel",
                          cx: h,
                          cy: d,
                        }),
                        A.dropShadow.enabled)
                      ) {
                        var F = A.dropShadow;
                        new re(this.ctx).dropShadow(C, F);
                      }
                      _.add(C),
                        o.globals.lastDrawnDataLabelsIndexes[f] === void 0 &&
                          (o.globals.lastDrawnDataLabelsIndexes[f] = []),
                        o.globals.lastDrawnDataLabelsIndexes[f].push(g);
                    }
                  }
                },
              },
              {
                key: "addBackgroundToDataLabel",
                value: function (s, o) {
                  var c = this.w,
                    h = c.config.dataLabels.background,
                    d = h.padding,
                    f = h.padding / 2,
                    g = o.width,
                    y = o.height,
                    x = new K(this.ctx).drawRect(
                      o.x - d,
                      o.y - f / 2,
                      g + 2 * d,
                      y + f,
                      h.borderRadius,
                      c.config.chart.background === "transparent"
                        ? "#fff"
                        : c.config.chart.background,
                      h.opacity,
                      h.borderWidth,
                      h.borderColor
                    );
                  return (
                    h.dropShadow.enabled &&
                      new re(this.ctx).dropShadow(x, h.dropShadow),
                    x
                  );
                },
              },
              {
                key: "dataLabelsBackground",
                value: function () {
                  var s = this.w;
                  if (s.config.chart.type !== "bubble")
                    for (
                      var o = s.globals.dom.baseEl.querySelectorAll(
                          ".apexcharts-datalabels text"
                        ),
                        c = 0;
                      c < o.length;
                      c++
                    ) {
                      var h = o[c],
                        d = h.getBBox(),
                        f = null;
                      if (
                        (d.width &&
                          d.height &&
                          (f = this.addBackgroundToDataLabel(h, d)),
                        f)
                      ) {
                        h.parentNode.insertBefore(f.node, h);
                        var g = h.getAttribute("fill");
                        s.config.chart.animations.enabled &&
                        !s.globals.resized &&
                        !s.globals.dataChanged
                          ? f.animate().attr({ fill: g })
                          : f.attr({ fill: g }),
                          h.setAttribute(
                            "fill",
                            s.config.dataLabels.background.foreColor
                          );
                      }
                    }
                },
              },
              {
                key: "bringForward",
                value: function () {
                  for (
                    var s = this.w,
                      o = s.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-datalabels"
                      ),
                      c = s.globals.dom.baseEl.querySelector(
                        ".apexcharts-plot-series:last-child"
                      ),
                      h = 0;
                    h < o.length;
                    h++
                  )
                    c && c.insertBefore(o[h], c.nextSibling);
                },
              },
            ]),
            $
          );
        })(),
        Ee = (function () {
          function $(s) {
            a(this, $),
              (this.ctx = s),
              (this.w = s.w),
              (this.legendInactiveClass = "legend-mouseover-inactive");
          }
          return (
            u($, [
              {
                key: "getAllSeriesEls",
                value: function () {
                  return this.w.globals.dom.baseEl.getElementsByClassName(
                    "apexcharts-series"
                  );
                },
              },
              {
                key: "getSeriesByName",
                value: function (s) {
                  return this.w.globals.dom.baseEl.querySelector(
                    ".apexcharts-inner .apexcharts-series[seriesName='".concat(
                      B.escapeString(s),
                      "']"
                    )
                  );
                },
              },
              {
                key: "isSeriesHidden",
                value: function (s) {
                  var o = this.getSeriesByName(s),
                    c = parseInt(o.getAttribute("data:realIndex"), 10);
                  return {
                    isHidden: o.classList.contains(
                      "apexcharts-series-collapsed"
                    ),
                    realIndex: c,
                  };
                },
              },
              {
                key: "addCollapsedClassToSeries",
                value: function (s, o) {
                  var c = this.w;
                  function h(d) {
                    for (var f = 0; f < d.length; f++)
                      d[f].index === o &&
                        s.node.classList.add("apexcharts-series-collapsed");
                  }
                  h(c.globals.collapsedSeries),
                    h(c.globals.ancillaryCollapsedSeries);
                },
              },
              {
                key: "toggleSeries",
                value: function (s) {
                  var o = this.isSeriesHidden(s);
                  return (
                    this.ctx.legend.legendHelpers.toggleDataSeries(
                      o.realIndex,
                      o.isHidden
                    ),
                    o.isHidden
                  );
                },
              },
              {
                key: "showSeries",
                value: function (s) {
                  var o = this.isSeriesHidden(s);
                  o.isHidden &&
                    this.ctx.legend.legendHelpers.toggleDataSeries(
                      o.realIndex,
                      !0
                    );
                },
              },
              {
                key: "hideSeries",
                value: function (s) {
                  var o = this.isSeriesHidden(s);
                  o.isHidden ||
                    this.ctx.legend.legendHelpers.toggleDataSeries(
                      o.realIndex,
                      !1
                    );
                },
              },
              {
                key: "resetSeries",
                value: function () {
                  var s =
                      !(arguments.length > 0 && arguments[0] !== void 0) ||
                      arguments[0],
                    o =
                      !(arguments.length > 1 && arguments[1] !== void 0) ||
                      arguments[1],
                    c =
                      !(arguments.length > 2 && arguments[2] !== void 0) ||
                      arguments[2],
                    h = this.w,
                    d = B.clone(h.globals.initialSeries);
                  (h.globals.previousPaths = []),
                    c
                      ? ((h.globals.collapsedSeries = []),
                        (h.globals.ancillaryCollapsedSeries = []),
                        (h.globals.collapsedSeriesIndices = []),
                        (h.globals.ancillaryCollapsedSeriesIndices = []))
                      : (d = this.emptyCollapsedSeries(d)),
                    (h.config.series = d),
                    s &&
                      (o &&
                        ((h.globals.zoomed = !1),
                        this.ctx.updateHelpers.revertDefaultAxisMinMax()),
                      this.ctx.updateHelpers._updateSeries(
                        d,
                        h.config.chart.animations.dynamicAnimation.enabled
                      ));
                },
              },
              {
                key: "emptyCollapsedSeries",
                value: function (s) {
                  for (var o = this.w, c = 0; c < s.length; c++)
                    o.globals.collapsedSeriesIndices.indexOf(c) > -1 &&
                      (s[c].data = []);
                  return s;
                },
              },
              {
                key: "toggleSeriesOnHover",
                value: function (s, o) {
                  var c = this.w;
                  o || (o = s.target);
                  var h = c.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-series, .apexcharts-datalabels"
                  );
                  if (s.type === "mousemove") {
                    var d = parseInt(o.getAttribute("rel"), 10) - 1,
                      f = null,
                      g = null;
                    c.globals.axisCharts || c.config.chart.type === "radialBar"
                      ? c.globals.axisCharts
                        ? ((f = c.globals.dom.baseEl.querySelector(
                            ".apexcharts-series[data\\:realIndex='".concat(
                              d,
                              "']"
                            )
                          )),
                          (g = c.globals.dom.baseEl.querySelector(
                            ".apexcharts-datalabels[data\\:realIndex='".concat(
                              d,
                              "']"
                            )
                          )))
                        : (f = c.globals.dom.baseEl.querySelector(
                            ".apexcharts-series[rel='".concat(d + 1, "']")
                          ))
                      : (f = c.globals.dom.baseEl.querySelector(
                          ".apexcharts-series[rel='".concat(d + 1, "'] path")
                        ));
                    for (var y = 0; y < h.length; y++)
                      h[y].classList.add(this.legendInactiveClass);
                    f !== null &&
                      (c.globals.axisCharts ||
                        f.parentNode.classList.remove(this.legendInactiveClass),
                      f.classList.remove(this.legendInactiveClass),
                      g !== null &&
                        g.classList.remove(this.legendInactiveClass));
                  } else if (s.type === "mouseout")
                    for (var x = 0; x < h.length; x++)
                      h[x].classList.remove(this.legendInactiveClass);
                },
              },
              {
                key: "highlightRangeInSeries",
                value: function (s, o) {
                  var c = this,
                    h = this.w,
                    d = h.globals.dom.baseEl.getElementsByClassName(
                      "apexcharts-heatmap-rect"
                    ),
                    f = function (y) {
                      for (var x = 0; x < d.length; x++)
                        d[x].classList[y](c.legendInactiveClass);
                    };
                  if (s.type === "mousemove") {
                    var g = parseInt(o.getAttribute("rel"), 10) - 1;
                    f("add"),
                      (function (y) {
                        for (var x = 0; x < d.length; x++) {
                          var k = parseInt(d[x].getAttribute("val"), 10);
                          k >= y.from &&
                            k <= y.to &&
                            d[x].classList.remove(c.legendInactiveClass);
                        }
                      })(h.config.plotOptions.heatmap.colorScale.ranges[g]);
                  } else s.type === "mouseout" && f("remove");
                },
              },
              {
                key: "getActiveConfigSeriesIndex",
                value: function () {
                  var s =
                      arguments.length > 0 && arguments[0] !== void 0
                        ? arguments[0]
                        : "asc",
                    o =
                      arguments.length > 1 && arguments[1] !== void 0
                        ? arguments[1]
                        : [],
                    c = this.w,
                    h = 0;
                  if (c.config.series.length > 1) {
                    for (
                      var d = c.config.series.map(function (g, y) {
                          return g.data &&
                            g.data.length > 0 &&
                            c.globals.collapsedSeriesIndices.indexOf(y) ===
                              -1 &&
                            (!c.globals.comboCharts ||
                              o.length === 0 ||
                              (o.length &&
                                o.indexOf(c.config.series[y].type) > -1))
                            ? y
                            : -1;
                        }),
                        f = s === "asc" ? 0 : d.length - 1;
                      s === "asc" ? f < d.length : f >= 0;
                      s === "asc" ? f++ : f--
                    )
                      if (d[f] !== -1) {
                        h = d[f];
                        break;
                      }
                  }
                  return h;
                },
              },
              {
                key: "getBarSeriesIndices",
                value: function () {
                  return this.w.globals.comboCharts
                    ? this.w.config.series
                        .map(function (s, o) {
                          return s.type === "bar" || s.type === "column"
                            ? o
                            : -1;
                        })
                        .filter(function (s) {
                          return s !== -1;
                        })
                    : this.w.config.series.map(function (s, o) {
                        return o;
                      });
                },
              },
              {
                key: "getPreviousPaths",
                value: function () {
                  var s = this.w;
                  function o(f, g, y) {
                    for (
                      var x = f[g].childNodes,
                        k = {
                          type: y,
                          paths: [],
                          realIndex: f[g].getAttribute("data:realIndex"),
                        },
                        _ = 0;
                      _ < x.length;
                      _++
                    )
                      if (x[_].hasAttribute("pathTo")) {
                        var A = x[_].getAttribute("pathTo");
                        k.paths.push({ d: A });
                      }
                    s.globals.previousPaths.push(k);
                  }
                  (s.globals.previousPaths = []),
                    [
                      "line",
                      "area",
                      "bar",
                      "rangebar",
                      "rangeArea",
                      "candlestick",
                      "radar",
                    ].forEach(function (f) {
                      for (
                        var g,
                          y =
                            ((g = f),
                            s.globals.dom.baseEl.querySelectorAll(
                              ".apexcharts-".concat(
                                g,
                                "-series .apexcharts-series"
                              )
                            )),
                          x = 0;
                        x < y.length;
                        x++
                      )
                        o(y, x, f);
                    }),
                    this.handlePrevBubbleScatterPaths("bubble"),
                    this.handlePrevBubbleScatterPaths("scatter");
                  var c = s.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-".concat(
                      s.config.chart.type,
                      " .apexcharts-series"
                    )
                  );
                  if (c.length > 0)
                    for (
                      var h = function (f) {
                          for (
                            var g = s.globals.dom.baseEl.querySelectorAll(
                                ".apexcharts-"
                                  .concat(
                                    s.config.chart.type,
                                    " .apexcharts-series[data\\:realIndex='"
                                  )
                                  .concat(f, "'] rect")
                              ),
                              y = [],
                              x = function (_) {
                                var A = function (N) {
                                    return g[_].getAttribute(N);
                                  },
                                  O = {
                                    x: parseFloat(A("x")),
                                    y: parseFloat(A("y")),
                                    width: parseFloat(A("width")),
                                    height: parseFloat(A("height")),
                                  };
                                y.push({
                                  rect: O,
                                  color: g[_].getAttribute("color"),
                                });
                              },
                              k = 0;
                            k < g.length;
                            k++
                          )
                            x(k);
                          s.globals.previousPaths.push(y);
                        },
                        d = 0;
                      d < c.length;
                      d++
                    )
                      h(d);
                  s.globals.axisCharts ||
                    (s.globals.previousPaths = s.globals.series);
                },
              },
              {
                key: "handlePrevBubbleScatterPaths",
                value: function (s) {
                  var o = this.w,
                    c = o.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-".concat(s, "-series .apexcharts-series")
                    );
                  if (c.length > 0)
                    for (var h = 0; h < c.length; h++) {
                      for (
                        var d = o.globals.dom.baseEl.querySelectorAll(
                            ".apexcharts-"
                              .concat(
                                s,
                                "-series .apexcharts-series[data\\:realIndex='"
                              )
                              .concat(h, "'] circle")
                          ),
                          f = [],
                          g = 0;
                        g < d.length;
                        g++
                      )
                        f.push({
                          x: d[g].getAttribute("cx"),
                          y: d[g].getAttribute("cy"),
                          r: d[g].getAttribute("r"),
                        });
                      o.globals.previousPaths.push(f);
                    }
                },
              },
              {
                key: "clearPreviousPaths",
                value: function () {
                  var s = this.w;
                  (s.globals.previousPaths = []),
                    (s.globals.allSeriesCollapsed = !1);
                },
              },
              {
                key: "handleNoData",
                value: function () {
                  var s = this.w,
                    o = s.config.noData,
                    c = new K(this.ctx),
                    h = s.globals.svgWidth / 2,
                    d = s.globals.svgHeight / 2,
                    f = "middle";
                  if (
                    ((s.globals.noData = !0),
                    (s.globals.animationEnded = !0),
                    o.align === "left"
                      ? ((h = 10), (f = "start"))
                      : o.align === "right" &&
                        ((h = s.globals.svgWidth - 10), (f = "end")),
                    o.verticalAlign === "top"
                      ? (d = 50)
                      : o.verticalAlign === "bottom" &&
                        (d = s.globals.svgHeight - 50),
                    (h += o.offsetX),
                    (d = d + parseInt(o.style.fontSize, 10) + 2 + o.offsetY),
                    o.text !== void 0 && o.text !== "")
                  ) {
                    var g = c.drawText({
                      x: h,
                      y: d,
                      text: o.text,
                      textAnchor: f,
                      fontSize: o.style.fontSize,
                      fontFamily: o.style.fontFamily,
                      foreColor: o.style.color,
                      opacity: 1,
                      class: "apexcharts-text-nodata",
                    });
                    s.globals.dom.Paper.add(g);
                  }
                },
              },
              {
                key: "setNullSeriesToZeroValues",
                value: function (s) {
                  for (var o = this.w, c = 0; c < s.length; c++)
                    if (s[c].length === 0)
                      for (
                        var h = 0;
                        h < s[o.globals.maxValsInArrayIndex].length;
                        h++
                      )
                        s[c].push(0);
                  return s;
                },
              },
              {
                key: "hasAllSeriesEqualX",
                value: function () {
                  for (
                    var s = !0, o = this.w, c = this.filteredSeriesX(), h = 0;
                    h < c.length - 1;
                    h++
                  )
                    if (c[h][0] !== c[h + 1][0]) {
                      s = !1;
                      break;
                    }
                  return (o.globals.allSeriesHasEqualX = s), s;
                },
              },
              {
                key: "filteredSeriesX",
                value: function () {
                  var s = this.w.globals.seriesX.map(function (o) {
                    return o.length > 0 ? o : [];
                  });
                  return s;
                },
              },
            ]),
            $
          );
        })(),
        me = (function () {
          function $(s) {
            a(this, $),
              (this.ctx = s),
              (this.w = s.w),
              (this.twoDSeries = []),
              (this.threeDSeries = []),
              (this.twoDSeriesX = []),
              (this.seriesGoals = []),
              (this.coreUtils = new fe(this.ctx));
          }
          return (
            u($, [
              {
                key: "isMultiFormat",
                value: function () {
                  return this.isFormatXY() || this.isFormat2DArray();
                },
              },
              {
                key: "isFormatXY",
                value: function () {
                  var s = this.w.config.series.slice(),
                    o = new Ee(this.ctx);
                  if (
                    ((this.activeSeriesIndex = o.getActiveConfigSeriesIndex()),
                    s[this.activeSeriesIndex].data !== void 0 &&
                      s[this.activeSeriesIndex].data.length > 0 &&
                      s[this.activeSeriesIndex].data[0] !== null &&
                      s[this.activeSeriesIndex].data[0].x !== void 0 &&
                      s[this.activeSeriesIndex].data[0] !== null)
                  )
                    return !0;
                },
              },
              {
                key: "isFormat2DArray",
                value: function () {
                  var s = this.w.config.series.slice(),
                    o = new Ee(this.ctx);
                  if (
                    ((this.activeSeriesIndex = o.getActiveConfigSeriesIndex()),
                    s[this.activeSeriesIndex].data !== void 0 &&
                      s[this.activeSeriesIndex].data.length > 0 &&
                      s[this.activeSeriesIndex].data[0] !== void 0 &&
                      s[this.activeSeriesIndex].data[0] !== null &&
                      s[this.activeSeriesIndex].data[0].constructor === Array)
                  )
                    return !0;
                },
              },
              {
                key: "handleFormat2DArray",
                value: function (s, o) {
                  for (
                    var c = this.w.config,
                      h = this.w.globals,
                      d =
                        c.chart.type === "boxPlot" ||
                        c.series[o].type === "boxPlot",
                      f = 0;
                    f < s[o].data.length;
                    f++
                  )
                    if (
                      (s[o].data[f][1] !== void 0 &&
                        (Array.isArray(s[o].data[f][1]) &&
                        s[o].data[f][1].length === 4 &&
                        !d
                          ? this.twoDSeries.push(
                              B.parseNumber(s[o].data[f][1][3])
                            )
                          : s[o].data[f].length >= 5
                          ? this.twoDSeries.push(B.parseNumber(s[o].data[f][4]))
                          : this.twoDSeries.push(
                              B.parseNumber(s[o].data[f][1])
                            ),
                        (h.dataFormatXNumeric = !0)),
                      c.xaxis.type === "datetime")
                    ) {
                      var g = new Date(s[o].data[f][0]);
                      (g = new Date(g).getTime()), this.twoDSeriesX.push(g);
                    } else this.twoDSeriesX.push(s[o].data[f][0]);
                  for (var y = 0; y < s[o].data.length; y++)
                    s[o].data[y][2] !== void 0 &&
                      (this.threeDSeries.push(s[o].data[y][2]),
                      (h.isDataXYZ = !0));
                },
              },
              {
                key: "handleFormatXY",
                value: function (s, o) {
                  var c = this.w.config,
                    h = this.w.globals,
                    d = new P(this.ctx),
                    f = o;
                  h.collapsedSeriesIndices.indexOf(o) > -1 &&
                    (f = this.activeSeriesIndex);
                  for (var g = 0; g < s[o].data.length; g++)
                    s[o].data[g].y !== void 0 &&
                      (Array.isArray(s[o].data[g].y)
                        ? this.twoDSeries.push(
                            B.parseNumber(
                              s[o].data[g].y[s[o].data[g].y.length - 1]
                            )
                          )
                        : this.twoDSeries.push(B.parseNumber(s[o].data[g].y))),
                      s[o].data[g].goals !== void 0 &&
                      Array.isArray(s[o].data[g].goals)
                        ? (this.seriesGoals[o] === void 0 &&
                            (this.seriesGoals[o] = []),
                          this.seriesGoals[o].push(s[o].data[g].goals))
                        : (this.seriesGoals[o] === void 0 &&
                            (this.seriesGoals[o] = []),
                          this.seriesGoals[o].push(null));
                  for (var y = 0; y < s[f].data.length; y++) {
                    var x = typeof s[f].data[y].x == "string",
                      k = Array.isArray(s[f].data[y].x),
                      _ = !k && !!d.isValidDate(s[f].data[y].x.toString());
                    if (x || _)
                      if (x || c.xaxis.convertedCatToNumeric) {
                        var A = h.isBarHorizontal && h.isRangeData;
                        c.xaxis.type !== "datetime" || A
                          ? ((this.fallbackToCategory = !0),
                            this.twoDSeriesX.push(s[f].data[y].x))
                          : this.twoDSeriesX.push(d.parseDate(s[f].data[y].x));
                      } else
                        c.xaxis.type === "datetime"
                          ? this.twoDSeriesX.push(
                              d.parseDate(s[f].data[y].x.toString())
                            )
                          : ((h.dataFormatXNumeric = !0),
                            (h.isXNumeric = !0),
                            this.twoDSeriesX.push(parseFloat(s[f].data[y].x)));
                    else
                      k
                        ? ((this.fallbackToCategory = !0),
                          this.twoDSeriesX.push(s[f].data[y].x))
                        : ((h.isXNumeric = !0),
                          (h.dataFormatXNumeric = !0),
                          this.twoDSeriesX.push(s[f].data[y].x));
                  }
                  if (s[o].data[0] && s[o].data[0].z !== void 0) {
                    for (var O = 0; O < s[o].data.length; O++)
                      this.threeDSeries.push(s[o].data[O].z);
                    h.isDataXYZ = !0;
                  }
                },
              },
              {
                key: "handleRangeData",
                value: function (s, o) {
                  var c = this.w.globals,
                    h = {};
                  return (
                    this.isFormat2DArray()
                      ? (h = this.handleRangeDataFormat("array", s, o))
                      : this.isFormatXY() &&
                        (h = this.handleRangeDataFormat("xy", s, o)),
                    c.seriesRangeStart.push(h.start),
                    c.seriesRangeEnd.push(h.end),
                    c.seriesRange.push(h.rangeUniques),
                    c.seriesRange.forEach(function (d, f) {
                      d &&
                        d.forEach(function (g, y) {
                          g.y.forEach(function (x, k) {
                            for (var _ = 0; _ < g.y.length; _++)
                              if (k !== _) {
                                var A = x.y1,
                                  O = x.y2,
                                  N = g.y[_].y1;
                                A <= g.y[_].y2 &&
                                  N <= O &&
                                  (g.overlaps.indexOf(x.rangeName) < 0 &&
                                    g.overlaps.push(x.rangeName),
                                  g.overlaps.indexOf(g.y[_].rangeName) < 0 &&
                                    g.overlaps.push(g.y[_].rangeName));
                              }
                          });
                        });
                    }),
                    h
                  );
                },
              },
              {
                key: "handleCandleStickBoxData",
                value: function (s, o) {
                  var c = this.w.globals,
                    h = {};
                  return (
                    this.isFormat2DArray()
                      ? (h = this.handleCandleStickBoxDataFormat("array", s, o))
                      : this.isFormatXY() &&
                        (h = this.handleCandleStickBoxDataFormat("xy", s, o)),
                    (c.seriesCandleO[o] = h.o),
                    (c.seriesCandleH[o] = h.h),
                    (c.seriesCandleM[o] = h.m),
                    (c.seriesCandleL[o] = h.l),
                    (c.seriesCandleC[o] = h.c),
                    h
                  );
                },
              },
              {
                key: "handleRangeDataFormat",
                value: function (s, o, c) {
                  var h = [],
                    d = [],
                    f = o[c].data
                      .filter(function (k, _, A) {
                        return (
                          _ ===
                          A.findIndex(function (O) {
                            return O.x === k.x;
                          })
                        );
                      })
                      .map(function (k, _) {
                        return { x: k.x, overlaps: [], y: [] };
                      });
                  if (s === "array")
                    for (var g = 0; g < o[c].data.length; g++)
                      Array.isArray(o[c].data[g])
                        ? (h.push(o[c].data[g][1][0]),
                          d.push(o[c].data[g][1][1]))
                        : (h.push(o[c].data[g]), d.push(o[c].data[g]));
                  else if (s === "xy")
                    for (
                      var y = function (k) {
                          var _ = Array.isArray(o[c].data[k].y),
                            A = B.randomId(),
                            O = o[c].data[k].x,
                            N = {
                              y1: _ ? o[c].data[k].y[0] : o[c].data[k].y,
                              y2: _ ? o[c].data[k].y[1] : o[c].data[k].y,
                              rangeName: A,
                            };
                          o[c].data[k].rangeName = A;
                          var H = f.findIndex(function (G) {
                            return G.x === O;
                          });
                          f[H].y.push(N), h.push(N.y1), d.push(N.y2);
                        },
                        x = 0;
                      x < o[c].data.length;
                      x++
                    )
                      y(x);
                  return { start: h, end: d, rangeUniques: f };
                },
              },
              {
                key: "handleCandleStickBoxDataFormat",
                value: function (s, o, c) {
                  var h = this.w,
                    d =
                      h.config.chart.type === "boxPlot" ||
                      h.config.series[c].type === "boxPlot",
                    f = [],
                    g = [],
                    y = [],
                    x = [],
                    k = [];
                  if (s === "array")
                    if (
                      (d && o[c].data[0].length === 6) ||
                      (!d && o[c].data[0].length === 5)
                    )
                      for (var _ = 0; _ < o[c].data.length; _++)
                        f.push(o[c].data[_][1]),
                          g.push(o[c].data[_][2]),
                          d
                            ? (y.push(o[c].data[_][3]),
                              x.push(o[c].data[_][4]),
                              k.push(o[c].data[_][5]))
                            : (x.push(o[c].data[_][3]),
                              k.push(o[c].data[_][4]));
                    else
                      for (var A = 0; A < o[c].data.length; A++)
                        Array.isArray(o[c].data[A][1]) &&
                          (f.push(o[c].data[A][1][0]),
                          g.push(o[c].data[A][1][1]),
                          d
                            ? (y.push(o[c].data[A][1][2]),
                              x.push(o[c].data[A][1][3]),
                              k.push(o[c].data[A][1][4]))
                            : (x.push(o[c].data[A][1][2]),
                              k.push(o[c].data[A][1][3])));
                  else if (s === "xy")
                    for (var O = 0; O < o[c].data.length; O++)
                      Array.isArray(o[c].data[O].y) &&
                        (f.push(o[c].data[O].y[0]),
                        g.push(o[c].data[O].y[1]),
                        d
                          ? (y.push(o[c].data[O].y[2]),
                            x.push(o[c].data[O].y[3]),
                            k.push(o[c].data[O].y[4]))
                          : (x.push(o[c].data[O].y[2]),
                            k.push(o[c].data[O].y[3])));
                  return { o: f, h: g, m: y, l: x, c: k };
                },
              },
              {
                key: "parseDataAxisCharts",
                value: function (s) {
                  var o,
                    c = this,
                    h =
                      arguments.length > 1 && arguments[1] !== void 0
                        ? arguments[1]
                        : this.ctx,
                    d = this.w.config,
                    f = this.w.globals,
                    g = new P(h),
                    y =
                      d.labels.length > 0
                        ? d.labels.slice()
                        : d.xaxis.categories.slice();
                  if (
                    ((f.isRangeBar =
                      d.chart.type === "rangeBar" && f.isBarHorizontal),
                    (f.hasXaxisGroups =
                      d.xaxis.type === "category" &&
                      d.xaxis.group.groups.length > 0),
                    f.hasXaxisGroups && (f.groups = d.xaxis.group.groups),
                    (f.hasSeriesGroups =
                      (o = s[0]) === null || o === void 0 ? void 0 : o.group),
                    f.hasSeriesGroups)
                  ) {
                    var x = [],
                      k = z(
                        new Set(
                          s.map(function (N) {
                            return N.group;
                          })
                        )
                      );
                    s.forEach(function (N, H) {
                      var G = k.indexOf(N.group);
                      x[G] || (x[G] = []), x[G].push(N.name);
                    }),
                      (f.seriesGroups = x);
                  }
                  for (
                    var _ = function () {
                        for (var N = 0; N < y.length; N++)
                          if (typeof y[N] == "string") {
                            if (!g.isValidDate(y[N]))
                              throw new Error(
                                "You have provided invalid Date format. Please provide a valid JavaScript Date"
                              );
                            c.twoDSeriesX.push(g.parseDate(y[N]));
                          } else c.twoDSeriesX.push(y[N]);
                      },
                      A = 0;
                    A < s.length;
                    A++
                  ) {
                    if (
                      ((this.twoDSeries = []),
                      (this.twoDSeriesX = []),
                      (this.threeDSeries = []),
                      s[A].data === void 0)
                    )
                      return void console.error(
                        "It is a possibility that you may have not included 'data' property in series."
                      );
                    if (
                      ((d.chart.type !== "rangeBar" &&
                        d.chart.type !== "rangeArea" &&
                        s[A].type !== "rangeBar" &&
                        s[A].type !== "rangeArea") ||
                        ((f.isRangeData = !0),
                        f.isComboCharts
                          ? (s[A].type !== "rangeBar" &&
                              s[A].type !== "rangeArea") ||
                            this.handleRangeData(s, A)
                          : (d.chart.type !== "rangeBar" &&
                              d.chart.type !== "rangeArea") ||
                            this.handleRangeData(s, A)),
                      this.isMultiFormat())
                    )
                      this.isFormat2DArray()
                        ? this.handleFormat2DArray(s, A)
                        : this.isFormatXY() && this.handleFormatXY(s, A),
                        (d.chart.type !== "candlestick" &&
                          s[A].type !== "candlestick" &&
                          d.chart.type !== "boxPlot" &&
                          s[A].type !== "boxPlot") ||
                          this.handleCandleStickBoxData(s, A),
                        f.series.push(this.twoDSeries),
                        f.labels.push(this.twoDSeriesX),
                        f.seriesX.push(this.twoDSeriesX),
                        (f.seriesGoals = this.seriesGoals),
                        A !== this.activeSeriesIndex ||
                          this.fallbackToCategory ||
                          (f.isXNumeric = !0);
                    else {
                      d.xaxis.type === "datetime"
                        ? ((f.isXNumeric = !0),
                          _(),
                          f.seriesX.push(this.twoDSeriesX))
                        : d.xaxis.type === "numeric" &&
                          ((f.isXNumeric = !0),
                          y.length > 0 &&
                            ((this.twoDSeriesX = y),
                            f.seriesX.push(this.twoDSeriesX))),
                        f.labels.push(this.twoDSeriesX);
                      var O = s[A].data.map(function (N) {
                        return B.parseNumber(N);
                      });
                      f.series.push(O);
                    }
                    f.seriesZ.push(this.threeDSeries),
                      s[A].name !== void 0
                        ? f.seriesNames.push(s[A].name)
                        : f.seriesNames.push("series-" + parseInt(A + 1, 10)),
                      s[A].color !== void 0
                        ? f.seriesColors.push(s[A].color)
                        : f.seriesColors.push(void 0);
                  }
                  return this.w;
                },
              },
              {
                key: "parseDataNonAxisCharts",
                value: function (s) {
                  var o = this.w.globals,
                    c = this.w.config;
                  (o.series = s.slice()), (o.seriesNames = c.labels.slice());
                  for (var h = 0; h < o.series.length; h++)
                    o.seriesNames[h] === void 0 &&
                      o.seriesNames.push("series-" + (h + 1));
                  return this.w;
                },
              },
              {
                key: "handleExternalLabelsData",
                value: function (s) {
                  var o = this.w.config,
                    c = this.w.globals;
                  o.xaxis.categories.length > 0
                    ? (c.labels = o.xaxis.categories)
                    : o.labels.length > 0
                    ? (c.labels = o.labels.slice())
                    : this.fallbackToCategory
                    ? ((c.labels = c.labels[0]),
                      c.seriesRange.length &&
                        (c.seriesRange.map(function (h) {
                          h.forEach(function (d) {
                            c.labels.indexOf(d.x) < 0 &&
                              d.x &&
                              c.labels.push(d.x);
                          });
                        }),
                        (c.labels = Array.from(
                          new Set(c.labels.map(JSON.stringify)),
                          JSON.parse
                        ))),
                      o.xaxis.convertedCatToNumeric &&
                        (new ie(o).convertCatToNumericXaxis(
                          o,
                          this.ctx,
                          c.seriesX[0]
                        ),
                        this._generateExternalLabels(s)))
                    : this._generateExternalLabels(s);
                },
              },
              {
                key: "_generateExternalLabels",
                value: function (s) {
                  var o = this.w.globals,
                    c = this.w.config,
                    h = [];
                  if (o.axisCharts) {
                    if (o.series.length > 0)
                      if (this.isFormatXY())
                        for (
                          var d = c.series.map(function (_, A) {
                              return _.data.filter(function (O, N, H) {
                                return (
                                  H.findIndex(function (G) {
                                    return G.x === O.x;
                                  }) === N
                                );
                              });
                            }),
                            f = d.reduce(function (_, A, O, N) {
                              return N[_].length > A.length ? _ : O;
                            }, 0),
                            g = 0;
                          g < d[f].length;
                          g++
                        )
                          h.push(g + 1);
                      else
                        for (
                          var y = 0;
                          y < o.series[o.maxValsInArrayIndex].length;
                          y++
                        )
                          h.push(y + 1);
                    o.seriesX = [];
                    for (var x = 0; x < s.length; x++) o.seriesX.push(h);
                    this.w.globals.isBarHorizontal || (o.isXNumeric = !0);
                  }
                  if (h.length === 0) {
                    h = o.axisCharts
                      ? []
                      : o.series.map(function (_, A) {
                          return A + 1;
                        });
                    for (var k = 0; k < s.length; k++) o.seriesX.push(h);
                  }
                  (o.labels = h),
                    c.xaxis.convertedCatToNumeric &&
                      (o.categoryLabels = h.map(function (_) {
                        return c.xaxis.labels.formatter(_);
                      })),
                    (o.noLabelsProvided = !0);
                },
              },
              {
                key: "parseData",
                value: function (s) {
                  var o = this.w,
                    c = o.config,
                    h = o.globals;
                  if (
                    (this.excludeCollapsedSeriesInYAxis(),
                    (this.fallbackToCategory = !1),
                    this.ctx.core.resetGlobals(),
                    this.ctx.core.isMultipleY(),
                    h.axisCharts
                      ? (this.parseDataAxisCharts(s),
                        this.coreUtils.getLargestSeries())
                      : this.parseDataNonAxisCharts(s),
                    c.chart.stacked)
                  ) {
                    var d = new Ee(this.ctx);
                    h.series = d.setNullSeriesToZeroValues(h.series);
                  }
                  this.coreUtils.getSeriesTotals(),
                    h.axisCharts &&
                      (h.stackedSeriesTotals =
                        this.coreUtils.getStackedSeriesTotals()),
                    this.coreUtils.getPercentSeries(),
                    h.dataFormatXNumeric ||
                      (h.isXNumeric &&
                        (c.xaxis.type !== "numeric" ||
                          c.labels.length !== 0 ||
                          c.xaxis.categories.length !== 0)) ||
                      this.handleExternalLabelsData(s);
                  for (
                    var f = this.coreUtils.getCategoryLabels(h.labels), g = 0;
                    g < f.length;
                    g++
                  )
                    if (Array.isArray(f[g])) {
                      h.isMultiLineX = !0;
                      break;
                    }
                },
              },
              {
                key: "excludeCollapsedSeriesInYAxis",
                value: function () {
                  var s = this,
                    o = this.w;
                  o.globals.ignoreYAxisIndexes = o.globals.collapsedSeries.map(
                    function (c, h) {
                      if (
                        s.w.globals.isMultipleYAxis &&
                        !o.config.chart.stacked
                      )
                        return c.index;
                    }
                  );
                },
              },
            ]),
            $
          );
        })(),
        xe = (function () {
          function $(s) {
            a(this, $), (this.ctx = s), (this.w = s.w);
          }
          return (
            u($, [
              {
                key: "getLabel",
                value: function (s, o, c, h) {
                  var d =
                      arguments.length > 4 && arguments[4] !== void 0
                        ? arguments[4]
                        : [],
                    f =
                      arguments.length > 5 && arguments[5] !== void 0
                        ? arguments[5]
                        : "12px",
                    g =
                      !(arguments.length > 6 && arguments[6] !== void 0) ||
                      arguments[6],
                    y = this.w,
                    x = s[h] === void 0 ? "" : s[h],
                    k = x,
                    _ = y.globals.xLabelFormatter,
                    A = y.config.xaxis.labels.formatter,
                    O = !1,
                    N = new L(this.ctx),
                    H = x;
                  g &&
                    ((k = N.xLabelFormat(_, x, H, {
                      i: h,
                      dateFormatter: new P(this.ctx).formatDate,
                      w: y,
                    })),
                    A !== void 0 &&
                      (k = A(x, s[h], {
                        i: h,
                        dateFormatter: new P(this.ctx).formatDate,
                        w: y,
                      })));
                  var G, te;
                  o.length > 0
                    ? ((G = o[h].unit),
                      (te = null),
                      o.forEach(function (F) {
                        F.unit === "month"
                          ? (te = "year")
                          : F.unit === "day"
                          ? (te = "month")
                          : F.unit === "hour"
                          ? (te = "day")
                          : F.unit === "minute" && (te = "hour");
                      }),
                      (O = te === G),
                      (c = o[h].position),
                      (k = o[h].value))
                    : y.config.xaxis.type === "datetime" &&
                      A === void 0 &&
                      (k = ""),
                    k === void 0 && (k = ""),
                    (k = Array.isArray(k) ? k : k.toString());
                  var se = new K(this.ctx),
                    b = {};
                  b =
                    y.globals.rotateXLabels && g
                      ? se.getTextRects(
                          k,
                          parseInt(f, 10),
                          null,
                          "rotate(".concat(
                            y.config.xaxis.labels.rotate,
                            " 0 0)"
                          ),
                          !1
                        )
                      : se.getTextRects(k, parseInt(f, 10));
                  var C =
                    !y.config.xaxis.labels.showDuplicates && this.ctx.timeScale;
                  return (
                    !Array.isArray(k) &&
                      (k.indexOf("NaN") === 0 ||
                        k.toLowerCase().indexOf("invalid") === 0 ||
                        k.toLowerCase().indexOf("infinity") >= 0 ||
                        (d.indexOf(k) >= 0 && C)) &&
                      (k = ""),
                    { x: c, text: k, textRect: b, isBold: O }
                  );
                },
              },
              {
                key: "checkLabelBasedOnTickamount",
                value: function (s, o, c) {
                  var h = this.w,
                    d = h.config.xaxis.tickAmount;
                  return (
                    d === "dataPoints" &&
                      (d = Math.round(h.globals.gridWidth / 120)),
                    d > c || s % Math.round(c / (d + 1)) == 0 || (o.text = ""),
                    o
                  );
                },
              },
              {
                key: "checkForOverflowingLabels",
                value: function (s, o, c, h, d) {
                  var f = this.w;
                  if (
                    (s === 0 &&
                      f.globals.skipFirstTimelinelabel &&
                      (o.text = ""),
                    s === c - 1 &&
                      f.globals.skipLastTimelinelabel &&
                      (o.text = ""),
                    f.config.xaxis.labels.hideOverlappingLabels && h.length > 0)
                  ) {
                    var g = d[d.length - 1];
                    o.x <
                      g.textRect.width /
                        (f.globals.rotateXLabels
                          ? Math.abs(f.config.xaxis.labels.rotate) / 12
                          : 1.01) +
                        g.x && (o.text = "");
                  }
                  return o;
                },
              },
              {
                key: "checkForReversedLabels",
                value: function (s, o) {
                  var c = this.w;
                  return (
                    c.config.yaxis[s] &&
                      c.config.yaxis[s].reversed &&
                      o.reverse(),
                    o
                  );
                },
              },
              {
                key: "isYAxisHidden",
                value: function (s) {
                  var o = this.w,
                    c = new fe(this.ctx);
                  return (
                    !o.config.yaxis[s].show ||
                    (!o.config.yaxis[s].showForNullSeries &&
                      c.isSeriesNull(s) &&
                      o.globals.collapsedSeriesIndices.indexOf(s) === -1)
                  );
                },
              },
              {
                key: "getYAxisForeColor",
                value: function (s, o) {
                  var c = this.w;
                  return (
                    Array.isArray(s) &&
                      c.globals.yAxisScale[o] &&
                      this.ctx.theme.pushExtraColors(
                        s,
                        c.globals.yAxisScale[o].result.length,
                        !1
                      ),
                    s
                  );
                },
              },
              {
                key: "drawYAxisTicks",
                value: function (s, o, c, h, d, f, g) {
                  var y = this.w,
                    x = new K(this.ctx),
                    k = y.globals.translateY;
                  if (h.show && o > 0) {
                    y.config.yaxis[d].opposite === !0 && (s += h.width);
                    for (var _ = o; _ >= 0; _--) {
                      var A = k + o / 10 + y.config.yaxis[d].labels.offsetY - 1;
                      y.globals.isBarHorizontal && (A = f * _),
                        y.config.chart.type === "heatmap" && (A += f / 2);
                      var O = x.drawLine(
                        s + c.offsetX - h.width + h.offsetX,
                        A + h.offsetY,
                        s + c.offsetX + h.offsetX,
                        A + h.offsetY,
                        h.color
                      );
                      g.add(O), (k += f);
                    }
                  }
                },
              },
            ]),
            $
          );
        })(),
        Se = (function () {
          function $(s) {
            a(this, $), (this.ctx = s), (this.w = s.w);
          }
          return (
            u($, [
              {
                key: "scaleSvgNode",
                value: function (s, o) {
                  var c = parseFloat(s.getAttributeNS(null, "width")),
                    h = parseFloat(s.getAttributeNS(null, "height"));
                  s.setAttributeNS(null, "width", c * o),
                    s.setAttributeNS(null, "height", h * o),
                    s.setAttributeNS(null, "viewBox", "0 0 " + c + " " + h);
                },
              },
              {
                key: "fixSvgStringForIe11",
                value: function (s) {
                  if (!B.isIE11()) return s.replace(/&nbsp;/g, "&#160;");
                  var o = 0,
                    c = s.replace(
                      /xmlns="http:\/\/www.w3.org\/2000\/svg"/g,
                      function (h) {
                        return ++o === 2
                          ? 'xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev"'
                          : h;
                      }
                    );
                  return (c = (c = c.replace(/xmlns:NS\d+=""/g, "")).replace(
                    /NS\d+:(\w+:\w+=")/g,
                    "$1"
                  ));
                },
              },
              {
                key: "getSvgString",
                value: function (s) {
                  s == null && (s = 1);
                  var o = this.w.globals.dom.Paper.svg();
                  if (s !== 1) {
                    var c = this.w.globals.dom.Paper.node.cloneNode(!0);
                    this.scaleSvgNode(c, s),
                      (o = new XMLSerializer().serializeToString(c));
                  }
                  return this.fixSvgStringForIe11(o);
                },
              },
              {
                key: "cleanup",
                value: function () {
                  var s = this.w,
                    o = s.globals.dom.baseEl.getElementsByClassName(
                      "apexcharts-xcrosshairs"
                    ),
                    c = s.globals.dom.baseEl.getElementsByClassName(
                      "apexcharts-ycrosshairs"
                    ),
                    h = s.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-zoom-rect, .apexcharts-selection-rect"
                    );
                  Array.prototype.forEach.call(h, function (d) {
                    d.setAttribute("width", 0);
                  }),
                    o &&
                      o[0] &&
                      (o[0].setAttribute("x", -500),
                      o[0].setAttribute("x1", -500),
                      o[0].setAttribute("x2", -500)),
                    c &&
                      c[0] &&
                      (c[0].setAttribute("y", -100),
                      c[0].setAttribute("y1", -100),
                      c[0].setAttribute("y2", -100));
                },
              },
              {
                key: "svgUrl",
                value: function () {
                  this.cleanup();
                  var s = this.getSvgString(),
                    o = new Blob([s], { type: "image/svg+xml;charset=utf-8" });
                  return URL.createObjectURL(o);
                },
              },
              {
                key: "dataURI",
                value: function (s) {
                  var o = this;
                  return new Promise(function (c) {
                    var h = o.w,
                      d = s ? s.scale || s.width / h.globals.svgWidth : 1;
                    o.cleanup();
                    var f = document.createElement("canvas");
                    (f.width = h.globals.svgWidth * d),
                      (f.height =
                        parseInt(h.globals.dom.elWrap.style.height, 10) * d);
                    var g =
                        h.config.chart.background === "transparent"
                          ? "#fff"
                          : h.config.chart.background,
                      y = f.getContext("2d");
                    (y.fillStyle = g),
                      y.fillRect(0, 0, f.width * d, f.height * d);
                    var x = o.getSvgString(d);
                    if (window.canvg && B.isIE11()) {
                      var k = window.canvg.Canvg.fromString(y, x, {
                        ignoreClear: !0,
                        ignoreDimensions: !0,
                      });
                      k.start();
                      var _ = f.msToBlob();
                      k.stop(), c({ blob: _ });
                    } else {
                      var A = "data:image/svg+xml," + encodeURIComponent(x),
                        O = new Image();
                      (O.crossOrigin = "anonymous"),
                        (O.onload = function () {
                          if ((y.drawImage(O, 0, 0), f.msToBlob)) {
                            var N = f.msToBlob();
                            c({ blob: N });
                          } else {
                            var H = f.toDataURL("image/png");
                            c({ imgURI: H });
                          }
                        }),
                        (O.src = A);
                    }
                  });
                },
              },
              {
                key: "exportToSVG",
                value: function () {
                  this.triggerDownload(
                    this.svgUrl(),
                    this.w.config.chart.toolbar.export.svg.filename,
                    ".svg"
                  );
                },
              },
              {
                key: "exportToPng",
                value: function () {
                  var s = this;
                  this.dataURI().then(function (o) {
                    var c = o.imgURI,
                      h = o.blob;
                    h
                      ? navigator.msSaveOrOpenBlob(
                          h,
                          s.w.globals.chartID + ".png"
                        )
                      : s.triggerDownload(
                          c,
                          s.w.config.chart.toolbar.export.png.filename,
                          ".png"
                        );
                  });
                },
              },
              {
                key: "exportToCSV",
                value: function (s) {
                  var o = this,
                    c = s.series,
                    h = s.fileName,
                    d = s.columnDelimiter,
                    f = d === void 0 ? "," : d,
                    g = s.lineDelimiter,
                    y =
                      g === void 0
                        ? `
`
                        : g,
                    x = this.w;
                  c || (c = x.config.series);
                  var k = [],
                    _ = [],
                    A = "",
                    O = x.globals.series.map(function (b, C) {
                      return x.globals.collapsedSeriesIndices.indexOf(C) === -1
                        ? b
                        : [];
                    }),
                    N = Math.max.apply(
                      Math,
                      z(
                        c.map(function (b) {
                          return b.data ? b.data.length : 0;
                        })
                      )
                    ),
                    H = new me(this.ctx),
                    G = new xe(this.ctx),
                    te = function (b) {
                      var C = "";
                      if (x.globals.axisCharts) {
                        if (
                          x.config.xaxis.type === "category" ||
                          x.config.xaxis.convertedCatToNumeric
                        )
                          if (x.globals.isBarHorizontal) {
                            var F = x.globals.yLabelFormatters[0],
                              ee = new Ee(o.ctx).getActiveConfigSeriesIndex();
                            C = F(x.globals.labels[b], {
                              seriesIndex: ee,
                              dataPointIndex: b,
                              w: x,
                            });
                          } else
                            C = G.getLabel(
                              x.globals.labels,
                              x.globals.timescaleLabels,
                              0,
                              b
                            ).text;
                        x.config.xaxis.type === "datetime" &&
                          (x.config.xaxis.categories.length
                            ? (C = x.config.xaxis.categories[b])
                            : x.config.labels.length &&
                              (C = x.config.labels[b]));
                      } else C = x.config.labels[b];
                      return (
                        Array.isArray(C) && (C = C.join(" ")),
                        B.isNumber(C) ? C : C.split(f).join("")
                      );
                    },
                    se = function (b, C) {
                      if ((k.length && C === 0 && _.push(k.join(f)), b.data)) {
                        b.data =
                          (b.data.length && b.data) ||
                          z(Array(N)).map(function () {
                            return "";
                          });
                        for (var F = 0; F < b.data.length; F++) {
                          k = [];
                          var ee = te(F);
                          if (
                            (ee ||
                              (H.isFormatXY()
                                ? (ee = c[C].data[F].x)
                                : H.isFormat2DArray() &&
                                  (ee = c[C].data[F] ? c[C].data[F][0] : "")),
                            C === 0)
                          ) {
                            k.push(
                              ((we = ee),
                              x.config.xaxis.type === "datetime" &&
                              String(we).length >= 10
                                ? x.config.chart.toolbar.export.csv.dateFormatter(
                                    ee
                                  )
                                : B.isNumber(ee)
                                ? ee
                                : ee.split(f).join(""))
                            );
                            for (
                              var ue = 0;
                              ue < x.globals.series.length;
                              ue++
                            ) {
                              var he;
                              H.isFormatXY()
                                ? k.push(
                                    (he = c[ue].data[F]) === null ||
                                      he === void 0
                                      ? void 0
                                      : he.y
                                  )
                                : k.push(O[ue][F]);
                            }
                          }
                          (x.config.chart.type === "candlestick" ||
                            (b.type && b.type === "candlestick")) &&
                            (k.pop(),
                            k.push(x.globals.seriesCandleO[C][F]),
                            k.push(x.globals.seriesCandleH[C][F]),
                            k.push(x.globals.seriesCandleL[C][F]),
                            k.push(x.globals.seriesCandleC[C][F])),
                            (x.config.chart.type === "boxPlot" ||
                              (b.type && b.type === "boxPlot")) &&
                              (k.pop(),
                              k.push(x.globals.seriesCandleO[C][F]),
                              k.push(x.globals.seriesCandleH[C][F]),
                              k.push(x.globals.seriesCandleM[C][F]),
                              k.push(x.globals.seriesCandleL[C][F]),
                              k.push(x.globals.seriesCandleC[C][F])),
                            x.config.chart.type === "rangeBar" &&
                              (k.pop(),
                              k.push(x.globals.seriesRangeStart[C][F]),
                              k.push(x.globals.seriesRangeEnd[C][F])),
                            k.length && _.push(k.join(f));
                        }
                      }
                      var we;
                    };
                  k.push(x.config.chart.toolbar.export.csv.headerCategory),
                    x.config.chart.type === "boxPlot"
                      ? (k.push("minimum"),
                        k.push("q1"),
                        k.push("median"),
                        k.push("q3"),
                        k.push("maximum"))
                      : x.config.chart.type === "candlestick"
                      ? (k.push("open"),
                        k.push("high"),
                        k.push("low"),
                        k.push("close"))
                      : x.config.chart.type === "rangeBar"
                      ? (k.push("minimum"), k.push("maximum"))
                      : c.map(function (b, C) {
                          var F = (b.name ? b.name : "series-".concat(C)) + "";
                          x.globals.axisCharts &&
                            k.push(
                              F.split(f).join("")
                                ? F.split(f).join("")
                                : "series-".concat(C)
                            );
                        }),
                    x.globals.axisCharts ||
                      (k.push(x.config.chart.toolbar.export.csv.headerValue),
                      _.push(k.join(f))),
                    c.map(function (b, C) {
                      x.globals.axisCharts
                        ? se(b, C)
                        : ((k = []).push(x.globals.labels[C].split(f).join("")),
                          k.push(O[C]),
                          _.push(k.join(f)));
                    }),
                    (A += _.join(y)),
                    this.triggerDownload(
                      "data:text/csv; charset=utf-8," +
                        encodeURIComponent("\uFEFF" + A),
                      h || x.config.chart.toolbar.export.csv.filename,
                      ".csv"
                    );
                },
              },
              {
                key: "triggerDownload",
                value: function (s, o, c) {
                  var h = document.createElement("a");
                  (h.href = s),
                    (h.download = (o || this.w.globals.chartID) + c),
                    document.body.appendChild(h),
                    h.click(),
                    document.body.removeChild(h);
                },
              },
            ]),
            $
          );
        })(),
        Ie = (function () {
          function $(s, o) {
            a(this, $), (this.ctx = s), (this.elgrid = o), (this.w = s.w);
            var c = this.w;
            (this.axesUtils = new xe(s)),
              (this.xaxisLabels = c.globals.labels.slice()),
              c.globals.timescaleLabels.length > 0 &&
                !c.globals.isBarHorizontal &&
                (this.xaxisLabels = c.globals.timescaleLabels.slice()),
              c.config.xaxis.overwriteCategories &&
                (this.xaxisLabels = c.config.xaxis.overwriteCategories),
              (this.drawnLabels = []),
              (this.drawnLabelsRects = []),
              c.config.xaxis.position === "top"
                ? (this.offY = 0)
                : (this.offY = c.globals.gridHeight + 1),
              (this.offY = this.offY + c.config.xaxis.axisBorder.offsetY),
              (this.isCategoryBarHorizontal =
                c.config.chart.type === "bar" &&
                c.config.plotOptions.bar.horizontal),
              (this.xaxisFontSize = c.config.xaxis.labels.style.fontSize),
              (this.xaxisFontFamily = c.config.xaxis.labels.style.fontFamily),
              (this.xaxisForeColors = c.config.xaxis.labels.style.colors),
              (this.xaxisBorderWidth = c.config.xaxis.axisBorder.width),
              this.isCategoryBarHorizontal &&
                (this.xaxisBorderWidth =
                  c.config.yaxis[0].axisBorder.width.toString()),
              this.xaxisBorderWidth.indexOf("%") > -1
                ? (this.xaxisBorderWidth =
                    (c.globals.gridWidth *
                      parseInt(this.xaxisBorderWidth, 10)) /
                    100)
                : (this.xaxisBorderWidth = parseInt(this.xaxisBorderWidth, 10)),
              (this.xaxisBorderHeight = c.config.xaxis.axisBorder.height),
              (this.yaxis = c.config.yaxis[0]);
          }
          return (
            u($, [
              {
                key: "drawXaxis",
                value: function () {
                  var s = this.w,
                    o = new K(this.ctx),
                    c = o.group({
                      class: "apexcharts-xaxis",
                      transform: "translate("
                        .concat(s.config.xaxis.offsetX, ", ")
                        .concat(s.config.xaxis.offsetY, ")"),
                    }),
                    h = o.group({
                      class: "apexcharts-xaxis-texts-g",
                      transform: "translate("
                        .concat(s.globals.translateXAxisX, ", ")
                        .concat(s.globals.translateXAxisY, ")"),
                    });
                  c.add(h);
                  for (var d = [], f = 0; f < this.xaxisLabels.length; f++)
                    d.push(this.xaxisLabels[f]);
                  if (
                    (this.drawXAxisLabelAndGroup(
                      !0,
                      o,
                      h,
                      d,
                      s.globals.isXNumeric,
                      function (N, H) {
                        return H;
                      }
                    ),
                    s.globals.hasXaxisGroups)
                  ) {
                    var g = s.globals.groups;
                    d = [];
                    for (var y = 0; y < g.length; y++) d.push(g[y].title);
                    var x = {};
                    s.config.xaxis.group.style &&
                      ((x.xaxisFontSize = s.config.xaxis.group.style.fontSize),
                      (x.xaxisFontFamily =
                        s.config.xaxis.group.style.fontFamily),
                      (x.xaxisForeColors = s.config.xaxis.group.style.colors),
                      (x.fontWeight = s.config.xaxis.group.style.fontWeight),
                      (x.cssClass = s.config.xaxis.group.style.cssClass)),
                      this.drawXAxisLabelAndGroup(
                        !1,
                        o,
                        h,
                        d,
                        !1,
                        function (N, H) {
                          return g[N].cols * H;
                        },
                        x
                      );
                  }
                  if (s.config.xaxis.title.text !== void 0) {
                    var k = o.group({ class: "apexcharts-xaxis-title" }),
                      _ = o.drawText({
                        x:
                          s.globals.gridWidth / 2 +
                          s.config.xaxis.title.offsetX,
                        y:
                          this.offY +
                          parseFloat(this.xaxisFontSize) +
                          (s.config.xaxis.position === "bottom"
                            ? s.globals.xAxisLabelsHeight
                            : -s.globals.xAxisLabelsHeight - 10) +
                          s.config.xaxis.title.offsetY,
                        text: s.config.xaxis.title.text,
                        textAnchor: "middle",
                        fontSize: s.config.xaxis.title.style.fontSize,
                        fontFamily: s.config.xaxis.title.style.fontFamily,
                        fontWeight: s.config.xaxis.title.style.fontWeight,
                        foreColor: s.config.xaxis.title.style.color,
                        cssClass:
                          "apexcharts-xaxis-title-text " +
                          s.config.xaxis.title.style.cssClass,
                      });
                    k.add(_), c.add(k);
                  }
                  if (s.config.xaxis.axisBorder.show) {
                    var A = s.globals.barPadForNumericAxis,
                      O = o.drawLine(
                        s.globals.padHorizontal +
                          s.config.xaxis.axisBorder.offsetX -
                          A,
                        this.offY,
                        this.xaxisBorderWidth + A,
                        this.offY,
                        s.config.xaxis.axisBorder.color,
                        0,
                        this.xaxisBorderHeight
                      );
                    this.elgrid &&
                    this.elgrid.elGridBorders &&
                    s.config.grid.show
                      ? this.elgrid.elGridBorders.add(O)
                      : c.add(O);
                  }
                  return c;
                },
              },
              {
                key: "drawXAxisLabelAndGroup",
                value: function (s, o, c, h, d, f) {
                  var g,
                    y = this,
                    x =
                      arguments.length > 6 && arguments[6] !== void 0
                        ? arguments[6]
                        : {},
                    k = [],
                    _ = [],
                    A = this.w,
                    O = x.xaxisFontSize || this.xaxisFontSize,
                    N = x.xaxisFontFamily || this.xaxisFontFamily,
                    H = x.xaxisForeColors || this.xaxisForeColors,
                    G = x.fontWeight || A.config.xaxis.labels.style.fontWeight,
                    te = x.cssClass || A.config.xaxis.labels.style.cssClass,
                    se = A.globals.padHorizontal,
                    b = h.length,
                    C =
                      A.config.xaxis.type === "category"
                        ? A.globals.dataPoints
                        : b;
                  if ((C === 0 && b > C && (C = b), d)) {
                    var F = C > 1 ? C - 1 : C;
                    (g = A.globals.gridWidth / F),
                      (se = se + f(0, g) / 2 + A.config.xaxis.labels.offsetX);
                  } else
                    (g = A.globals.gridWidth / C),
                      (se = se + f(0, g) + A.config.xaxis.labels.offsetX);
                  for (
                    var ee = function (he) {
                        var we =
                          se - f(he, g) / 2 + A.config.xaxis.labels.offsetX;
                        he === 0 &&
                          b === 1 &&
                          g / 2 === se &&
                          C === 1 &&
                          (we = A.globals.gridWidth / 2);
                        var Ae = y.axesUtils.getLabel(
                            h,
                            A.globals.timescaleLabels,
                            we,
                            he,
                            k,
                            O,
                            s
                          ),
                          Le = 28;
                        if (
                          (A.globals.rotateXLabels && s && (Le = 22),
                          A.config.xaxis.title.text &&
                            A.config.xaxis.position === "top" &&
                            (Le +=
                              parseFloat(A.config.xaxis.title.style.fontSize) +
                              2),
                          s ||
                            (Le =
                              Le +
                              parseFloat(O) +
                              (A.globals.xAxisLabelsHeight -
                                A.globals.xAxisGroupLabelsHeight) +
                              (A.globals.rotateXLabels ? 10 : 0)),
                          (Ae =
                            A.config.xaxis.tickAmount !== void 0 &&
                            A.config.xaxis.tickAmount !== "dataPoints" &&
                            A.config.xaxis.type !== "datetime"
                              ? y.axesUtils.checkLabelBasedOnTickamount(
                                  he,
                                  Ae,
                                  b
                                )
                              : y.axesUtils.checkForOverflowingLabels(
                                  he,
                                  Ae,
                                  b,
                                  k,
                                  _
                                )),
                          A.config.xaxis.labels.show)
                        ) {
                          var ze = o.drawText({
                            x: Ae.x,
                            y:
                              y.offY +
                              A.config.xaxis.labels.offsetY +
                              Le -
                              (A.config.xaxis.position === "top"
                                ? A.globals.xAxisHeight +
                                  A.config.xaxis.axisTicks.height -
                                  2
                                : 0),
                            text: Ae.text,
                            textAnchor: "middle",
                            fontWeight: Ae.isBold ? 600 : G,
                            fontSize: O,
                            fontFamily: N,
                            foreColor: Array.isArray(H)
                              ? s && A.config.xaxis.convertedCatToNumeric
                                ? H[A.globals.minX + he - 1]
                                : H[he]
                              : H,
                            isPlainText: !1,
                            cssClass:
                              (s
                                ? "apexcharts-xaxis-label "
                                : "apexcharts-xaxis-group-label ") + te,
                          });
                          if (
                            (c.add(ze),
                            ze.on("click", function (Ge) {
                              if (
                                typeof A.config.chart.events.xAxisLabelClick ==
                                "function"
                              ) {
                                var it = Object.assign({}, A, {
                                  labelIndex: he,
                                });
                                A.config.chart.events.xAxisLabelClick(
                                  Ge,
                                  y.ctx,
                                  it
                                );
                              }
                            }),
                            s)
                          ) {
                            var De = document.createElementNS(
                              A.globals.SVGNS,
                              "title"
                            );
                            (De.textContent = Array.isArray(Ae.text)
                              ? Ae.text.join(" ")
                              : Ae.text),
                              ze.node.appendChild(De),
                              Ae.text !== "" && (k.push(Ae.text), _.push(Ae));
                          }
                        }
                        he < b - 1 && (se += f(he + 1, g));
                      },
                      ue = 0;
                    ue <= b - 1;
                    ue++
                  )
                    ee(ue);
                },
              },
              {
                key: "drawXaxisInversed",
                value: function (s) {
                  var o,
                    c,
                    h = this,
                    d = this.w,
                    f = new K(this.ctx),
                    g = d.config.yaxis[0].opposite
                      ? d.globals.translateYAxisX[s]
                      : 0,
                    y = f.group({
                      class: "apexcharts-yaxis apexcharts-xaxis-inversed",
                      rel: s,
                    }),
                    x = f.group({
                      class:
                        "apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g",
                      transform: "translate(" + g + ", 0)",
                    });
                  y.add(x);
                  var k = [];
                  if (d.config.yaxis[s].show)
                    for (var _ = 0; _ < this.xaxisLabels.length; _++)
                      k.push(this.xaxisLabels[_]);
                  (o = d.globals.gridHeight / k.length), (c = -o / 2.2);
                  var A = d.globals.yLabelFormatters[0],
                    O = d.config.yaxis[0].labels;
                  if (O.show)
                    for (
                      var N = function (F) {
                          var ee = k[F] === void 0 ? "" : k[F];
                          ee = A(ee, {
                            seriesIndex: s,
                            dataPointIndex: F,
                            w: d,
                          });
                          var ue = h.axesUtils.getYAxisForeColor(
                              O.style.colors,
                              s
                            ),
                            he = 0;
                          Array.isArray(ee) &&
                            (he =
                              (ee.length / 2) * parseInt(O.style.fontSize, 10));
                          var we = O.offsetX - 15,
                            Ae = "end";
                          h.yaxis.opposite && (Ae = "start"),
                            d.config.yaxis[0].labels.align === "left"
                              ? ((we = O.offsetX), (Ae = "start"))
                              : d.config.yaxis[0].labels.align === "center"
                              ? ((we = O.offsetX), (Ae = "middle"))
                              : d.config.yaxis[0].labels.align === "right" &&
                                (Ae = "end");
                          var Le = f.drawText({
                            x: we,
                            y: c + o + O.offsetY - he,
                            text: ee,
                            textAnchor: Ae,
                            foreColor: Array.isArray(ue) ? ue[F] : ue,
                            fontSize: O.style.fontSize,
                            fontFamily: O.style.fontFamily,
                            fontWeight: O.style.fontWeight,
                            isPlainText: !1,
                            cssClass:
                              "apexcharts-yaxis-label " + O.style.cssClass,
                            maxWidth: O.maxWidth,
                          });
                          x.add(Le),
                            Le.on("click", function (Ge) {
                              if (
                                typeof d.config.chart.events.xAxisLabelClick ==
                                "function"
                              ) {
                                var it = Object.assign({}, d, {
                                  labelIndex: F,
                                });
                                d.config.chart.events.xAxisLabelClick(
                                  Ge,
                                  h.ctx,
                                  it
                                );
                              }
                            });
                          var ze = document.createElementNS(
                            d.globals.SVGNS,
                            "title"
                          );
                          if (
                            ((ze.textContent = Array.isArray(ee)
                              ? ee.join(" ")
                              : ee),
                            Le.node.appendChild(ze),
                            d.config.yaxis[s].labels.rotate !== 0)
                          ) {
                            var De = f.rotateAroundCenter(Le.node);
                            Le.node.setAttribute(
                              "transform",
                              "rotate("
                                .concat(d.config.yaxis[s].labels.rotate, " 0 ")
                                .concat(De.y, ")")
                            );
                          }
                          c += o;
                        },
                        H = 0;
                      H <= k.length - 1;
                      H++
                    )
                      N(H);
                  if (d.config.yaxis[0].title.text !== void 0) {
                    var G = f.group({
                        class:
                          "apexcharts-yaxis-title apexcharts-xaxis-title-inversed",
                        transform: "translate(" + g + ", 0)",
                      }),
                      te = f.drawText({
                        x: d.config.yaxis[0].title.offsetX,
                        y:
                          d.globals.gridHeight / 2 +
                          d.config.yaxis[0].title.offsetY,
                        text: d.config.yaxis[0].title.text,
                        textAnchor: "middle",
                        foreColor: d.config.yaxis[0].title.style.color,
                        fontSize: d.config.yaxis[0].title.style.fontSize,
                        fontWeight: d.config.yaxis[0].title.style.fontWeight,
                        fontFamily: d.config.yaxis[0].title.style.fontFamily,
                        cssClass:
                          "apexcharts-yaxis-title-text " +
                          d.config.yaxis[0].title.style.cssClass,
                      });
                    G.add(te), y.add(G);
                  }
                  var se = 0;
                  this.isCategoryBarHorizontal &&
                    d.config.yaxis[0].opposite &&
                    (se = d.globals.gridWidth);
                  var b = d.config.xaxis.axisBorder;
                  if (b.show) {
                    var C = f.drawLine(
                      d.globals.padHorizontal + b.offsetX + se,
                      1 + b.offsetY,
                      d.globals.padHorizontal + b.offsetX + se,
                      d.globals.gridHeight + b.offsetY,
                      b.color,
                      0
                    );
                    this.elgrid &&
                    this.elgrid.elGridBorders &&
                    d.config.grid.show
                      ? this.elgrid.elGridBorders.add(C)
                      : y.add(C);
                  }
                  return (
                    d.config.yaxis[0].axisTicks.show &&
                      this.axesUtils.drawYAxisTicks(
                        se,
                        k.length,
                        d.config.yaxis[0].axisBorder,
                        d.config.yaxis[0].axisTicks,
                        0,
                        o,
                        y
                      ),
                    y
                  );
                },
              },
              {
                key: "drawXaxisTicks",
                value: function (s, o, c) {
                  var h = this.w,
                    d = s;
                  if (!(s < 0 || s - 2 > h.globals.gridWidth)) {
                    var f = this.offY + h.config.xaxis.axisTicks.offsetY;
                    if (
                      ((o = o + f + h.config.xaxis.axisTicks.height),
                      h.config.xaxis.position === "top" &&
                        (o = f - h.config.xaxis.axisTicks.height),
                      h.config.xaxis.axisTicks.show)
                    ) {
                      var g = new K(this.ctx).drawLine(
                        s + h.config.xaxis.axisTicks.offsetX,
                        f + h.config.xaxis.offsetY,
                        d + h.config.xaxis.axisTicks.offsetX,
                        o + h.config.xaxis.offsetY,
                        h.config.xaxis.axisTicks.color
                      );
                      c.add(g), g.node.classList.add("apexcharts-xaxis-tick");
                    }
                  }
                },
              },
              {
                key: "getXAxisTicksPositions",
                value: function () {
                  var s = this.w,
                    o = [],
                    c = this.xaxisLabels.length,
                    h = s.globals.padHorizontal;
                  if (s.globals.timescaleLabels.length > 0)
                    for (var d = 0; d < c; d++)
                      (h = this.xaxisLabels[d].position), o.push(h);
                  else
                    for (var f = c, g = 0; g < f; g++) {
                      var y = f;
                      s.globals.isXNumeric &&
                        s.config.chart.type !== "bar" &&
                        (y -= 1),
                        (h += s.globals.gridWidth / y),
                        o.push(h);
                    }
                  return o;
                },
              },
              {
                key: "xAxisLabelCorrections",
                value: function () {
                  var s = this.w,
                    o = new K(this.ctx),
                    c = s.globals.dom.baseEl.querySelector(
                      ".apexcharts-xaxis-texts-g"
                    ),
                    h = s.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-xaxis-texts-g text:not(.apexcharts-xaxis-group-label)"
                    ),
                    d = s.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-yaxis-inversed text"
                    ),
                    f = s.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-xaxis-inversed-texts-g text tspan"
                    );
                  if (
                    s.globals.rotateXLabels ||
                    s.config.xaxis.labels.rotateAlways
                  )
                    for (var g = 0; g < h.length; g++) {
                      var y = o.rotateAroundCenter(h[g]);
                      (y.y = y.y - 1),
                        (y.x = y.x + 1),
                        h[g].setAttribute(
                          "transform",
                          "rotate("
                            .concat(s.config.xaxis.labels.rotate, " ")
                            .concat(y.x, " ")
                            .concat(y.y, ")")
                        ),
                        h[g].setAttribute("text-anchor", "end"),
                        c.setAttribute(
                          "transform",
                          "translate(0, ".concat(-10, ")")
                        );
                      var x = h[g].childNodes;
                      s.config.xaxis.labels.trim &&
                        Array.prototype.forEach.call(x, function (O) {
                          o.placeTextWithEllipsis(
                            O,
                            O.textContent,
                            s.globals.xAxisLabelsHeight -
                              (s.config.legend.position === "bottom" ? 20 : 10)
                          );
                        });
                    }
                  else
                    (function () {
                      for (
                        var O =
                            s.globals.gridWidth / (s.globals.labels.length + 1),
                          N = 0;
                        N < h.length;
                        N++
                      ) {
                        var H = h[N].childNodes;
                        s.config.xaxis.labels.trim &&
                          s.config.xaxis.type !== "datetime" &&
                          Array.prototype.forEach.call(H, function (G) {
                            o.placeTextWithEllipsis(G, G.textContent, O);
                          });
                      }
                    })();
                  if (d.length > 0) {
                    var k = d[d.length - 1].getBBox(),
                      _ = d[0].getBBox();
                    k.x < -20 &&
                      d[d.length - 1].parentNode.removeChild(d[d.length - 1]),
                      _.x + _.width > s.globals.gridWidth &&
                        !s.globals.isBarHorizontal &&
                        d[0].parentNode.removeChild(d[0]);
                    for (var A = 0; A < f.length; A++)
                      o.placeTextWithEllipsis(
                        f[A],
                        f[A].textContent,
                        s.config.yaxis[0].labels.maxWidth -
                          (s.config.yaxis[0].title.text
                            ? 2 *
                              parseFloat(s.config.yaxis[0].title.style.fontSize)
                            : 0) -
                          15
                      );
                  }
                },
              },
            ]),
            $
          );
        })(),
        Ne = (function () {
          function $(s) {
            a(this, $), (this.ctx = s), (this.w = s.w);
            var o = this.w;
            (this.xaxisLabels = o.globals.labels.slice()),
              (this.axesUtils = new xe(s)),
              (this.isRangeBar =
                o.globals.seriesRange.length && o.globals.isBarHorizontal),
              o.globals.timescaleLabels.length > 0 &&
                (this.xaxisLabels = o.globals.timescaleLabels.slice());
          }
          return (
            u($, [
              {
                key: "drawGridArea",
                value: function () {
                  var s =
                      arguments.length > 0 && arguments[0] !== void 0
                        ? arguments[0]
                        : null,
                    o = this.w,
                    c = new K(this.ctx);
                  s === null && (s = c.group({ class: "apexcharts-grid" }));
                  var h = c.drawLine(
                      o.globals.padHorizontal,
                      1,
                      o.globals.padHorizontal,
                      o.globals.gridHeight,
                      "transparent"
                    ),
                    d = c.drawLine(
                      o.globals.padHorizontal,
                      o.globals.gridHeight,
                      o.globals.gridWidth,
                      o.globals.gridHeight,
                      "transparent"
                    );
                  return s.add(d), s.add(h), s;
                },
              },
              {
                key: "drawGrid",
                value: function () {
                  var s = null;
                  return (
                    this.w.globals.axisCharts &&
                      ((s = this.renderGrid()), this.drawGridArea(s.el)),
                    s
                  );
                },
              },
              {
                key: "createGridMask",
                value: function () {
                  var s = this.w,
                    o = s.globals,
                    c = new K(this.ctx),
                    h = Array.isArray(s.config.stroke.width)
                      ? 0
                      : s.config.stroke.width;
                  if (Array.isArray(s.config.stroke.width)) {
                    var d = 0;
                    s.config.stroke.width.forEach(function (_) {
                      d = Math.max(d, _);
                    }),
                      (h = d);
                  }
                  (o.dom.elGridRectMask = document.createElementNS(
                    o.SVGNS,
                    "clipPath"
                  )),
                    o.dom.elGridRectMask.setAttribute(
                      "id",
                      "gridRectMask".concat(o.cuid)
                    ),
                    (o.dom.elGridRectMarkerMask = document.createElementNS(
                      o.SVGNS,
                      "clipPath"
                    )),
                    o.dom.elGridRectMarkerMask.setAttribute(
                      "id",
                      "gridRectMarkerMask".concat(o.cuid)
                    ),
                    (o.dom.elForecastMask = document.createElementNS(
                      o.SVGNS,
                      "clipPath"
                    )),
                    o.dom.elForecastMask.setAttribute(
                      "id",
                      "forecastMask".concat(o.cuid)
                    ),
                    (o.dom.elNonForecastMask = document.createElementNS(
                      o.SVGNS,
                      "clipPath"
                    )),
                    o.dom.elNonForecastMask.setAttribute(
                      "id",
                      "nonForecastMask".concat(o.cuid)
                    );
                  var f = s.config.chart.type,
                    g = 0,
                    y = 0;
                  (f === "bar" ||
                    f === "rangeBar" ||
                    f === "candlestick" ||
                    f === "boxPlot" ||
                    s.globals.comboBarCount > 0) &&
                    s.globals.isXNumeric &&
                    !s.globals.isBarHorizontal &&
                    ((g = s.config.grid.padding.left),
                    (y = s.config.grid.padding.right),
                    o.barPadForNumericAxis > g &&
                      ((g = o.barPadForNumericAxis),
                      (y = o.barPadForNumericAxis))),
                    (o.dom.elGridRect = c.drawRect(
                      -h / 2 - g - 2,
                      -h / 2,
                      o.gridWidth + h + y + g + 4,
                      o.gridHeight + h,
                      0,
                      "#fff"
                    ));
                  var x = s.globals.markers.largestSize + 1;
                  (o.dom.elGridRectMarker = c.drawRect(
                    2 * -x,
                    2 * -x,
                    o.gridWidth + 4 * x,
                    o.gridHeight + 4 * x,
                    0,
                    "#fff"
                  )),
                    o.dom.elGridRectMask.appendChild(o.dom.elGridRect.node),
                    o.dom.elGridRectMarkerMask.appendChild(
                      o.dom.elGridRectMarker.node
                    );
                  var k = o.dom.baseEl.querySelector("defs");
                  k.appendChild(o.dom.elGridRectMask),
                    k.appendChild(o.dom.elForecastMask),
                    k.appendChild(o.dom.elNonForecastMask),
                    k.appendChild(o.dom.elGridRectMarkerMask);
                },
              },
              {
                key: "_drawGridLines",
                value: function (s) {
                  var o = s.i,
                    c = s.x1,
                    h = s.y1,
                    d = s.x2,
                    f = s.y2,
                    g = s.xCount,
                    y = s.parent,
                    x = this.w;
                  if (
                    !(
                      (o === 0 && x.globals.skipFirstTimelinelabel) ||
                      (o === g - 1 &&
                        x.globals.skipLastTimelinelabel &&
                        !x.config.xaxis.labels.formatter) ||
                      x.config.chart.type === "radar"
                    )
                  ) {
                    x.config.grid.xaxis.lines.show &&
                      this._drawGridLine({
                        i: o,
                        x1: c,
                        y1: h,
                        x2: d,
                        y2: f,
                        xCount: g,
                        parent: y,
                      });
                    var k = 0;
                    if (
                      x.globals.hasXaxisGroups &&
                      x.config.xaxis.tickPlacement === "between"
                    ) {
                      var _ = x.globals.groups;
                      if (_) {
                        for (var A = 0, O = 0; A < o && O < _.length; O++)
                          A += _[O].cols;
                        A === o && (k = 0.6 * x.globals.xAxisLabelsHeight);
                      }
                    }
                    new Ie(this.ctx).drawXaxisTicks(
                      c,
                      k,
                      x.globals.dom.elGraphical
                    );
                  }
                },
              },
              {
                key: "_drawGridLine",
                value: function (s) {
                  var o = s.i,
                    c = s.x1,
                    h = s.y1,
                    d = s.x2,
                    f = s.y2,
                    g = s.xCount,
                    y = s.parent,
                    x = this.w,
                    k = !1,
                    _ = y.node.classList.contains(
                      "apexcharts-gridlines-horizontal"
                    ),
                    A = x.config.grid.strokeDashArray,
                    O = x.globals.barPadForNumericAxis;
                  ((h === 0 && f === 0) || (c === 0 && d === 0)) && (k = !0),
                    h === x.globals.gridHeight &&
                      f === x.globals.gridHeight &&
                      (k = !0),
                    !x.globals.isBarHorizontal ||
                      (o !== 0 && o !== g - 1) ||
                      (k = !0);
                  var N = new K(this).drawLine(
                    c - (_ ? O : 0),
                    h,
                    d + (_ ? O : 0),
                    f,
                    x.config.grid.borderColor,
                    A
                  );
                  N.node.classList.add("apexcharts-gridline"),
                    k && x.config.grid.show
                      ? this.elGridBorders.add(N)
                      : y.add(N);
                },
              },
              {
                key: "_drawGridBandRect",
                value: function (s) {
                  var o = s.c,
                    c = s.x1,
                    h = s.y1,
                    d = s.x2,
                    f = s.y2,
                    g = s.type,
                    y = this.w,
                    x = new K(this.ctx),
                    k = y.globals.barPadForNumericAxis;
                  if (g !== "column" || y.config.xaxis.type !== "datetime") {
                    var _ = y.config.grid[g].colors[o],
                      A = x.drawRect(
                        c - (g === "row" ? k : 0),
                        h,
                        d + (g === "row" ? 2 * k : 0),
                        f,
                        0,
                        _,
                        y.config.grid[g].opacity
                      );
                    this.elg.add(A),
                      A.attr(
                        "clip-path",
                        "url(#gridRectMask".concat(y.globals.cuid, ")")
                      ),
                      A.node.classList.add("apexcharts-grid-".concat(g));
                  }
                },
              },
              {
                key: "_drawXYLines",
                value: function (s) {
                  var o = this,
                    c = s.xCount,
                    h = s.tickAmount,
                    d = this.w;
                  if (
                    d.config.grid.xaxis.lines.show ||
                    d.config.xaxis.axisTicks.show
                  ) {
                    var f,
                      g = d.globals.padHorizontal,
                      y = d.globals.gridHeight;
                    d.globals.timescaleLabels.length
                      ? (function (N) {
                          for (
                            var H = N.xC,
                              G = N.x1,
                              te = N.y1,
                              se = N.x2,
                              b = N.y2,
                              C = 0;
                            C < H;
                            C++
                          )
                            (G = o.xaxisLabels[C].position),
                              (se = o.xaxisLabels[C].position),
                              o._drawGridLines({
                                i: C,
                                x1: G,
                                y1: te,
                                x2: se,
                                y2: b,
                                xCount: c,
                                parent: o.elgridLinesV,
                              });
                        })({ xC: c, x1: g, y1: 0, x2: f, y2: y })
                      : (d.globals.isXNumeric &&
                          (c = d.globals.xAxisScale.result.length),
                        (function (N) {
                          for (
                            var H = N.xC,
                              G = N.x1,
                              te = N.y1,
                              se = N.x2,
                              b = N.y2,
                              C = 0;
                            C < H + (d.globals.isXNumeric ? 0 : 1);
                            C++
                          )
                            C === 0 &&
                              H === 1 &&
                              d.globals.dataPoints === 1 &&
                              (se = G = d.globals.gridWidth / 2),
                              o._drawGridLines({
                                i: C,
                                x1: G,
                                y1: te,
                                x2: se,
                                y2: b,
                                xCount: c,
                                parent: o.elgridLinesV,
                              }),
                              (se = G +=
                                d.globals.gridWidth /
                                (d.globals.isXNumeric ? H - 1 : H));
                        })({ xC: c, x1: g, y1: 0, x2: f, y2: y }));
                  }
                  if (d.config.grid.yaxis.lines.show) {
                    var x = 0,
                      k = 0,
                      _ = d.globals.gridWidth,
                      A = h + 1;
                    this.isRangeBar && (A = d.globals.labels.length);
                    for (var O = 0; O < A + (this.isRangeBar ? 1 : 0); O++)
                      this._drawGridLine({
                        i: O,
                        xCount: A + (this.isRangeBar ? 1 : 0),
                        x1: 0,
                        y1: x,
                        x2: _,
                        y2: k,
                        parent: this.elgridLinesH,
                      }),
                        (k = x +=
                          d.globals.gridHeight / (this.isRangeBar ? A : h));
                  }
                },
              },
              {
                key: "_drawInvertedXYLines",
                value: function (s) {
                  var o = s.xCount,
                    c = this.w;
                  if (
                    c.config.grid.xaxis.lines.show ||
                    c.config.xaxis.axisTicks.show
                  )
                    for (
                      var h,
                        d = c.globals.padHorizontal,
                        f = c.globals.gridHeight,
                        g = 0;
                      g < o + 1;
                      g++
                    )
                      c.config.grid.xaxis.lines.show &&
                        this._drawGridLine({
                          i: g,
                          xCount: o + 1,
                          x1: d,
                          y1: 0,
                          x2: h,
                          y2: f,
                          parent: this.elgridLinesV,
                        }),
                        new Ie(this.ctx).drawXaxisTicks(
                          d,
                          0,
                          c.globals.dom.elGraphical
                        ),
                        (h = d = d + c.globals.gridWidth / o + 0.3);
                  if (c.config.grid.yaxis.lines.show)
                    for (
                      var y = 0, x = 0, k = c.globals.gridWidth, _ = 0;
                      _ < c.globals.dataPoints + 1;
                      _++
                    )
                      this._drawGridLine({
                        i: _,
                        xCount: c.globals.dataPoints + 1,
                        x1: 0,
                        y1: y,
                        x2: k,
                        y2: x,
                        parent: this.elgridLinesH,
                      }),
                        (x = y += c.globals.gridHeight / c.globals.dataPoints);
                },
              },
              {
                key: "renderGrid",
                value: function () {
                  var s = this.w,
                    o = new K(this.ctx);
                  (this.elg = o.group({ class: "apexcharts-grid" })),
                    (this.elgridLinesH = o.group({
                      class: "apexcharts-gridlines-horizontal",
                    })),
                    (this.elgridLinesV = o.group({
                      class: "apexcharts-gridlines-vertical",
                    })),
                    (this.elGridBorders = o.group({
                      class: "apexcharts-grid-borders",
                    })),
                    this.elg.add(this.elgridLinesH),
                    this.elg.add(this.elgridLinesV),
                    s.config.grid.show ||
                      (this.elgridLinesV.hide(),
                      this.elgridLinesH.hide(),
                      this.elGridBorders.hide());
                  for (
                    var c,
                      h = s.globals.yAxisScale.length
                        ? s.globals.yAxisScale[0].result.length - 1
                        : 5,
                      d = 0;
                    d < s.globals.series.length &&
                    (s.globals.yAxisScale[d] !== void 0 &&
                      (h = s.globals.yAxisScale[d].result.length - 1),
                    !(h > 2));
                    d++
                  );
                  return (
                    !s.globals.isBarHorizontal || this.isRangeBar
                      ? ((c = this.xaxisLabels.length),
                        this.isRangeBar &&
                          (c--,
                          (h = s.globals.labels.length),
                          s.config.xaxis.tickAmount &&
                            s.config.xaxis.labels.formatter &&
                            (c = s.config.xaxis.tickAmount)),
                        this._drawXYLines({ xCount: c, tickAmount: h }))
                      : ((c = h),
                        (h = s.globals.xTickAmount),
                        this._drawInvertedXYLines({
                          xCount: c,
                          tickAmount: h,
                        })),
                    this.drawGridBands(c, h),
                    {
                      el: this.elg,
                      elGridBorders: this.elGridBorders,
                      xAxisTickWidth: s.globals.gridWidth / c,
                    }
                  );
                },
              },
              {
                key: "drawGridBands",
                value: function (s, o) {
                  var c = this.w;
                  if (
                    c.config.grid.row.colors !== void 0 &&
                    c.config.grid.row.colors.length > 0
                  )
                    for (
                      var h = 0,
                        d = c.globals.gridHeight / o,
                        f = c.globals.gridWidth,
                        g = 0,
                        y = 0;
                      g < o;
                      g++, y++
                    )
                      y >= c.config.grid.row.colors.length && (y = 0),
                        this._drawGridBandRect({
                          c: y,
                          x1: 0,
                          y1: h,
                          x2: f,
                          y2: d,
                          type: "row",
                        }),
                        (h += c.globals.gridHeight / o);
                  if (
                    c.config.grid.column.colors !== void 0 &&
                    c.config.grid.column.colors.length > 0
                  )
                    for (
                      var x =
                          c.globals.isBarHorizontal ||
                          (c.config.xaxis.type !== "category" &&
                            !c.config.xaxis.convertedCatToNumeric)
                            ? s
                            : s - 1,
                        k = c.globals.padHorizontal,
                        _ = c.globals.padHorizontal + c.globals.gridWidth / x,
                        A = c.globals.gridHeight,
                        O = 0,
                        N = 0;
                      O < s;
                      O++, N++
                    )
                      N >= c.config.grid.column.colors.length && (N = 0),
                        this._drawGridBandRect({
                          c: N,
                          x1: k,
                          y1: 0,
                          x2: _,
                          y2: A,
                          type: "column",
                        }),
                        (k += c.globals.gridWidth / x);
                },
              },
            ]),
            $
          );
        })(),
        oe = (function () {
          function $(s) {
            a(this, $), (this.ctx = s), (this.w = s.w);
          }
          return (
            u($, [
              {
                key: "niceScale",
                value: function (s, o) {
                  var c =
                      arguments.length > 2 && arguments[2] !== void 0
                        ? arguments[2]
                        : 10,
                    h =
                      arguments.length > 3 && arguments[3] !== void 0
                        ? arguments[3]
                        : 0,
                    d = arguments.length > 4 ? arguments[4] : void 0,
                    f = this.w,
                    g = Math.abs(o - s);
                  if (
                    ((c = this._adjustTicksForSmallRange(c, h, g)) ===
                      "dataPoints" && (c = f.globals.dataPoints - 1),
                    (s === Number.MIN_VALUE && o === 0) ||
                      (!B.isNumber(s) && !B.isNumber(o)) ||
                      (s === Number.MIN_VALUE && o === -Number.MAX_VALUE))
                  )
                    return (s = 0), (o = c), this.linearScale(s, o, c);
                  s > o
                    ? (console.warn("axis.min cannot be greater than axis.max"),
                      (o = s + 0.1))
                    : s === o &&
                      ((s = s === 0 ? 0 : s - 0.5),
                      (o = o === 0 ? 2 : o + 0.5));
                  var y = [];
                  g < 1 &&
                    d &&
                    (f.config.chart.type === "candlestick" ||
                      f.config.series[h].type === "candlestick" ||
                      f.config.chart.type === "boxPlot" ||
                      f.config.series[h].type === "boxPlot" ||
                      f.globals.isRangeData) &&
                    (o *= 1.01);
                  var x = c + 1;
                  x < 2 ? (x = 2) : x > 2 && (x -= 2);
                  var k = g / x,
                    _ = Math.floor(B.log10(k)),
                    A = Math.pow(10, _),
                    O = Math.round(k / A);
                  O < 1 && (O = 1);
                  var N = O * A,
                    H = N * Math.floor(s / N),
                    G = N * Math.ceil(o / N),
                    te = H;
                  if (d && g > 2) {
                    for (; y.push(B.stripNumber(te, 7)), !((te += N) > G); );
                    return {
                      result: y,
                      niceMin: y[0],
                      niceMax: y[y.length - 1],
                    };
                  }
                  var se = s;
                  (y = []).push(B.stripNumber(se, 7));
                  for (var b = Math.abs(o - s) / c, C = 0; C <= c; C++)
                    (se += b), y.push(se);
                  return (
                    y[y.length - 2] >= o && y.pop(),
                    { result: y, niceMin: y[0], niceMax: y[y.length - 1] }
                  );
                },
              },
              {
                key: "linearScale",
                value: function (s, o) {
                  var c =
                      arguments.length > 2 && arguments[2] !== void 0
                        ? arguments[2]
                        : 10,
                    h = arguments.length > 3 ? arguments[3] : void 0,
                    d = Math.abs(o - s);
                  (c = this._adjustTicksForSmallRange(c, h, d)) ===
                    "dataPoints" && (c = this.w.globals.dataPoints - 1);
                  var f = d / c;
                  c === Number.MAX_VALUE && ((c = 10), (f = 1));
                  for (var g = [], y = s; c >= 0; )
                    g.push(y), (y += f), (c -= 1);
                  return { result: g, niceMin: g[0], niceMax: g[g.length - 1] };
                },
              },
              {
                key: "logarithmicScaleNice",
                value: function (s, o, c) {
                  o <= 0 && (o = Math.max(s, c)),
                    s <= 0 && (s = Math.min(o, c));
                  for (
                    var h = [],
                      d = Math.ceil(Math.log(o) / Math.log(c) + 1),
                      f = Math.floor(Math.log(s) / Math.log(c));
                    f < d;
                    f++
                  )
                    h.push(Math.pow(c, f));
                  return { result: h, niceMin: h[0], niceMax: h[h.length - 1] };
                },
              },
              {
                key: "logarithmicScale",
                value: function (s, o, c) {
                  o <= 0 && (o = Math.max(s, c)),
                    s <= 0 && (s = Math.min(o, c));
                  for (
                    var h = [],
                      d = Math.log(o) / Math.log(c),
                      f = Math.log(s) / Math.log(c),
                      g = d - f,
                      y = Math.round(g),
                      x = g / y,
                      k = 0,
                      _ = f;
                    k < y;
                    k++, _ += x
                  )
                    h.push(Math.pow(c, _));
                  return (
                    h.push(Math.pow(c, d)),
                    { result: h, niceMin: s, niceMax: o }
                  );
                },
              },
              {
                key: "_adjustTicksForSmallRange",
                value: function (s, o, c) {
                  var h = s;
                  if (
                    o !== void 0 &&
                    this.w.config.yaxis[o].labels.formatter &&
                    this.w.config.yaxis[o].tickAmount === void 0
                  ) {
                    var d = Number(this.w.config.yaxis[o].labels.formatter(1));
                    B.isNumber(d) &&
                      this.w.globals.yValueDecimal === 0 &&
                      (h = Math.ceil(c));
                  }
                  return h < s ? h : s;
                },
              },
              {
                key: "setYScaleForIndex",
                value: function (s, o, c) {
                  var h = this.w.globals,
                    d = this.w.config,
                    f = h.isBarHorizontal ? d.xaxis : d.yaxis[s];
                  h.yAxisScale[s] === void 0 && (h.yAxisScale[s] = []);
                  var g = Math.abs(c - o);
                  if (
                    (f.logarithmic && g <= 5 && (h.invalidLogScale = !0),
                    f.logarithmic && g > 5)
                  )
                    (h.allSeriesCollapsed = !1),
                      (h.yAxisScale[s] = this.logarithmicScale(
                        o,
                        c,
                        f.logBase
                      )),
                      (h.yAxisScale[s] = f.forceNiceScale
                        ? this.logarithmicScaleNice(o, c, f.logBase)
                        : this.logarithmicScale(o, c, f.logBase));
                  else if (c !== -Number.MAX_VALUE && B.isNumber(c))
                    if (
                      ((h.allSeriesCollapsed = !1),
                      (f.min === void 0 && f.max === void 0) ||
                        f.forceNiceScale)
                    ) {
                      var y =
                        (d.yaxis[s].max === void 0 &&
                          d.yaxis[s].min === void 0) ||
                        d.yaxis[s].forceNiceScale;
                      h.yAxisScale[s] = this.niceScale(
                        o,
                        c,
                        f.tickAmount
                          ? f.tickAmount
                          : g < 5 && g > 1
                          ? g + 1
                          : 5,
                        s,
                        y
                      );
                    } else
                      h.yAxisScale[s] = this.linearScale(o, c, f.tickAmount, s);
                  else h.yAxisScale[s] = this.linearScale(0, 5, 5);
                },
              },
              {
                key: "setXScale",
                value: function (s, o) {
                  var c = this.w,
                    h = c.globals,
                    d = c.config.xaxis,
                    f = Math.abs(o - s);
                  return (
                    o !== -Number.MAX_VALUE && B.isNumber(o)
                      ? (h.xAxisScale = this.linearScale(
                          s,
                          o,
                          d.tickAmount
                            ? d.tickAmount
                            : f < 5 && f > 1
                            ? f + 1
                            : 5,
                          0
                        ))
                      : (h.xAxisScale = this.linearScale(0, 5, 5)),
                    h.xAxisScale
                  );
                },
              },
              {
                key: "setMultipleYScales",
                value: function () {
                  var s = this,
                    o = this.w.globals,
                    c = this.w.config,
                    h = o.minYArr.concat([]),
                    d = o.maxYArr.concat([]),
                    f = [];
                  c.yaxis.forEach(function (g, y) {
                    var x = y;
                    c.series.forEach(function (A, O) {
                      A.name === g.seriesName &&
                        ((x = O),
                        y !== O
                          ? f.push({
                              index: O,
                              similarIndex: y,
                              alreadyExists: !0,
                            })
                          : f.push({ index: O }));
                    });
                    var k = h[x],
                      _ = d[x];
                    s.setYScaleForIndex(y, k, _);
                  }),
                    this.sameScaleInMultipleAxes(h, d, f);
                },
              },
              {
                key: "sameScaleInMultipleAxes",
                value: function (s, o, c) {
                  var h = this,
                    d = this.w.config,
                    f = this.w.globals,
                    g = [];
                  c.forEach(function (H) {
                    H.alreadyExists &&
                      (g[H.index] === void 0 && (g[H.index] = []),
                      g[H.index].push(H.index),
                      g[H.index].push(H.similarIndex));
                  }),
                    (f.yAxisSameScaleIndices = g),
                    g.forEach(function (H, G) {
                      g.forEach(function (te, se) {
                        var b, C;
                        G !== se &&
                          ((b = H),
                          (C = te),
                          b.filter(function (F) {
                            return C.indexOf(F) !== -1;
                          })).length > 0 &&
                          (g[G] = g[G].concat(g[se]));
                      });
                    });
                  var y = g
                    .map(function (H) {
                      return H.filter(function (G, te) {
                        return H.indexOf(G) === te;
                      });
                    })
                    .map(function (H) {
                      return H.sort();
                    });
                  g = g.filter(function (H) {
                    return !!H;
                  });
                  var x = y.slice(),
                    k = x.map(function (H) {
                      return JSON.stringify(H);
                    });
                  x = x.filter(function (H, G) {
                    return k.indexOf(JSON.stringify(H)) === G;
                  });
                  var _ = [],
                    A = [];
                  s.forEach(function (H, G) {
                    x.forEach(function (te, se) {
                      te.indexOf(G) > -1 &&
                        (_[se] === void 0 && ((_[se] = []), (A[se] = [])),
                        _[se].push({ key: G, value: H }),
                        A[se].push({ key: G, value: o[G] }));
                    });
                  });
                  var O = Array.apply(null, Array(x.length)).map(
                      Number.prototype.valueOf,
                      Number.MIN_VALUE
                    ),
                    N = Array.apply(null, Array(x.length)).map(
                      Number.prototype.valueOf,
                      -Number.MAX_VALUE
                    );
                  _.forEach(function (H, G) {
                    H.forEach(function (te, se) {
                      O[G] = Math.min(te.value, O[G]);
                    });
                  }),
                    A.forEach(function (H, G) {
                      H.forEach(function (te, se) {
                        N[G] = Math.max(te.value, N[G]);
                      });
                    }),
                    s.forEach(function (H, G) {
                      A.forEach(function (te, se) {
                        var b = O[se],
                          C = N[se];
                        d.chart.stacked &&
                          ((C = 0),
                          te.forEach(function (F, ee) {
                            F.value !== -Number.MAX_VALUE && (C += F.value),
                              b !== Number.MIN_VALUE && (b += _[se][ee].value);
                          })),
                          te.forEach(function (F, ee) {
                            te[ee].key === G &&
                              (d.yaxis[G].min !== void 0 &&
                                (b =
                                  typeof d.yaxis[G].min == "function"
                                    ? d.yaxis[G].min(f.minY)
                                    : d.yaxis[G].min),
                              d.yaxis[G].max !== void 0 &&
                                (C =
                                  typeof d.yaxis[G].max == "function"
                                    ? d.yaxis[G].max(f.maxY)
                                    : d.yaxis[G].max),
                              h.setYScaleForIndex(G, b, C));
                          });
                      });
                    });
                },
              },
              {
                key: "autoScaleY",
                value: function (s, o, c) {
                  s || (s = this);
                  var h = s.w;
                  if (
                    h.globals.isMultipleYAxis ||
                    h.globals.collapsedSeries.length
                  )
                    return (
                      console.warn(
                        "autoScaleYaxis is not supported in a multi-yaxis chart."
                      ),
                      o
                    );
                  var d = h.globals.seriesX[0],
                    f = h.config.chart.stacked;
                  return (
                    o.forEach(function (g, y) {
                      for (var x = 0, k = 0; k < d.length; k++)
                        if (d[k] >= c.xaxis.min) {
                          x = k;
                          break;
                        }
                      var _,
                        A,
                        O = h.globals.minYArr[y],
                        N = h.globals.maxYArr[y],
                        H = h.globals.stackedSeriesTotals;
                      h.globals.series.forEach(function (G, te) {
                        var se = G[x];
                        f
                          ? ((se = H[x]),
                            (_ = A = se),
                            H.forEach(function (b, C) {
                              d[C] <= c.xaxis.max &&
                                d[C] >= c.xaxis.min &&
                                (b > A && b !== null && (A = b),
                                G[C] < _ && G[C] !== null && (_ = G[C]));
                            }))
                          : ((_ = A = se),
                            G.forEach(function (b, C) {
                              if (d[C] <= c.xaxis.max && d[C] >= c.xaxis.min) {
                                var F = b,
                                  ee = b;
                                h.globals.series.forEach(function (ue, he) {
                                  b !== null &&
                                    ((F = Math.min(ue[C], F)),
                                    (ee = Math.max(ue[C], ee)));
                                }),
                                  ee > A && ee !== null && (A = ee),
                                  F < _ && F !== null && (_ = F);
                              }
                            })),
                          _ === void 0 && A === void 0 && ((_ = O), (A = N)),
                          (A *= A < 0 ? 0.9 : 1.1),
                          (_ *= _ < 0 ? 1.1 : 0.9) === 0 &&
                            A === 0 &&
                            ((_ = -1), (A = 1)),
                          A < 0 && A < N && (A = N),
                          _ < 0 && _ > O && (_ = O),
                          o.length > 1
                            ? ((o[te].min = g.min === void 0 ? _ : g.min),
                              (o[te].max = g.max === void 0 ? A : g.max))
                            : ((o[0].min = g.min === void 0 ? _ : g.min),
                              (o[0].max = g.max === void 0 ? A : g.max));
                      });
                    }),
                    o
                  );
                },
              },
            ]),
            $
          );
        })(),
        W = (function () {
          function $(s) {
            a(this, $),
              (this.ctx = s),
              (this.w = s.w),
              (this.scales = new oe(s));
          }
          return (
            u($, [
              {
                key: "init",
                value: function () {
                  this.setYRange(), this.setXRange(), this.setZRange();
                },
              },
              {
                key: "getMinYMaxY",
                value: function (s) {
                  var o =
                      arguments.length > 1 && arguments[1] !== void 0
                        ? arguments[1]
                        : Number.MAX_VALUE,
                    c =
                      arguments.length > 2 && arguments[2] !== void 0
                        ? arguments[2]
                        : -Number.MAX_VALUE,
                    h =
                      arguments.length > 3 && arguments[3] !== void 0
                        ? arguments[3]
                        : null,
                    d = this.w.config,
                    f = this.w.globals,
                    g = -Number.MAX_VALUE,
                    y = Number.MIN_VALUE;
                  h === null && (h = s + 1);
                  var x = f.series,
                    k = x,
                    _ = x;
                  d.chart.type === "candlestick"
                    ? ((k = f.seriesCandleL), (_ = f.seriesCandleH))
                    : d.chart.type === "boxPlot"
                    ? ((k = f.seriesCandleO), (_ = f.seriesCandleC))
                    : f.isRangeData &&
                      ((k = f.seriesRangeStart), (_ = f.seriesRangeEnd));
                  for (var A = s; A < h; A++) {
                    (f.dataPoints = Math.max(f.dataPoints, x[A].length)),
                      f.categoryLabels.length &&
                        (f.dataPoints = f.categoryLabels.filter(function (H) {
                          return H !== void 0;
                        }).length),
                      f.labels.length &&
                        d.xaxis.type !== "datetime" &&
                        f.series.reduce(function (H, G) {
                          return H + G.length;
                        }, 0) !== 0 &&
                        (f.dataPoints = Math.max(
                          f.dataPoints,
                          f.labels.length
                        ));
                    for (var O = 0; O < f.series[A].length; O++) {
                      var N = x[A][O];
                      N !== null && B.isNumber(N)
                        ? (_[A][O] !== void 0 &&
                            ((g = Math.max(g, _[A][O])),
                            (o = Math.min(o, _[A][O]))),
                          k[A][O] !== void 0 &&
                            ((o = Math.min(o, k[A][O])),
                            (c = Math.max(c, k[A][O]))),
                          (this.w.config.chart.type !== "candlestick" &&
                            this.w.config.chart.type !== "boxPlot" &&
                            this.w.config.chart.type === "rangeArea" &&
                            this.w.config.chart.type === "rangeBar") ||
                            ((this.w.config.chart.type !== "candlestick" &&
                              this.w.config.chart.type !== "boxPlot") ||
                              (f.seriesCandleC[A][O] !== void 0 &&
                                ((g = Math.max(g, f.seriesCandleO[A][O])),
                                (g = Math.max(g, f.seriesCandleH[A][O])),
                                (g = Math.max(g, f.seriesCandleL[A][O])),
                                (g = Math.max(g, f.seriesCandleC[A][O])),
                                this.w.config.chart.type === "boxPlot" &&
                                  (g = Math.max(g, f.seriesCandleM[A][O])))),
                            !d.series[A].type ||
                              (d.series[A].type === "candlestick" &&
                                d.series[A].type === "boxPlot" &&
                                d.series[A].type === "rangeArea" &&
                                d.series[A].type === "rangeBar") ||
                              ((g = Math.max(g, f.series[A][O])),
                              (o = Math.min(o, f.series[A][O]))),
                            (c = g)),
                          f.seriesGoals[A] &&
                            f.seriesGoals[A][O] &&
                            Array.isArray(f.seriesGoals[A][O]) &&
                            f.seriesGoals[A][O].forEach(function (H) {
                              y !== Number.MIN_VALUE &&
                                ((y = Math.min(y, H.value)), (o = y)),
                                (g = Math.max(g, H.value)),
                                (c = g);
                            }),
                          B.isFloat(N) &&
                            ((N = B.noExponents(N)),
                            (f.yValueDecimal = Math.max(
                              f.yValueDecimal,
                              N.toString().split(".")[1].length
                            ))),
                          y > k[A][O] && k[A][O] < 0 && (y = k[A][O]))
                        : (f.hasNullValues = !0);
                    }
                  }
                  return (
                    d.chart.type === "rangeBar" &&
                      f.seriesRangeStart.length &&
                      f.isBarHorizontal &&
                      (y = o),
                    d.chart.type === "bar" &&
                      (y < 0 && g < 0 && (g = 0),
                      y === Number.MIN_VALUE && (y = 0)),
                    { minY: y, maxY: g, lowestY: o, highestY: c }
                  );
                },
              },
              {
                key: "setYRange",
                value: function () {
                  var s = this.w.globals,
                    o = this.w.config;
                  (s.maxY = -Number.MAX_VALUE), (s.minY = Number.MIN_VALUE);
                  var c = Number.MAX_VALUE;
                  if (s.isMultipleYAxis)
                    for (var h = 0; h < s.series.length; h++) {
                      var d = this.getMinYMaxY(h, c, null, h + 1);
                      s.minYArr.push(d.minY),
                        s.maxYArr.push(d.maxY),
                        (c = d.lowestY);
                    }
                  var f = this.getMinYMaxY(0, c, null, s.series.length);
                  if (
                    ((s.minY = f.minY),
                    (s.maxY = f.maxY),
                    (c = f.lowestY),
                    o.chart.stacked && this._setStackedMinMax(),
                    (o.chart.type === "line" ||
                      o.chart.type === "area" ||
                      o.chart.type === "candlestick" ||
                      o.chart.type === "boxPlot" ||
                      (o.chart.type === "rangeBar" && !s.isBarHorizontal)) &&
                      s.minY === Number.MIN_VALUE &&
                      c !== -Number.MAX_VALUE &&
                      c !== s.maxY)
                  ) {
                    var g = s.maxY - c;
                    ((c >= 0 && c <= 10) ||
                      o.yaxis[0].min !== void 0 ||
                      o.yaxis[0].max !== void 0) &&
                      (g = 0),
                      (s.minY = c - (5 * g) / 100),
                      c > 0 && s.minY < 0 && (s.minY = 0),
                      (s.maxY = s.maxY + (5 * g) / 100);
                  }
                  return (
                    o.yaxis.forEach(function (y, x) {
                      y.max !== void 0 &&
                        (typeof y.max == "number"
                          ? (s.maxYArr[x] = y.max)
                          : typeof y.max == "function" &&
                            (s.maxYArr[x] = y.max(
                              s.isMultipleYAxis ? s.maxYArr[x] : s.maxY
                            )),
                        (s.maxY = s.maxYArr[x])),
                        y.min !== void 0 &&
                          (typeof y.min == "number"
                            ? (s.minYArr[x] = y.min)
                            : typeof y.min == "function" &&
                              (s.minYArr[x] = y.min(
                                s.isMultipleYAxis
                                  ? s.minYArr[x] === Number.MIN_VALUE
                                    ? 0
                                    : s.minYArr[x]
                                  : s.minY
                              )),
                          (s.minY = s.minYArr[x]));
                    }),
                    s.isBarHorizontal &&
                      ["min", "max"].forEach(function (y) {
                        o.xaxis[y] !== void 0 &&
                          typeof o.xaxis[y] == "number" &&
                          (y === "min"
                            ? (s.minY = o.xaxis[y])
                            : (s.maxY = o.xaxis[y]));
                      }),
                    s.isMultipleYAxis
                      ? (this.scales.setMultipleYScales(),
                        (s.minY = c),
                        s.yAxisScale.forEach(function (y, x) {
                          (s.minYArr[x] = y.niceMin),
                            (s.maxYArr[x] = y.niceMax);
                        }))
                      : (this.scales.setYScaleForIndex(0, s.minY, s.maxY),
                        (s.minY = s.yAxisScale[0].niceMin),
                        (s.maxY = s.yAxisScale[0].niceMax),
                        (s.minYArr[0] = s.yAxisScale[0].niceMin),
                        (s.maxYArr[0] = s.yAxisScale[0].niceMax)),
                    {
                      minY: s.minY,
                      maxY: s.maxY,
                      minYArr: s.minYArr,
                      maxYArr: s.maxYArr,
                      yAxisScale: s.yAxisScale,
                    }
                  );
                },
              },
              {
                key: "setXRange",
                value: function () {
                  var s = this.w.globals,
                    o = this.w.config,
                    c =
                      o.xaxis.type === "numeric" ||
                      o.xaxis.type === "datetime" ||
                      (o.xaxis.type === "category" && !s.noLabelsProvided) ||
                      s.noLabelsProvided ||
                      s.isXNumeric;
                  if (
                    (s.isXNumeric &&
                      (function () {
                        for (var g = 0; g < s.series.length; g++)
                          if (s.labels[g])
                            for (var y = 0; y < s.labels[g].length; y++)
                              s.labels[g][y] !== null &&
                                B.isNumber(s.labels[g][y]) &&
                                ((s.maxX = Math.max(s.maxX, s.labels[g][y])),
                                (s.initialMaxX = Math.max(
                                  s.maxX,
                                  s.labels[g][y]
                                )),
                                (s.minX = Math.min(s.minX, s.labels[g][y])),
                                (s.initialMinX = Math.min(
                                  s.minX,
                                  s.labels[g][y]
                                )));
                      })(),
                    s.noLabelsProvided &&
                      o.xaxis.categories.length === 0 &&
                      ((s.maxX = s.labels[s.labels.length - 1]),
                      (s.initialMaxX = s.labels[s.labels.length - 1]),
                      (s.minX = 1),
                      (s.initialMinX = 1)),
                    s.isXNumeric || s.noLabelsProvided || s.dataFormatXNumeric)
                  ) {
                    var h;
                    if (
                      (o.xaxis.tickAmount === void 0
                        ? ((h = Math.round(s.svgWidth / 150)),
                          o.xaxis.type === "numeric" &&
                            s.dataPoints < 30 &&
                            (h = s.dataPoints - 1),
                          h > s.dataPoints &&
                            s.dataPoints !== 0 &&
                            (h = s.dataPoints - 1))
                        : o.xaxis.tickAmount === "dataPoints"
                        ? (s.series.length > 1 &&
                            (h = s.series[s.maxValsInArrayIndex].length - 1),
                          s.isXNumeric && (h = s.maxX - s.minX - 1))
                        : (h = o.xaxis.tickAmount),
                      (s.xTickAmount = h),
                      o.xaxis.max !== void 0 &&
                        typeof o.xaxis.max == "number" &&
                        (s.maxX = o.xaxis.max),
                      o.xaxis.min !== void 0 &&
                        typeof o.xaxis.min == "number" &&
                        (s.minX = o.xaxis.min),
                      o.xaxis.range !== void 0 &&
                        (s.minX = s.maxX - o.xaxis.range),
                      s.minX !== Number.MAX_VALUE &&
                        s.maxX !== -Number.MAX_VALUE)
                    )
                      if (
                        o.xaxis.convertedCatToNumeric &&
                        !s.dataFormatXNumeric
                      ) {
                        for (var d = [], f = s.minX - 1; f < s.maxX; f++)
                          d.push(f + 1);
                        s.xAxisScale = {
                          result: d,
                          niceMin: d[0],
                          niceMax: d[d.length - 1],
                        };
                      } else
                        s.xAxisScale = this.scales.setXScale(s.minX, s.maxX);
                    else
                      (s.xAxisScale = this.scales.linearScale(1, h, h)),
                        s.noLabelsProvided &&
                          s.labels.length > 0 &&
                          ((s.xAxisScale = this.scales.linearScale(
                            1,
                            s.labels.length,
                            h - 1
                          )),
                          (s.seriesX = s.labels.slice()));
                    c && (s.labels = s.xAxisScale.result.slice());
                  }
                  return (
                    s.isBarHorizontal &&
                      s.labels.length &&
                      (s.xTickAmount = s.labels.length),
                    this._handleSingleDataPoint(),
                    this._getMinXDiff(),
                    { minX: s.minX, maxX: s.maxX }
                  );
                },
              },
              {
                key: "setZRange",
                value: function () {
                  var s = this.w.globals;
                  if (s.isDataXYZ) {
                    for (var o = 0; o < s.series.length; o++)
                      if (s.seriesZ[o] !== void 0)
                        for (var c = 0; c < s.seriesZ[o].length; c++)
                          s.seriesZ[o][c] !== null &&
                            B.isNumber(s.seriesZ[o][c]) &&
                            ((s.maxZ = Math.max(s.maxZ, s.seriesZ[o][c])),
                            (s.minZ = Math.min(s.minZ, s.seriesZ[o][c])));
                  }
                },
              },
              {
                key: "_handleSingleDataPoint",
                value: function () {
                  var s = this.w.globals,
                    o = this.w.config;
                  if (s.minX === s.maxX) {
                    var c = new P(this.ctx);
                    if (o.xaxis.type === "datetime") {
                      var h = c.getDate(s.minX);
                      o.xaxis.labels.datetimeUTC
                        ? h.setUTCDate(h.getUTCDate() - 2)
                        : h.setDate(h.getDate() - 2),
                        (s.minX = new Date(h).getTime());
                      var d = c.getDate(s.maxX);
                      o.xaxis.labels.datetimeUTC
                        ? d.setUTCDate(d.getUTCDate() + 2)
                        : d.setDate(d.getDate() + 2),
                        (s.maxX = new Date(d).getTime());
                    } else
                      (o.xaxis.type === "numeric" ||
                        (o.xaxis.type === "category" && !s.noLabelsProvided)) &&
                        ((s.minX = s.minX - 2),
                        (s.initialMinX = s.minX),
                        (s.maxX = s.maxX + 2),
                        (s.initialMaxX = s.maxX));
                  }
                },
              },
              {
                key: "_getMinXDiff",
                value: function () {
                  var s = this.w.globals;
                  s.isXNumeric &&
                    s.seriesX.forEach(function (o, c) {
                      o.length === 1 &&
                        o.push(
                          s.seriesX[s.maxValsInArrayIndex][
                            s.seriesX[s.maxValsInArrayIndex].length - 1
                          ]
                        );
                      var h = o.slice();
                      h.sort(function (d, f) {
                        return d - f;
                      }),
                        h.forEach(function (d, f) {
                          if (f > 0) {
                            var g = d - h[f - 1];
                            g > 0 && (s.minXDiff = Math.min(g, s.minXDiff));
                          }
                        }),
                        (s.dataPoints !== 1 &&
                          s.minXDiff !== Number.MAX_VALUE) ||
                          (s.minXDiff = 0.5);
                    });
                },
              },
              {
                key: "_setStackedMinMax",
                value: function () {
                  var s = this,
                    o = this.w.globals;
                  if (o.series.length) {
                    var c = o.seriesGroups;
                    c.length ||
                      (c = [
                        this.w.config.series.map(function (f) {
                          return f.name;
                        }),
                      ]);
                    var h = {},
                      d = {};
                    c.forEach(function (f) {
                      (h[f] = []),
                        (d[f] = []),
                        s.w.config.series
                          .map(function (g, y) {
                            return f.indexOf(g.name) > -1 ? y : null;
                          })
                          .filter(function (g) {
                            return g !== null;
                          })
                          .forEach(function (g) {
                            for (
                              var y = 0;
                              y < o.series[o.maxValsInArrayIndex].length;
                              y++
                            )
                              h[f][y] === void 0 &&
                                ((h[f][y] = 0), (d[f][y] = 0)),
                                o.series[g][y] !== null &&
                                  B.isNumber(o.series[g][y]) &&
                                  (o.series[g][y] > 0
                                    ? (h[f][y] +=
                                        parseFloat(o.series[g][y]) + 1e-4)
                                    : (d[f][y] += parseFloat(o.series[g][y])));
                          });
                    }),
                      Object.entries(h).forEach(function (f) {
                        var g = D(f, 1)[0];
                        h[g].forEach(function (y, x) {
                          (o.maxY = Math.max(o.maxY, h[g][x])),
                            (o.minY = Math.min(o.minY, d[g][x]));
                        });
                      });
                  }
                },
              },
            ]),
            $
          );
        })(),
        Q = (function () {
          function $(s, o) {
            a(this, $), (this.ctx = s), (this.elgrid = o), (this.w = s.w);
            var c = this.w;
            (this.xaxisFontSize = c.config.xaxis.labels.style.fontSize),
              (this.axisFontFamily = c.config.xaxis.labels.style.fontFamily),
              (this.xaxisForeColors = c.config.xaxis.labels.style.colors),
              (this.isCategoryBarHorizontal =
                c.config.chart.type === "bar" &&
                c.config.plotOptions.bar.horizontal),
              (this.xAxisoffX = 0),
              c.config.xaxis.position === "bottom" &&
                (this.xAxisoffX = c.globals.gridHeight),
              (this.drawnLabels = []),
              (this.axesUtils = new xe(s));
          }
          return (
            u($, [
              {
                key: "drawYaxis",
                value: function (s) {
                  var o = this,
                    c = this.w,
                    h = new K(this.ctx),
                    d = c.config.yaxis[s].labels.style,
                    f = d.fontSize,
                    g = d.fontFamily,
                    y = d.fontWeight,
                    x = h.group({
                      class: "apexcharts-yaxis",
                      rel: s,
                      transform:
                        "translate(" + c.globals.translateYAxisX[s] + ", 0)",
                    });
                  if (this.axesUtils.isYAxisHidden(s)) return x;
                  var k = h.group({ class: "apexcharts-yaxis-texts-g" });
                  x.add(k);
                  var _ = c.globals.yAxisScale[s].result.length - 1,
                    A = c.globals.gridHeight / _,
                    O = c.globals.translateY,
                    N = c.globals.yLabelFormatters[s],
                    H = c.globals.yAxisScale[s].result.slice();
                  H = this.axesUtils.checkForReversedLabels(s, H);
                  var G = "";
                  if (c.config.yaxis[s].labels.show)
                    for (
                      var te = function (we) {
                          var Ae = H[we];
                          Ae = N(Ae, we, c);
                          var Le = c.config.yaxis[s].labels.padding;
                          c.config.yaxis[s].opposite &&
                            c.config.yaxis.length !== 0 &&
                            (Le *= -1);
                          var ze = "end";
                          c.config.yaxis[s].opposite && (ze = "start"),
                            c.config.yaxis[s].labels.align === "left"
                              ? (ze = "start")
                              : c.config.yaxis[s].labels.align === "center"
                              ? (ze = "middle")
                              : c.config.yaxis[s].labels.align === "right" &&
                                (ze = "end");
                          var De = o.axesUtils.getYAxisForeColor(d.colors, s),
                            Ge = h.drawText({
                              x: Le,
                              y:
                                O +
                                _ / 10 +
                                c.config.yaxis[s].labels.offsetY +
                                1,
                              text: Ae,
                              textAnchor: ze,
                              fontSize: f,
                              fontFamily: g,
                              fontWeight: y,
                              maxWidth: c.config.yaxis[s].labels.maxWidth,
                              foreColor: Array.isArray(De) ? De[we] : De,
                              isPlainText: !1,
                              cssClass: "apexcharts-yaxis-label " + d.cssClass,
                            });
                          we === _ && (G = Ge), k.add(Ge);
                          var it = document.createElementNS(
                            c.globals.SVGNS,
                            "title"
                          );
                          if (
                            ((it.textContent = Array.isArray(Ae)
                              ? Ae.join(" ")
                              : Ae),
                            Ge.node.appendChild(it),
                            c.config.yaxis[s].labels.rotate !== 0)
                          ) {
                            var St = h.rotateAroundCenter(G.node),
                              Lt = h.rotateAroundCenter(Ge.node);
                            Ge.node.setAttribute(
                              "transform",
                              "rotate("
                                .concat(c.config.yaxis[s].labels.rotate, " ")
                                .concat(St.x, " ")
                                .concat(Lt.y, ")")
                            );
                          }
                          O += A;
                        },
                        se = _;
                      se >= 0;
                      se--
                    )
                      te(se);
                  if (c.config.yaxis[s].title.text !== void 0) {
                    var b = h.group({ class: "apexcharts-yaxis-title" }),
                      C = 0;
                    c.config.yaxis[s].opposite &&
                      (C = c.globals.translateYAxisX[s]);
                    var F = h.drawText({
                      x: C,
                      y:
                        c.globals.gridHeight / 2 +
                        c.globals.translateY +
                        c.config.yaxis[s].title.offsetY,
                      text: c.config.yaxis[s].title.text,
                      textAnchor: "end",
                      foreColor: c.config.yaxis[s].title.style.color,
                      fontSize: c.config.yaxis[s].title.style.fontSize,
                      fontWeight: c.config.yaxis[s].title.style.fontWeight,
                      fontFamily: c.config.yaxis[s].title.style.fontFamily,
                      cssClass:
                        "apexcharts-yaxis-title-text " +
                        c.config.yaxis[s].title.style.cssClass,
                    });
                    b.add(F), x.add(b);
                  }
                  var ee = c.config.yaxis[s].axisBorder,
                    ue = 31 + ee.offsetX;
                  if (
                    (c.config.yaxis[s].opposite && (ue = -31 - ee.offsetX),
                    ee.show)
                  ) {
                    var he = h.drawLine(
                      ue,
                      c.globals.translateY + ee.offsetY - 2,
                      ue,
                      c.globals.gridHeight +
                        c.globals.translateY +
                        ee.offsetY +
                        2,
                      ee.color,
                      0,
                      ee.width
                    );
                    x.add(he);
                  }
                  return (
                    c.config.yaxis[s].axisTicks.show &&
                      this.axesUtils.drawYAxisTicks(
                        ue,
                        _,
                        ee,
                        c.config.yaxis[s].axisTicks,
                        s,
                        A,
                        x
                      ),
                    x
                  );
                },
              },
              {
                key: "drawYaxisInversed",
                value: function (s) {
                  var o = this.w,
                    c = new K(this.ctx),
                    h = c.group({
                      class: "apexcharts-xaxis apexcharts-yaxis-inversed",
                    }),
                    d = c.group({
                      class: "apexcharts-xaxis-texts-g",
                      transform: "translate("
                        .concat(o.globals.translateXAxisX, ", ")
                        .concat(o.globals.translateXAxisY, ")"),
                    });
                  h.add(d);
                  var f = o.globals.yAxisScale[s].result.length - 1,
                    g = o.globals.gridWidth / f + 0.1,
                    y = g + o.config.xaxis.labels.offsetX,
                    x = o.globals.xLabelFormatter,
                    k = o.globals.yAxisScale[s].result.slice(),
                    _ = o.globals.timescaleLabels;
                  _.length > 0 &&
                    ((this.xaxisLabels = _.slice()),
                    (f = (k = _.slice()).length)),
                    (k = this.axesUtils.checkForReversedLabels(s, k));
                  var A = _.length;
                  if (o.config.xaxis.labels.show)
                    for (var O = A ? 0 : f; A ? O < A : O >= 0; A ? O++ : O--) {
                      var N = k[O];
                      N = x(N, O, o);
                      var H =
                        o.globals.gridWidth +
                        o.globals.padHorizontal -
                        (y - g + o.config.xaxis.labels.offsetX);
                      if (_.length) {
                        var G = this.axesUtils.getLabel(
                          k,
                          _,
                          H,
                          O,
                          this.drawnLabels,
                          this.xaxisFontSize
                        );
                        (H = G.x),
                          (N = G.text),
                          this.drawnLabels.push(G.text),
                          O === 0 &&
                            o.globals.skipFirstTimelinelabel &&
                            (N = ""),
                          O === k.length - 1 &&
                            o.globals.skipLastTimelinelabel &&
                            (N = "");
                      }
                      var te = c.drawText({
                        x: H,
                        y:
                          this.xAxisoffX +
                          o.config.xaxis.labels.offsetY +
                          30 -
                          (o.config.xaxis.position === "top"
                            ? o.globals.xAxisHeight +
                              o.config.xaxis.axisTicks.height -
                              2
                            : 0),
                        text: N,
                        textAnchor: "middle",
                        foreColor: Array.isArray(this.xaxisForeColors)
                          ? this.xaxisForeColors[s]
                          : this.xaxisForeColors,
                        fontSize: this.xaxisFontSize,
                        fontFamily: this.xaxisFontFamily,
                        fontWeight: o.config.xaxis.labels.style.fontWeight,
                        isPlainText: !1,
                        cssClass:
                          "apexcharts-xaxis-label " +
                          o.config.xaxis.labels.style.cssClass,
                      });
                      d.add(te), te.tspan(N);
                      var se = document.createElementNS(
                        o.globals.SVGNS,
                        "title"
                      );
                      (se.textContent = N), te.node.appendChild(se), (y += g);
                    }
                  return (
                    this.inversedYAxisTitleText(h),
                    this.inversedYAxisBorder(h),
                    h
                  );
                },
              },
              {
                key: "inversedYAxisBorder",
                value: function (s) {
                  var o = this.w,
                    c = new K(this.ctx),
                    h = o.config.xaxis.axisBorder;
                  if (h.show) {
                    var d = 0;
                    o.config.chart.type === "bar" &&
                      o.globals.isXNumeric &&
                      (d -= 15);
                    var f = c.drawLine(
                      o.globals.padHorizontal + d + h.offsetX,
                      this.xAxisoffX,
                      o.globals.gridWidth,
                      this.xAxisoffX,
                      h.color,
                      0,
                      h.height
                    );
                    this.elgrid &&
                    this.elgrid.elGridBorders &&
                    o.config.grid.show
                      ? this.elgrid.elGridBorders.add(f)
                      : s.add(f);
                  }
                },
              },
              {
                key: "inversedYAxisTitleText",
                value: function (s) {
                  var o = this.w,
                    c = new K(this.ctx);
                  if (o.config.xaxis.title.text !== void 0) {
                    var h = c.group({
                        class:
                          "apexcharts-xaxis-title apexcharts-yaxis-title-inversed",
                      }),
                      d = c.drawText({
                        x:
                          o.globals.gridWidth / 2 +
                          o.config.xaxis.title.offsetX,
                        y:
                          this.xAxisoffX +
                          parseFloat(this.xaxisFontSize) +
                          parseFloat(o.config.xaxis.title.style.fontSize) +
                          o.config.xaxis.title.offsetY +
                          20,
                        text: o.config.xaxis.title.text,
                        textAnchor: "middle",
                        fontSize: o.config.xaxis.title.style.fontSize,
                        fontFamily: o.config.xaxis.title.style.fontFamily,
                        fontWeight: o.config.xaxis.title.style.fontWeight,
                        foreColor: o.config.xaxis.title.style.color,
                        cssClass:
                          "apexcharts-xaxis-title-text " +
                          o.config.xaxis.title.style.cssClass,
                      });
                    h.add(d), s.add(h);
                  }
                },
              },
              {
                key: "yAxisTitleRotate",
                value: function (s, o) {
                  var c = this.w,
                    h = new K(this.ctx),
                    d = { width: 0, height: 0 },
                    f = { width: 0, height: 0 },
                    g = c.globals.dom.baseEl.querySelector(
                      " .apexcharts-yaxis[rel='".concat(
                        s,
                        "'] .apexcharts-yaxis-texts-g"
                      )
                    );
                  g !== null && (d = g.getBoundingClientRect());
                  var y = c.globals.dom.baseEl.querySelector(
                    ".apexcharts-yaxis[rel='".concat(
                      s,
                      "'] .apexcharts-yaxis-title text"
                    )
                  );
                  if (
                    (y !== null && (f = y.getBoundingClientRect()), y !== null)
                  ) {
                    var x = this.xPaddingForYAxisTitle(s, d, f, o);
                    y.setAttribute("x", x.xPos - (o ? 10 : 0));
                  }
                  if (y !== null) {
                    var k = h.rotateAroundCenter(y);
                    y.setAttribute(
                      "transform",
                      "rotate("
                        .concat(
                          o
                            ? -1 * c.config.yaxis[s].title.rotate
                            : c.config.yaxis[s].title.rotate,
                          " "
                        )
                        .concat(k.x, " ")
                        .concat(k.y, ")")
                    );
                  }
                },
              },
              {
                key: "xPaddingForYAxisTitle",
                value: function (s, o, c, h) {
                  var d = this.w,
                    f = 0,
                    g = 0,
                    y = 10;
                  return d.config.yaxis[s].title.text === void 0 || s < 0
                    ? { xPos: g, padd: 0 }
                    : (h
                        ? ((g =
                            o.width +
                            d.config.yaxis[s].title.offsetX +
                            c.width / 2 +
                            y / 2),
                          (f += 1) === 0 && (g -= y / 2))
                        : ((g =
                            -1 * o.width +
                            d.config.yaxis[s].title.offsetX +
                            y / 2 +
                            c.width / 2),
                          d.globals.isBarHorizontal &&
                            ((y = 25),
                            (g =
                              -1 * o.width -
                              d.config.yaxis[s].title.offsetX -
                              y))),
                      { xPos: g, padd: y });
                },
              },
              {
                key: "setYAxisXPosition",
                value: function (s, o) {
                  var c = this.w,
                    h = 0,
                    d = 0,
                    f = 18,
                    g = 1;
                  c.config.yaxis.length > 1 && (this.multipleYs = !0),
                    c.config.yaxis.map(function (y, x) {
                      var k =
                          c.globals.ignoreYAxisIndexes.indexOf(x) > -1 ||
                          !y.show ||
                          y.floating ||
                          s[x].width === 0,
                        _ = s[x].width + o[x].width;
                      y.opposite
                        ? c.globals.isBarHorizontal
                          ? ((d =
                              c.globals.gridWidth + c.globals.translateX - 1),
                            (c.globals.translateYAxisX[x] =
                              d - y.labels.offsetX))
                          : ((d =
                              c.globals.gridWidth + c.globals.translateX + g),
                            k || (g = g + _ + 20),
                            (c.globals.translateYAxisX[x] =
                              d - y.labels.offsetX + 20))
                        : ((h = c.globals.translateX - f),
                          k || (f = f + _ + 20),
                          (c.globals.translateYAxisX[x] =
                            h + y.labels.offsetX));
                    });
                },
              },
              {
                key: "setYAxisTextAlignments",
                value: function () {
                  var s = this.w,
                    o =
                      s.globals.dom.baseEl.getElementsByClassName(
                        "apexcharts-yaxis"
                      );
                  (o = B.listToArray(o)).forEach(function (c, h) {
                    var d = s.config.yaxis[h];
                    if (d && !d.floating && d.labels.align !== void 0) {
                      var f = s.globals.dom.baseEl.querySelector(
                          ".apexcharts-yaxis[rel='".concat(
                            h,
                            "'] .apexcharts-yaxis-texts-g"
                          )
                        ),
                        g = s.globals.dom.baseEl.querySelectorAll(
                          ".apexcharts-yaxis[rel='".concat(
                            h,
                            "'] .apexcharts-yaxis-label"
                          )
                        );
                      g = B.listToArray(g);
                      var y = f.getBoundingClientRect();
                      d.labels.align === "left"
                        ? (g.forEach(function (x, k) {
                            x.setAttribute("text-anchor", "start");
                          }),
                          d.opposite ||
                            f.setAttribute(
                              "transform",
                              "translate(-".concat(y.width, ", 0)")
                            ))
                        : d.labels.align === "center"
                        ? (g.forEach(function (x, k) {
                            x.setAttribute("text-anchor", "middle");
                          }),
                          f.setAttribute(
                            "transform",
                            "translate(".concat(
                              (y.width / 2) * (d.opposite ? 1 : -1),
                              ", 0)"
                            )
                          ))
                        : d.labels.align === "right" &&
                          (g.forEach(function (x, k) {
                            x.setAttribute("text-anchor", "end");
                          }),
                          d.opposite &&
                            f.setAttribute(
                              "transform",
                              "translate(".concat(y.width, ", 0)")
                            ));
                    }
                  });
                },
              },
            ]),
            $
          );
        })(),
        ge = (function () {
          function $(s) {
            a(this, $),
              (this.ctx = s),
              (this.w = s.w),
              (this.documentEvent = B.bind(this.documentEvent, this));
          }
          return (
            u($, [
              {
                key: "addEventListener",
                value: function (s, o) {
                  var c = this.w;
                  c.globals.events.hasOwnProperty(s)
                    ? c.globals.events[s].push(o)
                    : (c.globals.events[s] = [o]);
                },
              },
              {
                key: "removeEventListener",
                value: function (s, o) {
                  var c = this.w;
                  if (c.globals.events.hasOwnProperty(s)) {
                    var h = c.globals.events[s].indexOf(o);
                    h !== -1 && c.globals.events[s].splice(h, 1);
                  }
                },
              },
              {
                key: "fireEvent",
                value: function (s, o) {
                  var c = this.w;
                  if (c.globals.events.hasOwnProperty(s)) {
                    (o && o.length) || (o = []);
                    for (
                      var h = c.globals.events[s], d = h.length, f = 0;
                      f < d;
                      f++
                    )
                      h[f].apply(null, o);
                  }
                },
              },
              {
                key: "setupEventHandlers",
                value: function () {
                  var s = this,
                    o = this.w,
                    c = this.ctx,
                    h = o.globals.dom.baseEl.querySelector(
                      o.globals.chartClass
                    );
                  this.ctx.eventList.forEach(function (d) {
                    h.addEventListener(
                      d,
                      function (f) {
                        var g = Object.assign({}, o, {
                          seriesIndex: o.globals.capturedSeriesIndex,
                          dataPointIndex: o.globals.capturedDataPointIndex,
                        });
                        f.type === "mousemove" || f.type === "touchmove"
                          ? typeof o.config.chart.events.mouseMove ==
                              "function" &&
                            o.config.chart.events.mouseMove(f, c, g)
                          : f.type === "mouseleave" || f.type === "touchleave"
                          ? typeof o.config.chart.events.mouseLeave ==
                              "function" &&
                            o.config.chart.events.mouseLeave(f, c, g)
                          : ((f.type === "mouseup" && f.which === 1) ||
                              f.type === "touchend") &&
                            (typeof o.config.chart.events.click == "function" &&
                              o.config.chart.events.click(f, c, g),
                            c.ctx.events.fireEvent("click", [f, c, g]));
                      },
                      { capture: !1, passive: !0 }
                    );
                  }),
                    this.ctx.eventList.forEach(function (d) {
                      o.globals.dom.baseEl.addEventListener(
                        d,
                        s.documentEvent,
                        { passive: !0 }
                      );
                    }),
                    this.ctx.core.setupBrushHandler();
                },
              },
              {
                key: "documentEvent",
                value: function (s) {
                  var o = this.w,
                    c = s.target.className;
                  if (s.type === "click") {
                    var h =
                      o.globals.dom.baseEl.querySelector(".apexcharts-menu");
                    h &&
                      h.classList.contains("apexcharts-menu-open") &&
                      c !== "apexcharts-menu-icon" &&
                      h.classList.remove("apexcharts-menu-open");
                  }
                  (o.globals.clientX =
                    s.type === "touchmove" ? s.touches[0].clientX : s.clientX),
                    (o.globals.clientY =
                      s.type === "touchmove"
                        ? s.touches[0].clientY
                        : s.clientY);
                },
              },
            ]),
            $
          );
        })(),
        I = (function () {
          function $(s) {
            a(this, $), (this.ctx = s), (this.w = s.w);
          }
          return (
            u($, [
              {
                key: "setCurrentLocaleValues",
                value: function (s) {
                  var o = this.w.config.chart.locales;
                  window.Apex.chart &&
                    window.Apex.chart.locales &&
                    window.Apex.chart.locales.length > 0 &&
                    (o = this.w.config.chart.locales.concat(
                      window.Apex.chart.locales
                    ));
                  var c = o.filter(function (d) {
                    return d.name === s;
                  })[0];
                  if (!c)
                    throw new Error(
                      "Wrong locale name provided. Please make sure you set the correct locale name in options"
                    );
                  var h = B.extend(Ce, c);
                  this.w.globals.locale = h.options;
                },
              },
            ]),
            $
          );
        })(),
        R = (function () {
          function $(s) {
            a(this, $), (this.ctx = s), (this.w = s.w);
          }
          return (
            u($, [
              {
                key: "drawAxis",
                value: function (s, o) {
                  var c,
                    h,
                    d = this,
                    f = this.w.globals,
                    g = this.w.config,
                    y = new Ie(this.ctx, o),
                    x = new Q(this.ctx, o);
                  f.axisCharts &&
                    s !== "radar" &&
                    (f.isBarHorizontal
                      ? ((h = x.drawYaxisInversed(0)),
                        (c = y.drawXaxisInversed(0)),
                        f.dom.elGraphical.add(c),
                        f.dom.elGraphical.add(h))
                      : ((c = y.drawXaxis()),
                        f.dom.elGraphical.add(c),
                        g.yaxis.map(function (k, _) {
                          if (
                            f.ignoreYAxisIndexes.indexOf(_) === -1 &&
                            ((h = x.drawYaxis(_)),
                            f.dom.Paper.add(h),
                            d.w.config.grid.position === "back")
                          ) {
                            var A = f.dom.Paper.children()[1];
                            A.remove(), f.dom.Paper.add(A);
                          }
                        })));
                },
              },
            ]),
            $
          );
        })(),
        q = (function () {
          function $(s) {
            a(this, $), (this.ctx = s), (this.w = s.w);
          }
          return (
            u($, [
              {
                key: "drawXCrosshairs",
                value: function () {
                  var s = this.w,
                    o = new K(this.ctx),
                    c = new re(this.ctx),
                    h = s.config.xaxis.crosshairs.fill.gradient,
                    d = s.config.xaxis.crosshairs.dropShadow,
                    f = s.config.xaxis.crosshairs.fill.type,
                    g = h.colorFrom,
                    y = h.colorTo,
                    x = h.opacityFrom,
                    k = h.opacityTo,
                    _ = h.stops,
                    A = d.enabled,
                    O = d.left,
                    N = d.top,
                    H = d.blur,
                    G = d.color,
                    te = d.opacity,
                    se = s.config.xaxis.crosshairs.fill.color;
                  if (s.config.xaxis.crosshairs.show) {
                    f === "gradient" &&
                      (se = o.drawGradient(
                        "vertical",
                        g,
                        y,
                        x,
                        k,
                        null,
                        _,
                        null
                      ));
                    var b = o.drawRect();
                    s.config.xaxis.crosshairs.width === 1 && (b = o.drawLine());
                    var C = s.globals.gridHeight;
                    (!B.isNumber(C) || C < 0) && (C = 0);
                    var F = s.config.xaxis.crosshairs.width;
                    (!B.isNumber(F) || F < 0) && (F = 0),
                      b.attr({
                        class: "apexcharts-xcrosshairs",
                        x: 0,
                        y: 0,
                        y2: C,
                        width: F,
                        height: C,
                        fill: se,
                        filter: "none",
                        "fill-opacity": s.config.xaxis.crosshairs.opacity,
                        stroke: s.config.xaxis.crosshairs.stroke.color,
                        "stroke-width": s.config.xaxis.crosshairs.stroke.width,
                        "stroke-dasharray":
                          s.config.xaxis.crosshairs.stroke.dashArray,
                      }),
                      A &&
                        (b = c.dropShadow(b, {
                          left: O,
                          top: N,
                          blur: H,
                          color: G,
                          opacity: te,
                        })),
                      s.globals.dom.elGraphical.add(b);
                  }
                },
              },
              {
                key: "drawYCrosshairs",
                value: function () {
                  var s = this.w,
                    o = new K(this.ctx),
                    c = s.config.yaxis[0].crosshairs,
                    h = s.globals.barPadForNumericAxis;
                  if (s.config.yaxis[0].crosshairs.show) {
                    var d = o.drawLine(
                      -h,
                      0,
                      s.globals.gridWidth + h,
                      0,
                      c.stroke.color,
                      c.stroke.dashArray,
                      c.stroke.width
                    );
                    d.attr({ class: "apexcharts-ycrosshairs" }),
                      s.globals.dom.elGraphical.add(d);
                  }
                  var f = o.drawLine(
                    -h,
                    0,
                    s.globals.gridWidth + h,
                    0,
                    c.stroke.color,
                    0,
                    0
                  );
                  f.attr({ class: "apexcharts-ycrosshairs-hidden" }),
                    s.globals.dom.elGraphical.add(f);
                },
              },
            ]),
            $
          );
        })(),
        ce = (function () {
          function $(s) {
            a(this, $), (this.ctx = s), (this.w = s.w);
          }
          return (
            u($, [
              {
                key: "checkResponsiveConfig",
                value: function (s) {
                  var o = this,
                    c = this.w,
                    h = c.config;
                  if (h.responsive.length !== 0) {
                    var d = h.responsive.slice();
                    d.sort(function (x, k) {
                      return x.breakpoint > k.breakpoint
                        ? 1
                        : k.breakpoint > x.breakpoint
                        ? -1
                        : 0;
                    }).reverse();
                    var f = new le({}),
                      g = function () {
                        var x =
                            arguments.length > 0 && arguments[0] !== void 0
                              ? arguments[0]
                              : {},
                          k = d[0].breakpoint,
                          _ =
                            window.innerWidth > 0
                              ? window.innerWidth
                              : screen.width;
                        if (_ > k) {
                          var A = fe.extendArrayProps(
                            f,
                            c.globals.initialConfig,
                            c
                          );
                          (x = B.extend(A, x)),
                            (x = B.extend(c.config, x)),
                            o.overrideResponsiveOptions(x);
                        } else
                          for (var O = 0; O < d.length; O++)
                            _ < d[O].breakpoint &&
                              ((x = fe.extendArrayProps(f, d[O].options, c)),
                              (x = B.extend(c.config, x)),
                              o.overrideResponsiveOptions(x));
                      };
                    if (s) {
                      var y = fe.extendArrayProps(f, s, c);
                      (y = B.extend(c.config, y)), g((y = B.extend(y, s)));
                    } else g({});
                  }
                },
              },
              {
                key: "overrideResponsiveOptions",
                value: function (s) {
                  var o = new le(s).init({ responsiveOverride: !0 });
                  this.w.config = o;
                },
              },
            ]),
            $
          );
        })(),
        ne = (function () {
          function $(s) {
            a(this, $), (this.ctx = s), (this.colors = []), (this.w = s.w);
            var o = this.w;
            (this.isColorFn = !1),
              (this.isHeatmapDistributed =
                (o.config.chart.type === "treemap" &&
                  o.config.plotOptions.treemap.distributed) ||
                (o.config.chart.type === "heatmap" &&
                  o.config.plotOptions.heatmap.distributed)),
              (this.isBarDistributed =
                o.config.plotOptions.bar.distributed &&
                (o.config.chart.type === "bar" ||
                  o.config.chart.type === "rangeBar"));
          }
          return (
            u($, [
              {
                key: "init",
                value: function () {
                  this.setDefaultColors();
                },
              },
              {
                key: "setDefaultColors",
                value: function () {
                  var s,
                    o = this,
                    c = this.w,
                    h = new B();
                  if (
                    (c.globals.dom.elWrap.classList.add(
                      "apexcharts-theme-".concat(c.config.theme.mode)
                    ),
                    c.config.colors === void 0 ||
                    ((s = c.config.colors) === null || s === void 0
                      ? void 0
                      : s.length) === 0
                      ? (c.globals.colors = this.predefined())
                      : ((c.globals.colors = c.config.colors),
                        Array.isArray(c.config.colors) &&
                          c.config.colors.length > 0 &&
                          typeof c.config.colors[0] == "function" &&
                          (c.globals.colors = c.config.series.map(function (
                            N,
                            H
                          ) {
                            var G = c.config.colors[H];
                            return (
                              G || (G = c.config.colors[0]),
                              typeof G == "function"
                                ? ((o.isColorFn = !0),
                                  G({
                                    value: c.globals.axisCharts
                                      ? c.globals.series[H][0]
                                        ? c.globals.series[H][0]
                                        : 0
                                      : c.globals.series[H],
                                    seriesIndex: H,
                                    dataPointIndex: H,
                                    w: c,
                                  }))
                                : G
                            );
                          }))),
                    c.globals.seriesColors.map(function (N, H) {
                      N && (c.globals.colors[H] = N);
                    }),
                    c.config.theme.monochrome.enabled)
                  ) {
                    var d = [],
                      f = c.globals.series.length;
                    (this.isBarDistributed || this.isHeatmapDistributed) &&
                      (f =
                        c.globals.series[0].length * c.globals.series.length);
                    for (
                      var g = c.config.theme.monochrome.color,
                        y = 1 / (f / c.config.theme.monochrome.shadeIntensity),
                        x = c.config.theme.monochrome.shadeTo,
                        k = 0,
                        _ = 0;
                      _ < f;
                      _++
                    ) {
                      var A = void 0;
                      x === "dark"
                        ? ((A = h.shadeColor(-1 * k, g)), (k += y))
                        : ((A = h.shadeColor(k, g)), (k += y)),
                        d.push(A);
                    }
                    c.globals.colors = d.slice();
                  }
                  var O = c.globals.colors.slice();
                  this.pushExtraColors(c.globals.colors),
                    ["fill", "stroke"].forEach(function (N) {
                      c.config[N].colors === void 0
                        ? (c.globals[N].colors = o.isColorFn
                            ? c.config.colors
                            : O)
                        : (c.globals[N].colors = c.config[N].colors.slice()),
                        o.pushExtraColors(c.globals[N].colors);
                    }),
                    c.config.dataLabels.style.colors === void 0
                      ? (c.globals.dataLabels.style.colors = O)
                      : (c.globals.dataLabels.style.colors =
                          c.config.dataLabels.style.colors.slice()),
                    this.pushExtraColors(c.globals.dataLabels.style.colors, 50),
                    c.config.plotOptions.radar.polygons.fill.colors === void 0
                      ? (c.globals.radarPolygons.fill.colors = [
                          c.config.theme.mode === "dark" ? "#424242" : "none",
                        ])
                      : (c.globals.radarPolygons.fill.colors =
                          c.config.plotOptions.radar.polygons.fill.colors.slice()),
                    this.pushExtraColors(
                      c.globals.radarPolygons.fill.colors,
                      20
                    ),
                    c.config.markers.colors === void 0
                      ? (c.globals.markers.colors = O)
                      : (c.globals.markers.colors =
                          c.config.markers.colors.slice()),
                    this.pushExtraColors(c.globals.markers.colors);
                },
              },
              {
                key: "pushExtraColors",
                value: function (s, o) {
                  var c =
                      arguments.length > 2 && arguments[2] !== void 0
                        ? arguments[2]
                        : null,
                    h = this.w,
                    d = o || h.globals.series.length;
                  if (
                    (c === null &&
                      (c =
                        this.isBarDistributed ||
                        this.isHeatmapDistributed ||
                        (h.config.chart.type === "heatmap" &&
                          h.config.plotOptions.heatmap.colorScale.inverse)),
                    c &&
                      h.globals.series.length &&
                      (d =
                        h.globals.series[h.globals.maxValsInArrayIndex].length *
                        h.globals.series.length),
                    s.length < d)
                  )
                    for (var f = d - s.length, g = 0; g < f; g++) s.push(s[g]);
                },
              },
              {
                key: "updateThemeOptions",
                value: function (s) {
                  (s.chart = s.chart || {}), (s.tooltip = s.tooltip || {});
                  var o = s.theme.mode || "light",
                    c = s.theme.palette
                      ? s.theme.palette
                      : o === "dark"
                      ? "palette4"
                      : "palette1",
                    h = s.chart.foreColor
                      ? s.chart.foreColor
                      : o === "dark"
                      ? "#f6f7f8"
                      : "#373d3f";
                  return (
                    (s.tooltip.theme = o),
                    (s.chart.foreColor = h),
                    (s.theme.palette = c),
                    s
                  );
                },
              },
              {
                key: "predefined",
                value: function () {
                  switch (this.w.config.theme.palette) {
                    case "palette1":
                    default:
                      this.colors = [
                        "#008FFB",
                        "#00E396",
                        "#FEB019",
                        "#FF4560",
                        "#775DD0",
                      ];
                      break;
                    case "palette2":
                      this.colors = [
                        "#3f51b5",
                        "#03a9f4",
                        "#4caf50",
                        "#f9ce1d",
                        "#FF9800",
                      ];
                      break;
                    case "palette3":
                      this.colors = [
                        "#33b2df",
                        "#546E7A",
                        "#d4526e",
                        "#13d8aa",
                        "#A5978B",
                      ];
                      break;
                    case "palette4":
                      this.colors = [
                        "#4ecdc4",
                        "#c7f464",
                        "#81D4FA",
                        "#fd6a6a",
                        "#546E7A",
                      ];
                      break;
                    case "palette5":
                      this.colors = [
                        "#2b908f",
                        "#f9a3a4",
                        "#90ee7e",
                        "#fa4443",
                        "#69d2e7",
                      ];
                      break;
                    case "palette6":
                      this.colors = [
                        "#449DD1",
                        "#F86624",
                        "#EA3546",
                        "#662E9B",
                        "#C5D86D",
                      ];
                      break;
                    case "palette7":
                      this.colors = [
                        "#D7263D",
                        "#1B998B",
                        "#2E294E",
                        "#F46036",
                        "#E2C044",
                      ];
                      break;
                    case "palette8":
                      this.colors = [
                        "#662E9B",
                        "#F86624",
                        "#F9C80E",
                        "#EA3546",
                        "#43BCCD",
                      ];
                      break;
                    case "palette9":
                      this.colors = [
                        "#5C4742",
                        "#A5978B",
                        "#8D5B4C",
                        "#5A2A27",
                        "#C4BBAF",
                      ];
                      break;
                    case "palette10":
                      this.colors = [
                        "#A300D6",
                        "#7D02EB",
                        "#5653FE",
                        "#2983FF",
                        "#00B1F2",
                      ];
                  }
                  return this.colors;
                },
              },
            ]),
            $
          );
        })(),
        de = (function () {
          function $(s) {
            a(this, $), (this.ctx = s), (this.w = s.w);
          }
          return (
            u($, [
              {
                key: "draw",
                value: function () {
                  this.drawTitleSubtitle("title"),
                    this.drawTitleSubtitle("subtitle");
                },
              },
              {
                key: "drawTitleSubtitle",
                value: function (s) {
                  var o = this.w,
                    c = s === "title" ? o.config.title : o.config.subtitle,
                    h = o.globals.svgWidth / 2,
                    d = c.offsetY,
                    f = "middle";
                  if (
                    (c.align === "left"
                      ? ((h = 10), (f = "start"))
                      : c.align === "right" &&
                        ((h = o.globals.svgWidth - 10), (f = "end")),
                    (h += c.offsetX),
                    (d = d + parseInt(c.style.fontSize, 10) + c.margin / 2),
                    c.text !== void 0)
                  ) {
                    var g = new K(this.ctx).drawText({
                      x: h,
                      y: d,
                      text: c.text,
                      textAnchor: f,
                      fontSize: c.style.fontSize,
                      fontFamily: c.style.fontFamily,
                      fontWeight: c.style.fontWeight,
                      foreColor: c.style.color,
                      opacity: 1,
                    });
                    g.node.setAttribute(
                      "class",
                      "apexcharts-".concat(s, "-text")
                    ),
                      o.globals.dom.Paper.add(g);
                  }
                },
              },
            ]),
            $
          );
        })(),
        Te = (function () {
          function $(s) {
            a(this, $), (this.w = s.w), (this.dCtx = s);
          }
          return (
            u($, [
              {
                key: "getTitleSubtitleCoords",
                value: function (s) {
                  var o = this.w,
                    c = 0,
                    h = 0,
                    d =
                      s === "title"
                        ? o.config.title.floating
                        : o.config.subtitle.floating,
                    f = o.globals.dom.baseEl.querySelector(
                      ".apexcharts-".concat(s, "-text")
                    );
                  if (f !== null && !d) {
                    var g = f.getBoundingClientRect();
                    (c = g.width),
                      (h = o.globals.axisCharts ? g.height + 5 : g.height);
                  }
                  return { width: c, height: h };
                },
              },
              {
                key: "getLegendsRect",
                value: function () {
                  var s = this.w,
                    o = s.globals.dom.elLegendWrap;
                  s.config.legend.height ||
                    (s.config.legend.position !== "top" &&
                      s.config.legend.position !== "bottom") ||
                    (o.style.maxHeight = s.globals.svgHeight / 2 + "px");
                  var c = Object.assign({}, B.getBoundingClientRect(o));
                  return (
                    o !== null &&
                    !s.config.legend.floating &&
                    s.config.legend.show
                      ? (this.dCtx.lgRect = {
                          x: c.x,
                          y: c.y,
                          height: c.height,
                          width: c.height === 0 ? 0 : c.width,
                        })
                      : (this.dCtx.lgRect = {
                          x: 0,
                          y: 0,
                          height: 0,
                          width: 0,
                        }),
                    (s.config.legend.position !== "left" &&
                      s.config.legend.position !== "right") ||
                      (1.5 * this.dCtx.lgRect.width > s.globals.svgWidth &&
                        (this.dCtx.lgRect.width = s.globals.svgWidth / 1.5)),
                    this.dCtx.lgRect
                  );
                },
              },
              {
                key: "getLargestStringFromMultiArr",
                value: function (s, o) {
                  var c = s;
                  if (this.w.globals.isMultiLineX) {
                    var h = o.map(function (f, g) {
                        return Array.isArray(f) ? f.length : 1;
                      }),
                      d = Math.max.apply(Math, z(h));
                    c = o[h.indexOf(d)];
                  }
                  return c;
                },
              },
            ]),
            $
          );
        })(),
        Re = (function () {
          function $(s) {
            a(this, $), (this.w = s.w), (this.dCtx = s);
          }
          return (
            u($, [
              {
                key: "getxAxisLabelsCoords",
                value: function () {
                  var s,
                    o = this.w,
                    c = o.globals.labels.slice();
                  if (
                    (o.config.xaxis.convertedCatToNumeric &&
                      c.length === 0 &&
                      (c = o.globals.categoryLabels),
                    o.globals.timescaleLabels.length > 0)
                  ) {
                    var h = this.getxAxisTimeScaleLabelsCoords();
                    (s = { width: h.width, height: h.height }),
                      (o.globals.rotateXLabels = !1);
                  } else {
                    this.dCtx.lgWidthForSideLegends =
                      (o.config.legend.position !== "left" &&
                        o.config.legend.position !== "right") ||
                      o.config.legend.floating
                        ? 0
                        : this.dCtx.lgRect.width;
                    var d = o.globals.xLabelFormatter,
                      f = B.getLargestStringFromArr(c),
                      g = this.dCtx.dimHelpers.getLargestStringFromMultiArr(
                        f,
                        c
                      );
                    o.globals.isBarHorizontal &&
                      (g = f =
                        o.globals.yAxisScale[0].result.reduce(function (N, H) {
                          return N.length > H.length ? N : H;
                        }, 0));
                    var y = new L(this.dCtx.ctx),
                      x = f;
                    (f = y.xLabelFormat(d, f, x, {
                      i: void 0,
                      dateFormatter: new P(this.dCtx.ctx).formatDate,
                      w: o,
                    })),
                      (g = y.xLabelFormat(d, g, x, {
                        i: void 0,
                        dateFormatter: new P(this.dCtx.ctx).formatDate,
                        w: o,
                      })),
                      ((o.config.xaxis.convertedCatToNumeric && f === void 0) ||
                        String(f).trim() === "") &&
                        (g = f = "1");
                    var k = new K(this.dCtx.ctx),
                      _ = k.getTextRects(
                        f,
                        o.config.xaxis.labels.style.fontSize
                      ),
                      A = _;
                    if (
                      (f !== g &&
                        (A = k.getTextRects(
                          g,
                          o.config.xaxis.labels.style.fontSize
                        )),
                      ((s = {
                        width: _.width >= A.width ? _.width : A.width,
                        height: _.height >= A.height ? _.height : A.height,
                      }).width *
                        c.length >
                        o.globals.svgWidth -
                          this.dCtx.lgWidthForSideLegends -
                          this.dCtx.yAxisWidth -
                          this.dCtx.gridPad.left -
                          this.dCtx.gridPad.right &&
                        o.config.xaxis.labels.rotate !== 0) ||
                        o.config.xaxis.labels.rotateAlways)
                    ) {
                      if (!o.globals.isBarHorizontal) {
                        o.globals.rotateXLabels = !0;
                        var O = function (N) {
                          return k.getTextRects(
                            N,
                            o.config.xaxis.labels.style.fontSize,
                            o.config.xaxis.labels.style.fontFamily,
                            "rotate(".concat(
                              o.config.xaxis.labels.rotate,
                              " 0 0)"
                            ),
                            !1
                          );
                        };
                        (_ = O(f)),
                          f !== g && (A = O(g)),
                          (s.height =
                            (_.height > A.height ? _.height : A.height) / 1.5),
                          (s.width = _.width > A.width ? _.width : A.width);
                      }
                    } else o.globals.rotateXLabels = !1;
                  }
                  return (
                    o.config.xaxis.labels.show || (s = { width: 0, height: 0 }),
                    { width: s.width, height: s.height }
                  );
                },
              },
              {
                key: "getxAxisGroupLabelsCoords",
                value: function () {
                  var s,
                    o = this.w;
                  if (!o.globals.hasXaxisGroups) return { width: 0, height: 0 };
                  var c,
                    h =
                      ((s = o.config.xaxis.group.style) === null || s === void 0
                        ? void 0
                        : s.fontSize) || o.config.xaxis.labels.style.fontSize,
                    d = o.globals.groups.map(function (_) {
                      return _.title;
                    }),
                    f = B.getLargestStringFromArr(d),
                    g = this.dCtx.dimHelpers.getLargestStringFromMultiArr(f, d),
                    y = new K(this.dCtx.ctx),
                    x = y.getTextRects(f, h),
                    k = x;
                  return (
                    f !== g && (k = y.getTextRects(g, h)),
                    (c = {
                      width: x.width >= k.width ? x.width : k.width,
                      height: x.height >= k.height ? x.height : k.height,
                    }),
                    o.config.xaxis.labels.show || (c = { width: 0, height: 0 }),
                    { width: c.width, height: c.height }
                  );
                },
              },
              {
                key: "getxAxisTitleCoords",
                value: function () {
                  var s = this.w,
                    o = 0,
                    c = 0;
                  if (s.config.xaxis.title.text !== void 0) {
                    var h = new K(this.dCtx.ctx).getTextRects(
                      s.config.xaxis.title.text,
                      s.config.xaxis.title.style.fontSize
                    );
                    (o = h.width), (c = h.height);
                  }
                  return { width: o, height: c };
                },
              },
              {
                key: "getxAxisTimeScaleLabelsCoords",
                value: function () {
                  var s,
                    o = this.w;
                  this.dCtx.timescaleLabels = o.globals.timescaleLabels.slice();
                  var c = this.dCtx.timescaleLabels.map(function (d) {
                      return d.value;
                    }),
                    h = c.reduce(function (d, f) {
                      return d === void 0
                        ? (console.error(
                            "You have possibly supplied invalid Date format. Please supply a valid JavaScript Date"
                          ),
                          0)
                        : d.length > f.length
                        ? d
                        : f;
                    }, 0);
                  return (
                    1.05 *
                      (s = new K(this.dCtx.ctx).getTextRects(
                        h,
                        o.config.xaxis.labels.style.fontSize
                      )).width *
                      c.length >
                      o.globals.gridWidth &&
                      o.config.xaxis.labels.rotate !== 0 &&
                      (o.globals.overlappingXLabels = !0),
                    s
                  );
                },
              },
              {
                key: "additionalPaddingXLabels",
                value: function (s) {
                  var o = this,
                    c = this.w,
                    h = c.globals,
                    d = c.config,
                    f = d.xaxis.type,
                    g = s.width;
                  (h.skipLastTimelinelabel = !1),
                    (h.skipFirstTimelinelabel = !1);
                  var y =
                      c.config.yaxis[0].opposite && c.globals.isBarHorizontal,
                    x = function (k, _) {
                      (d.yaxis.length > 1 &&
                        (function (A) {
                          return h.collapsedSeriesIndices.indexOf(A) !== -1;
                        })(_)) ||
                        (function (A) {
                          if (
                            o.dCtx.timescaleLabels &&
                            o.dCtx.timescaleLabels.length
                          ) {
                            var O = o.dCtx.timescaleLabels[0],
                              N =
                                o.dCtx.timescaleLabels[
                                  o.dCtx.timescaleLabels.length - 1
                                ].position +
                                g / 1.75 -
                                o.dCtx.yAxisWidthRight,
                              H = O.position - g / 1.75 + o.dCtx.yAxisWidthLeft,
                              G =
                                c.config.legend.position === "right" &&
                                o.dCtx.lgRect.width > 0
                                  ? o.dCtx.lgRect.width
                                  : 0;
                            N > h.svgWidth - h.translateX - G &&
                              (h.skipLastTimelinelabel = !0),
                              H <
                                -((A.show && !A.floating) ||
                                (d.chart.type !== "bar" &&
                                  d.chart.type !== "candlestick" &&
                                  d.chart.type !== "rangeBar" &&
                                  d.chart.type !== "boxPlot")
                                  ? 10
                                  : g / 1.75) &&
                                (h.skipFirstTimelinelabel = !0);
                          } else
                            f === "datetime"
                              ? o.dCtx.gridPad.right < g &&
                                !h.rotateXLabels &&
                                (h.skipLastTimelinelabel = !0)
                              : f !== "datetime" &&
                                o.dCtx.gridPad.right <
                                  g / 2 - o.dCtx.yAxisWidthRight &&
                                !h.rotateXLabels &&
                                !c.config.xaxis.labels.trim &&
                                (c.config.xaxis.tickPlacement !== "between" ||
                                  c.globals.isBarHorizontal) &&
                                (o.dCtx.xPadRight = g / 2 + 1);
                        })(k);
                    };
                  d.yaxis.forEach(function (k, _) {
                    y
                      ? (o.dCtx.gridPad.left < g &&
                          (o.dCtx.xPadLeft = g / 2 + 1),
                        (o.dCtx.xPadRight = g / 2 + 1))
                      : x(k, _);
                  });
                },
              },
            ]),
            $
          );
        })(),
        Ve = (function () {
          function $(s) {
            a(this, $), (this.w = s.w), (this.dCtx = s);
          }
          return (
            u($, [
              {
                key: "getyAxisLabelsCoords",
                value: function () {
                  var s = this,
                    o = this.w,
                    c = [],
                    h = 10,
                    d = new xe(this.dCtx.ctx);
                  return (
                    o.config.yaxis.map(function (f, g) {
                      var y = o.globals.yAxisScale[g],
                        x = 0;
                      if (
                        (!d.isYAxisHidden(g) &&
                          f.labels.show &&
                          f.labels.minWidth !== void 0 &&
                          (x = f.labels.minWidth),
                        !d.isYAxisHidden(g) && f.labels.show && y.result.length)
                      ) {
                        var k = o.globals.yLabelFormatters[g],
                          _ = y.niceMin === Number.MIN_VALUE ? 0 : y.niceMin,
                          A =
                            String(_).length > String(y.niceMax).length
                              ? _
                              : y.niceMax,
                          O = k(A, {
                            seriesIndex: g,
                            dataPointIndex: -1,
                            w: o,
                          }),
                          N = O;
                        if (
                          ((O !== void 0 && O.length !== 0) || (O = A),
                          o.globals.isBarHorizontal)
                        ) {
                          h = 0;
                          var H = o.globals.labels.slice();
                          (O = k((O = B.getLargestStringFromArr(H)), {
                            seriesIndex: g,
                            dataPointIndex: -1,
                            w: o,
                          })),
                            (N = s.dCtx.dimHelpers.getLargestStringFromMultiArr(
                              O,
                              H
                            ));
                        }
                        var G = new K(s.dCtx.ctx),
                          te = "rotate(".concat(f.labels.rotate, " 0 0)"),
                          se = G.getTextRects(
                            O,
                            f.labels.style.fontSize,
                            f.labels.style.fontFamily,
                            te,
                            !1
                          ),
                          b = se;
                        O !== N &&
                          (b = G.getTextRects(
                            N,
                            f.labels.style.fontSize,
                            f.labels.style.fontFamily,
                            te,
                            !1
                          )),
                          c.push({
                            width:
                              (x > b.width || x > se.width
                                ? x
                                : b.width > se.width
                                ? b.width
                                : se.width) + h,
                            height: b.height > se.height ? b.height : se.height,
                          });
                      } else c.push({ width: 0, height: 0 });
                    }),
                    c
                  );
                },
              },
              {
                key: "getyAxisTitleCoords",
                value: function () {
                  var s = this,
                    o = this.w,
                    c = [];
                  return (
                    o.config.yaxis.map(function (h, d) {
                      if (h.show && h.title.text !== void 0) {
                        var f = new K(s.dCtx.ctx),
                          g = "rotate(".concat(h.title.rotate, " 0 0)"),
                          y = f.getTextRects(
                            h.title.text,
                            h.title.style.fontSize,
                            h.title.style.fontFamily,
                            g,
                            !1
                          );
                        c.push({ width: y.width, height: y.height });
                      } else c.push({ width: 0, height: 0 });
                    }),
                    c
                  );
                },
              },
              {
                key: "getTotalYAxisWidth",
                value: function () {
                  var s = this.w,
                    o = 0,
                    c = 0,
                    h = 0,
                    d = s.globals.yAxisScale.length > 1 ? 10 : 0,
                    f = new xe(this.dCtx.ctx),
                    g = function (y, x) {
                      var k = s.config.yaxis[x].floating,
                        _ = 0;
                      y.width > 0 && !k
                        ? ((_ = y.width + d),
                          (function (A) {
                            return s.globals.ignoreYAxisIndexes.indexOf(A) > -1;
                          })(x) && (_ = _ - y.width - d))
                        : (_ = k || f.isYAxisHidden(x) ? 0 : 5),
                        s.config.yaxis[x].opposite ? (h += _) : (c += _),
                        (o += _);
                    };
                  return (
                    s.globals.yLabelsCoords.map(function (y, x) {
                      g(y, x);
                    }),
                    s.globals.yTitleCoords.map(function (y, x) {
                      g(y, x);
                    }),
                    s.globals.isBarHorizontal &&
                      !s.config.yaxis[0].floating &&
                      (o =
                        s.globals.yLabelsCoords[0].width +
                        s.globals.yTitleCoords[0].width +
                        15),
                    (this.dCtx.yAxisWidthLeft = c),
                    (this.dCtx.yAxisWidthRight = h),
                    o
                  );
                },
              },
            ]),
            $
          );
        })(),
        Pe = (function () {
          function $(s) {
            a(this, $), (this.w = s.w), (this.dCtx = s);
          }
          return (
            u($, [
              {
                key: "gridPadForColumnsInNumericAxis",
                value: function (s) {
                  var o = this.w;
                  if (o.globals.noData || o.globals.allSeriesCollapsed)
                    return 0;
                  var c = function (k) {
                      return (
                        k === "bar" ||
                        k === "rangeBar" ||
                        k === "candlestick" ||
                        k === "boxPlot"
                      );
                    },
                    h = o.config.chart.type,
                    d = 0,
                    f = c(h) ? o.config.series.length : 1;
                  if (
                    (o.globals.comboBarCount > 0 &&
                      (f = o.globals.comboBarCount),
                    o.globals.collapsedSeries.forEach(function (k) {
                      c(k.type) && (f -= 1);
                    }),
                    o.config.chart.stacked && (f = 1),
                    (c(h) || o.globals.comboBarCount > 0) &&
                      o.globals.isXNumeric &&
                      !o.globals.isBarHorizontal &&
                      f > 0)
                  ) {
                    var g,
                      y,
                      x = Math.abs(
                        o.globals.initialMaxX - o.globals.initialMinX
                      );
                    x <= 3 && (x = o.globals.dataPoints),
                      (g = x / s),
                      o.globals.minXDiff &&
                        o.globals.minXDiff / g > 0 &&
                        (y = o.globals.minXDiff / g),
                      y > s / 2 && (y /= 2),
                      (d =
                        ((y / f) *
                          parseInt(o.config.plotOptions.bar.columnWidth, 10)) /
                        100) < 1 && (d = 1),
                      (d = d / (f > 1 ? 1 : 1.5) + 5),
                      (o.globals.barPadForNumericAxis = d);
                  }
                  return d;
                },
              },
              {
                key: "gridPadFortitleSubtitle",
                value: function () {
                  var s = this,
                    o = this.w,
                    c = o.globals,
                    h = this.dCtx.isSparkline || !o.globals.axisCharts ? 0 : 10;
                  ["title", "subtitle"].forEach(function (g) {
                    o.config[g].text !== void 0
                      ? (h += o.config[g].margin)
                      : (h +=
                          s.dCtx.isSparkline || !o.globals.axisCharts ? 0 : 5);
                  }),
                    !o.config.legend.show ||
                      o.config.legend.position !== "bottom" ||
                      o.config.legend.floating ||
                      o.globals.axisCharts ||
                      (h += 10);
                  var d = this.dCtx.dimHelpers.getTitleSubtitleCoords("title"),
                    f = this.dCtx.dimHelpers.getTitleSubtitleCoords("subtitle");
                  (c.gridHeight = c.gridHeight - d.height - f.height - h),
                    (c.translateY = c.translateY + d.height + f.height + h);
                },
              },
              {
                key: "setGridXPosForDualYAxis",
                value: function (s, o) {
                  var c = this.w,
                    h = new xe(this.dCtx.ctx);
                  c.config.yaxis.map(function (d, f) {
                    c.globals.ignoreYAxisIndexes.indexOf(f) !== -1 ||
                      d.floating ||
                      h.isYAxisHidden(f) ||
                      (d.opposite &&
                        (c.globals.translateX =
                          c.globals.translateX -
                          (o[f].width + s[f].width) -
                          parseInt(
                            c.config.yaxis[f].labels.style.fontSize,
                            10
                          ) /
                            1.2 -
                          12),
                      c.globals.translateX < 2 && (c.globals.translateX = 2));
                  });
                },
              },
            ]),
            $
          );
        })(),
        Be = (function () {
          function $(s) {
            a(this, $),
              (this.ctx = s),
              (this.w = s.w),
              (this.lgRect = {}),
              (this.yAxisWidth = 0),
              (this.yAxisWidthLeft = 0),
              (this.yAxisWidthRight = 0),
              (this.xAxisHeight = 0),
              (this.isSparkline = this.w.config.chart.sparkline.enabled),
              (this.dimHelpers = new Te(this)),
              (this.dimYAxis = new Ve(this)),
              (this.dimXAxis = new Re(this)),
              (this.dimGrid = new Pe(this)),
              (this.lgWidthForSideLegends = 0),
              (this.gridPad = this.w.config.grid.padding),
              (this.xPadRight = 0),
              (this.xPadLeft = 0);
          }
          return (
            u($, [
              {
                key: "plotCoords",
                value: function () {
                  var s = this,
                    o = this.w,
                    c = o.globals;
                  (this.lgRect = this.dimHelpers.getLegendsRect()),
                    this.isSparkline &&
                      (o.config.markers.discrete.length > 0 ||
                        o.config.markers.size > 0) &&
                      Object.entries(this.gridPad).forEach(function (d) {
                        var f = D(d, 2),
                          g = f[0],
                          y = f[1];
                        s.gridPad[g] = Math.max(
                          y,
                          s.w.globals.markers.largestSize / 1.5
                        );
                      }),
                    c.axisCharts
                      ? this.setDimensionsForAxisCharts()
                      : this.setDimensionsForNonAxisCharts(),
                    this.dimGrid.gridPadFortitleSubtitle(),
                    (c.gridHeight =
                      c.gridHeight - this.gridPad.top - this.gridPad.bottom),
                    (c.gridWidth =
                      c.gridWidth -
                      this.gridPad.left -
                      this.gridPad.right -
                      this.xPadRight -
                      this.xPadLeft);
                  var h = this.dimGrid.gridPadForColumnsInNumericAxis(
                    c.gridWidth
                  );
                  (c.gridWidth = c.gridWidth - 2 * h),
                    (c.translateX =
                      c.translateX +
                      this.gridPad.left +
                      this.xPadLeft +
                      (h > 0 ? h + 4 : 0)),
                    (c.translateY = c.translateY + this.gridPad.top);
                },
              },
              {
                key: "setDimensionsForAxisCharts",
                value: function () {
                  var s = this,
                    o = this.w,
                    c = o.globals,
                    h = this.dimYAxis.getyAxisLabelsCoords(),
                    d = this.dimYAxis.getyAxisTitleCoords();
                  (o.globals.yLabelsCoords = []),
                    (o.globals.yTitleCoords = []),
                    o.config.yaxis.map(function (O, N) {
                      o.globals.yLabelsCoords.push({
                        width: h[N].width,
                        index: N,
                      }),
                        o.globals.yTitleCoords.push({
                          width: d[N].width,
                          index: N,
                        });
                    }),
                    (this.yAxisWidth = this.dimYAxis.getTotalYAxisWidth());
                  var f = this.dimXAxis.getxAxisLabelsCoords(),
                    g = this.dimXAxis.getxAxisGroupLabelsCoords(),
                    y = this.dimXAxis.getxAxisTitleCoords();
                  this.conditionalChecksForAxisCoords(f, y, g),
                    (c.translateXAxisY = o.globals.rotateXLabels
                      ? this.xAxisHeight / 8
                      : -4),
                    (c.translateXAxisX =
                      o.globals.rotateXLabels &&
                      o.globals.isXNumeric &&
                      o.config.xaxis.labels.rotate <= -45
                        ? -this.xAxisWidth / 4
                        : 0),
                    o.globals.isBarHorizontal &&
                      ((c.rotateXLabels = !1),
                      (c.translateXAxisY =
                        (parseInt(o.config.xaxis.labels.style.fontSize, 10) /
                          1.5) *
                        -1)),
                    (c.translateXAxisY =
                      c.translateXAxisY + o.config.xaxis.labels.offsetY),
                    (c.translateXAxisX =
                      c.translateXAxisX + o.config.xaxis.labels.offsetX);
                  var x = this.yAxisWidth,
                    k = this.xAxisHeight;
                  (c.xAxisLabelsHeight = this.xAxisHeight - y.height),
                    (c.xAxisGroupLabelsHeight = c.xAxisLabelsHeight - f.height),
                    (c.xAxisLabelsWidth = this.xAxisWidth),
                    (c.xAxisHeight = this.xAxisHeight);
                  var _ = 10;
                  (o.config.chart.type === "radar" || this.isSparkline) &&
                    ((x = 0), (k = c.goldenPadding)),
                    this.isSparkline && (this.lgRect = { height: 0, width: 0 }),
                    (this.isSparkline || o.config.chart.type === "treemap") &&
                      ((x = 0), (k = 0), (_ = 0)),
                    this.isSparkline ||
                      this.dimXAxis.additionalPaddingXLabels(f);
                  var A = function () {
                    (c.translateX = x),
                      (c.gridHeight =
                        c.svgHeight -
                        s.lgRect.height -
                        k -
                        (s.isSparkline || o.config.chart.type === "treemap"
                          ? 0
                          : o.globals.rotateXLabels
                          ? 10
                          : 15)),
                      (c.gridWidth = c.svgWidth - x);
                  };
                  switch (
                    (o.config.xaxis.position === "top" &&
                      (_ = c.xAxisHeight - o.config.xaxis.axisTicks.height - 5),
                    o.config.legend.position)
                  ) {
                    case "bottom":
                      (c.translateY = _), A();
                      break;
                    case "top":
                      (c.translateY = this.lgRect.height + _), A();
                      break;
                    case "left":
                      (c.translateY = _),
                        (c.translateX = this.lgRect.width + x),
                        (c.gridHeight = c.svgHeight - k - 12),
                        (c.gridWidth = c.svgWidth - this.lgRect.width - x);
                      break;
                    case "right":
                      (c.translateY = _),
                        (c.translateX = x),
                        (c.gridHeight = c.svgHeight - k - 12),
                        (c.gridWidth = c.svgWidth - this.lgRect.width - x - 5);
                      break;
                    default:
                      throw new Error("Legend position not supported");
                  }
                  this.dimGrid.setGridXPosForDualYAxis(d, h),
                    new Q(this.ctx).setYAxisXPosition(h, d);
                },
              },
              {
                key: "setDimensionsForNonAxisCharts",
                value: function () {
                  var s = this.w,
                    o = s.globals,
                    c = s.config,
                    h = 0;
                  s.config.legend.show && !s.config.legend.floating && (h = 20);
                  var d =
                      c.chart.type === "pie" ||
                      c.chart.type === "polarArea" ||
                      c.chart.type === "donut"
                        ? "pie"
                        : "radialBar",
                    f = c.plotOptions[d].offsetY,
                    g = c.plotOptions[d].offsetX;
                  if (!c.legend.show || c.legend.floating)
                    return (
                      (o.gridHeight =
                        o.svgHeight -
                        c.grid.padding.left +
                        c.grid.padding.right),
                      (o.gridWidth = o.gridHeight),
                      (o.translateY = f),
                      void (o.translateX = g + (o.svgWidth - o.gridWidth) / 2)
                    );
                  switch (c.legend.position) {
                    case "bottom":
                      (o.gridHeight =
                        o.svgHeight - this.lgRect.height - o.goldenPadding),
                        (o.gridWidth = o.svgWidth),
                        (o.translateY = f - 10),
                        (o.translateX = g + (o.svgWidth - o.gridWidth) / 2);
                      break;
                    case "top":
                      (o.gridHeight =
                        o.svgHeight - this.lgRect.height - o.goldenPadding),
                        (o.gridWidth = o.svgWidth),
                        (o.translateY = this.lgRect.height + f + 10),
                        (o.translateX = g + (o.svgWidth - o.gridWidth) / 2);
                      break;
                    case "left":
                      (o.gridWidth = o.svgWidth - this.lgRect.width - h),
                        (o.gridHeight =
                          c.chart.height !== "auto"
                            ? o.svgHeight
                            : o.gridWidth),
                        (o.translateY = f),
                        (o.translateX = g + this.lgRect.width + h);
                      break;
                    case "right":
                      (o.gridWidth = o.svgWidth - this.lgRect.width - h - 5),
                        (o.gridHeight =
                          c.chart.height !== "auto"
                            ? o.svgHeight
                            : o.gridWidth),
                        (o.translateY = f),
                        (o.translateX = g + 10);
                      break;
                    default:
                      throw new Error("Legend position not supported");
                  }
                },
              },
              {
                key: "conditionalChecksForAxisCoords",
                value: function (s, o, c) {
                  var h = this.w,
                    d = h.globals.hasXaxisGroups ? 2 : 1,
                    f = c.height + s.height + o.height,
                    g = h.globals.isMultiLineX
                      ? 1.2
                      : h.globals.LINE_HEIGHT_RATIO,
                    y = h.globals.rotateXLabels ? 22 : 10,
                    x =
                      h.globals.rotateXLabels &&
                      h.config.legend.position === "bottom"
                        ? 10
                        : 0;
                  (this.xAxisHeight = f * g + d * y + x),
                    (this.xAxisWidth = s.width),
                    this.xAxisHeight - o.height >
                      h.config.xaxis.labels.maxHeight &&
                      (this.xAxisHeight = h.config.xaxis.labels.maxHeight),
                    h.config.xaxis.labels.minHeight &&
                      this.xAxisHeight < h.config.xaxis.labels.minHeight &&
                      (this.xAxisHeight = h.config.xaxis.labels.minHeight),
                    h.config.xaxis.floating && (this.xAxisHeight = 0);
                  var k = 0,
                    _ = 0;
                  h.config.yaxis.forEach(function (A) {
                    (k += A.labels.minWidth), (_ += A.labels.maxWidth);
                  }),
                    this.yAxisWidth < k && (this.yAxisWidth = k),
                    this.yAxisWidth > _ && (this.yAxisWidth = _);
                },
              },
            ]),
            $
          );
        })(),
        Ze = (function () {
          function $(s) {
            a(this, $), (this.w = s.w), (this.lgCtx = s);
          }
          return (
            u($, [
              {
                key: "getLegendStyles",
                value: function () {
                  var s = document.createElement("style");
                  s.setAttribute("type", "text/css");
                  var o = document.createTextNode(`	
    	
      .apexcharts-legend {	
        display: flex;	
        overflow: auto;	
        padding: 0 10px;	
      }	
      .apexcharts-legend.apx-legend-position-bottom, .apexcharts-legend.apx-legend-position-top {	
        flex-wrap: wrap	
      }	
      .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {	
        flex-direction: column;	
        bottom: 0;	
      }	
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-left, .apexcharts-legend.apx-legend-position-top.apexcharts-align-left, .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {	
        justify-content: flex-start;	
      }	
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-center, .apexcharts-legend.apx-legend-position-top.apexcharts-align-center {	
        justify-content: center;  	
      }	
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-right, .apexcharts-legend.apx-legend-position-top.apexcharts-align-right {	
        justify-content: flex-end;	
      }	
      .apexcharts-legend-series {	
        cursor: pointer;	
        line-height: normal;	
      }	
      .apexcharts-legend.apx-legend-position-bottom .apexcharts-legend-series, .apexcharts-legend.apx-legend-position-top .apexcharts-legend-series{	
        display: flex;	
        align-items: center;	
      }	
      .apexcharts-legend-text {	
        position: relative;	
        font-size: 14px;	
      }	
      .apexcharts-legend-text *, .apexcharts-legend-marker * {	
        pointer-events: none;	
      }	
      .apexcharts-legend-marker {	
        position: relative;	
        display: inline-block;	
        cursor: pointer;	
        margin-right: 3px;	
        border-style: solid;
      }	
      	
      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{	
        display: inline-block;	
      }	
      .apexcharts-legend-series.apexcharts-no-click {	
        cursor: auto;	
      }	
      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {	
        display: none !important;	
      }	
      .apexcharts-inactive-legend {	
        opacity: 0.45;	
      }`);
                  return s.appendChild(o), s;
                },
              },
              {
                key: "getLegendBBox",
                value: function () {
                  var s = this.w.globals.dom.baseEl
                      .querySelector(".apexcharts-legend")
                      .getBoundingClientRect(),
                    o = s.width;
                  return { clwh: s.height, clww: o };
                },
              },
              {
                key: "appendToForeignObject",
                value: function () {
                  this.w.globals.dom.elLegendForeign.appendChild(
                    this.getLegendStyles()
                  );
                },
              },
              {
                key: "toggleDataSeries",
                value: function (s, o) {
                  var c = this,
                    h = this.w;
                  if (
                    h.globals.axisCharts ||
                    h.config.chart.type === "radialBar"
                  ) {
                    h.globals.resized = !0;
                    var d = null,
                      f = null;
                    (h.globals.risingSeries = []),
                      h.globals.axisCharts
                        ? ((d = h.globals.dom.baseEl.querySelector(
                            ".apexcharts-series[data\\:realIndex='".concat(
                              s,
                              "']"
                            )
                          )),
                          (f = parseInt(d.getAttribute("data:realIndex"), 10)))
                        : ((d = h.globals.dom.baseEl.querySelector(
                            ".apexcharts-series[rel='".concat(s + 1, "']")
                          )),
                          (f = parseInt(d.getAttribute("rel"), 10) - 1)),
                      o
                        ? [
                            {
                              cs: h.globals.collapsedSeries,
                              csi: h.globals.collapsedSeriesIndices,
                            },
                            {
                              cs: h.globals.ancillaryCollapsedSeries,
                              csi: h.globals.ancillaryCollapsedSeriesIndices,
                            },
                          ].forEach(function (k) {
                            c.riseCollapsedSeries(k.cs, k.csi, f);
                          })
                        : this.hideSeries({ seriesEl: d, realIndex: f });
                  } else {
                    var g = h.globals.dom.Paper.select(
                        " .apexcharts-series[rel='".concat(s + 1, "'] path")
                      ),
                      y = h.config.chart.type;
                    if (y === "pie" || y === "polarArea" || y === "donut") {
                      var x = h.config.plotOptions.pie.donut.labels;
                      new K(this.lgCtx.ctx).pathMouseDown(g.members[0], null),
                        this.lgCtx.ctx.pie.printDataLabelsInner(
                          g.members[0].node,
                          x
                        );
                    }
                    g.fire("click");
                  }
                },
              },
              {
                key: "hideSeries",
                value: function (s) {
                  var o = s.seriesEl,
                    c = s.realIndex,
                    h = this.w,
                    d = B.clone(h.config.series);
                  if (h.globals.axisCharts) {
                    var f = !1;
                    if (
                      (h.config.yaxis[c] &&
                        h.config.yaxis[c].show &&
                        h.config.yaxis[c].showAlways &&
                        ((f = !0),
                        h.globals.ancillaryCollapsedSeriesIndices.indexOf(c) <
                          0 &&
                          (h.globals.ancillaryCollapsedSeries.push({
                            index: c,
                            data: d[c].data.slice(),
                            type: o.parentNode.className.baseVal.split("-")[1],
                          }),
                          h.globals.ancillaryCollapsedSeriesIndices.push(c))),
                      !f)
                    ) {
                      h.globals.collapsedSeries.push({
                        index: c,
                        data: d[c].data.slice(),
                        type: o.parentNode.className.baseVal.split("-")[1],
                      }),
                        h.globals.collapsedSeriesIndices.push(c);
                      var g = h.globals.risingSeries.indexOf(c);
                      h.globals.risingSeries.splice(g, 1);
                    }
                  } else
                    h.globals.collapsedSeries.push({ index: c, data: d[c] }),
                      h.globals.collapsedSeriesIndices.push(c);
                  for (var y = o.childNodes, x = 0; x < y.length; x++)
                    y[x].classList.contains("apexcharts-series-markers-wrap") &&
                      (y[x].classList.contains("apexcharts-hide")
                        ? y[x].classList.remove("apexcharts-hide")
                        : y[x].classList.add("apexcharts-hide"));
                  (h.globals.allSeriesCollapsed =
                    h.globals.collapsedSeries.length ===
                    h.config.series.length),
                    (d = this._getSeriesBasedOnCollapsedState(d)),
                    this.lgCtx.ctx.updateHelpers._updateSeries(
                      d,
                      h.config.chart.animations.dynamicAnimation.enabled
                    );
                },
              },
              {
                key: "riseCollapsedSeries",
                value: function (s, o, c) {
                  var h = this.w,
                    d = B.clone(h.config.series);
                  if (s.length > 0) {
                    for (var f = 0; f < s.length; f++)
                      s[f].index === c &&
                        (h.globals.axisCharts
                          ? ((d[c].data = s[f].data.slice()),
                            s.splice(f, 1),
                            o.splice(f, 1),
                            h.globals.risingSeries.push(c))
                          : ((d[c] = s[f].data),
                            s.splice(f, 1),
                            o.splice(f, 1),
                            h.globals.risingSeries.push(c)));
                    (d = this._getSeriesBasedOnCollapsedState(d)),
                      this.lgCtx.ctx.updateHelpers._updateSeries(
                        d,
                        h.config.chart.animations.dynamicAnimation.enabled
                      );
                  }
                },
              },
              {
                key: "_getSeriesBasedOnCollapsedState",
                value: function (s) {
                  var o = this.w;
                  return (
                    o.globals.axisCharts
                      ? s.forEach(function (c, h) {
                          o.globals.collapsedSeriesIndices.indexOf(h) > -1 &&
                            (s[h].data = []);
                        })
                      : s.forEach(function (c, h) {
                          o.globals.collapsedSeriesIndices.indexOf(h) > -1 &&
                            (s[h] = 0);
                        }),
                    s
                  );
                },
              },
            ]),
            $
          );
        })(),
        Je = (function () {
          function $(s) {
            a(this, $),
              (this.ctx = s),
              (this.w = s.w),
              (this.onLegendClick = this.onLegendClick.bind(this)),
              (this.onLegendHovered = this.onLegendHovered.bind(this)),
              (this.isBarsDistributed =
                this.w.config.chart.type === "bar" &&
                this.w.config.plotOptions.bar.distributed &&
                this.w.config.series.length === 1),
              (this.legendHelpers = new Ze(this));
          }
          return (
            u($, [
              {
                key: "init",
                value: function () {
                  var s = this.w,
                    o = s.globals,
                    c = s.config;
                  if (
                    ((c.legend.showForSingleSeries && o.series.length === 1) ||
                      this.isBarsDistributed ||
                      o.series.length > 1 ||
                      !o.axisCharts) &&
                    c.legend.show
                  ) {
                    for (; o.dom.elLegendWrap.firstChild; )
                      o.dom.elLegendWrap.removeChild(
                        o.dom.elLegendWrap.firstChild
                      );
                    this.drawLegends(),
                      B.isIE11()
                        ? document
                            .getElementsByTagName("head")[0]
                            .appendChild(this.legendHelpers.getLegendStyles())
                        : this.legendHelpers.appendToForeignObject(),
                      c.legend.position === "bottom" ||
                      c.legend.position === "top"
                        ? this.legendAlignHorizontal()
                        : (c.legend.position !== "right" &&
                            c.legend.position !== "left") ||
                          this.legendAlignVertical();
                  }
                },
              },
              {
                key: "drawLegends",
                value: function () {
                  var s = this,
                    o = this.w,
                    c = o.config.legend.fontFamily,
                    h = o.globals.seriesNames,
                    d = o.globals.colors.slice();
                  if (o.config.chart.type === "heatmap") {
                    var f = o.config.plotOptions.heatmap.colorScale.ranges;
                    (h = f.map(function (De) {
                      return De.name ? De.name : De.from + " - " + De.to;
                    })),
                      (d = f.map(function (De) {
                        return De.color;
                      }));
                  } else
                    this.isBarsDistributed && (h = o.globals.labels.slice());
                  o.config.legend.customLegendItems.length &&
                    (h = o.config.legend.customLegendItems);
                  for (
                    var g = o.globals.legendFormatter,
                      y = o.config.legend.inverseOrder,
                      x = y ? h.length - 1 : 0;
                    y ? x >= 0 : x <= h.length - 1;
                    y ? x-- : x++
                  ) {
                    var k,
                      _ = g(h[x], { seriesIndex: x, w: o }),
                      A = !1,
                      O = !1;
                    if (o.globals.collapsedSeries.length > 0)
                      for (var N = 0; N < o.globals.collapsedSeries.length; N++)
                        o.globals.collapsedSeries[N].index === x && (A = !0);
                    if (o.globals.ancillaryCollapsedSeriesIndices.length > 0)
                      for (
                        var H = 0;
                        H < o.globals.ancillaryCollapsedSeriesIndices.length;
                        H++
                      )
                        o.globals.ancillaryCollapsedSeriesIndices[H] === x &&
                          (O = !0);
                    var G = document.createElement("span");
                    G.classList.add("apexcharts-legend-marker");
                    var te = o.config.legend.markers.offsetX,
                      se = o.config.legend.markers.offsetY,
                      b = o.config.legend.markers.height,
                      C = o.config.legend.markers.width,
                      F = o.config.legend.markers.strokeWidth,
                      ee = o.config.legend.markers.strokeColor,
                      ue = o.config.legend.markers.radius,
                      he = G.style;
                    (he.background = d[x]),
                      (he.color = d[x]),
                      he.setProperty("background", d[x], "important"),
                      o.config.legend.markers.fillColors &&
                        o.config.legend.markers.fillColors[x] &&
                        (he.background = o.config.legend.markers.fillColors[x]),
                      o.globals.seriesColors[x] !== void 0 &&
                        ((he.background = o.globals.seriesColors[x]),
                        (he.color = o.globals.seriesColors[x])),
                      (he.height = Array.isArray(b)
                        ? parseFloat(b[x]) + "px"
                        : parseFloat(b) + "px"),
                      (he.width = Array.isArray(C)
                        ? parseFloat(C[x]) + "px"
                        : parseFloat(C) + "px"),
                      (he.left =
                        (Array.isArray(te)
                          ? parseFloat(te[x])
                          : parseFloat(te)) + "px"),
                      (he.top =
                        (Array.isArray(se)
                          ? parseFloat(se[x])
                          : parseFloat(se)) + "px"),
                      (he.borderWidth = Array.isArray(F) ? F[x] : F),
                      (he.borderColor = Array.isArray(ee) ? ee[x] : ee),
                      (he.borderRadius = Array.isArray(ue)
                        ? parseFloat(ue[x]) + "px"
                        : parseFloat(ue) + "px"),
                      o.config.legend.markers.customHTML &&
                        (Array.isArray(o.config.legend.markers.customHTML)
                          ? o.config.legend.markers.customHTML[x] &&
                            (G.innerHTML =
                              o.config.legend.markers.customHTML[x]())
                          : (G.innerHTML =
                              o.config.legend.markers.customHTML())),
                      K.setAttrs(G, { rel: x + 1, "data:collapsed": A || O }),
                      (A || O) && G.classList.add("apexcharts-inactive-legend");
                    var we = document.createElement("div"),
                      Ae = document.createElement("span");
                    Ae.classList.add("apexcharts-legend-text"),
                      (Ae.innerHTML = Array.isArray(_) ? _.join(" ") : _);
                    var Le = o.config.legend.labels.useSeriesColors
                      ? o.globals.colors[x]
                      : Array.isArray(o.config.legend.labels.colors)
                      ? (k = o.config.legend.labels.colors) === null ||
                        k === void 0
                        ? void 0
                        : k[x]
                      : o.config.legend.labels.colors;
                    Le || (Le = o.config.chart.foreColor),
                      (Ae.style.color = Le),
                      (Ae.style.fontSize =
                        parseFloat(o.config.legend.fontSize) + "px"),
                      (Ae.style.fontWeight = o.config.legend.fontWeight),
                      (Ae.style.fontFamily = c || o.config.chart.fontFamily),
                      K.setAttrs(Ae, {
                        rel: x + 1,
                        i: x,
                        "data:default-text": encodeURIComponent(_),
                        "data:collapsed": A || O,
                      }),
                      we.appendChild(G),
                      we.appendChild(Ae);
                    var ze = new fe(this.ctx);
                    o.config.legend.showForZeroSeries ||
                      (ze.getSeriesTotalByIndex(x) === 0 &&
                        ze.seriesHaveSameValues(x) &&
                        !ze.isSeriesNull(x) &&
                        o.globals.collapsedSeriesIndices.indexOf(x) === -1 &&
                        o.globals.ancillaryCollapsedSeriesIndices.indexOf(x) ===
                          -1 &&
                        we.classList.add("apexcharts-hidden-zero-series")),
                      o.config.legend.showForNullSeries ||
                        (ze.isSeriesNull(x) &&
                          o.globals.collapsedSeriesIndices.indexOf(x) === -1 &&
                          o.globals.ancillaryCollapsedSeriesIndices.indexOf(
                            x
                          ) === -1 &&
                          we.classList.add("apexcharts-hidden-null-series")),
                      o.globals.dom.elLegendWrap.appendChild(we),
                      o.globals.dom.elLegendWrap.classList.add(
                        "apexcharts-align-".concat(
                          o.config.legend.horizontalAlign
                        )
                      ),
                      o.globals.dom.elLegendWrap.classList.add(
                        "apx-legend-position-" + o.config.legend.position
                      ),
                      we.classList.add("apexcharts-legend-series"),
                      (we.style.margin = ""
                        .concat(o.config.legend.itemMargin.vertical, "px ")
                        .concat(o.config.legend.itemMargin.horizontal, "px")),
                      (o.globals.dom.elLegendWrap.style.width = o.config.legend
                        .width
                        ? o.config.legend.width + "px"
                        : ""),
                      (o.globals.dom.elLegendWrap.style.height = o.config.legend
                        .height
                        ? o.config.legend.height + "px"
                        : ""),
                      K.setAttrs(we, {
                        rel: x + 1,
                        seriesName: B.escapeString(h[x]),
                        "data:collapsed": A || O,
                      }),
                      (A || O) &&
                        we.classList.add("apexcharts-inactive-legend"),
                      o.config.legend.onItemClick.toggleDataSeries ||
                        we.classList.add("apexcharts-no-click");
                  }
                  o.globals.dom.elWrap.addEventListener(
                    "click",
                    s.onLegendClick,
                    !0
                  ),
                    o.config.legend.onItemHover.highlightDataSeries &&
                      o.config.legend.customLegendItems.length === 0 &&
                      (o.globals.dom.elWrap.addEventListener(
                        "mousemove",
                        s.onLegendHovered,
                        !0
                      ),
                      o.globals.dom.elWrap.addEventListener(
                        "mouseout",
                        s.onLegendHovered,
                        !0
                      ));
                },
              },
              {
                key: "setLegendWrapXY",
                value: function (s, o) {
                  var c = this.w,
                    h = c.globals.dom.elLegendWrap,
                    d = h.getBoundingClientRect(),
                    f = 0,
                    g = 0;
                  if (c.config.legend.position === "bottom")
                    g += c.globals.svgHeight - d.height / 2;
                  else if (c.config.legend.position === "top") {
                    var y = new Be(this.ctx),
                      x = y.dimHelpers.getTitleSubtitleCoords("title").height,
                      k =
                        y.dimHelpers.getTitleSubtitleCoords("subtitle").height;
                    g = g + (x > 0 ? x - 10 : 0) + (k > 0 ? k - 10 : 0);
                  }
                  (h.style.position = "absolute"),
                    (f = f + s + c.config.legend.offsetX),
                    (g = g + o + c.config.legend.offsetY),
                    (h.style.left = f + "px"),
                    (h.style.top = g + "px"),
                    c.config.legend.position === "bottom"
                      ? ((h.style.top = "auto"),
                        (h.style.bottom = 5 - c.config.legend.offsetY + "px"))
                      : c.config.legend.position === "right" &&
                        ((h.style.left = "auto"),
                        (h.style.right = 25 + c.config.legend.offsetX + "px")),
                    ["width", "height"].forEach(function (_) {
                      h.style[_] &&
                        (h.style[_] = parseInt(c.config.legend[_], 10) + "px");
                    });
                },
              },
              {
                key: "legendAlignHorizontal",
                value: function () {
                  var s = this.w;
                  s.globals.dom.elLegendWrap.style.right = 0;
                  var o = this.legendHelpers.getLegendBBox(),
                    c = new Be(this.ctx),
                    h = c.dimHelpers.getTitleSubtitleCoords("title"),
                    d = c.dimHelpers.getTitleSubtitleCoords("subtitle"),
                    f = 0;
                  s.config.legend.position === "bottom"
                    ? (f = -o.clwh / 1.8)
                    : s.config.legend.position === "top" &&
                      (f =
                        h.height +
                        d.height +
                        s.config.title.margin +
                        s.config.subtitle.margin -
                        10),
                    this.setLegendWrapXY(20, f);
                },
              },
              {
                key: "legendAlignVertical",
                value: function () {
                  var s = this.w,
                    o = this.legendHelpers.getLegendBBox(),
                    c = 0;
                  s.config.legend.position === "left" && (c = 20),
                    s.config.legend.position === "right" &&
                      (c = s.globals.svgWidth - o.clww - 10),
                    this.setLegendWrapXY(c, 20);
                },
              },
              {
                key: "onLegendHovered",
                value: function (s) {
                  var o = this.w,
                    c =
                      s.target.classList.contains("apexcharts-legend-text") ||
                      s.target.classList.contains("apexcharts-legend-marker");
                  if (
                    o.config.chart.type === "heatmap" ||
                    this.isBarsDistributed
                  ) {
                    if (c) {
                      var h = parseInt(s.target.getAttribute("rel"), 10) - 1;
                      this.ctx.events.fireEvent("legendHover", [
                        this.ctx,
                        h,
                        this.w,
                      ]),
                        new Ee(this.ctx).highlightRangeInSeries(s, s.target);
                    }
                  } else
                    !s.target.classList.contains(
                      "apexcharts-inactive-legend"
                    ) &&
                      c &&
                      new Ee(this.ctx).toggleSeriesOnHover(s, s.target);
                },
              },
              {
                key: "onLegendClick",
                value: function (s) {
                  var o = this.w;
                  if (
                    !o.config.legend.customLegendItems.length &&
                    (s.target.classList.contains("apexcharts-legend-text") ||
                      s.target.classList.contains("apexcharts-legend-marker"))
                  ) {
                    var c = parseInt(s.target.getAttribute("rel"), 10) - 1,
                      h = s.target.getAttribute("data:collapsed") === "true",
                      d = this.w.config.chart.events.legendClick;
                    typeof d == "function" && d(this.ctx, c, this.w),
                      this.ctx.events.fireEvent("legendClick", [
                        this.ctx,
                        c,
                        this.w,
                      ]);
                    var f = this.w.config.legend.markers.onClick;
                    typeof f == "function" &&
                      s.target.classList.contains("apexcharts-legend-marker") &&
                      (f(this.ctx, c, this.w),
                      this.ctx.events.fireEvent("legendMarkerClick", [
                        this.ctx,
                        c,
                        this.w,
                      ])),
                      o.config.chart.type !== "treemap" &&
                        o.config.chart.type !== "heatmap" &&
                        !this.isBarsDistributed &&
                        o.config.legend.onItemClick.toggleDataSeries &&
                        this.legendHelpers.toggleDataSeries(c, h);
                  }
                },
              },
            ]),
            $
          );
        })(),
        st = (function () {
          function $(s) {
            a(this, $), (this.ctx = s), (this.w = s.w);
            var o = this.w;
            (this.ev = this.w.config.chart.events),
              (this.selectedClass = "apexcharts-selected"),
              (this.localeValues = this.w.globals.locale.toolbar),
              (this.minX = o.globals.minX),
              (this.maxX = o.globals.maxX);
          }
          return (
            u($, [
              {
                key: "createToolbar",
                value: function () {
                  var s = this,
                    o = this.w,
                    c = function () {
                      return document.createElement("div");
                    },
                    h = c();
                  if (
                    (h.setAttribute("class", "apexcharts-toolbar"),
                    (h.style.top = o.config.chart.toolbar.offsetY + "px"),
                    (h.style.right = 3 - o.config.chart.toolbar.offsetX + "px"),
                    o.globals.dom.elWrap.appendChild(h),
                    (this.elZoom = c()),
                    (this.elZoomIn = c()),
                    (this.elZoomOut = c()),
                    (this.elPan = c()),
                    (this.elSelection = c()),
                    (this.elZoomReset = c()),
                    (this.elMenuIcon = c()),
                    (this.elMenu = c()),
                    (this.elCustomIcons = []),
                    (this.t = o.config.chart.toolbar.tools),
                    Array.isArray(this.t.customIcons))
                  )
                    for (var d = 0; d < this.t.customIcons.length; d++)
                      this.elCustomIcons.push(c());
                  var f = [],
                    g = function (_, A, O) {
                      var N = _.toLowerCase();
                      s.t[N] &&
                        o.config.chart.zoom.enabled &&
                        f.push({
                          el: A,
                          icon: typeof s.t[N] == "string" ? s.t[N] : O,
                          title: s.localeValues[_],
                          class: "apexcharts-".concat(N, "-icon"),
                        });
                    };
                  g(
                    "zoomIn",
                    this.elZoomIn,
                    `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
</svg>
`
                  ),
                    g(
                      "zoomOut",
                      this.elZoomOut,
                      `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
</svg>
`
                    );
                  var y = function (_) {
                    s.t[_] &&
                      o.config.chart[_].enabled &&
                      f.push({
                        el: _ === "zoom" ? s.elZoom : s.elSelection,
                        icon:
                          typeof s.t[_] == "string"
                            ? s.t[_]
                            : _ === "zoom"
                            ? `<svg xmlns="http://www.w3.org/2000/svg" fill="#000000" height="24" viewBox="0 0 24 24" width="24">
    <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>
    <path d="M0 0h24v24H0V0z" fill="none"/>
    <path d="M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z"/>
</svg>`
                            : `<svg fill="#6E8192" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z"/>
</svg>`,
                        title:
                          s.localeValues[
                            _ === "zoom" ? "selectionZoom" : "selection"
                          ],
                        class: o.globals.isTouchDevice
                          ? "apexcharts-element-hidden"
                          : "apexcharts-".concat(_, "-icon"),
                      });
                  };
                  y("zoom"),
                    y("selection"),
                    this.t.pan &&
                      o.config.chart.zoom.enabled &&
                      f.push({
                        el: this.elPan,
                        icon:
                          typeof this.t.pan == "string"
                            ? this.t.pan
                            : `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" height="24" viewBox="0 0 24 24" width="24">
    <defs>
        <path d="M0 0h24v24H0z" id="a"/>
    </defs>
    <clipPath id="b">
        <use overflow="visible" xlink:href="#a"/>
    </clipPath>
    <path clip-path="url(#b)" d="M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"/>
</svg>`,
                        title: this.localeValues.pan,
                        class: o.globals.isTouchDevice
                          ? "apexcharts-element-hidden"
                          : "apexcharts-pan-icon",
                      }),
                    g(
                      "reset",
                      this.elZoomReset,
                      `<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>
    <path d="M0 0h24v24H0z" fill="none"/>
</svg>`
                    ),
                    this.t.download &&
                      f.push({
                        el: this.elMenuIcon,
                        icon:
                          typeof this.t.download == "string"
                            ? this.t.download
                            : '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"/><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/></svg>',
                        title: this.localeValues.menu,
                        class: "apexcharts-menu-icon",
                      });
                  for (var x = 0; x < this.elCustomIcons.length; x++)
                    f.push({
                      el: this.elCustomIcons[x],
                      icon: this.t.customIcons[x].icon,
                      title: this.t.customIcons[x].title,
                      index: this.t.customIcons[x].index,
                      class:
                        "apexcharts-toolbar-custom-icon " +
                        this.t.customIcons[x].class,
                    });
                  f.forEach(function (_, A) {
                    _.index && B.moveIndexInArray(f, A, _.index);
                  });
                  for (var k = 0; k < f.length; k++)
                    K.setAttrs(f[k].el, {
                      class: f[k].class,
                      title: f[k].title,
                    }),
                      (f[k].el.innerHTML = f[k].icon),
                      h.appendChild(f[k].el);
                  this._createHamburgerMenu(h),
                    o.globals.zoomEnabled
                      ? this.elZoom.classList.add(this.selectedClass)
                      : o.globals.panEnabled
                      ? this.elPan.classList.add(this.selectedClass)
                      : o.globals.selectionEnabled &&
                        this.elSelection.classList.add(this.selectedClass),
                    this.addToolbarEventListeners();
                },
              },
              {
                key: "_createHamburgerMenu",
                value: function (s) {
                  (this.elMenuItems = []),
                    s.appendChild(this.elMenu),
                    K.setAttrs(this.elMenu, { class: "apexcharts-menu" });
                  var o = [
                    { name: "exportSVG", title: this.localeValues.exportToSVG },
                    { name: "exportPNG", title: this.localeValues.exportToPNG },
                    { name: "exportCSV", title: this.localeValues.exportToCSV },
                  ];
                  this.w.globals.allSeriesHasEqualX || o.splice(2, 1);
                  for (var c = 0; c < o.length; c++)
                    this.elMenuItems.push(document.createElement("div")),
                      (this.elMenuItems[c].innerHTML = o[c].title),
                      K.setAttrs(this.elMenuItems[c], {
                        class: "apexcharts-menu-item ".concat(o[c].name),
                        title: o[c].title,
                      }),
                      this.elMenu.appendChild(this.elMenuItems[c]);
                },
              },
              {
                key: "addToolbarEventListeners",
                value: function () {
                  var s = this;
                  this.elZoomReset.addEventListener(
                    "click",
                    this.handleZoomReset.bind(this)
                  ),
                    this.elSelection.addEventListener(
                      "click",
                      this.toggleZoomSelection.bind(this, "selection")
                    ),
                    this.elZoom.addEventListener(
                      "click",
                      this.toggleZoomSelection.bind(this, "zoom")
                    ),
                    this.elZoomIn.addEventListener(
                      "click",
                      this.handleZoomIn.bind(this)
                    ),
                    this.elZoomOut.addEventListener(
                      "click",
                      this.handleZoomOut.bind(this)
                    ),
                    this.elPan.addEventListener(
                      "click",
                      this.togglePanning.bind(this)
                    ),
                    this.elMenuIcon.addEventListener(
                      "click",
                      this.toggleMenu.bind(this)
                    ),
                    this.elMenuItems.forEach(function (c) {
                      c.classList.contains("exportSVG")
                        ? c.addEventListener(
                            "click",
                            s.handleDownload.bind(s, "svg")
                          )
                        : c.classList.contains("exportPNG")
                        ? c.addEventListener(
                            "click",
                            s.handleDownload.bind(s, "png")
                          )
                        : c.classList.contains("exportCSV") &&
                          c.addEventListener(
                            "click",
                            s.handleDownload.bind(s, "csv")
                          );
                    });
                  for (var o = 0; o < this.t.customIcons.length; o++)
                    this.elCustomIcons[o].addEventListener(
                      "click",
                      this.t.customIcons[o].click.bind(
                        this,
                        this.ctx,
                        this.ctx.w
                      )
                    );
                },
              },
              {
                key: "toggleZoomSelection",
                value: function (s) {
                  this.ctx.getSyncedCharts().forEach(function (o) {
                    o.ctx.toolbar.toggleOtherControls();
                    var c =
                        s === "selection"
                          ? o.ctx.toolbar.elSelection
                          : o.ctx.toolbar.elZoom,
                      h =
                        s === "selection" ? "selectionEnabled" : "zoomEnabled";
                    (o.w.globals[h] = !o.w.globals[h]),
                      c.classList.contains(o.ctx.toolbar.selectedClass)
                        ? c.classList.remove(o.ctx.toolbar.selectedClass)
                        : c.classList.add(o.ctx.toolbar.selectedClass);
                  });
                },
              },
              {
                key: "getToolbarIconsReference",
                value: function () {
                  var s = this.w;
                  this.elZoom ||
                    (this.elZoom = s.globals.dom.baseEl.querySelector(
                      ".apexcharts-zoom-icon"
                    )),
                    this.elPan ||
                      (this.elPan = s.globals.dom.baseEl.querySelector(
                        ".apexcharts-pan-icon"
                      )),
                    this.elSelection ||
                      (this.elSelection = s.globals.dom.baseEl.querySelector(
                        ".apexcharts-selection-icon"
                      ));
                },
              },
              {
                key: "enableZoomPanFromToolbar",
                value: function (s) {
                  this.toggleOtherControls(),
                    s === "pan"
                      ? (this.w.globals.panEnabled = !0)
                      : (this.w.globals.zoomEnabled = !0);
                  var o = s === "pan" ? this.elPan : this.elZoom,
                    c = s === "pan" ? this.elZoom : this.elPan;
                  o && o.classList.add(this.selectedClass),
                    c && c.classList.remove(this.selectedClass);
                },
              },
              {
                key: "togglePanning",
                value: function () {
                  this.ctx.getSyncedCharts().forEach(function (s) {
                    s.ctx.toolbar.toggleOtherControls(),
                      (s.w.globals.panEnabled = !s.w.globals.panEnabled),
                      s.ctx.toolbar.elPan.classList.contains(
                        s.ctx.toolbar.selectedClass
                      )
                        ? s.ctx.toolbar.elPan.classList.remove(
                            s.ctx.toolbar.selectedClass
                          )
                        : s.ctx.toolbar.elPan.classList.add(
                            s.ctx.toolbar.selectedClass
                          );
                  });
                },
              },
              {
                key: "toggleOtherControls",
                value: function () {
                  var s = this,
                    o = this.w;
                  (o.globals.panEnabled = !1),
                    (o.globals.zoomEnabled = !1),
                    (o.globals.selectionEnabled = !1),
                    this.getToolbarIconsReference(),
                    [this.elPan, this.elSelection, this.elZoom].forEach(
                      function (c) {
                        c && c.classList.remove(s.selectedClass);
                      }
                    );
                },
              },
              {
                key: "handleZoomIn",
                value: function () {
                  var s = this.w;
                  s.globals.isRangeBar &&
                    ((this.minX = s.globals.minY),
                    (this.maxX = s.globals.maxY));
                  var o = (this.minX + this.maxX) / 2,
                    c = (this.minX + o) / 2,
                    h = (this.maxX + o) / 2,
                    d = this._getNewMinXMaxX(c, h);
                  s.globals.disableZoomIn ||
                    this.zoomUpdateOptions(d.minX, d.maxX);
                },
              },
              {
                key: "handleZoomOut",
                value: function () {
                  var s = this.w;
                  if (
                    (s.globals.isRangeBar &&
                      ((this.minX = s.globals.minY),
                      (this.maxX = s.globals.maxY)),
                    !(
                      s.config.xaxis.type === "datetime" &&
                      new Date(this.minX).getUTCFullYear() < 1e3
                    ))
                  ) {
                    var o = (this.minX + this.maxX) / 2,
                      c = this.minX - (o - this.minX),
                      h = this.maxX - (o - this.maxX),
                      d = this._getNewMinXMaxX(c, h);
                    s.globals.disableZoomOut ||
                      this.zoomUpdateOptions(d.minX, d.maxX);
                  }
                },
              },
              {
                key: "_getNewMinXMaxX",
                value: function (s, o) {
                  var c = this.w.config.xaxis.convertedCatToNumeric;
                  return {
                    minX: c ? Math.floor(s) : s,
                    maxX: c ? Math.floor(o) : o,
                  };
                },
              },
              {
                key: "zoomUpdateOptions",
                value: function (s, o) {
                  var c = this.w;
                  if (s !== void 0 || o !== void 0) {
                    if (
                      !(
                        c.config.xaxis.convertedCatToNumeric &&
                        (s < 1 && ((s = 1), (o = c.globals.dataPoints)),
                        o - s < 2)
                      )
                    ) {
                      var h = { min: s, max: o },
                        d = this.getBeforeZoomRange(h);
                      d && (h = d.xaxis);
                      var f = { xaxis: h },
                        g = B.clone(c.globals.initialConfig.yaxis);
                      c.config.chart.zoom.autoScaleYaxis &&
                        (g = new oe(this.ctx).autoScaleY(this.ctx, g, {
                          xaxis: h,
                        })),
                        c.config.chart.group || (f.yaxis = g),
                        (this.w.globals.zoomed = !0),
                        this.ctx.updateHelpers._updateOptions(
                          f,
                          !1,
                          this.w.config.chart.animations.dynamicAnimation
                            .enabled
                        ),
                        this.zoomCallback(h, g);
                    }
                  } else this.handleZoomReset();
                },
              },
              {
                key: "zoomCallback",
                value: function (s, o) {
                  typeof this.ev.zoomed == "function" &&
                    this.ev.zoomed(this.ctx, { xaxis: s, yaxis: o });
                },
              },
              {
                key: "getBeforeZoomRange",
                value: function (s, o) {
                  var c = null;
                  return (
                    typeof this.ev.beforeZoom == "function" &&
                      (c = this.ev.beforeZoom(this, { xaxis: s, yaxis: o })),
                    c
                  );
                },
              },
              {
                key: "toggleMenu",
                value: function () {
                  var s = this;
                  window.setTimeout(function () {
                    s.elMenu.classList.contains("apexcharts-menu-open")
                      ? s.elMenu.classList.remove("apexcharts-menu-open")
                      : s.elMenu.classList.add("apexcharts-menu-open");
                  }, 0);
                },
              },
              {
                key: "handleDownload",
                value: function (s) {
                  var o = this.w,
                    c = new Se(this.ctx);
                  switch (s) {
                    case "svg":
                      c.exportToSVG(this.ctx);
                      break;
                    case "png":
                      c.exportToPng(this.ctx);
                      break;
                    case "csv":
                      c.exportToCSV({
                        series: o.config.series,
                        columnDelimiter:
                          o.config.chart.toolbar.export.csv.columnDelimiter,
                      });
                  }
                },
              },
              {
                key: "handleZoomReset",
                value: function (s) {
                  this.ctx.getSyncedCharts().forEach(function (o) {
                    var c = o.w;
                    if (
                      ((c.globals.lastXAxis.min = void 0),
                      (c.globals.lastXAxis.max = void 0),
                      o.updateHelpers.revertDefaultAxisMinMax(),
                      typeof c.config.chart.events.beforeResetZoom ==
                        "function")
                    ) {
                      var h = c.config.chart.events.beforeResetZoom(o, c);
                      h && o.updateHelpers.revertDefaultAxisMinMax(h);
                    }
                    typeof c.config.chart.events.zoomed == "function" &&
                      o.ctx.toolbar.zoomCallback({
                        min: c.config.xaxis.min,
                        max: c.config.xaxis.max,
                      }),
                      (c.globals.zoomed = !1);
                    var d = o.ctx.series.emptyCollapsedSeries(
                      B.clone(c.globals.initialSeries)
                    );
                    o.updateHelpers._updateSeries(
                      d,
                      c.config.chart.animations.dynamicAnimation.enabled
                    );
                  });
                },
              },
              {
                key: "destroy",
                value: function () {
                  (this.elZoom = null),
                    (this.elZoomIn = null),
                    (this.elZoomOut = null),
                    (this.elPan = null),
                    (this.elSelection = null),
                    (this.elZoomReset = null),
                    (this.elMenuIcon = null);
                },
              },
            ]),
            $
          );
        })(),
        Ur = (function ($) {
          m(o, st);
          var s = M(o);
          function o(c) {
            var h;
            return (
              a(this, o),
              ((h = s.call(this, c)).ctx = c),
              (h.w = c.w),
              (h.dragged = !1),
              (h.graphics = new K(h.ctx)),
              (h.eventList = [
                "mousedown",
                "mouseleave",
                "mousemove",
                "touchstart",
                "touchmove",
                "mouseup",
                "touchend",
              ]),
              (h.clientX = 0),
              (h.clientY = 0),
              (h.startX = 0),
              (h.endX = 0),
              (h.dragX = 0),
              (h.startY = 0),
              (h.endY = 0),
              (h.dragY = 0),
              (h.moveDirection = "none"),
              h
            );
          }
          return (
            u(o, [
              {
                key: "init",
                value: function (c) {
                  var h = this,
                    d = c.xyRatios,
                    f = this.w,
                    g = this;
                  (this.xyRatios = d),
                    (this.zoomRect = this.graphics.drawRect(0, 0, 0, 0)),
                    (this.selectionRect = this.graphics.drawRect(0, 0, 0, 0)),
                    (this.gridRect =
                      f.globals.dom.baseEl.querySelector(".apexcharts-grid")),
                    this.zoomRect.node.classList.add("apexcharts-zoom-rect"),
                    this.selectionRect.node.classList.add(
                      "apexcharts-selection-rect"
                    ),
                    f.globals.dom.elGraphical.add(this.zoomRect),
                    f.globals.dom.elGraphical.add(this.selectionRect),
                    f.config.chart.selection.type === "x"
                      ? (this.slDraggableRect = this.selectionRect
                          .draggable({
                            minX: 0,
                            minY: 0,
                            maxX: f.globals.gridWidth,
                            maxY: f.globals.gridHeight,
                          })
                          .on(
                            "dragmove",
                            this.selectionDragging.bind(this, "dragging")
                          ))
                      : f.config.chart.selection.type === "y"
                      ? (this.slDraggableRect = this.selectionRect
                          .draggable({ minX: 0, maxX: f.globals.gridWidth })
                          .on(
                            "dragmove",
                            this.selectionDragging.bind(this, "dragging")
                          ))
                      : (this.slDraggableRect = this.selectionRect
                          .draggable()
                          .on(
                            "dragmove",
                            this.selectionDragging.bind(this, "dragging")
                          )),
                    this.preselectedSelection(),
                    (this.hoverArea = f.globals.dom.baseEl.querySelector(
                      "".concat(f.globals.chartClass, " .apexcharts-svg")
                    )),
                    this.hoverArea.classList.add("apexcharts-zoomable"),
                    this.eventList.forEach(function (y) {
                      h.hoverArea.addEventListener(
                        y,
                        g.svgMouseEvents.bind(g, d),
                        { capture: !1, passive: !0 }
                      );
                    });
                },
              },
              {
                key: "destroy",
                value: function () {
                  this.slDraggableRect &&
                    (this.slDraggableRect.draggable(!1),
                    this.slDraggableRect.off(),
                    this.selectionRect.off()),
                    (this.selectionRect = null),
                    (this.zoomRect = null),
                    (this.gridRect = null);
                },
              },
              {
                key: "svgMouseEvents",
                value: function (c, h) {
                  var d = this.w,
                    f = this,
                    g = this.ctx.toolbar,
                    y = d.globals.zoomEnabled
                      ? d.config.chart.zoom.type
                      : d.config.chart.selection.type,
                    x = d.config.chart.toolbar.autoSelected;
                  if (
                    (h.shiftKey
                      ? ((this.shiftWasPressed = !0),
                        g.enableZoomPanFromToolbar(
                          x === "pan" ? "zoom" : "pan"
                        ))
                      : this.shiftWasPressed &&
                        (g.enableZoomPanFromToolbar(x),
                        (this.shiftWasPressed = !1)),
                    h.target)
                  ) {
                    var k,
                      _ = h.target.classList;
                    if (
                      (h.target.parentNode &&
                        h.target.parentNode !== null &&
                        (k = h.target.parentNode.classList),
                      !(
                        _.contains("apexcharts-selection-rect") ||
                        _.contains("apexcharts-legend-marker") ||
                        _.contains("apexcharts-legend-text") ||
                        (k && k.contains("apexcharts-toolbar"))
                      ))
                    ) {
                      if (
                        ((f.clientX =
                          h.type === "touchmove" || h.type === "touchstart"
                            ? h.touches[0].clientX
                            : h.type === "touchend"
                            ? h.changedTouches[0].clientX
                            : h.clientX),
                        (f.clientY =
                          h.type === "touchmove" || h.type === "touchstart"
                            ? h.touches[0].clientY
                            : h.type === "touchend"
                            ? h.changedTouches[0].clientY
                            : h.clientY),
                        h.type === "mousedown" && h.which === 1)
                      ) {
                        var A = f.gridRect.getBoundingClientRect();
                        (f.startX = f.clientX - A.left),
                          (f.startY = f.clientY - A.top),
                          (f.dragged = !1),
                          (f.w.globals.mousedown = !0);
                      }
                      if (
                        (((h.type === "mousemove" && h.which === 1) ||
                          h.type === "touchmove") &&
                          ((f.dragged = !0),
                          d.globals.panEnabled
                            ? ((d.globals.selection = null),
                              f.w.globals.mousedown &&
                                f.panDragging({
                                  context: f,
                                  zoomtype: y,
                                  xyRatios: c,
                                }))
                            : ((f.w.globals.mousedown &&
                                d.globals.zoomEnabled) ||
                                (f.w.globals.mousedown &&
                                  d.globals.selectionEnabled)) &&
                              (f.selection = f.selectionDrawing({
                                context: f,
                                zoomtype: y,
                              }))),
                        h.type === "mouseup" ||
                          h.type === "touchend" ||
                          h.type === "mouseleave")
                      ) {
                        var O = f.gridRect.getBoundingClientRect();
                        f.w.globals.mousedown &&
                          ((f.endX = f.clientX - O.left),
                          (f.endY = f.clientY - O.top),
                          (f.dragX = Math.abs(f.endX - f.startX)),
                          (f.dragY = Math.abs(f.endY - f.startY)),
                          (d.globals.zoomEnabled ||
                            d.globals.selectionEnabled) &&
                            f.selectionDrawn({ context: f, zoomtype: y }),
                          d.globals.panEnabled &&
                            d.config.xaxis.convertedCatToNumeric &&
                            f.delayedPanScrolled()),
                          d.globals.zoomEnabled &&
                            f.hideSelectionRect(this.selectionRect),
                          (f.dragged = !1),
                          (f.w.globals.mousedown = !1);
                      }
                      this.makeSelectionRectDraggable();
                    }
                  }
                },
              },
              {
                key: "makeSelectionRectDraggable",
                value: function () {
                  var c = this.w;
                  if (this.selectionRect) {
                    var h = this.selectionRect.node.getBoundingClientRect();
                    h.width > 0 &&
                      h.height > 0 &&
                      this.slDraggableRect
                        .selectize({
                          points: "l, r",
                          pointSize: 8,
                          pointType: "rect",
                        })
                        .resize({
                          constraint: {
                            minX: 0,
                            minY: 0,
                            maxX: c.globals.gridWidth,
                            maxY: c.globals.gridHeight,
                          },
                        })
                        .on(
                          "resizing",
                          this.selectionDragging.bind(this, "resizing")
                        );
                  }
                },
              },
              {
                key: "preselectedSelection",
                value: function () {
                  var c = this.w,
                    h = this.xyRatios;
                  if (!c.globals.zoomEnabled) {
                    if (
                      c.globals.selection !== void 0 &&
                      c.globals.selection !== null
                    )
                      this.drawSelectionRect(c.globals.selection);
                    else if (
                      c.config.chart.selection.xaxis.min !== void 0 &&
                      c.config.chart.selection.xaxis.max !== void 0
                    ) {
                      var d =
                          (c.config.chart.selection.xaxis.min -
                            c.globals.minX) /
                          h.xRatio,
                        f = {
                          x: d,
                          y: 0,
                          width:
                            c.globals.gridWidth -
                            (c.globals.maxX -
                              c.config.chart.selection.xaxis.max) /
                              h.xRatio -
                            d,
                          height: c.globals.gridHeight,
                          translateX: 0,
                          translateY: 0,
                          selectionEnabled: !0,
                        };
                      this.drawSelectionRect(f),
                        this.makeSelectionRectDraggable(),
                        typeof c.config.chart.events.selection == "function" &&
                          c.config.chart.events.selection(this.ctx, {
                            xaxis: {
                              min: c.config.chart.selection.xaxis.min,
                              max: c.config.chart.selection.xaxis.max,
                            },
                            yaxis: {},
                          });
                    }
                  }
                },
              },
              {
                key: "drawSelectionRect",
                value: function (c) {
                  var h = c.x,
                    d = c.y,
                    f = c.width,
                    g = c.height,
                    y = c.translateX,
                    x = y === void 0 ? 0 : y,
                    k = c.translateY,
                    _ = k === void 0 ? 0 : k,
                    A = this.w,
                    O = this.zoomRect,
                    N = this.selectionRect;
                  if (this.dragged || A.globals.selection !== null) {
                    var H = { transform: "translate(" + x + ", " + _ + ")" };
                    A.globals.zoomEnabled &&
                      this.dragged &&
                      (f < 0 && (f = 1),
                      O.attr({
                        x: h,
                        y: d,
                        width: f,
                        height: g,
                        fill: A.config.chart.zoom.zoomedArea.fill.color,
                        "fill-opacity":
                          A.config.chart.zoom.zoomedArea.fill.opacity,
                        stroke: A.config.chart.zoom.zoomedArea.stroke.color,
                        "stroke-width":
                          A.config.chart.zoom.zoomedArea.stroke.width,
                        "stroke-opacity":
                          A.config.chart.zoom.zoomedArea.stroke.opacity,
                      }),
                      K.setAttrs(O.node, H)),
                      A.globals.selectionEnabled &&
                        (N.attr({
                          x: h,
                          y: d,
                          width: f > 0 ? f : 0,
                          height: g > 0 ? g : 0,
                          fill: A.config.chart.selection.fill.color,
                          "fill-opacity": A.config.chart.selection.fill.opacity,
                          stroke: A.config.chart.selection.stroke.color,
                          "stroke-width": A.config.chart.selection.stroke.width,
                          "stroke-dasharray":
                            A.config.chart.selection.stroke.dashArray,
                          "stroke-opacity":
                            A.config.chart.selection.stroke.opacity,
                        }),
                        K.setAttrs(N.node, H));
                  }
                },
              },
              {
                key: "hideSelectionRect",
                value: function (c) {
                  c && c.attr({ x: 0, y: 0, width: 0, height: 0 });
                },
              },
              {
                key: "selectionDrawing",
                value: function (c) {
                  var h = c.context,
                    d = c.zoomtype,
                    f = this.w,
                    g = h,
                    y = this.gridRect.getBoundingClientRect(),
                    x = g.startX - 1,
                    k = g.startY,
                    _ = !1,
                    A = !1,
                    O = g.clientX - y.left - x,
                    N = g.clientY - y.top - k,
                    H = {};
                  return (
                    Math.abs(O + x) > f.globals.gridWidth
                      ? (O = f.globals.gridWidth - x)
                      : g.clientX - y.left < 0 && (O = x),
                    x > g.clientX - y.left && ((_ = !0), (O = Math.abs(O))),
                    k > g.clientY - y.top && ((A = !0), (N = Math.abs(N))),
                    (H =
                      d === "x"
                        ? {
                            x: _ ? x - O : x,
                            y: 0,
                            width: O,
                            height: f.globals.gridHeight,
                          }
                        : d === "y"
                        ? {
                            x: 0,
                            y: A ? k - N : k,
                            width: f.globals.gridWidth,
                            height: N,
                          }
                        : {
                            x: _ ? x - O : x,
                            y: A ? k - N : k,
                            width: O,
                            height: N,
                          }),
                    g.drawSelectionRect(H),
                    g.selectionDragging("resizing"),
                    H
                  );
                },
              },
              {
                key: "selectionDragging",
                value: function (c, h) {
                  var d = this,
                    f = this.w,
                    g = this.xyRatios,
                    y = this.selectionRect,
                    x = 0;
                  c === "resizing" && (x = 30);
                  var k = function (A) {
                      return parseFloat(y.node.getAttribute(A));
                    },
                    _ = {
                      x: k("x"),
                      y: k("y"),
                      width: k("width"),
                      height: k("height"),
                    };
                  (f.globals.selection = _),
                    typeof f.config.chart.events.selection == "function" &&
                      f.globals.selectionEnabled &&
                      (clearTimeout(this.w.globals.selectionResizeTimer),
                      (this.w.globals.selectionResizeTimer = window.setTimeout(
                        function () {
                          var A = d.gridRect.getBoundingClientRect(),
                            O = y.node.getBoundingClientRect(),
                            N = {
                              xaxis: {
                                min:
                                  f.globals.xAxisScale.niceMin +
                                  (O.left - A.left) * g.xRatio,
                                max:
                                  f.globals.xAxisScale.niceMin +
                                  (O.right - A.left) * g.xRatio,
                              },
                              yaxis: {
                                min:
                                  f.globals.yAxisScale[0].niceMin +
                                  (A.bottom - O.bottom) * g.yRatio[0],
                                max:
                                  f.globals.yAxisScale[0].niceMax -
                                  (O.top - A.top) * g.yRatio[0],
                              },
                            };
                          f.config.chart.events.selection(d.ctx, N),
                            f.config.chart.brush.enabled &&
                              f.config.chart.events.brushScrolled !== void 0 &&
                              f.config.chart.events.brushScrolled(d.ctx, N);
                        },
                        x
                      )));
                },
              },
              {
                key: "selectionDrawn",
                value: function (c) {
                  var h = c.context,
                    d = c.zoomtype,
                    f = this.w,
                    g = h,
                    y = this.xyRatios,
                    x = this.ctx.toolbar;
                  if (g.startX > g.endX) {
                    var k = g.startX;
                    (g.startX = g.endX), (g.endX = k);
                  }
                  if (g.startY > g.endY) {
                    var _ = g.startY;
                    (g.startY = g.endY), (g.endY = _);
                  }
                  var A = void 0,
                    O = void 0;
                  f.globals.isRangeBar
                    ? ((A =
                        f.globals.yAxisScale[0].niceMin +
                        g.startX * y.invertedYRatio),
                      (O =
                        f.globals.yAxisScale[0].niceMin +
                        g.endX * y.invertedYRatio))
                    : ((A = f.globals.xAxisScale.niceMin + g.startX * y.xRatio),
                      (O = f.globals.xAxisScale.niceMin + g.endX * y.xRatio));
                  var N = [],
                    H = [];
                  if (
                    (f.config.yaxis.forEach(function (ue, he) {
                      N.push(
                        f.globals.yAxisScale[he].niceMax -
                          y.yRatio[he] * g.startY
                      ),
                        H.push(
                          f.globals.yAxisScale[he].niceMax -
                            y.yRatio[he] * g.endY
                        );
                    }),
                    g.dragged && (g.dragX > 10 || g.dragY > 10) && A !== O)
                  ) {
                    if (f.globals.zoomEnabled) {
                      var G = B.clone(f.globals.initialConfig.yaxis),
                        te = B.clone(f.globals.initialConfig.xaxis);
                      if (
                        ((f.globals.zoomed = !0),
                        f.config.xaxis.convertedCatToNumeric &&
                          ((A = Math.floor(A)),
                          (O = Math.floor(O)),
                          A < 1 && ((A = 1), (O = f.globals.dataPoints)),
                          O - A < 2 && (O = A + 1)),
                        (d !== "xy" && d !== "x") || (te = { min: A, max: O }),
                        (d !== "xy" && d !== "y") ||
                          G.forEach(function (ue, he) {
                            (G[he].min = H[he]), (G[he].max = N[he]);
                          }),
                        f.config.chart.zoom.autoScaleYaxis)
                      ) {
                        var se = new oe(g.ctx);
                        G = se.autoScaleY(g.ctx, G, { xaxis: te });
                      }
                      if (x) {
                        var b = x.getBeforeZoomRange(te, G);
                        b &&
                          ((te = b.xaxis ? b.xaxis : te),
                          (G = b.yaxis ? b.yaxis : G));
                      }
                      var C = { xaxis: te };
                      f.config.chart.group || (C.yaxis = G),
                        g.ctx.updateHelpers._updateOptions(
                          C,
                          !1,
                          g.w.config.chart.animations.dynamicAnimation.enabled
                        ),
                        typeof f.config.chart.events.zoomed == "function" &&
                          x.zoomCallback(te, G);
                    } else if (f.globals.selectionEnabled) {
                      var F,
                        ee = null;
                      (F = { min: A, max: O }),
                        (d !== "xy" && d !== "y") ||
                          (ee = B.clone(f.config.yaxis)).forEach(function (
                            ue,
                            he
                          ) {
                            (ee[he].min = H[he]), (ee[he].max = N[he]);
                          }),
                        (f.globals.selection = g.selection),
                        typeof f.config.chart.events.selection == "function" &&
                          f.config.chart.events.selection(g.ctx, {
                            xaxis: F,
                            yaxis: ee,
                          });
                    }
                  }
                },
              },
              {
                key: "panDragging",
                value: function (c) {
                  var h = c.context,
                    d = this.w,
                    f = h;
                  if (d.globals.lastClientPosition.x !== void 0) {
                    var g = d.globals.lastClientPosition.x - f.clientX,
                      y = d.globals.lastClientPosition.y - f.clientY;
                    Math.abs(g) > Math.abs(y) && g > 0
                      ? (this.moveDirection = "left")
                      : Math.abs(g) > Math.abs(y) && g < 0
                      ? (this.moveDirection = "right")
                      : Math.abs(y) > Math.abs(g) && y > 0
                      ? (this.moveDirection = "up")
                      : Math.abs(y) > Math.abs(g) &&
                        y < 0 &&
                        (this.moveDirection = "down");
                  }
                  d.globals.lastClientPosition = { x: f.clientX, y: f.clientY };
                  var x = d.globals.isRangeBar
                      ? d.globals.minY
                      : d.globals.minX,
                    k = d.globals.isRangeBar ? d.globals.maxY : d.globals.maxX;
                  d.config.xaxis.convertedCatToNumeric || f.panScrolled(x, k);
                },
              },
              {
                key: "delayedPanScrolled",
                value: function () {
                  var c = this.w,
                    h = c.globals.minX,
                    d = c.globals.maxX,
                    f = (c.globals.maxX - c.globals.minX) / 2;
                  this.moveDirection === "left"
                    ? ((h = c.globals.minX + f), (d = c.globals.maxX + f))
                    : this.moveDirection === "right" &&
                      ((h = c.globals.minX - f), (d = c.globals.maxX - f)),
                    (h = Math.floor(h)),
                    (d = Math.floor(d)),
                    this.updateScrolledChart(
                      { xaxis: { min: h, max: d } },
                      h,
                      d
                    );
                },
              },
              {
                key: "panScrolled",
                value: function (c, h) {
                  var d = this.w,
                    f = this.xyRatios,
                    g = B.clone(d.globals.initialConfig.yaxis),
                    y = f.xRatio,
                    x = d.globals.minX,
                    k = d.globals.maxX;
                  d.globals.isRangeBar &&
                    ((y = f.invertedYRatio),
                    (x = d.globals.minY),
                    (k = d.globals.maxY)),
                    this.moveDirection === "left"
                      ? ((c = x + (d.globals.gridWidth / 15) * y),
                        (h = k + (d.globals.gridWidth / 15) * y))
                      : this.moveDirection === "right" &&
                        ((c = x - (d.globals.gridWidth / 15) * y),
                        (h = k - (d.globals.gridWidth / 15) * y)),
                    d.globals.isRangeBar ||
                      ((c < d.globals.initialMinX ||
                        h > d.globals.initialMaxX) &&
                        ((c = x), (h = k)));
                  var _ = { min: c, max: h };
                  d.config.chart.zoom.autoScaleYaxis &&
                    (g = new oe(this.ctx).autoScaleY(this.ctx, g, {
                      xaxis: _,
                    }));
                  var A = { xaxis: { min: c, max: h } };
                  d.config.chart.group || (A.yaxis = g),
                    this.updateScrolledChart(A, c, h);
                },
              },
              {
                key: "updateScrolledChart",
                value: function (c, h, d) {
                  var f = this.w;
                  this.ctx.updateHelpers._updateOptions(c, !1, !1),
                    typeof f.config.chart.events.scrolled == "function" &&
                      f.config.chart.events.scrolled(this.ctx, {
                        xaxis: { min: h, max: d },
                      });
                },
              },
            ]),
            o
          );
        })(),
        Dt = (function () {
          function $(s) {
            a(this, $), (this.w = s.w), (this.ttCtx = s), (this.ctx = s.ctx);
          }
          return (
            u($, [
              {
                key: "getNearestValues",
                value: function (s) {
                  var o = s.hoverArea,
                    c = s.elGrid,
                    h = s.clientX,
                    d = s.clientY,
                    f = this.w,
                    g = c.getBoundingClientRect(),
                    y = g.width,
                    x = g.height,
                    k = y / (f.globals.dataPoints - 1),
                    _ = x / f.globals.dataPoints,
                    A = this.hasBars();
                  (!f.globals.comboCharts && !A) ||
                    f.config.xaxis.convertedCatToNumeric ||
                    (k = y / f.globals.dataPoints);
                  var O = h - g.left - f.globals.barPadForNumericAxis,
                    N = d - g.top;
                  O < 0 || N < 0 || O > y || N > x
                    ? (o.classList.remove("hovering-zoom"),
                      o.classList.remove("hovering-pan"))
                    : f.globals.zoomEnabled
                    ? (o.classList.remove("hovering-pan"),
                      o.classList.add("hovering-zoom"))
                    : f.globals.panEnabled &&
                      (o.classList.remove("hovering-zoom"),
                      o.classList.add("hovering-pan"));
                  var H = Math.round(O / k),
                    G = Math.floor(N / _);
                  A &&
                    !f.config.xaxis.convertedCatToNumeric &&
                    ((H = Math.ceil(O / k)), (H -= 1));
                  var te = null,
                    se = null,
                    b = [],
                    C = [];
                  if (
                    (f.globals.seriesXvalues.forEach(function (he) {
                      b.push([he[0] + 1e-6].concat(he));
                    }),
                    f.globals.seriesYvalues.forEach(function (he) {
                      C.push([he[0] + 1e-6].concat(he));
                    }),
                    (b = b.map(function (he) {
                      return he.filter(function (we) {
                        return B.isNumber(we);
                      });
                    })),
                    (C = C.map(function (he) {
                      return he.filter(function (we) {
                        return B.isNumber(we);
                      });
                    })),
                    f.globals.isXNumeric)
                  ) {
                    var F = this.ttCtx.getElGrid().getBoundingClientRect(),
                      ee = O * (F.width / y),
                      ue = N * (F.height / x);
                    (te = (se = this.closestInMultiArray(ee, ue, b, C)).index),
                      (H = se.j),
                      te !== null &&
                        ((b = f.globals.seriesXvalues[te]),
                        (H = (se = this.closestInArray(ee, b)).index));
                  }
                  return (
                    (f.globals.capturedSeriesIndex = te === null ? -1 : te),
                    (!H || H < 1) && (H = 0),
                    f.globals.isBarHorizontal
                      ? (f.globals.capturedDataPointIndex = G)
                      : (f.globals.capturedDataPointIndex = H),
                    {
                      capturedSeries: te,
                      j: f.globals.isBarHorizontal ? G : H,
                      hoverX: O,
                      hoverY: N,
                    }
                  );
                },
              },
              {
                key: "closestInMultiArray",
                value: function (s, o, c, h) {
                  var d = this.w,
                    f = 0,
                    g = null,
                    y = -1;
                  d.globals.series.length > 1
                    ? (f = this.getFirstActiveXArray(c))
                    : (g = 0);
                  var x = c[f][0],
                    k = Math.abs(s - x);
                  if (
                    (c.forEach(function (O) {
                      O.forEach(function (N, H) {
                        var G = Math.abs(s - N);
                        G < k && ((k = G), (y = H));
                      });
                    }),
                    y !== -1)
                  ) {
                    var _ = h[f][y],
                      A = Math.abs(o - _);
                    (g = f),
                      h.forEach(function (O, N) {
                        var H = Math.abs(o - O[y]);
                        H < A && ((A = H), (g = N));
                      });
                  }
                  return { index: g, j: y };
                },
              },
              {
                key: "getFirstActiveXArray",
                value: function (s) {
                  for (
                    var o = this.w,
                      c = 0,
                      h = s.map(function (f, g) {
                        return f.length > 0 ? g : -1;
                      }),
                      d = 0;
                    d < h.length;
                    d++
                  )
                    if (
                      h[d] !== -1 &&
                      o.globals.collapsedSeriesIndices.indexOf(d) === -1 &&
                      o.globals.ancillaryCollapsedSeriesIndices.indexOf(d) ===
                        -1
                    ) {
                      c = h[d];
                      break;
                    }
                  return c;
                },
              },
              {
                key: "closestInArray",
                value: function (s, o) {
                  for (
                    var c = o[0], h = null, d = Math.abs(s - c), f = 0;
                    f < o.length;
                    f++
                  ) {
                    var g = Math.abs(s - o[f]);
                    g < d && ((d = g), (h = f));
                  }
                  return { index: h };
                },
              },
              {
                key: "isXoverlap",
                value: function (s) {
                  var o = [],
                    c = this.w.globals.seriesX.filter(function (d) {
                      return d[0] !== void 0;
                    });
                  if (c.length > 0)
                    for (var h = 0; h < c.length - 1; h++)
                      c[h][s] !== void 0 &&
                        c[h + 1][s] !== void 0 &&
                        c[h][s] !== c[h + 1][s] &&
                        o.push("unEqual");
                  return o.length === 0;
                },
              },
              {
                key: "isInitialSeriesSameLen",
                value: function () {
                  for (
                    var s = !0, o = this.w.globals.initialSeries, c = 0;
                    c < o.length - 1;
                    c++
                  )
                    if (o[c].data.length !== o[c + 1].data.length) {
                      s = !1;
                      break;
                    }
                  return s;
                },
              },
              {
                key: "getBarsHeight",
                value: function (s) {
                  return z(s).reduce(function (o, c) {
                    return o + c.getBBox().height;
                  }, 0);
                },
              },
              {
                key: "getElMarkers",
                value: function (s) {
                  return typeof s == "number"
                    ? this.w.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-series[data\\:realIndex='".concat(
                          s,
                          "'] .apexcharts-series-markers-wrap > *"
                        )
                      )
                    : this.w.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-series-markers-wrap > *"
                      );
                },
              },
              {
                key: "getAllMarkers",
                value: function () {
                  var s = this.w.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-series-markers-wrap"
                  );
                  (s = z(s)).sort(function (c, h) {
                    var d = Number(c.getAttribute("data:realIndex")),
                      f = Number(h.getAttribute("data:realIndex"));
                    return f < d ? 1 : f > d ? -1 : 0;
                  });
                  var o = [];
                  return (
                    s.forEach(function (c) {
                      o.push(c.querySelector(".apexcharts-marker"));
                    }),
                    o
                  );
                },
              },
              {
                key: "hasMarkers",
                value: function (s) {
                  return this.getElMarkers(s).length > 0;
                },
              },
              {
                key: "getElBars",
                value: function () {
                  return this.w.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-boxPlot-series, .apexcharts-rangebar-series"
                  );
                },
              },
              {
                key: "hasBars",
                value: function () {
                  return this.getElBars().length > 0;
                },
              },
              {
                key: "getHoverMarkerSize",
                value: function (s) {
                  var o = this.w,
                    c = o.config.markers.hover.size;
                  return (
                    c === void 0 &&
                      (c =
                        o.globals.markers.size[s] +
                        o.config.markers.hover.sizeOffset),
                    c
                  );
                },
              },
              {
                key: "toggleAllTooltipSeriesGroups",
                value: function (s) {
                  var o = this.w,
                    c = this.ttCtx;
                  c.allTooltipSeriesGroups.length === 0 &&
                    (c.allTooltipSeriesGroups =
                      o.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-tooltip-series-group"
                      ));
                  for (
                    var h = c.allTooltipSeriesGroups, d = 0;
                    d < h.length;
                    d++
                  )
                    s === "enable"
                      ? (h[d].classList.add("apexcharts-active"),
                        (h[d].style.display = o.config.tooltip.items.display))
                      : (h[d].classList.remove("apexcharts-active"),
                        (h[d].style.display = "none"));
                },
              },
            ]),
            $
          );
        })(),
        Qt = (function () {
          function $(s) {
            a(this, $),
              (this.w = s.w),
              (this.ctx = s.ctx),
              (this.ttCtx = s),
              (this.tooltipUtil = new Dt(s));
          }
          return (
            u($, [
              {
                key: "drawSeriesTexts",
                value: function (s) {
                  var o = s.shared,
                    c = o === void 0 || o,
                    h = s.ttItems,
                    d = s.i,
                    f = d === void 0 ? 0 : d,
                    g = s.j,
                    y = g === void 0 ? null : g,
                    x = s.y1,
                    k = s.y2,
                    _ = s.e,
                    A = this.w;
                  A.config.tooltip.custom !== void 0
                    ? this.handleCustomTooltip({
                        i: f,
                        j: y,
                        y1: x,
                        y2: k,
                        w: A,
                      })
                    : this.toggleActiveInactiveSeries(c);
                  var O = this.getValuesToPrint({ i: f, j: y });
                  this.printLabels({
                    i: f,
                    j: y,
                    values: O,
                    ttItems: h,
                    shared: c,
                    e: _,
                  });
                  var N = this.ttCtx.getElTooltip();
                  (this.ttCtx.tooltipRect.ttWidth =
                    N.getBoundingClientRect().width),
                    (this.ttCtx.tooltipRect.ttHeight =
                      N.getBoundingClientRect().height);
                },
              },
              {
                key: "printLabels",
                value: function (s) {
                  var o,
                    c = this,
                    h = s.i,
                    d = s.j,
                    f = s.values,
                    g = s.ttItems,
                    y = s.shared,
                    x = s.e,
                    k = this.w,
                    _ = [],
                    A = function (F) {
                      return (
                        k.globals.seriesGoals[F] &&
                        k.globals.seriesGoals[F][d] &&
                        Array.isArray(k.globals.seriesGoals[F][d])
                      );
                    },
                    O = f.xVal,
                    N = f.zVal,
                    H = f.xAxisTTVal,
                    G = "",
                    te = k.globals.colors[h];
                  d !== null &&
                    k.config.plotOptions.bar.distributed &&
                    (te = k.globals.colors[d]);
                  for (
                    var se = function (F, ee) {
                        var ue = c.getFormatters(h);
                        (G = c.getSeriesName({
                          fn: ue.yLbTitleFormatter,
                          index: h,
                          seriesIndex: h,
                          j: d,
                        })),
                          k.config.chart.type === "treemap" &&
                            (G = ue.yLbTitleFormatter(
                              String(k.config.series[h].data[d].x),
                              {
                                series: k.globals.series,
                                seriesIndex: h,
                                dataPointIndex: d,
                                w: k,
                              }
                            ));
                        var he = k.config.tooltip.inverseOrder ? ee : F;
                        if (k.globals.axisCharts) {
                          var we = function (ze) {
                            var De, Ge, it, St;
                            return k.globals.isRangeData
                              ? ue.yLbFormatter(
                                  (De = k.globals.seriesRangeStart) === null ||
                                    De === void 0 ||
                                    (Ge = De[ze]) === null ||
                                    Ge === void 0
                                    ? void 0
                                    : Ge[d],
                                  {
                                    series: k.globals.seriesRangeStart,
                                    seriesIndex: ze,
                                    dataPointIndex: d,
                                    w: k,
                                  }
                                ) +
                                  " - " +
                                  ue.yLbFormatter(
                                    (it = k.globals.seriesRangeEnd) === null ||
                                      it === void 0 ||
                                      (St = it[ze]) === null ||
                                      St === void 0
                                      ? void 0
                                      : St[d],
                                    {
                                      series: k.globals.seriesRangeEnd,
                                      seriesIndex: ze,
                                      dataPointIndex: d,
                                      w: k,
                                    }
                                  )
                              : ue.yLbFormatter(k.globals.series[ze][d], {
                                  series: k.globals.series,
                                  seriesIndex: ze,
                                  dataPointIndex: d,
                                  w: k,
                                });
                          };
                          if (y)
                            (ue = c.getFormatters(he)),
                              (G = c.getSeriesName({
                                fn: ue.yLbTitleFormatter,
                                index: he,
                                seriesIndex: h,
                                j: d,
                              })),
                              (te = k.globals.colors[he]),
                              (o = we(he)),
                              A(he) &&
                                (_ = k.globals.seriesGoals[he][d].map(function (
                                  ze
                                ) {
                                  return {
                                    attrs: ze,
                                    val: ue.yLbFormatter(ze.value, {
                                      seriesIndex: he,
                                      dataPointIndex: d,
                                      w: k,
                                    }),
                                  };
                                }));
                          else {
                            var Ae,
                              Le =
                                x == null ||
                                (Ae = x.target) === null ||
                                Ae === void 0
                                  ? void 0
                                  : Ae.getAttribute("fill");
                            Le &&
                              (te =
                                Le.indexOf("url") !== -1
                                  ? document
                                      .querySelector(Le.substr(4).slice(0, -1))
                                      .childNodes[0].getAttribute("stroke")
                                  : Le),
                              (o = we(h)),
                              A(h) &&
                                Array.isArray(k.globals.seriesGoals[h][d]) &&
                                (_ = k.globals.seriesGoals[h][d].map(function (
                                  ze
                                ) {
                                  return {
                                    attrs: ze,
                                    val: ue.yLbFormatter(ze.value, {
                                      seriesIndex: h,
                                      dataPointIndex: d,
                                      w: k,
                                    }),
                                  };
                                }));
                          }
                        }
                        d === null &&
                          (o = ue.yLbFormatter(
                            k.globals.series[h],
                            n(
                              n({}, k),
                              {},
                              { seriesIndex: h, dataPointIndex: h }
                            )
                          )),
                          c.DOMHandling({
                            i: h,
                            t: he,
                            j: d,
                            ttItems: g,
                            values: {
                              val: o,
                              goalVals: _,
                              xVal: O,
                              xAxisTTVal: H,
                              zVal: N,
                            },
                            seriesName: G,
                            shared: y,
                            pColor: te,
                          });
                      },
                      b = 0,
                      C = k.globals.series.length - 1;
                    b < k.globals.series.length;
                    b++, C--
                  )
                    se(b, C);
                },
              },
              {
                key: "getFormatters",
                value: function (s) {
                  var o,
                    c = this.w,
                    h = c.globals.yLabelFormatters[s];
                  return (
                    c.globals.ttVal !== void 0
                      ? Array.isArray(c.globals.ttVal)
                        ? ((h =
                            c.globals.ttVal[s] && c.globals.ttVal[s].formatter),
                          (o =
                            c.globals.ttVal[s] &&
                            c.globals.ttVal[s].title &&
                            c.globals.ttVal[s].title.formatter))
                        : ((h = c.globals.ttVal.formatter),
                          typeof c.globals.ttVal.title.formatter ==
                            "function" && (o = c.globals.ttVal.title.formatter))
                      : (o = c.config.tooltip.y.title.formatter),
                    typeof h != "function" &&
                      (h = c.globals.yLabelFormatters[0]
                        ? c.globals.yLabelFormatters[0]
                        : function (d) {
                            return d;
                          }),
                    typeof o != "function" &&
                      (o = function (d) {
                        return d;
                      }),
                    { yLbFormatter: h, yLbTitleFormatter: o }
                  );
                },
              },
              {
                key: "getSeriesName",
                value: function (s) {
                  var o = s.fn,
                    c = s.index,
                    h = s.seriesIndex,
                    d = s.j,
                    f = this.w;
                  return o(String(f.globals.seriesNames[c]), {
                    series: f.globals.series,
                    seriesIndex: h,
                    dataPointIndex: d,
                    w: f,
                  });
                },
              },
              {
                key: "DOMHandling",
                value: function (s) {
                  s.i;
                  var o = s.t,
                    c = s.j,
                    h = s.ttItems,
                    d = s.values,
                    f = s.seriesName,
                    g = s.shared,
                    y = s.pColor,
                    x = this.w,
                    k = this.ttCtx,
                    _ = d.val,
                    A = d.goalVals,
                    O = d.xVal,
                    N = d.xAxisTTVal,
                    H = d.zVal,
                    G = null;
                  (G = h[o].children),
                    x.config.tooltip.fillSeriesColor &&
                      ((h[o].style.backgroundColor = y),
                      (G[0].style.display = "none")),
                    k.showTooltipTitle &&
                      (k.tooltipTitle === null &&
                        (k.tooltipTitle = x.globals.dom.baseEl.querySelector(
                          ".apexcharts-tooltip-title"
                        )),
                      (k.tooltipTitle.innerHTML = O)),
                    k.isXAxisTooltipEnabled &&
                      (k.xaxisTooltipText.innerHTML = N !== "" ? N : O);
                  var te = h[o].querySelector(
                    ".apexcharts-tooltip-text-y-label"
                  );
                  te && (te.innerHTML = f || "");
                  var se = h[o].querySelector(
                    ".apexcharts-tooltip-text-y-value"
                  );
                  se && (se.innerHTML = _ !== void 0 ? _ : ""),
                    G[0] &&
                      G[0].classList.contains("apexcharts-tooltip-marker") &&
                      (x.config.tooltip.marker.fillColors &&
                        Array.isArray(x.config.tooltip.marker.fillColors) &&
                        (y = x.config.tooltip.marker.fillColors[o]),
                      (G[0].style.backgroundColor = y)),
                    x.config.tooltip.marker.show ||
                      (G[0].style.display = "none");
                  var b = h[o].querySelector(
                      ".apexcharts-tooltip-text-goals-label"
                    ),
                    C = h[o].querySelector(
                      ".apexcharts-tooltip-text-goals-value"
                    );
                  if (A.length && x.globals.seriesGoals[o]) {
                    var F = function () {
                      var ee = "<div >",
                        ue = "<div>";
                      A.forEach(function (he, we) {
                        (ee +=
                          ' <div style="display: flex"><span class="apexcharts-tooltip-marker" style="background-color: '
                            .concat(
                              he.attrs.strokeColor,
                              '; height: 3px; border-radius: 0; top: 5px;"></span> '
                            )
                            .concat(he.attrs.name, "</div>")),
                          (ue += "<div>".concat(he.val, "</div>"));
                      }),
                        (b.innerHTML = ee + "</div>"),
                        (C.innerHTML = ue + "</div>");
                    };
                    g
                      ? x.globals.seriesGoals[o][c] &&
                        Array.isArray(x.globals.seriesGoals[o][c])
                        ? F()
                        : ((b.innerHTML = ""), (C.innerHTML = ""))
                      : F();
                  } else (b.innerHTML = ""), (C.innerHTML = "");
                  H !== null &&
                    ((h[o].querySelector(
                      ".apexcharts-tooltip-text-z-label"
                    ).innerHTML = x.config.tooltip.z.title),
                    (h[o].querySelector(
                      ".apexcharts-tooltip-text-z-value"
                    ).innerHTML = H !== void 0 ? H : "")),
                    g &&
                      G[0] &&
                      (_ == null ||
                      x.globals.ancillaryCollapsedSeriesIndices.indexOf(o) >
                        -1 ||
                      x.globals.collapsedSeriesIndices.indexOf(o) > -1
                        ? (G[0].parentNode.style.display = "none")
                        : (G[0].parentNode.style.display =
                            x.config.tooltip.items.display));
                },
              },
              {
                key: "toggleActiveInactiveSeries",
                value: function (s) {
                  var o = this.w;
                  if (s)
                    this.tooltipUtil.toggleAllTooltipSeriesGroups("enable");
                  else {
                    this.tooltipUtil.toggleAllTooltipSeriesGroups("disable");
                    var c = o.globals.dom.baseEl.querySelector(
                      ".apexcharts-tooltip-series-group"
                    );
                    c &&
                      (c.classList.add("apexcharts-active"),
                      (c.style.display = o.config.tooltip.items.display));
                  }
                },
              },
              {
                key: "getValuesToPrint",
                value: function (s) {
                  var o = s.i,
                    c = s.j,
                    h = this.w,
                    d = this.ctx.series.filteredSeriesX(),
                    f = "",
                    g = "",
                    y = null,
                    x = null,
                    k = {
                      series: h.globals.series,
                      seriesIndex: o,
                      dataPointIndex: c,
                      w: h,
                    },
                    _ = h.globals.ttZFormatter;
                  c === null
                    ? (x = h.globals.series[o])
                    : h.globals.isXNumeric && h.config.chart.type !== "treemap"
                    ? ((f = d[o][c]),
                      d[o].length === 0 &&
                        (f = d[this.tooltipUtil.getFirstActiveXArray(d)][c]))
                    : (f =
                        h.globals.labels[c] !== void 0
                          ? h.globals.labels[c]
                          : "");
                  var A = f;
                  return (
                    h.globals.isXNumeric && h.config.xaxis.type === "datetime"
                      ? (f = new L(this.ctx).xLabelFormat(
                          h.globals.ttKeyFormatter,
                          A,
                          A,
                          {
                            i: void 0,
                            dateFormatter: new P(this.ctx).formatDate,
                            w: this.w,
                          }
                        ))
                      : (f = h.globals.isBarHorizontal
                          ? h.globals.yLabelFormatters[0](A, k)
                          : h.globals.xLabelFormatter(A, k)),
                    h.config.tooltip.x.formatter !== void 0 &&
                      (f = h.globals.ttKeyFormatter(A, k)),
                    h.globals.seriesZ.length > 0 &&
                      h.globals.seriesZ[o].length > 0 &&
                      (y = _(h.globals.seriesZ[o][c], h)),
                    (g =
                      typeof h.config.xaxis.tooltip.formatter == "function"
                        ? h.globals.xaxisTooltipFormatter(A, k)
                        : f),
                    {
                      val: Array.isArray(x) ? x.join(" ") : x,
                      xVal: Array.isArray(f) ? f.join(" ") : f,
                      xAxisTTVal: Array.isArray(g) ? g.join(" ") : g,
                      zVal: y,
                    }
                  );
                },
              },
              {
                key: "handleCustomTooltip",
                value: function (s) {
                  var o = s.i,
                    c = s.j,
                    h = s.y1,
                    d = s.y2,
                    f = s.w,
                    g = this.ttCtx.getElTooltip(),
                    y = f.config.tooltip.custom;
                  Array.isArray(y) && y[o] && (y = y[o]),
                    (g.innerHTML = y({
                      ctx: this.ctx,
                      series: f.globals.series,
                      seriesIndex: o,
                      dataPointIndex: c,
                      y1: h,
                      y2: d,
                      w: f,
                    }));
                },
              },
            ]),
            $
          );
        })(),
        Mn = (function () {
          function $(s) {
            a(this, $), (this.ttCtx = s), (this.ctx = s.ctx), (this.w = s.w);
          }
          return (
            u($, [
              {
                key: "moveXCrosshairs",
                value: function (s) {
                  var o =
                      arguments.length > 1 && arguments[1] !== void 0
                        ? arguments[1]
                        : null,
                    c = this.ttCtx,
                    h = this.w,
                    d = c.getElXCrosshairs(),
                    f = s - c.xcrosshairsWidth / 2,
                    g = h.globals.labels.slice().length;
                  if (
                    (o !== null && (f = (h.globals.gridWidth / g) * o),
                    d === null ||
                      h.globals.isBarHorizontal ||
                      (d.setAttribute("x", f),
                      d.setAttribute("x1", f),
                      d.setAttribute("x2", f),
                      d.setAttribute("y2", h.globals.gridHeight),
                      d.classList.add("apexcharts-active")),
                    f < 0 && (f = 0),
                    f > h.globals.gridWidth && (f = h.globals.gridWidth),
                    c.isXAxisTooltipEnabled)
                  ) {
                    var y = f;
                    (h.config.xaxis.crosshairs.width !== "tickWidth" &&
                      h.config.xaxis.crosshairs.width !== "barWidth") ||
                      (y = f + c.xcrosshairsWidth / 2),
                      this.moveXAxisTooltip(y);
                  }
                },
              },
              {
                key: "moveYCrosshairs",
                value: function (s) {
                  var o = this.ttCtx;
                  o.ycrosshairs !== null &&
                    K.setAttrs(o.ycrosshairs, { y1: s, y2: s }),
                    o.ycrosshairsHidden !== null &&
                      K.setAttrs(o.ycrosshairsHidden, { y1: s, y2: s });
                },
              },
              {
                key: "moveXAxisTooltip",
                value: function (s) {
                  var o = this.w,
                    c = this.ttCtx;
                  if (c.xaxisTooltip !== null && c.xcrosshairsWidth !== 0) {
                    c.xaxisTooltip.classList.add("apexcharts-active");
                    var h =
                      c.xaxisOffY +
                      o.config.xaxis.tooltip.offsetY +
                      o.globals.translateY +
                      1 +
                      o.config.xaxis.offsetY;
                    if (
                      ((s -= c.xaxisTooltip.getBoundingClientRect().width / 2),
                      !isNaN(s))
                    ) {
                      s += o.globals.translateX;
                      var d;
                      (d = new K(this.ctx).getTextRects(
                        c.xaxisTooltipText.innerHTML
                      )),
                        (c.xaxisTooltipText.style.minWidth = d.width + "px"),
                        (c.xaxisTooltip.style.left = s + "px"),
                        (c.xaxisTooltip.style.top = h + "px");
                    }
                  }
                },
              },
              {
                key: "moveYAxisTooltip",
                value: function (s) {
                  var o = this.w,
                    c = this.ttCtx;
                  c.yaxisTTEls === null &&
                    (c.yaxisTTEls = o.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-yaxistooltip"
                    ));
                  var h = parseInt(c.ycrosshairsHidden.getAttribute("y1"), 10),
                    d = o.globals.translateY + h,
                    f = c.yaxisTTEls[s].getBoundingClientRect().height,
                    g = o.globals.translateYAxisX[s] - 2;
                  o.config.yaxis[s].opposite && (g -= 26),
                    (d -= f / 2),
                    o.globals.ignoreYAxisIndexes.indexOf(s) === -1
                      ? (c.yaxisTTEls[s].classList.add("apexcharts-active"),
                        (c.yaxisTTEls[s].style.top = d + "px"),
                        (c.yaxisTTEls[s].style.left =
                          g + o.config.yaxis[s].tooltip.offsetX + "px"))
                      : c.yaxisTTEls[s].classList.remove("apexcharts-active");
                },
              },
              {
                key: "moveTooltip",
                value: function (s, o) {
                  var c =
                      arguments.length > 2 && arguments[2] !== void 0
                        ? arguments[2]
                        : null,
                    h = this.w,
                    d = this.ttCtx,
                    f = d.getElTooltip(),
                    g = d.tooltipRect,
                    y = c !== null ? parseFloat(c) : 1,
                    x = parseFloat(s) + y + 5,
                    k = parseFloat(o) + y / 2;
                  if (
                    (x > h.globals.gridWidth / 2 &&
                      (x = x - g.ttWidth - y - 10),
                    x > h.globals.gridWidth - g.ttWidth - 10 &&
                      (x = h.globals.gridWidth - g.ttWidth),
                    x < -20 && (x = -20),
                    h.config.tooltip.followCursor)
                  ) {
                    var _ = d.getElGrid().getBoundingClientRect();
                    (x = d.e.clientX - _.left) > h.globals.gridWidth / 2 &&
                      (x -= d.tooltipRect.ttWidth),
                      (k = d.e.clientY + h.globals.translateY - _.top) >
                        h.globals.gridHeight / 2 &&
                        (k -= d.tooltipRect.ttHeight);
                  } else
                    h.globals.isBarHorizontal ||
                      (g.ttHeight / 2 + k > h.globals.gridHeight &&
                        (k =
                          h.globals.gridHeight -
                          g.ttHeight +
                          h.globals.translateY));
                  isNaN(x) ||
                    ((x += h.globals.translateX),
                    (f.style.left = x + "px"),
                    (f.style.top = k + "px"));
                },
              },
              {
                key: "moveMarkers",
                value: function (s, o) {
                  var c = this.w,
                    h = this.ttCtx;
                  if (c.globals.markers.size[s] > 0)
                    for (
                      var d = c.globals.dom.baseEl.querySelectorAll(
                          " .apexcharts-series[data\\:realIndex='".concat(
                            s,
                            "'] .apexcharts-marker"
                          )
                        ),
                        f = 0;
                      f < d.length;
                      f++
                    )
                      parseInt(d[f].getAttribute("rel"), 10) === o &&
                        (h.marker.resetPointsSize(),
                        h.marker.enlargeCurrentPoint(o, d[f]));
                  else
                    h.marker.resetPointsSize(),
                      this.moveDynamicPointOnHover(o, s);
                },
              },
              {
                key: "moveDynamicPointOnHover",
                value: function (s, o) {
                  var c,
                    h,
                    d = this.w,
                    f = this.ttCtx,
                    g = d.globals.pointsArray,
                    y = f.tooltipUtil.getHoverMarkerSize(o),
                    x = d.config.series[o].type;
                  if (
                    !x ||
                    (x !== "column" && x !== "candlestick" && x !== "boxPlot")
                  ) {
                    (c = g[o][s][0]), (h = g[o][s][1] ? g[o][s][1] : 0);
                    var k = d.globals.dom.baseEl.querySelector(
                      ".apexcharts-series[data\\:realIndex='".concat(
                        o,
                        "'] .apexcharts-series-markers circle"
                      )
                    );
                    k &&
                      h < d.globals.gridHeight &&
                      h > 0 &&
                      (k.setAttribute("r", y),
                      k.setAttribute("cx", c),
                      k.setAttribute("cy", h)),
                      this.moveXCrosshairs(c),
                      f.fixedTooltip || this.moveTooltip(c, h, y);
                  }
                },
              },
              {
                key: "moveDynamicPointsOnHover",
                value: function (s) {
                  var o,
                    c = this.ttCtx,
                    h = c.w,
                    d = 0,
                    f = 0,
                    g = h.globals.pointsArray;
                  o = new Ee(this.ctx).getActiveConfigSeriesIndex("asc", [
                    "line",
                    "area",
                    "scatter",
                    "bubble",
                  ]);
                  var y = c.tooltipUtil.getHoverMarkerSize(o);
                  g[o] && ((d = g[o][s][0]), (f = g[o][s][1]));
                  var x = c.tooltipUtil.getAllMarkers();
                  if (x !== null)
                    for (var k = 0; k < h.globals.series.length; k++) {
                      var _ = g[k];
                      if (
                        (h.globals.comboCharts &&
                          _ === void 0 &&
                          x.splice(k, 0, null),
                        _ && _.length)
                      ) {
                        var A = g[k][s][1],
                          O = void 0;
                        if (
                          (x[k].setAttribute("cx", d),
                          h.config.chart.type === "rangeArea" &&
                            !h.globals.comboCharts)
                        ) {
                          var N = s + h.globals.series[k].length;
                          (O = g[k][N][1]), (A -= Math.abs(A - O) / 2);
                        }
                        A !== null &&
                        !isNaN(A) &&
                        A < h.globals.gridHeight + y &&
                        A + y > 0
                          ? (x[k] && x[k].setAttribute("r", y),
                            x[k] && x[k].setAttribute("cy", A))
                          : x[k] && x[k].setAttribute("r", 0);
                      }
                    }
                  this.moveXCrosshairs(d),
                    c.fixedTooltip ||
                      this.moveTooltip(d, f || h.globals.gridHeight, y);
                },
              },
              {
                key: "moveStickyTooltipOverBars",
                value: function (s, o) {
                  var c = this.w,
                    h = this.ttCtx,
                    d = c.globals.columnSeries
                      ? c.globals.columnSeries.length
                      : c.globals.series.length,
                    f =
                      d >= 2 && d % 2 == 0
                        ? Math.floor(d / 2)
                        : Math.floor(d / 2) + 1;
                  c.globals.isBarHorizontal &&
                    (f =
                      new Ee(this.ctx).getActiveConfigSeriesIndex("desc") + 1);
                  var g = c.globals.dom.baseEl.querySelector(
                    ".apexcharts-bar-series .apexcharts-series[rel='"
                      .concat(f, "'] path[j='")
                      .concat(
                        s,
                        "'], .apexcharts-candlestick-series .apexcharts-series[rel='"
                      )
                      .concat(f, "'] path[j='")
                      .concat(
                        s,
                        "'], .apexcharts-boxPlot-series .apexcharts-series[rel='"
                      )
                      .concat(f, "'] path[j='")
                      .concat(
                        s,
                        "'], .apexcharts-rangebar-series .apexcharts-series[rel='"
                      )
                      .concat(f, "'] path[j='")
                      .concat(s, "']")
                  );
                  g ||
                    typeof o != "number" ||
                    (g = c.globals.dom.baseEl.querySelector(
                      ".apexcharts-bar-series .apexcharts-series[data\\:realIndex='"
                        .concat(o, "'] path[j='")
                        .concat(
                          s,
                          `'],
        .apexcharts-candlestick-series .apexcharts-series[data\\:realIndex='`
                        )
                        .concat(o, "'] path[j='")
                        .concat(
                          s,
                          `'],
        .apexcharts-boxPlot-series .apexcharts-series[data\\:realIndex='`
                        )
                        .concat(o, "'] path[j='")
                        .concat(
                          s,
                          `'],
        .apexcharts-rangebar-series .apexcharts-series[data\\:realIndex='`
                        )
                        .concat(o, "'] path[j='")
                        .concat(s, "']")
                    ));
                  var y = g ? parseFloat(g.getAttribute("cx")) : 0,
                    x = g ? parseFloat(g.getAttribute("cy")) : 0,
                    k = g ? parseFloat(g.getAttribute("barWidth")) : 0,
                    _ = h.getElGrid().getBoundingClientRect(),
                    A =
                      g &&
                      (g.classList.contains("apexcharts-candlestick-area") ||
                        g.classList.contains("apexcharts-boxPlot-area"));
                  c.globals.isXNumeric
                    ? (g && !A && (y -= d % 2 != 0 ? k / 2 : 0),
                      g && A && c.globals.comboCharts && (y -= k / 2))
                    : c.globals.isBarHorizontal ||
                      ((y =
                        h.xAxisTicksPositions[s - 1] +
                        h.dataPointsDividedWidth / 2),
                      isNaN(y) &&
                        (y =
                          h.xAxisTicksPositions[s] -
                          h.dataPointsDividedWidth / 2)),
                    c.globals.isBarHorizontal
                      ? (x -= h.tooltipRect.ttHeight)
                      : c.config.tooltip.followCursor
                      ? (x = h.e.clientY - _.top - h.tooltipRect.ttHeight / 2)
                      : x + h.tooltipRect.ttHeight + 15 >
                          c.globals.gridHeight && (x = c.globals.gridHeight),
                    c.globals.isBarHorizontal || this.moveXCrosshairs(y),
                    h.fixedTooltip ||
                      this.moveTooltip(y, x || c.globals.gridHeight);
                },
              },
            ]),
            $
          );
        })(),
        Jt = (function () {
          function $(s) {
            a(this, $),
              (this.w = s.w),
              (this.ttCtx = s),
              (this.ctx = s.ctx),
              (this.tooltipPosition = new Mn(s));
          }
          return (
            u($, [
              {
                key: "drawDynamicPoints",
                value: function () {
                  var s = this.w,
                    o = new K(this.ctx),
                    c = new Oe(this.ctx),
                    h =
                      s.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-series"
                      );
                  (h = z(h)),
                    s.config.chart.stacked &&
                      h.sort(function (_, A) {
                        return (
                          parseFloat(_.getAttribute("data:realIndex")) -
                          parseFloat(A.getAttribute("data:realIndex"))
                        );
                      });
                  for (var d = 0; d < h.length; d++) {
                    var f = h[d].querySelector(
                      ".apexcharts-series-markers-wrap"
                    );
                    if (f !== null) {
                      var g = void 0,
                        y = "apexcharts-marker w".concat(
                          (Math.random() + 1).toString(36).substring(4)
                        );
                      (s.config.chart.type !== "line" &&
                        s.config.chart.type !== "area") ||
                        s.globals.comboCharts ||
                        s.config.tooltip.intersect ||
                        (y += " no-pointer-events");
                      var x = c.getMarkerConfig({
                        cssClass: y,
                        seriesIndex: Number(f.getAttribute("data:realIndex")),
                      });
                      (g = o.drawMarker(0, 0, x)).node.setAttribute(
                        "default-marker-size",
                        0
                      );
                      var k = document.createElementNS(s.globals.SVGNS, "g");
                      k.classList.add("apexcharts-series-markers"),
                        k.appendChild(g.node),
                        f.appendChild(k);
                    }
                  }
                },
              },
              {
                key: "enlargeCurrentPoint",
                value: function (s, o) {
                  var c =
                      arguments.length > 2 && arguments[2] !== void 0
                        ? arguments[2]
                        : null,
                    h =
                      arguments.length > 3 && arguments[3] !== void 0
                        ? arguments[3]
                        : null,
                    d = this.w;
                  d.config.chart.type !== "bubble" && this.newPointSize(s, o);
                  var f = o.getAttribute("cx"),
                    g = o.getAttribute("cy");
                  if (
                    (c !== null && h !== null && ((f = c), (g = h)),
                    this.tooltipPosition.moveXCrosshairs(f),
                    !this.fixedTooltip)
                  ) {
                    if (d.config.chart.type === "radar") {
                      var y = this.ttCtx.getElGrid().getBoundingClientRect();
                      f = this.ttCtx.e.clientX - y.left;
                    }
                    this.tooltipPosition.moveTooltip(
                      f,
                      g,
                      d.config.markers.hover.size
                    );
                  }
                },
              },
              {
                key: "enlargePoints",
                value: function (s) {
                  for (
                    var o = this.w,
                      c = this,
                      h = this.ttCtx,
                      d = s,
                      f = o.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"
                      ),
                      g = o.config.markers.hover.size,
                      y = 0;
                    y < f.length;
                    y++
                  ) {
                    var x = f[y].getAttribute("rel"),
                      k = f[y].getAttribute("index");
                    if (
                      (g === void 0 &&
                        (g =
                          o.globals.markers.size[k] +
                          o.config.markers.hover.sizeOffset),
                      d === parseInt(x, 10))
                    ) {
                      c.newPointSize(d, f[y]);
                      var _ = f[y].getAttribute("cx"),
                        A = f[y].getAttribute("cy");
                      c.tooltipPosition.moveXCrosshairs(_),
                        h.fixedTooltip ||
                          c.tooltipPosition.moveTooltip(_, A, g);
                    } else c.oldPointSize(f[y]);
                  }
                },
              },
              {
                key: "newPointSize",
                value: function (s, o) {
                  var c = this.w,
                    h = c.config.markers.hover.size,
                    d =
                      s === 0
                        ? o.parentNode.firstChild
                        : o.parentNode.lastChild;
                  if (d.getAttribute("default-marker-size") !== "0") {
                    var f = parseInt(d.getAttribute("index"), 10);
                    h === void 0 &&
                      (h =
                        c.globals.markers.size[f] +
                        c.config.markers.hover.sizeOffset),
                      h < 0 && (h = 0),
                      d.setAttribute("r", h);
                  }
                },
              },
              {
                key: "oldPointSize",
                value: function (s) {
                  var o = parseFloat(s.getAttribute("default-marker-size"));
                  s.setAttribute("r", o);
                },
              },
              {
                key: "resetPointsSize",
                value: function () {
                  for (
                    var s = this.w.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"
                      ),
                      o = 0;
                    o < s.length;
                    o++
                  ) {
                    var c = parseFloat(
                      s[o].getAttribute("default-marker-size")
                    );
                    B.isNumber(c) && c >= 0
                      ? s[o].setAttribute("r", c)
                      : s[o].setAttribute("r", 0);
                  }
                },
              },
            ]),
            $
          );
        })(),
        wt = (function () {
          function $(s) {
            a(this, $), (this.w = s.w);
            var o = this.w;
            (this.ttCtx = s),
              (this.isVerticalGroupedRangeBar =
                !o.globals.isBarHorizontal &&
                o.config.chart.type === "rangeBar" &&
                o.config.plotOptions.bar.rangeBarGroupRows);
          }
          return (
            u($, [
              {
                key: "getAttr",
                value: function (s, o) {
                  return parseFloat(s.target.getAttribute(o));
                },
              },
              {
                key: "handleHeatTreeTooltip",
                value: function (s) {
                  var o = s.e,
                    c = s.opt,
                    h = s.x,
                    d = s.y,
                    f = s.type,
                    g = this.ttCtx,
                    y = this.w;
                  if (
                    o.target.classList.contains(
                      "apexcharts-".concat(f, "-rect")
                    )
                  ) {
                    var x = this.getAttr(o, "i"),
                      k = this.getAttr(o, "j"),
                      _ = this.getAttr(o, "cx"),
                      A = this.getAttr(o, "cy"),
                      O = this.getAttr(o, "width"),
                      N = this.getAttr(o, "height");
                    if (
                      (g.tooltipLabels.drawSeriesTexts({
                        ttItems: c.ttItems,
                        i: x,
                        j: k,
                        shared: !1,
                        e: o,
                      }),
                      (y.globals.capturedSeriesIndex = x),
                      (y.globals.capturedDataPointIndex = k),
                      (h = _ + g.tooltipRect.ttWidth / 2 + O),
                      (d = A + g.tooltipRect.ttHeight / 2 - N / 2),
                      g.tooltipPosition.moveXCrosshairs(_ + O / 2),
                      h > y.globals.gridWidth / 2 &&
                        (h = _ - g.tooltipRect.ttWidth / 2 + O),
                      g.w.config.tooltip.followCursor)
                    ) {
                      var H = y.globals.dom.elWrap.getBoundingClientRect();
                      (h =
                        y.globals.clientX -
                        H.left -
                        (h > y.globals.gridWidth / 2
                          ? g.tooltipRect.ttWidth
                          : 0)),
                        (d =
                          y.globals.clientY -
                          H.top -
                          (d > y.globals.gridHeight / 2
                            ? g.tooltipRect.ttHeight
                            : 0));
                    }
                  }
                  return { x: h, y: d };
                },
              },
              {
                key: "handleMarkerTooltip",
                value: function (s) {
                  var o,
                    c,
                    h = s.e,
                    d = s.opt,
                    f = s.x,
                    g = s.y,
                    y = this.w,
                    x = this.ttCtx;
                  if (h.target.classList.contains("apexcharts-marker")) {
                    var k = parseInt(d.paths.getAttribute("cx"), 10),
                      _ = parseInt(d.paths.getAttribute("cy"), 10),
                      A = parseFloat(d.paths.getAttribute("val"));
                    if (
                      ((c = parseInt(d.paths.getAttribute("rel"), 10)),
                      (o =
                        parseInt(
                          d.paths.parentNode.parentNode.parentNode.getAttribute(
                            "rel"
                          ),
                          10
                        ) - 1),
                      x.intersect)
                    ) {
                      var O = B.findAncestor(d.paths, "apexcharts-series");
                      O && (o = parseInt(O.getAttribute("data:realIndex"), 10));
                    }
                    if (
                      (x.tooltipLabels.drawSeriesTexts({
                        ttItems: d.ttItems,
                        i: o,
                        j: c,
                        shared: !x.showOnIntersect && y.config.tooltip.shared,
                        e: h,
                      }),
                      h.type === "mouseup" && x.markerClick(h, o, c),
                      (y.globals.capturedSeriesIndex = o),
                      (y.globals.capturedDataPointIndex = c),
                      (f = k),
                      (g =
                        _ +
                        y.globals.translateY -
                        1.4 * x.tooltipRect.ttHeight),
                      x.w.config.tooltip.followCursor)
                    ) {
                      var N = x.getElGrid().getBoundingClientRect();
                      g = x.e.clientY + y.globals.translateY - N.top;
                    }
                    A < 0 && (g = _),
                      x.marker.enlargeCurrentPoint(c, d.paths, f, g);
                  }
                  return { x: f, y: g };
                },
              },
              {
                key: "handleBarTooltip",
                value: function (s) {
                  var o,
                    c,
                    h = s.e,
                    d = s.opt,
                    f = this.w,
                    g = this.ttCtx,
                    y = g.getElTooltip(),
                    x = 0,
                    k = 0,
                    _ = 0,
                    A = this.getBarTooltipXY({ e: h, opt: d });
                  o = A.i;
                  var O = A.barHeight,
                    N = A.j;
                  (f.globals.capturedSeriesIndex = o),
                    (f.globals.capturedDataPointIndex = N),
                    (f.globals.isBarHorizontal && g.tooltipUtil.hasBars()) ||
                    !f.config.tooltip.shared
                      ? ((k = A.x),
                        (_ = A.y),
                        (c = Array.isArray(f.config.stroke.width)
                          ? f.config.stroke.width[o]
                          : f.config.stroke.width),
                        (x = k))
                      : f.globals.comboCharts ||
                        f.config.tooltip.shared ||
                        (x /= 2),
                    isNaN(_) &&
                      (_ = f.globals.svgHeight - g.tooltipRect.ttHeight);
                  var H = parseInt(
                      d.paths.parentNode.getAttribute("data:realIndex"),
                      10
                    ),
                    G = f.globals.isMultipleYAxis
                      ? f.config.yaxis[H] && f.config.yaxis[H].reversed
                      : f.config.yaxis[0].reversed;
                  if (
                    (k + g.tooltipRect.ttWidth > f.globals.gridWidth && !G
                      ? (k -= g.tooltipRect.ttWidth)
                      : k < 0 && (k = 0),
                    g.w.config.tooltip.followCursor)
                  ) {
                    var te = g.getElGrid().getBoundingClientRect();
                    _ = g.e.clientY - te.top;
                  }
                  g.tooltip === null &&
                    (g.tooltip = f.globals.dom.baseEl.querySelector(
                      ".apexcharts-tooltip"
                    )),
                    f.config.tooltip.shared ||
                      (f.globals.comboBarCount > 0
                        ? g.tooltipPosition.moveXCrosshairs(x + c / 2)
                        : g.tooltipPosition.moveXCrosshairs(x)),
                    !g.fixedTooltip &&
                      (!f.config.tooltip.shared ||
                        (f.globals.isBarHorizontal &&
                          g.tooltipUtil.hasBars())) &&
                      (G && (k -= g.tooltipRect.ttWidth) < 0 && (k = 0),
                      !G ||
                        (f.globals.isBarHorizontal &&
                          g.tooltipUtil.hasBars()) ||
                        (_ = _ + O - 2 * (f.globals.series[o][N] < 0 ? O : 0)),
                      (_ =
                        _ + f.globals.translateY - g.tooltipRect.ttHeight / 2),
                      (y.style.left = k + f.globals.translateX + "px"),
                      (y.style.top = _ + "px"));
                },
              },
              {
                key: "getBarTooltipXY",
                value: function (s) {
                  var o = this,
                    c = s.e,
                    h = s.opt,
                    d = this.w,
                    f = null,
                    g = this.ttCtx,
                    y = 0,
                    x = 0,
                    k = 0,
                    _ = 0,
                    A = 0,
                    O = c.target.classList;
                  if (
                    O.contains("apexcharts-bar-area") ||
                    O.contains("apexcharts-candlestick-area") ||
                    O.contains("apexcharts-boxPlot-area") ||
                    O.contains("apexcharts-rangebar-area")
                  ) {
                    var N = c.target,
                      H = N.getBoundingClientRect(),
                      G = h.elGrid.getBoundingClientRect(),
                      te = H.height;
                    A = H.height;
                    var se = H.width,
                      b = parseInt(N.getAttribute("cx"), 10),
                      C = parseInt(N.getAttribute("cy"), 10);
                    _ = parseFloat(N.getAttribute("barWidth"));
                    var F =
                      c.type === "touchmove" ? c.touches[0].clientX : c.clientX;
                    (f = parseInt(N.getAttribute("j"), 10)),
                      (y = parseInt(N.parentNode.getAttribute("rel"), 10) - 1);
                    var ee = N.getAttribute("data-range-y1"),
                      ue = N.getAttribute("data-range-y2");
                    d.globals.comboCharts &&
                      (y = parseInt(
                        N.parentNode.getAttribute("data:realIndex"),
                        10
                      ));
                    var he = function (Ae) {
                        return d.globals.isXNumeric
                          ? b - se / 2
                          : o.isVerticalGroupedRangeBar
                          ? b + se / 2
                          : b - g.dataPointsDividedWidth + se / 2;
                      },
                      we = function () {
                        return (
                          C -
                          g.dataPointsDividedHeight +
                          te / 2 -
                          g.tooltipRect.ttHeight / 2
                        );
                      };
                    g.tooltipLabels.drawSeriesTexts({
                      ttItems: h.ttItems,
                      i: y,
                      j: f,
                      y1: ee ? parseInt(ee, 10) : null,
                      y2: ue ? parseInt(ue, 10) : null,
                      shared: !g.showOnIntersect && d.config.tooltip.shared,
                      e: c,
                    }),
                      d.config.tooltip.followCursor
                        ? d.globals.isBarHorizontal
                          ? ((x = F - G.left + 15), (k = we()))
                          : ((x = he()),
                            (k =
                              c.clientY -
                              G.top -
                              g.tooltipRect.ttHeight / 2 -
                              15))
                        : d.globals.isBarHorizontal
                        ? ((x = b) < g.xyRatios.baseLineInvertedY &&
                            (x = b - g.tooltipRect.ttWidth),
                          (k = we()))
                        : ((x = he()), (k = C));
                  }
                  return { x, y: k, barHeight: A, barWidth: _, i: y, j: f };
                },
              },
            ]),
            $
          );
        })(),
        sn = (function () {
          function $(s) {
            a(this, $), (this.w = s.w), (this.ttCtx = s);
          }
          return (
            u($, [
              {
                key: "drawXaxisTooltip",
                value: function () {
                  var s = this.w,
                    o = this.ttCtx,
                    c = s.config.xaxis.position === "bottom";
                  o.xaxisOffY = c
                    ? s.globals.gridHeight + 1
                    : -s.globals.xAxisHeight -
                      s.config.xaxis.axisTicks.height +
                      3;
                  var h = c
                      ? "apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom"
                      : "apexcharts-xaxistooltip apexcharts-xaxistooltip-top",
                    d = s.globals.dom.elWrap;
                  o.isXAxisTooltipEnabled &&
                    s.globals.dom.baseEl.querySelector(
                      ".apexcharts-xaxistooltip"
                    ) === null &&
                    ((o.xaxisTooltip = document.createElement("div")),
                    o.xaxisTooltip.setAttribute(
                      "class",
                      h + " apexcharts-theme-" + s.config.tooltip.theme
                    ),
                    d.appendChild(o.xaxisTooltip),
                    (o.xaxisTooltipText = document.createElement("div")),
                    o.xaxisTooltipText.classList.add(
                      "apexcharts-xaxistooltip-text"
                    ),
                    (o.xaxisTooltipText.style.fontFamily =
                      s.config.xaxis.tooltip.style.fontFamily ||
                      s.config.chart.fontFamily),
                    (o.xaxisTooltipText.style.fontSize =
                      s.config.xaxis.tooltip.style.fontSize),
                    o.xaxisTooltip.appendChild(o.xaxisTooltipText));
                },
              },
              {
                key: "drawYaxisTooltip",
                value: function () {
                  for (
                    var s = this.w,
                      o = this.ttCtx,
                      c = function (d) {
                        var f =
                          s.config.yaxis[d].opposite ||
                          s.config.yaxis[d].crosshairs.opposite;
                        o.yaxisOffX = f ? s.globals.gridWidth + 1 : 1;
                        var g =
                          "apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(
                            d,
                            f
                              ? " apexcharts-yaxistooltip-right"
                              : " apexcharts-yaxistooltip-left"
                          );
                        s.globals.yAxisSameScaleIndices.map(function (x, k) {
                          x.map(function (_, A) {
                            A === d &&
                              (g += s.config.yaxis[A].show
                                ? " "
                                : " apexcharts-yaxistooltip-hidden");
                          });
                        });
                        var y = s.globals.dom.elWrap;
                        s.globals.dom.baseEl.querySelector(
                          ".apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(
                            d
                          )
                        ) === null &&
                          ((o.yaxisTooltip = document.createElement("div")),
                          o.yaxisTooltip.setAttribute(
                            "class",
                            g + " apexcharts-theme-" + s.config.tooltip.theme
                          ),
                          y.appendChild(o.yaxisTooltip),
                          d === 0 && (o.yaxisTooltipText = []),
                          (o.yaxisTooltipText[d] =
                            document.createElement("div")),
                          o.yaxisTooltipText[d].classList.add(
                            "apexcharts-yaxistooltip-text"
                          ),
                          o.yaxisTooltip.appendChild(o.yaxisTooltipText[d]));
                      },
                      h = 0;
                    h < s.config.yaxis.length;
                    h++
                  )
                    c(h);
                },
              },
              {
                key: "setXCrosshairWidth",
                value: function () {
                  var s = this.w,
                    o = this.ttCtx,
                    c = o.getElXCrosshairs();
                  if (
                    ((o.xcrosshairsWidth = parseInt(
                      s.config.xaxis.crosshairs.width,
                      10
                    )),
                    s.globals.comboCharts)
                  ) {
                    var h = s.globals.dom.baseEl.querySelector(
                      ".apexcharts-bar-area"
                    );
                    if (
                      h !== null &&
                      s.config.xaxis.crosshairs.width === "barWidth"
                    ) {
                      var d = parseFloat(h.getAttribute("barWidth"));
                      o.xcrosshairsWidth = d;
                    } else if (
                      s.config.xaxis.crosshairs.width === "tickWidth"
                    ) {
                      var f = s.globals.labels.length;
                      o.xcrosshairsWidth = s.globals.gridWidth / f;
                    }
                  } else if (s.config.xaxis.crosshairs.width === "tickWidth") {
                    var g = s.globals.labels.length;
                    o.xcrosshairsWidth = s.globals.gridWidth / g;
                  } else if (s.config.xaxis.crosshairs.width === "barWidth") {
                    var y = s.globals.dom.baseEl.querySelector(
                      ".apexcharts-bar-area"
                    );
                    if (y !== null) {
                      var x = parseFloat(y.getAttribute("barWidth"));
                      o.xcrosshairsWidth = x;
                    } else o.xcrosshairsWidth = 1;
                  }
                  s.globals.isBarHorizontal && (o.xcrosshairsWidth = 0),
                    c !== null &&
                      o.xcrosshairsWidth > 0 &&
                      c.setAttribute("width", o.xcrosshairsWidth);
                },
              },
              {
                key: "handleYCrosshair",
                value: function () {
                  var s = this.w,
                    o = this.ttCtx;
                  (o.ycrosshairs = s.globals.dom.baseEl.querySelector(
                    ".apexcharts-ycrosshairs"
                  )),
                    (o.ycrosshairsHidden = s.globals.dom.baseEl.querySelector(
                      ".apexcharts-ycrosshairs-hidden"
                    ));
                },
              },
              {
                key: "drawYaxisTooltipText",
                value: function (s, o, c) {
                  var h = this.ttCtx,
                    d = this.w,
                    f = d.globals.yLabelFormatters[s];
                  if (h.yaxisTooltips[s]) {
                    var g = h.getElGrid().getBoundingClientRect(),
                      y = (o - g.top) * c.yRatio[s],
                      x = d.globals.maxYArr[s] - d.globals.minYArr[s],
                      k = d.globals.minYArr[s] + (x - y);
                    h.tooltipPosition.moveYCrosshairs(o - g.top),
                      (h.yaxisTooltipText[s].innerHTML = f(k)),
                      h.tooltipPosition.moveYAxisTooltip(s);
                  }
                },
              },
            ]),
            $
          );
        })(),
        Zt = (function () {
          function $(s) {
            a(this, $), (this.ctx = s), (this.w = s.w);
            var o = this.w;
            (this.tConfig = o.config.tooltip),
              (this.tooltipUtil = new Dt(this)),
              (this.tooltipLabels = new Qt(this)),
              (this.tooltipPosition = new Mn(this)),
              (this.marker = new Jt(this)),
              (this.intersect = new wt(this)),
              (this.axesTooltip = new sn(this)),
              (this.showOnIntersect = this.tConfig.intersect),
              (this.showTooltipTitle = this.tConfig.x.show),
              (this.fixedTooltip = this.tConfig.fixed.enabled),
              (this.xaxisTooltip = null),
              (this.yaxisTTEls = null),
              (this.isBarShared =
                !o.globals.isBarHorizontal && this.tConfig.shared),
              (this.lastHoverTime = Date.now());
          }
          return (
            u($, [
              {
                key: "getElTooltip",
                value: function (s) {
                  return (
                    s || (s = this),
                    s.w.globals.dom.baseEl
                      ? s.w.globals.dom.baseEl.querySelector(
                          ".apexcharts-tooltip"
                        )
                      : null
                  );
                },
              },
              {
                key: "getElXCrosshairs",
                value: function () {
                  return this.w.globals.dom.baseEl.querySelector(
                    ".apexcharts-xcrosshairs"
                  );
                },
              },
              {
                key: "getElGrid",
                value: function () {
                  return this.w.globals.dom.baseEl.querySelector(
                    ".apexcharts-grid"
                  );
                },
              },
              {
                key: "drawTooltip",
                value: function (s) {
                  var o = this.w;
                  (this.xyRatios = s),
                    (this.isXAxisTooltipEnabled =
                      o.config.xaxis.tooltip.enabled && o.globals.axisCharts),
                    (this.yaxisTooltips = o.config.yaxis.map(function (f, g) {
                      return !!(
                        f.show &&
                        f.tooltip.enabled &&
                        o.globals.axisCharts
                      );
                    })),
                    (this.allTooltipSeriesGroups = []),
                    o.globals.axisCharts || (this.showTooltipTitle = !1);
                  var c = document.createElement("div");
                  if (
                    (c.classList.add("apexcharts-tooltip"),
                    o.config.tooltip.cssClass &&
                      c.classList.add(o.config.tooltip.cssClass),
                    c.classList.add(
                      "apexcharts-theme-".concat(this.tConfig.theme)
                    ),
                    o.globals.dom.elWrap.appendChild(c),
                    o.globals.axisCharts)
                  ) {
                    this.axesTooltip.drawXaxisTooltip(),
                      this.axesTooltip.drawYaxisTooltip(),
                      this.axesTooltip.setXCrosshairWidth(),
                      this.axesTooltip.handleYCrosshair();
                    var h = new Ie(this.ctx);
                    this.xAxisTicksPositions = h.getXAxisTicksPositions();
                  }
                  if (
                    ((!o.globals.comboCharts &&
                      !this.tConfig.intersect &&
                      o.config.chart.type !== "rangeBar") ||
                      this.tConfig.shared ||
                      (this.showOnIntersect = !0),
                    (o.config.markers.size !== 0 &&
                      o.globals.markers.largestSize !== 0) ||
                      this.marker.drawDynamicPoints(this),
                    o.globals.collapsedSeries.length !==
                      o.globals.series.length)
                  ) {
                    (this.dataPointsDividedHeight =
                      o.globals.gridHeight / o.globals.dataPoints),
                      (this.dataPointsDividedWidth =
                        o.globals.gridWidth / o.globals.dataPoints),
                      this.showTooltipTitle &&
                        ((this.tooltipTitle = document.createElement("div")),
                        this.tooltipTitle.classList.add(
                          "apexcharts-tooltip-title"
                        ),
                        (this.tooltipTitle.style.fontFamily =
                          this.tConfig.style.fontFamily ||
                          o.config.chart.fontFamily),
                        (this.tooltipTitle.style.fontSize =
                          this.tConfig.style.fontSize),
                        c.appendChild(this.tooltipTitle));
                    var d = o.globals.series.length;
                    (o.globals.xyCharts || o.globals.comboCharts) &&
                      this.tConfig.shared &&
                      (d = this.showOnIntersect ? 1 : o.globals.series.length),
                      (this.legendLabels =
                        o.globals.dom.baseEl.querySelectorAll(
                          ".apexcharts-legend-text"
                        )),
                      (this.ttItems = this.createTTElements(d)),
                      this.addSVGEvents();
                  }
                },
              },
              {
                key: "createTTElements",
                value: function (s) {
                  for (
                    var o = this,
                      c = this.w,
                      h = [],
                      d = this.getElTooltip(),
                      f = function (y) {
                        var x = document.createElement("div");
                        x.classList.add("apexcharts-tooltip-series-group"),
                          (x.style.order = c.config.tooltip.inverseOrder
                            ? s - y
                            : y + 1),
                          o.tConfig.shared &&
                            o.tConfig.enabledOnSeries &&
                            Array.isArray(o.tConfig.enabledOnSeries) &&
                            o.tConfig.enabledOnSeries.indexOf(y) < 0 &&
                            x.classList.add(
                              "apexcharts-tooltip-series-group-hidden"
                            );
                        var k = document.createElement("span");
                        k.classList.add("apexcharts-tooltip-marker"),
                          (k.style.backgroundColor = c.globals.colors[y]),
                          x.appendChild(k);
                        var _ = document.createElement("div");
                        _.classList.add("apexcharts-tooltip-text"),
                          (_.style.fontFamily =
                            o.tConfig.style.fontFamily ||
                            c.config.chart.fontFamily),
                          (_.style.fontSize = o.tConfig.style.fontSize),
                          ["y", "goals", "z"].forEach(function (A) {
                            var O = document.createElement("div");
                            O.classList.add(
                              "apexcharts-tooltip-".concat(A, "-group")
                            );
                            var N = document.createElement("span");
                            N.classList.add(
                              "apexcharts-tooltip-text-".concat(A, "-label")
                            ),
                              O.appendChild(N);
                            var H = document.createElement("span");
                            H.classList.add(
                              "apexcharts-tooltip-text-".concat(A, "-value")
                            ),
                              O.appendChild(H),
                              _.appendChild(O);
                          }),
                          x.appendChild(_),
                          d.appendChild(x),
                          h.push(x);
                      },
                      g = 0;
                    g < s;
                    g++
                  )
                    f(g);
                  return h;
                },
              },
              {
                key: "addSVGEvents",
                value: function () {
                  var s = this.w,
                    o = s.config.chart.type,
                    c = this.getElTooltip(),
                    h = !(
                      o !== "bar" &&
                      o !== "candlestick" &&
                      o !== "boxPlot" &&
                      o !== "rangeBar"
                    ),
                    d =
                      o === "area" ||
                      o === "line" ||
                      o === "scatter" ||
                      o === "bubble" ||
                      o === "radar",
                    f = s.globals.dom.Paper.node,
                    g = this.getElGrid();
                  g && (this.seriesBound = g.getBoundingClientRect());
                  var y,
                    x = [],
                    k = [],
                    _ = {
                      hoverArea: f,
                      elGrid: g,
                      tooltipEl: c,
                      tooltipY: x,
                      tooltipX: k,
                      ttItems: this.ttItems,
                    };
                  if (
                    s.globals.axisCharts &&
                    (d
                      ? (y = s.globals.dom.baseEl.querySelectorAll(
                          ".apexcharts-series[data\\:longestSeries='true'] .apexcharts-marker"
                        ))
                      : h
                      ? (y = s.globals.dom.baseEl.querySelectorAll(
                          ".apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-boxPlot-area, .apexcharts-series .apexcharts-rangebar-area"
                        ))
                      : (o !== "heatmap" && o !== "treemap") ||
                        (y = s.globals.dom.baseEl.querySelectorAll(
                          ".apexcharts-series .apexcharts-heatmap, .apexcharts-series .apexcharts-treemap"
                        )),
                    y && y.length)
                  )
                    for (var A = 0; A < y.length; A++)
                      x.push(y[A].getAttribute("cy")),
                        k.push(y[A].getAttribute("cx"));
                  if (
                    (s.globals.xyCharts && !this.showOnIntersect) ||
                    (s.globals.comboCharts && !this.showOnIntersect) ||
                    (h && this.tooltipUtil.hasBars() && this.tConfig.shared)
                  )
                    this.addPathsEventListeners([f], _);
                  else if (
                    (h && !s.globals.comboCharts) ||
                    (d && this.showOnIntersect)
                  )
                    this.addDatapointEventsListeners(_);
                  else if (
                    !s.globals.axisCharts ||
                    o === "heatmap" ||
                    o === "treemap"
                  ) {
                    var O =
                      s.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-series"
                      );
                    this.addPathsEventListeners(O, _);
                  }
                  if (this.showOnIntersect) {
                    var N = s.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker"
                    );
                    N.length > 0 && this.addPathsEventListeners(N, _),
                      this.tooltipUtil.hasBars() &&
                        !this.tConfig.shared &&
                        this.addDatapointEventsListeners(_);
                  }
                },
              },
              {
                key: "drawFixedTooltipRect",
                value: function () {
                  var s = this.w,
                    o = this.getElTooltip(),
                    c = o.getBoundingClientRect(),
                    h = c.width + 10,
                    d = c.height + 10,
                    f = this.tConfig.fixed.offsetX,
                    g = this.tConfig.fixed.offsetY,
                    y = this.tConfig.fixed.position.toLowerCase();
                  return (
                    y.indexOf("right") > -1 &&
                      (f = f + s.globals.svgWidth - h + 10),
                    y.indexOf("bottom") > -1 &&
                      (g = g + s.globals.svgHeight - d - 10),
                    (o.style.left = f + "px"),
                    (o.style.top = g + "px"),
                    { x: f, y: g, ttWidth: h, ttHeight: d }
                  );
                },
              },
              {
                key: "addDatapointEventsListeners",
                value: function (s) {
                  var o = this.w.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-boxPlot-area, .apexcharts-rangebar-area"
                  );
                  this.addPathsEventListeners(o, s);
                },
              },
              {
                key: "addPathsEventListeners",
                value: function (s, o) {
                  for (
                    var c = this,
                      h = function (f) {
                        var g = {
                          paths: s[f],
                          tooltipEl: o.tooltipEl,
                          tooltipY: o.tooltipY,
                          tooltipX: o.tooltipX,
                          elGrid: o.elGrid,
                          hoverArea: o.hoverArea,
                          ttItems: o.ttItems,
                        };
                        [
                          "mousemove",
                          "mouseup",
                          "touchmove",
                          "mouseout",
                          "touchend",
                        ].map(function (y) {
                          return s[f].addEventListener(
                            y,
                            c.onSeriesHover.bind(c, g),
                            { capture: !1, passive: !0 }
                          );
                        });
                      },
                      d = 0;
                    d < s.length;
                    d++
                  )
                    h(d);
                },
              },
              {
                key: "onSeriesHover",
                value: function (s, o) {
                  var c = this,
                    h = Date.now() - this.lastHoverTime;
                  h >= 100
                    ? this.seriesHover(s, o)
                    : (clearTimeout(this.seriesHoverTimeout),
                      (this.seriesHoverTimeout = setTimeout(function () {
                        c.seriesHover(s, o);
                      }, 100 - h)));
                },
              },
              {
                key: "seriesHover",
                value: function (s, o) {
                  var c = this;
                  this.lastHoverTime = Date.now();
                  var h = [],
                    d = this.w;
                  d.config.chart.group && (h = this.ctx.getGroupedCharts()),
                    (d.globals.axisCharts &&
                      ((d.globals.minX === -1 / 0 &&
                        d.globals.maxX === 1 / 0) ||
                        d.globals.dataPoints === 0)) ||
                      (h.length
                        ? h.forEach(function (f) {
                            var g = c.getElTooltip(f),
                              y = {
                                paths: s.paths,
                                tooltipEl: g,
                                tooltipY: s.tooltipY,
                                tooltipX: s.tooltipX,
                                elGrid: s.elGrid,
                                hoverArea: s.hoverArea,
                                ttItems: f.w.globals.tooltip.ttItems,
                              };
                            f.w.globals.minX === c.w.globals.minX &&
                              f.w.globals.maxX === c.w.globals.maxX &&
                              f.w.globals.tooltip.seriesHoverByContext({
                                chartCtx: f,
                                ttCtx: f.w.globals.tooltip,
                                opt: y,
                                e: o,
                              });
                          })
                        : this.seriesHoverByContext({
                            chartCtx: this.ctx,
                            ttCtx: this.w.globals.tooltip,
                            opt: s,
                            e: o,
                          }));
                },
              },
              {
                key: "seriesHoverByContext",
                value: function (s) {
                  var o = s.chartCtx,
                    c = s.ttCtx,
                    h = s.opt,
                    d = s.e,
                    f = o.w,
                    g = this.getElTooltip();
                  g &&
                    ((c.tooltipRect = {
                      x: 0,
                      y: 0,
                      ttWidth: g.getBoundingClientRect().width,
                      ttHeight: g.getBoundingClientRect().height,
                    }),
                    (c.e = d),
                    c.tooltipUtil.hasBars() &&
                      !f.globals.comboCharts &&
                      !c.isBarShared &&
                      this.tConfig.onDatasetHover.highlightDataSeries &&
                      new Ee(o).toggleSeriesOnHover(d, d.target.parentNode),
                    c.fixedTooltip && c.drawFixedTooltipRect(),
                    f.globals.axisCharts
                      ? c.axisChartsTooltips({
                          e: d,
                          opt: h,
                          tooltipRect: c.tooltipRect,
                        })
                      : c.nonAxisChartsTooltips({
                          e: d,
                          opt: h,
                          tooltipRect: c.tooltipRect,
                        }));
                },
              },
              {
                key: "axisChartsTooltips",
                value: function (s) {
                  var o,
                    c,
                    h = s.e,
                    d = s.opt,
                    f = this.w,
                    g = d.elGrid.getBoundingClientRect(),
                    y =
                      h.type === "touchmove" ? h.touches[0].clientX : h.clientX,
                    x =
                      h.type === "touchmove" ? h.touches[0].clientY : h.clientY;
                  if (
                    ((this.clientY = x),
                    (this.clientX = y),
                    (f.globals.capturedSeriesIndex = -1),
                    (f.globals.capturedDataPointIndex = -1),
                    x < g.top || x > g.top + g.height)
                  )
                    this.handleMouseOut(d);
                  else {
                    if (
                      Array.isArray(this.tConfig.enabledOnSeries) &&
                      !f.config.tooltip.shared
                    ) {
                      var k = parseInt(d.paths.getAttribute("index"), 10);
                      if (this.tConfig.enabledOnSeries.indexOf(k) < 0)
                        return void this.handleMouseOut(d);
                    }
                    var _ = this.getElTooltip(),
                      A = this.getElXCrosshairs(),
                      O =
                        f.globals.xyCharts ||
                        (f.config.chart.type === "bar" &&
                          !f.globals.isBarHorizontal &&
                          this.tooltipUtil.hasBars() &&
                          this.tConfig.shared) ||
                        (f.globals.comboCharts && this.tooltipUtil.hasBars());
                    if (
                      h.type === "mousemove" ||
                      h.type === "touchmove" ||
                      h.type === "mouseup"
                    ) {
                      if (
                        f.globals.collapsedSeries.length +
                          f.globals.ancillaryCollapsedSeries.length ===
                        f.globals.series.length
                      )
                        return;
                      A !== null && A.classList.add("apexcharts-active");
                      var N = this.yaxisTooltips.filter(function (te) {
                        return te === !0;
                      });
                      if (
                        (this.ycrosshairs !== null &&
                          N.length &&
                          this.ycrosshairs.classList.add("apexcharts-active"),
                        O && !this.showOnIntersect)
                      )
                        this.handleStickyTooltip(h, y, x, d);
                      else if (
                        f.config.chart.type === "heatmap" ||
                        f.config.chart.type === "treemap"
                      ) {
                        var H = this.intersect.handleHeatTreeTooltip({
                          e: h,
                          opt: d,
                          x: o,
                          y: c,
                          type: f.config.chart.type,
                        });
                        (o = H.x),
                          (c = H.y),
                          (_.style.left = o + "px"),
                          (_.style.top = c + "px");
                      } else
                        this.tooltipUtil.hasBars() &&
                          this.intersect.handleBarTooltip({ e: h, opt: d }),
                          this.tooltipUtil.hasMarkers() &&
                            this.intersect.handleMarkerTooltip({
                              e: h,
                              opt: d,
                              x: o,
                              y: c,
                            });
                      if (this.yaxisTooltips.length)
                        for (var G = 0; G < f.config.yaxis.length; G++)
                          this.axesTooltip.drawYaxisTooltipText(
                            G,
                            x,
                            this.xyRatios
                          );
                      d.tooltipEl.classList.add("apexcharts-active");
                    } else
                      (h.type !== "mouseout" && h.type !== "touchend") ||
                        this.handleMouseOut(d);
                  }
                },
              },
              {
                key: "nonAxisChartsTooltips",
                value: function (s) {
                  var o = s.e,
                    c = s.opt,
                    h = s.tooltipRect,
                    d = this.w,
                    f = c.paths.getAttribute("rel"),
                    g = this.getElTooltip(),
                    y = d.globals.dom.elWrap.getBoundingClientRect();
                  if (o.type === "mousemove" || o.type === "touchmove") {
                    g.classList.add("apexcharts-active"),
                      this.tooltipLabels.drawSeriesTexts({
                        ttItems: c.ttItems,
                        i: parseInt(f, 10) - 1,
                        shared: !1,
                      });
                    var x = d.globals.clientX - y.left - h.ttWidth / 2,
                      k = d.globals.clientY - y.top - h.ttHeight - 10;
                    if (
                      ((g.style.left = x + "px"),
                      (g.style.top = k + "px"),
                      d.config.legend.tooltipHoverFormatter)
                    ) {
                      var _ = f - 1,
                        A = (0, d.config.legend.tooltipHoverFormatter)(
                          this.legendLabels[_].getAttribute(
                            "data:default-text"
                          ),
                          { seriesIndex: _, dataPointIndex: _, w: d }
                        );
                      this.legendLabels[_].innerHTML = A;
                    }
                  } else
                    (o.type !== "mouseout" && o.type !== "touchend") ||
                      (g.classList.remove("apexcharts-active"),
                      d.config.legend.tooltipHoverFormatter &&
                        this.legendLabels.forEach(function (O) {
                          var N = O.getAttribute("data:default-text");
                          O.innerHTML = decodeURIComponent(N);
                        }));
                },
              },
              {
                key: "handleStickyTooltip",
                value: function (s, o, c, h) {
                  var d = this.w,
                    f = this.tooltipUtil.getNearestValues({
                      context: this,
                      hoverArea: h.hoverArea,
                      elGrid: h.elGrid,
                      clientX: o,
                      clientY: c,
                    }),
                    g = f.j,
                    y = f.capturedSeries;
                  d.globals.collapsedSeriesIndices.includes(y) && (y = null);
                  var x = h.elGrid.getBoundingClientRect();
                  if (f.hoverX < 0 || f.hoverX > x.width)
                    this.handleMouseOut(h);
                  else if (y !== null)
                    this.handleStickyCapturedSeries(s, y, h, g);
                  else if (
                    this.tooltipUtil.isXoverlap(g) ||
                    d.globals.isBarHorizontal
                  ) {
                    var k = d.globals.series.findIndex(function (_, A) {
                      return !d.globals.collapsedSeriesIndices.includes(A);
                    });
                    this.create(s, this, k, g, h.ttItems);
                  }
                },
              },
              {
                key: "handleStickyCapturedSeries",
                value: function (s, o, c, h) {
                  var d = this.w;
                  if (!this.tConfig.shared && d.globals.series[o][h] === null)
                    return void this.handleMouseOut(c);
                  if (d.globals.series[o][h] !== void 0)
                    this.tConfig.shared &&
                    this.tooltipUtil.isXoverlap(h) &&
                    this.tooltipUtil.isInitialSeriesSameLen()
                      ? this.create(s, this, o, h, c.ttItems)
                      : this.create(s, this, o, h, c.ttItems, !1);
                  else if (this.tooltipUtil.isXoverlap(h)) {
                    var f = d.globals.series.findIndex(function (g, y) {
                      return !d.globals.collapsedSeriesIndices.includes(y);
                    });
                    this.create(s, this, f, h, c.ttItems);
                  }
                },
              },
              {
                key: "deactivateHoverFilter",
                value: function () {
                  for (
                    var s = this.w,
                      o = new K(this.ctx),
                      c = s.globals.dom.Paper.select(".apexcharts-bar-area"),
                      h = 0;
                    h < c.length;
                    h++
                  )
                    o.pathMouseLeave(c[h]);
                },
              },
              {
                key: "handleMouseOut",
                value: function (s) {
                  var o = this.w,
                    c = this.getElXCrosshairs();
                  if (
                    (s.tooltipEl.classList.remove("apexcharts-active"),
                    this.deactivateHoverFilter(),
                    o.config.chart.type !== "bubble" &&
                      this.marker.resetPointsSize(),
                    c !== null && c.classList.remove("apexcharts-active"),
                    this.ycrosshairs !== null &&
                      this.ycrosshairs.classList.remove("apexcharts-active"),
                    this.isXAxisTooltipEnabled &&
                      this.xaxisTooltip.classList.remove("apexcharts-active"),
                    this.yaxisTooltips.length)
                  ) {
                    this.yaxisTTEls === null &&
                      (this.yaxisTTEls = o.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-yaxistooltip"
                      ));
                    for (var h = 0; h < this.yaxisTTEls.length; h++)
                      this.yaxisTTEls[h].classList.remove("apexcharts-active");
                  }
                  o.config.legend.tooltipHoverFormatter &&
                    this.legendLabels.forEach(function (d) {
                      var f = d.getAttribute("data:default-text");
                      d.innerHTML = decodeURIComponent(f);
                    });
                },
              },
              {
                key: "markerClick",
                value: function (s, o, c) {
                  var h = this.w;
                  typeof h.config.chart.events.markerClick == "function" &&
                    h.config.chart.events.markerClick(s, this.ctx, {
                      seriesIndex: o,
                      dataPointIndex: c,
                      w: h,
                    }),
                    this.ctx.events.fireEvent("markerClick", [
                      s,
                      this.ctx,
                      { seriesIndex: o, dataPointIndex: c, w: h },
                    ]);
                },
              },
              {
                key: "create",
                value: function (s, o, c, h, d) {
                  var f,
                    g,
                    y,
                    x,
                    k,
                    _,
                    A,
                    O,
                    N,
                    H,
                    G,
                    te,
                    se,
                    b,
                    C,
                    F,
                    ee =
                      arguments.length > 5 && arguments[5] !== void 0
                        ? arguments[5]
                        : null,
                    ue = this.w,
                    he = o;
                  s.type === "mouseup" && this.markerClick(s, c, h),
                    ee === null && (ee = this.tConfig.shared);
                  var we = this.tooltipUtil.hasMarkers(c),
                    Ae = this.tooltipUtil.getElBars();
                  if (ue.config.legend.tooltipHoverFormatter) {
                    var Le = ue.config.legend.tooltipHoverFormatter,
                      ze = Array.from(this.legendLabels);
                    ze.forEach(function (Ao) {
                      var Ml = Ao.getAttribute("data:default-text");
                      Ao.innerHTML = decodeURIComponent(Ml);
                    });
                    for (var De = 0; De < ze.length; De++) {
                      var Ge = ze[De],
                        it = parseInt(Ge.getAttribute("i"), 10),
                        St = decodeURIComponent(
                          Ge.getAttribute("data:default-text")
                        ),
                        Lt = Le(St, {
                          seriesIndex: ee ? it : c,
                          dataPointIndex: h,
                          w: ue,
                        });
                      if (ee)
                        Ge.innerHTML =
                          ue.globals.collapsedSeriesIndices.indexOf(it) < 0
                            ? Lt
                            : St;
                      else if (((Ge.innerHTML = it === c ? Lt : St), c === it))
                        break;
                    }
                  }
                  var Ht = n(
                    n(
                      { ttItems: d, i: c, j: h },
                      ((f = ue.globals.seriesRange) === null ||
                      f === void 0 ||
                      (g = f[c]) === null ||
                      g === void 0 ||
                      (y = g[h]) === null ||
                      y === void 0 ||
                      (x = y.y[0]) === null ||
                      x === void 0
                        ? void 0
                        : x.y1) !== void 0 && {
                        y1:
                          (k = ue.globals.seriesRange) === null ||
                          k === void 0 ||
                          (_ = k[c]) === null ||
                          _ === void 0 ||
                          (A = _[h]) === null ||
                          A === void 0 ||
                          (O = A.y[0]) === null ||
                          O === void 0
                            ? void 0
                            : O.y1,
                      }
                    ),
                    ((N = ue.globals.seriesRange) === null ||
                    N === void 0 ||
                    (H = N[c]) === null ||
                    H === void 0 ||
                    (G = H[h]) === null ||
                    G === void 0 ||
                    (te = G.y[0]) === null ||
                    te === void 0
                      ? void 0
                      : te.y2) !== void 0 && {
                      y2:
                        (se = ue.globals.seriesRange) === null ||
                        se === void 0 ||
                        (b = se[c]) === null ||
                        b === void 0 ||
                        (C = b[h]) === null ||
                        C === void 0 ||
                        (F = C.y[0]) === null ||
                        F === void 0
                          ? void 0
                          : F.y2,
                    }
                  );
                  if (ee) {
                    if (
                      (he.tooltipLabels.drawSeriesTexts(
                        n(
                          n({}, Ht),
                          {},
                          {
                            shared:
                              !this.showOnIntersect && this.tConfig.shared,
                          }
                        )
                      ),
                      we)
                    )
                      ue.globals.markers.largestSize > 0
                        ? he.marker.enlargePoints(h)
                        : he.tooltipPosition.moveDynamicPointsOnHover(h);
                    else if (
                      this.tooltipUtil.hasBars() &&
                      ((this.barSeriesHeight =
                        this.tooltipUtil.getBarsHeight(Ae)),
                      this.barSeriesHeight > 0)
                    ) {
                      var Jr = new K(this.ctx),
                        Wr = ue.globals.dom.Paper.select(
                          ".apexcharts-bar-area[j='".concat(h, "']")
                        );
                      this.deactivateHoverFilter(),
                        this.tooltipPosition.moveStickyTooltipOverBars(h, c);
                      for (var an = 0; an < Wr.length; an++)
                        Jr.pathMouseEnter(Wr[an]);
                    }
                  } else
                    he.tooltipLabels.drawSeriesTexts(n({ shared: !1 }, Ht)),
                      this.tooltipUtil.hasBars() &&
                        he.tooltipPosition.moveStickyTooltipOverBars(h, c),
                      we && he.tooltipPosition.moveMarkers(c, h);
                },
              },
            ]),
            $
          );
        })(),
        gr = (function () {
          function $(s) {
            a(this, $),
              (this.w = s.w),
              (this.barCtx = s),
              (this.totalFormatter =
                this.w.config.plotOptions.bar.dataLabels.total.formatter),
              this.totalFormatter ||
                (this.totalFormatter = this.w.config.dataLabels.formatter);
          }
          return (
            u($, [
              {
                key: "handleBarDataLabels",
                value: function (s) {
                  var o = s.x,
                    c = s.y,
                    h = s.y1,
                    d = s.y2,
                    f = s.i,
                    g = s.j,
                    y = s.realIndex,
                    x = s.groupIndex,
                    k = s.series,
                    _ = s.barHeight,
                    A = s.barWidth,
                    O = s.barXPosition,
                    N = s.barYPosition,
                    H = s.visibleSeries,
                    G = s.renderedPath,
                    te = this.w,
                    se = new K(this.barCtx.ctx),
                    b = Array.isArray(this.barCtx.strokeWidth)
                      ? this.barCtx.strokeWidth[y]
                      : this.barCtx.strokeWidth,
                    C = o + parseFloat(A * H),
                    F = c + parseFloat(_ * H);
                  te.globals.isXNumeric &&
                    !te.globals.isBarHorizontal &&
                    ((C = o + parseFloat(A * (H + 1))),
                    (F = c + parseFloat(_ * (H + 1)) - b));
                  var ee,
                    ue = null,
                    he = o,
                    we = c,
                    Ae = {},
                    Le = te.config.dataLabels,
                    ze = this.barCtx.barOptions.dataLabels,
                    De = this.barCtx.barOptions.dataLabels.total;
                  N !== void 0 && this.barCtx.isRangeBar && ((F = N), (we = N)),
                    O !== void 0 &&
                      this.barCtx.isVerticalGroupedRangeBar &&
                      ((C = O), (he = O));
                  var Ge = Le.offsetX,
                    it = Le.offsetY,
                    St = { width: 0, height: 0 };
                  if (te.config.dataLabels.enabled) {
                    var Lt = this.barCtx.series[f][g];
                    St = se.getTextRects(
                      te.globals.yLabelFormatters[0](Lt),
                      parseFloat(Le.style.fontSize)
                    );
                  }
                  var Ht = {
                    x: o,
                    y: c,
                    i: f,
                    j: g,
                    realIndex: y,
                    groupIndex: x || -1,
                    renderedPath: G,
                    bcx: C,
                    bcy: F,
                    barHeight: _,
                    barWidth: A,
                    textRects: St,
                    strokeWidth: b,
                    dataLabelsX: he,
                    dataLabelsY: we,
                    dataLabelsConfig: Le,
                    barDataLabelsConfig: ze,
                    barTotalDataLabelsConfig: De,
                    offX: Ge,
                    offY: it,
                  };
                  return (
                    (Ae = this.barCtx.isHorizontal
                      ? this.calculateBarsDataLabelsPosition(Ht)
                      : this.calculateColumnsDataLabelsPosition(Ht)),
                    G.attr({
                      cy: Ae.bcy,
                      cx: Ae.bcx,
                      j: g,
                      val: k[f][g],
                      barHeight: _,
                      barWidth: A,
                    }),
                    (ee = this.drawCalculatedDataLabels({
                      x: Ae.dataLabelsX,
                      y: Ae.dataLabelsY,
                      val: this.barCtx.isRangeBar ? [h, d] : k[f][g],
                      i: y,
                      j: g,
                      barWidth: A,
                      barHeight: _,
                      textRects: St,
                      dataLabelsConfig: Le,
                    })),
                    te.config.chart.stacked &&
                      De.enabled &&
                      (ue = this.drawTotalDataLabels({
                        x: Ae.totalDataLabelsX,
                        y: Ae.totalDataLabelsY,
                        realIndex: y,
                        textAnchor: Ae.totalDataLabelsAnchor,
                        val: this.getStackedTotalDataLabel({
                          realIndex: y,
                          j: g,
                        }),
                        dataLabelsConfig: Le,
                        barTotalDataLabelsConfig: De,
                      })),
                    { dataLabels: ee, totalDataLabels: ue }
                  );
                },
              },
              {
                key: "getStackedTotalDataLabel",
                value: function (s) {
                  var o = s.realIndex,
                    c = s.j,
                    h = this.w,
                    d = this.barCtx.stackedSeriesTotals[c];
                  return (
                    this.totalFormatter &&
                      (d = this.totalFormatter(
                        d,
                        n(
                          n({}, h),
                          {},
                          { seriesIndex: o, dataPointIndex: c, w: h }
                        )
                      )),
                    d
                  );
                },
              },
              {
                key: "calculateColumnsDataLabelsPosition",
                value: function (s) {
                  var o,
                    c,
                    h = this.w,
                    d = s.i,
                    f = s.j,
                    g = s.realIndex,
                    y = s.groupIndex,
                    x = s.y,
                    k = s.bcx,
                    _ = s.barWidth,
                    A = s.barHeight,
                    O = s.textRects,
                    N = s.dataLabelsX,
                    H = s.dataLabelsY,
                    G = s.dataLabelsConfig,
                    te = s.barDataLabelsConfig,
                    se = s.barTotalDataLabelsConfig,
                    b = s.strokeWidth,
                    C = s.offX,
                    F = s.offY;
                  A = Math.abs(A);
                  var ee =
                    h.config.plotOptions.bar.dataLabels.orientation ===
                    "vertical";
                  k = k - b / 2 + (y !== -1 ? y * _ : 0);
                  var ue = h.globals.gridWidth / h.globals.dataPoints;
                  this.barCtx.isVerticalGroupedRangeBar
                    ? (N += _ / 2)
                    : (N = h.globals.isXNumeric
                        ? k - _ / 2 + C
                        : k - ue + _ / 2 + C),
                    ee && (N = N + O.height / 2 - b / 2 - 2);
                  var he = this.barCtx.series[d][f] < 0,
                    we = x;
                  switch (
                    (this.barCtx.isReversed &&
                      ((we = x - A + (he ? 2 * A : 0)), (x -= A)),
                    te.position)
                  ) {
                    case "center":
                      H = ee
                        ? he
                          ? we + A / 2 + F
                          : we + A / 2 - F
                        : he
                        ? we - A / 2 + O.height / 2 + F
                        : we + A / 2 + O.height / 2 - F;
                      break;
                    case "bottom":
                      H = ee
                        ? he
                          ? we + A + F
                          : we + A - F
                        : he
                        ? we - A + O.height + b + F
                        : we + A - O.height / 2 + b - F;
                      break;
                    case "top":
                      H = ee
                        ? he
                          ? we + F
                          : we - F
                        : he
                        ? we - O.height / 2 - F
                        : we + O.height + F;
                  }
                  if (this.barCtx.lastActiveBarSerieIndex === g && se.enabled) {
                    var Ae = new K(this.barCtx.ctx).getTextRects(
                      this.getStackedTotalDataLabel({ realIndex: g, j: f }),
                      G.fontSize
                    );
                    (o = he
                      ? we - Ae.height / 2 - F - se.offsetY + 18
                      : we + Ae.height + F + se.offsetY - 18),
                      (c = N + se.offsetX);
                  }
                  return (
                    h.config.chart.stacked ||
                      (H < 0
                        ? (H = 0 + b)
                        : H + O.height / 3 > h.globals.gridHeight &&
                          (H = h.globals.gridHeight - b)),
                    {
                      bcx: k,
                      bcy: x,
                      dataLabelsX: N,
                      dataLabelsY: H,
                      totalDataLabelsX: c,
                      totalDataLabelsY: o,
                      totalDataLabelsAnchor: "middle",
                    }
                  );
                },
              },
              {
                key: "calculateBarsDataLabelsPosition",
                value: function (s) {
                  var o = this.w,
                    c = s.x,
                    h = s.i,
                    d = s.j,
                    f = s.realIndex,
                    g = s.groupIndex,
                    y = s.bcy,
                    x = s.barHeight,
                    k = s.barWidth,
                    _ = s.textRects,
                    A = s.dataLabelsX,
                    O = s.strokeWidth,
                    N = s.dataLabelsConfig,
                    H = s.barDataLabelsConfig,
                    G = s.barTotalDataLabelsConfig,
                    te = s.offX,
                    se = s.offY,
                    b = o.globals.gridHeight / o.globals.dataPoints;
                  k = Math.abs(k);
                  var C,
                    F,
                    ee =
                      (y += g !== -1 ? g * x : 0) -
                      (this.barCtx.isRangeBar ? 0 : b) +
                      x / 2 +
                      _.height / 2 +
                      se -
                      3,
                    ue = "start",
                    he = this.barCtx.series[h][d] < 0,
                    we = c;
                  switch (
                    (this.barCtx.isReversed &&
                      ((we = c + k - (he ? 2 * k : 0)),
                      (c = o.globals.gridWidth - k)),
                    H.position)
                  ) {
                    case "center":
                      A = he
                        ? we + k / 2 - te
                        : Math.max(_.width / 2, we - k / 2) + te;
                      break;
                    case "bottom":
                      A = he
                        ? we + k - O - Math.round(_.width / 2) - te
                        : we - k + O + Math.round(_.width / 2) + te;
                      break;
                    case "top":
                      A = he
                        ? we - O + Math.round(_.width / 2) - te
                        : we - O - Math.round(_.width / 2) + te;
                  }
                  if (this.barCtx.lastActiveBarSerieIndex === f && G.enabled) {
                    var Ae = new K(this.barCtx.ctx).getTextRects(
                      this.getStackedTotalDataLabel({ realIndex: f, j: d }),
                      N.fontSize
                    );
                    he
                      ? ((C =
                          we -
                          O +
                          Math.round(Ae.width / 2) -
                          te -
                          G.offsetX -
                          15),
                        (ue = "end"))
                      : (C =
                          we -
                          O -
                          Math.round(Ae.width / 2) +
                          te +
                          G.offsetX +
                          15),
                      (F = ee + G.offsetY);
                  }
                  return (
                    o.config.chart.stacked ||
                      (A < 0
                        ? (A = A + _.width + O)
                        : A + _.width / 2 > o.globals.gridWidth &&
                          (A = o.globals.gridWidth - _.width - O)),
                    {
                      bcx: c,
                      bcy: y,
                      dataLabelsX: A,
                      dataLabelsY: ee,
                      totalDataLabelsX: C,
                      totalDataLabelsY: F,
                      totalDataLabelsAnchor: ue,
                    }
                  );
                },
              },
              {
                key: "drawCalculatedDataLabels",
                value: function (s) {
                  var o = s.x,
                    c = s.y,
                    h = s.val,
                    d = s.i,
                    f = s.j,
                    g = s.textRects,
                    y = s.barHeight,
                    x = s.barWidth,
                    k = s.dataLabelsConfig,
                    _ = this.w,
                    A = "rotate(0)";
                  _.config.plotOptions.bar.dataLabels.orientation ===
                    "vertical" &&
                    (A = "rotate(-90, ".concat(o, ", ").concat(c, ")"));
                  var O = new X(this.barCtx.ctx),
                    N = new K(this.barCtx.ctx),
                    H = k.formatter,
                    G = null,
                    te = _.globals.collapsedSeriesIndices.indexOf(d) > -1;
                  if (k.enabled && !te) {
                    G = N.group({
                      class: "apexcharts-data-labels",
                      transform: A,
                    });
                    var se = "";
                    h !== void 0 &&
                      (se = H(
                        h,
                        n(
                          n({}, _),
                          {},
                          { seriesIndex: d, dataPointIndex: f, w: _ }
                        )
                      )),
                      !h &&
                        _.config.plotOptions.bar.hideZeroBarsWhenGrouped &&
                        (se = "");
                    var b = _.globals.series[d][f] < 0,
                      C = _.config.plotOptions.bar.dataLabels.position;
                    _.config.plotOptions.bar.dataLabels.orientation ===
                      "vertical" &&
                      (C === "top" && (k.textAnchor = b ? "end" : "start"),
                      C === "center" && (k.textAnchor = "middle"),
                      C === "bottom" && (k.textAnchor = b ? "end" : "start")),
                      this.barCtx.isRangeBar &&
                        this.barCtx.barOptions.dataLabels
                          .hideOverflowingLabels &&
                        x <
                          N.getTextRects(se, parseFloat(k.style.fontSize))
                            .width &&
                        (se = ""),
                      _.config.chart.stacked &&
                        this.barCtx.barOptions.dataLabels
                          .hideOverflowingLabels &&
                        (this.barCtx.isHorizontal
                          ? g.width / 1.6 > Math.abs(x) && (se = "")
                          : g.height / 1.6 > Math.abs(y) && (se = ""));
                    var F = n({}, k);
                    this.barCtx.isHorizontal &&
                      h < 0 &&
                      (k.textAnchor === "start"
                        ? (F.textAnchor = "end")
                        : k.textAnchor === "end" && (F.textAnchor = "start")),
                      O.plotDataLabelsText({
                        x: o,
                        y: c,
                        text: se,
                        i: d,
                        j: f,
                        parent: G,
                        dataLabelsConfig: F,
                        alwaysDrawDataLabel: !0,
                        offsetCorrection: !0,
                      });
                  }
                  return G;
                },
              },
              {
                key: "drawTotalDataLabels",
                value: function (s) {
                  var o,
                    c = s.x,
                    h = s.y,
                    d = s.val,
                    f = s.realIndex,
                    g = s.textAnchor,
                    y = s.barTotalDataLabelsConfig,
                    x = new K(this.barCtx.ctx);
                  return (
                    y.enabled &&
                      c !== void 0 &&
                      h !== void 0 &&
                      this.barCtx.lastActiveBarSerieIndex === f &&
                      (o = x.drawText({
                        x: c,
                        y: h,
                        foreColor: y.style.color,
                        text: d,
                        textAnchor: g,
                        fontFamily: y.style.fontFamily,
                        fontSize: y.style.fontSize,
                        fontWeight: y.style.fontWeight,
                      })),
                    o
                  );
                },
              },
            ]),
            $
          );
        })(),
        wa = (function () {
          function $(s) {
            a(this, $), (this.w = s.w), (this.barCtx = s);
          }
          return (
            u($, [
              {
                key: "initVariables",
                value: function (s) {
                  var o = this.w;
                  (this.barCtx.series = s),
                    (this.barCtx.totalItems = 0),
                    (this.barCtx.seriesLen = 0),
                    (this.barCtx.visibleI = -1),
                    (this.barCtx.visibleItems = 1);
                  for (var c = 0; c < s.length; c++)
                    if (
                      (s[c].length > 0 &&
                        ((this.barCtx.seriesLen = this.barCtx.seriesLen + 1),
                        (this.barCtx.totalItems += s[c].length)),
                      o.globals.isXNumeric)
                    )
                      for (var h = 0; h < s[c].length; h++)
                        o.globals.seriesX[c][h] > o.globals.minX &&
                          o.globals.seriesX[c][h] < o.globals.maxX &&
                          this.barCtx.visibleItems++;
                    else this.barCtx.visibleItems = o.globals.dataPoints;
                  this.barCtx.seriesLen === 0 && (this.barCtx.seriesLen = 1),
                    (this.barCtx.zeroSerieses = []),
                    o.globals.comboCharts ||
                      this.checkZeroSeries({ series: s });
                },
              },
              {
                key: "initialPositions",
                value: function () {
                  var s,
                    o,
                    c,
                    h,
                    d,
                    f,
                    g,
                    y,
                    x = this.w,
                    k = x.globals.dataPoints;
                  this.barCtx.isRangeBar && (k = x.globals.labels.length);
                  var _ = this.barCtx.seriesLen;
                  if (
                    (x.config.plotOptions.bar.rangeBarGroupRows && (_ = 1),
                    this.barCtx.isHorizontal)
                  )
                    (d = (c = x.globals.gridHeight / k) / _),
                      x.globals.isXNumeric &&
                        (d =
                          (c = x.globals.gridHeight / this.barCtx.totalItems) /
                          this.barCtx.seriesLen),
                      (d =
                        (d * parseInt(this.barCtx.barOptions.barHeight, 10)) /
                        100),
                      String(this.barCtx.barOptions.barHeight).indexOf("%") ===
                        -1 &&
                        (d = parseInt(this.barCtx.barOptions.barHeight, 10)),
                      (y =
                        this.barCtx.baseLineInvertedY +
                        x.globals.padHorizontal +
                        (this.barCtx.isReversed ? x.globals.gridWidth : 0) -
                        (this.barCtx.isReversed
                          ? 2 * this.barCtx.baseLineInvertedY
                          : 0)),
                      this.barCtx.isFunnel && (y = x.globals.gridWidth / 2),
                      (o = (c - d * this.barCtx.seriesLen) / 2);
                  else {
                    if (
                      ((h = x.globals.gridWidth / this.barCtx.visibleItems),
                      x.config.xaxis.convertedCatToNumeric &&
                        (h = x.globals.gridWidth / x.globals.dataPoints),
                      (f =
                        ((h / _) *
                          parseInt(this.barCtx.barOptions.columnWidth, 10)) /
                        100),
                      x.globals.isXNumeric)
                    ) {
                      var A = this.barCtx.xRatio;
                      x.config.xaxis.convertedCatToNumeric &&
                        (A = this.barCtx.initialXRatio),
                        x.globals.minXDiff &&
                          x.globals.minXDiff !== 0.5 &&
                          x.globals.minXDiff / A > 0 &&
                          (h = x.globals.minXDiff / A),
                        (f =
                          ((h / _) *
                            parseInt(this.barCtx.barOptions.columnWidth, 10)) /
                          100) < 1 && (f = 1);
                    }
                    String(this.barCtx.barOptions.columnWidth).indexOf("%") ===
                      -1 &&
                      (f = parseInt(this.barCtx.barOptions.columnWidth, 10)),
                      (g =
                        x.globals.gridHeight -
                        this.barCtx.baseLineY[this.barCtx.yaxisIndex] -
                        (this.barCtx.isReversed ? x.globals.gridHeight : 0) +
                        (this.barCtx.isReversed
                          ? 2 * this.barCtx.baseLineY[this.barCtx.yaxisIndex]
                          : 0)),
                      (s =
                        x.globals.padHorizontal +
                        (h - f * this.barCtx.seriesLen) / 2);
                  }
                  return {
                    x: s,
                    y: o,
                    yDivision: c,
                    xDivision: h,
                    barHeight: d,
                    barWidth: f,
                    zeroH: g,
                    zeroW: y,
                  };
                },
              },
              {
                key: "initializeStackedPrevVars",
                value: function (s) {
                  var o = s.w;
                  o.globals.hasSeriesGroups
                    ? o.globals.seriesGroups.forEach(function (c) {
                        s[c] || (s[c] = {}),
                          (s[c].prevY = []),
                          (s[c].prevX = []),
                          (s[c].prevYF = []),
                          (s[c].prevXF = []),
                          (s[c].prevYVal = []),
                          (s[c].prevXVal = []);
                      })
                    : ((s.prevY = []),
                      (s.prevX = []),
                      (s.prevYF = []),
                      (s.prevXF = []),
                      (s.prevYVal = []),
                      (s.prevXVal = []));
                },
              },
              {
                key: "initializeStackedXYVars",
                value: function (s) {
                  var o = s.w;
                  o.globals.hasSeriesGroups
                    ? o.globals.seriesGroups.forEach(function (c) {
                        s[c] || (s[c] = {}),
                          (s[c].xArrj = []),
                          (s[c].xArrjF = []),
                          (s[c].xArrjVal = []),
                          (s[c].yArrj = []),
                          (s[c].yArrjF = []),
                          (s[c].yArrjVal = []);
                      })
                    : ((s.xArrj = []),
                      (s.xArrjF = []),
                      (s.xArrjVal = []),
                      (s.yArrj = []),
                      (s.yArrjF = []),
                      (s.yArrjVal = []));
                },
              },
              {
                key: "getPathFillColor",
                value: function (s, o, c, h) {
                  var d,
                    f,
                    g,
                    y,
                    x = this.w,
                    k = new Z(this.barCtx.ctx),
                    _ = null,
                    A = this.barCtx.barOptions.distributed ? c : o;
                  return (
                    this.barCtx.barOptions.colors.ranges.length > 0 &&
                      this.barCtx.barOptions.colors.ranges.map(function (O) {
                        s[o][c] >= O.from && s[o][c] <= O.to && (_ = O.color);
                      }),
                    x.config.series[o].data[c] &&
                      x.config.series[o].data[c].fillColor &&
                      (_ = x.config.series[o].data[c].fillColor),
                    k.fillPath({
                      seriesNumber: this.barCtx.barOptions.distributed ? A : h,
                      dataPointIndex: c,
                      color: _,
                      value: s[o][c],
                      fillConfig:
                        (d = x.config.series[o].data[c]) === null ||
                        d === void 0
                          ? void 0
                          : d.fill,
                      fillType:
                        (f = x.config.series[o].data[c]) !== null &&
                        f !== void 0 &&
                        (g = f.fill) !== null &&
                        g !== void 0 &&
                        g.type
                          ? (y = x.config.series[o].data[c]) === null ||
                            y === void 0
                            ? void 0
                            : y.fill.type
                          : x.config.fill.type,
                    })
                  );
                },
              },
              {
                key: "getStrokeWidth",
                value: function (s, o, c) {
                  var h = 0,
                    d = this.w;
                  return (
                    this.barCtx.series[s][o]
                      ? (this.barCtx.isNullValue = !1)
                      : (this.barCtx.isNullValue = !0),
                    d.config.stroke.show &&
                      (this.barCtx.isNullValue ||
                        (h = Array.isArray(this.barCtx.strokeWidth)
                          ? this.barCtx.strokeWidth[c]
                          : this.barCtx.strokeWidth)),
                    h
                  );
                },
              },
              {
                key: "shouldApplyRadius",
                value: function (s) {
                  var o = this.w,
                    c = !1;
                  return (
                    o.config.plotOptions.bar.borderRadius > 0 &&
                      (o.config.chart.stacked &&
                      o.config.plotOptions.bar.borderRadiusWhenStacked ===
                        "last"
                        ? this.barCtx.lastActiveBarSerieIndex === s && (c = !0)
                        : (c = !0)),
                    c
                  );
                },
              },
              {
                key: "barBackground",
                value: function (s) {
                  var o = s.j,
                    c = s.i,
                    h = s.x1,
                    d = s.x2,
                    f = s.y1,
                    g = s.y2,
                    y = s.elSeries,
                    x = this.w,
                    k = new K(this.barCtx.ctx),
                    _ = new Ee(this.barCtx.ctx).getActiveConfigSeriesIndex();
                  if (
                    this.barCtx.barOptions.colors.backgroundBarColors.length >
                      0 &&
                    _ === c
                  ) {
                    o >=
                      this.barCtx.barOptions.colors.backgroundBarColors
                        .length &&
                      (o %=
                        this.barCtx.barOptions.colors.backgroundBarColors
                          .length);
                    var A =
                        this.barCtx.barOptions.colors.backgroundBarColors[o],
                      O = k.drawRect(
                        h !== void 0 ? h : 0,
                        f !== void 0 ? f : 0,
                        d !== void 0 ? d : x.globals.gridWidth,
                        g !== void 0 ? g : x.globals.gridHeight,
                        this.barCtx.barOptions.colors.backgroundBarRadius,
                        A,
                        this.barCtx.barOptions.colors.backgroundBarOpacity
                      );
                    y.add(O), O.node.classList.add("apexcharts-backgroundBar");
                  }
                },
              },
              {
                key: "getColumnPaths",
                value: function (s) {
                  var o,
                    c = s.barWidth,
                    h = s.barXPosition,
                    d = s.y1,
                    f = s.y2,
                    g = s.strokeWidth,
                    y = s.seriesGroup,
                    x = s.realIndex,
                    k = s.i,
                    _ = s.j,
                    A = s.w,
                    O = new K(this.barCtx.ctx);
                  (g = Array.isArray(g) ? g[x] : g) || (g = 0);
                  var N = c,
                    H = h;
                  (o = A.config.series[x].data[_]) !== null &&
                    o !== void 0 &&
                    o.columnWidthOffset &&
                    ((H = h - A.config.series[x].data[_].columnWidthOffset / 2),
                    (N = c + A.config.series[x].data[_].columnWidthOffset));
                  var G = H,
                    te = H + N;
                  (d += 0.001), (f += 0.001);
                  var se = O.move(G, d),
                    b = O.move(G, d),
                    C = O.line(te - g, d);
                  if (
                    (A.globals.previousPaths.length > 0 &&
                      (b = this.barCtx.getPreviousPath(x, _, !1)),
                    (se =
                      se +
                      O.line(G, f) +
                      O.line(te - g, f) +
                      O.line(te - g, d) +
                      (A.config.plotOptions.bar.borderRadiusApplication ===
                      "around"
                        ? " Z"
                        : " z")),
                    (b =
                      b +
                      O.line(G, d) +
                      C +
                      C +
                      C +
                      C +
                      C +
                      O.line(G, d) +
                      (A.config.plotOptions.bar.borderRadiusApplication ===
                      "around"
                        ? " Z"
                        : " z")),
                    this.shouldApplyRadius(x) &&
                      (se = O.roundPathCorners(
                        se,
                        A.config.plotOptions.bar.borderRadius
                      )),
                    A.config.chart.stacked)
                  ) {
                    var F = this.barCtx;
                    A.globals.hasSeriesGroups && y && (F = this.barCtx[y]),
                      F.yArrj.push(f),
                      F.yArrjF.push(Math.abs(d - f)),
                      F.yArrjVal.push(this.barCtx.series[k][_]);
                  }
                  return { pathTo: se, pathFrom: b };
                },
              },
              {
                key: "getBarpaths",
                value: function (s) {
                  var o,
                    c = s.barYPosition,
                    h = s.barHeight,
                    d = s.x1,
                    f = s.x2,
                    g = s.strokeWidth,
                    y = s.seriesGroup,
                    x = s.realIndex,
                    k = s.i,
                    _ = s.j,
                    A = s.w,
                    O = new K(this.barCtx.ctx);
                  (g = Array.isArray(g) ? g[x] : g) || (g = 0);
                  var N = c,
                    H = h;
                  (o = A.config.series[x].data[_]) !== null &&
                    o !== void 0 &&
                    o.barHeightOffset &&
                    ((N = c - A.config.series[x].data[_].barHeightOffset / 2),
                    (H = h + A.config.series[x].data[_].barHeightOffset));
                  var G = N,
                    te = N + H;
                  (d += 0.001), (f += 0.001);
                  var se = O.move(d, G),
                    b = O.move(d, G);
                  A.globals.previousPaths.length > 0 &&
                    (b = this.barCtx.getPreviousPath(x, _, !1));
                  var C = O.line(d, te - g);
                  if (
                    ((se =
                      se +
                      O.line(f, G) +
                      O.line(f, te - g) +
                      C +
                      (A.config.plotOptions.bar.borderRadiusApplication ===
                      "around"
                        ? " Z"
                        : " z")),
                    (b =
                      b +
                      O.line(d, G) +
                      C +
                      C +
                      C +
                      C +
                      C +
                      O.line(d, G) +
                      (A.config.plotOptions.bar.borderRadiusApplication ===
                      "around"
                        ? " Z"
                        : " z")),
                    this.shouldApplyRadius(x) &&
                      (se = O.roundPathCorners(
                        se,
                        A.config.plotOptions.bar.borderRadius
                      )),
                    A.config.chart.stacked)
                  ) {
                    var F = this.barCtx;
                    A.globals.hasSeriesGroups && y && (F = this.barCtx[y]),
                      F.xArrj.push(f),
                      F.xArrjF.push(Math.abs(d - f)),
                      F.xArrjVal.push(this.barCtx.series[k][_]);
                  }
                  return { pathTo: se, pathFrom: b };
                },
              },
              {
                key: "checkZeroSeries",
                value: function (s) {
                  for (var o = s.series, c = this.w, h = 0; h < o.length; h++) {
                    for (
                      var d = 0, f = 0;
                      f < o[c.globals.maxValsInArrayIndex].length;
                      f++
                    )
                      d += o[h][f];
                    d === 0 && this.barCtx.zeroSerieses.push(h);
                  }
                },
              },
              {
                key: "getXForValue",
                value: function (s, o) {
                  var c =
                    !(arguments.length > 2 && arguments[2] !== void 0) ||
                    arguments[2]
                      ? o
                      : null;
                  return (
                    s != null &&
                      (c =
                        o +
                        s / this.barCtx.invertedYRatio -
                        2 *
                          (this.barCtx.isReversed
                            ? s / this.barCtx.invertedYRatio
                            : 0)),
                    c
                  );
                },
              },
              {
                key: "getYForValue",
                value: function (s, o) {
                  var c =
                    !(arguments.length > 2 && arguments[2] !== void 0) ||
                    arguments[2]
                      ? o
                      : null;
                  return (
                    s != null &&
                      (c =
                        o -
                        s / this.barCtx.yRatio[this.barCtx.yaxisIndex] +
                        2 *
                          (this.barCtx.isReversed
                            ? s / this.barCtx.yRatio[this.barCtx.yaxisIndex]
                            : 0)),
                    c
                  );
                },
              },
              {
                key: "getGoalValues",
                value: function (s, o, c, h, d) {
                  var f = this,
                    g = this.w,
                    y = [],
                    x = function (A, O) {
                      var N;
                      y.push(
                        (p(
                          (N = {}),
                          s,
                          s === "x"
                            ? f.getXForValue(A, o, !1)
                            : f.getYForValue(A, c, !1)
                        ),
                        p(N, "attrs", O),
                        N)
                      );
                    };
                  if (
                    (g.globals.seriesGoals[h] &&
                      g.globals.seriesGoals[h][d] &&
                      Array.isArray(g.globals.seriesGoals[h][d]) &&
                      g.globals.seriesGoals[h][d].forEach(function (A) {
                        x(A.value, A);
                      }),
                    this.barCtx.barOptions.isDumbbell &&
                      g.globals.seriesRange.length)
                  ) {
                    var k = this.barCtx.barOptions.dumbbellColors
                        ? this.barCtx.barOptions.dumbbellColors
                        : g.globals.colors,
                      _ = {
                        strokeHeight: s === "x" ? 0 : g.globals.markers.size[h],
                        strokeWidth: s === "x" ? g.globals.markers.size[h] : 0,
                        strokeDashArray: 0,
                        strokeLineCap: "round",
                        strokeColor: Array.isArray(k[h]) ? k[h][0] : k[h],
                      };
                    x(g.globals.seriesRangeStart[h][d], _),
                      x(
                        g.globals.seriesRangeEnd[h][d],
                        n(
                          n({}, _),
                          {},
                          { strokeColor: Array.isArray(k[h]) ? k[h][1] : k[h] }
                        )
                      );
                  }
                  return y;
                },
              },
              {
                key: "drawGoalLine",
                value: function (s) {
                  var o = s.barXPosition,
                    c = s.barYPosition,
                    h = s.goalX,
                    d = s.goalY,
                    f = s.barWidth,
                    g = s.barHeight,
                    y = new K(this.barCtx.ctx),
                    x = y.group({ className: "apexcharts-bar-goals-groups" });
                  x.node.classList.add("apexcharts-element-hidden"),
                    this.barCtx.w.globals.delayedElements.push({ el: x.node }),
                    x.attr(
                      "clip-path",
                      "url(#gridRectMarkerMask".concat(
                        this.barCtx.w.globals.cuid,
                        ")"
                      )
                    );
                  var k = null;
                  return (
                    this.barCtx.isHorizontal
                      ? Array.isArray(h) &&
                        h.forEach(function (_) {
                          var A =
                              _.attrs.strokeHeight !== void 0
                                ? _.attrs.strokeHeight
                                : g / 2,
                            O = c + A + g / 2;
                          (k = y.drawLine(
                            _.x,
                            O - 2 * A,
                            _.x,
                            O,
                            _.attrs.strokeColor ? _.attrs.strokeColor : void 0,
                            _.attrs.strokeDashArray,
                            _.attrs.strokeWidth ? _.attrs.strokeWidth : 2,
                            _.attrs.strokeLineCap
                          )),
                            x.add(k);
                        })
                      : Array.isArray(d) &&
                        d.forEach(function (_) {
                          var A =
                              _.attrs.strokeWidth !== void 0
                                ? _.attrs.strokeWidth
                                : f / 2,
                            O = o + A + f / 2;
                          (k = y.drawLine(
                            O - 2 * A,
                            _.y,
                            O,
                            _.y,
                            _.attrs.strokeColor ? _.attrs.strokeColor : void 0,
                            _.attrs.strokeDashArray,
                            _.attrs.strokeHeight ? _.attrs.strokeHeight : 2,
                            _.attrs.strokeLineCap
                          )),
                            x.add(k);
                        }),
                    x
                  );
                },
              },
              {
                key: "drawBarShadow",
                value: function (s) {
                  var o = s.prevPaths,
                    c = s.currPaths,
                    h = s.color,
                    d = this.w,
                    f = o.x,
                    g = o.x1,
                    y = o.barYPosition,
                    x = c.x,
                    k = c.x1,
                    _ = c.barYPosition,
                    A = y + c.barHeight,
                    O = new K(this.barCtx.ctx),
                    N = new B(),
                    H =
                      O.move(g, A) +
                      O.line(f, A) +
                      O.line(x, _) +
                      O.line(k, _) +
                      O.line(g, A) +
                      (d.config.plotOptions.bar.borderRadiusApplication ===
                      "around"
                        ? " Z"
                        : " z");
                  return O.drawPath({
                    d: H,
                    fill: N.shadeColor(0.5, B.rgb2hex(h)),
                    stroke: "none",
                    strokeWidth: 0,
                    fillOpacity: 1,
                    classes: "apexcharts-bar-shadows",
                  });
                },
              },
            ]),
            $
          );
        })(),
        qt = (function () {
          function $(s, o) {
            a(this, $), (this.ctx = s), (this.w = s.w);
            var c = this.w;
            (this.barOptions = c.config.plotOptions.bar),
              (this.isHorizontal = this.barOptions.horizontal),
              (this.strokeWidth = c.config.stroke.width),
              (this.isNullValue = !1),
              (this.isRangeBar =
                c.globals.seriesRange.length && this.isHorizontal),
              (this.isVerticalGroupedRangeBar =
                !c.globals.isBarHorizontal &&
                c.globals.seriesRange.length &&
                c.config.plotOptions.bar.rangeBarGroupRows),
              (this.isFunnel = this.barOptions.isFunnel),
              (this.xyRatios = o),
              this.xyRatios !== null &&
                ((this.xRatio = o.xRatio),
                (this.initialXRatio = o.initialXRatio),
                (this.yRatio = o.yRatio),
                (this.invertedXRatio = o.invertedXRatio),
                (this.invertedYRatio = o.invertedYRatio),
                (this.baseLineY = o.baseLineY),
                (this.baseLineInvertedY = o.baseLineInvertedY)),
              (this.yaxisIndex = 0),
              (this.seriesLen = 0),
              (this.pathArr = []);
            var h = new Ee(this.ctx);
            this.lastActiveBarSerieIndex = h.getActiveConfigSeriesIndex(
              "desc",
              ["bar", "column"]
            );
            var d = h.getBarSeriesIndices(),
              f = new fe(this.ctx);
            (this.stackedSeriesTotals = f.getStackedSeriesTotals(
              this.w.config.series
                .map(function (g, y) {
                  return d.indexOf(y) === -1 ? y : -1;
                })
                .filter(function (g) {
                  return g !== -1;
                })
            )),
              (this.barHelpers = new wa(this));
          }
          return (
            u($, [
              {
                key: "draw",
                value: function (s, o) {
                  var c = this.w,
                    h = new K(this.ctx),
                    d = new fe(this.ctx, c);
                  (s = d.getLogSeries(s)),
                    (this.series = s),
                    (this.yRatio = d.getLogYRatios(this.yRatio)),
                    this.barHelpers.initVariables(s);
                  var f = h.group({
                    class: "apexcharts-bar-series apexcharts-plot-series",
                  });
                  c.config.dataLabels.enabled &&
                    this.totalItems > this.barOptions.dataLabels.maxItems &&
                    console.warn(
                      "WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering."
                    );
                  for (var g = 0, y = 0; g < s.length; g++, y++) {
                    var x,
                      k,
                      _,
                      A,
                      O = void 0,
                      N = void 0,
                      H = [],
                      G = [],
                      te = c.globals.comboCharts ? o[g] : g,
                      se = h.group({
                        class: "apexcharts-series",
                        rel: g + 1,
                        seriesName: B.escapeString(c.globals.seriesNames[te]),
                        "data:realIndex": te,
                      });
                    this.ctx.series.addCollapsedClassToSeries(se, te),
                      s[g].length > 0 && (this.visibleI = this.visibleI + 1);
                    var b = 0,
                      C = 0;
                    this.yRatio.length > 1 && (this.yaxisIndex = te),
                      (this.isReversed =
                        c.config.yaxis[this.yaxisIndex] &&
                        c.config.yaxis[this.yaxisIndex].reversed);
                    var F = this.barHelpers.initialPositions();
                    (N = F.y),
                      (b = F.barHeight),
                      (k = F.yDivision),
                      (A = F.zeroW),
                      (O = F.x),
                      (C = F.barWidth),
                      (x = F.xDivision),
                      (_ = F.zeroH),
                      this.horizontal || G.push(O + C / 2);
                    var ee = h.group({
                      class: "apexcharts-datalabels",
                      "data:realIndex": te,
                    });
                    c.globals.delayedElements.push({ el: ee.node }),
                      ee.node.classList.add("apexcharts-element-hidden");
                    var ue = h.group({ class: "apexcharts-bar-goals-markers" }),
                      he = h.group({ class: "apexcharts-bar-shadows" });
                    c.globals.delayedElements.push({ el: he.node }),
                      he.node.classList.add("apexcharts-element-hidden");
                    for (var we = 0; we < c.globals.dataPoints; we++) {
                      var Ae = this.barHelpers.getStrokeWidth(g, we, te),
                        Le = null,
                        ze = {
                          indexes: { i: g, j: we, realIndex: te, bc: y },
                          x: O,
                          y: N,
                          strokeWidth: Ae,
                          elSeries: se,
                        };
                      this.isHorizontal
                        ? ((Le = this.drawBarPaths(
                            n(
                              n({}, ze),
                              {},
                              { barHeight: b, zeroW: A, yDivision: k }
                            )
                          )),
                          (C = this.series[g][we] / this.invertedYRatio))
                        : ((Le = this.drawColumnPaths(
                            n(
                              n({}, ze),
                              {},
                              { xDivision: x, barWidth: C, zeroH: _ }
                            )
                          )),
                          (b =
                            this.series[g][we] / this.yRatio[this.yaxisIndex]));
                      var De = this.barHelpers.getPathFillColor(s, g, we, te);
                      if (
                        this.isFunnel &&
                        this.barOptions.isFunnel3d &&
                        this.pathArr.length &&
                        we > 0
                      ) {
                        var Ge = this.barHelpers.drawBarShadow({
                          color:
                            typeof De == "string" &&
                            (De == null ? void 0 : De.indexOf("url")) === -1
                              ? De
                              : B.hexToRgba(c.globals.colors[g]),
                          prevPaths: this.pathArr[this.pathArr.length - 1],
                          currPaths: Le,
                        });
                        Ge && he.add(Ge);
                      }
                      this.pathArr.push(Le);
                      var it = this.barHelpers.drawGoalLine({
                        barXPosition: Le.barXPosition,
                        barYPosition: Le.barYPosition,
                        goalX: Le.goalX,
                        goalY: Le.goalY,
                        barHeight: b,
                        barWidth: C,
                      });
                      it && ue.add(it),
                        (N = Le.y),
                        (O = Le.x),
                        we > 0 && G.push(O + C / 2),
                        H.push(N),
                        this.renderSeries({
                          realIndex: te,
                          pathFill: De,
                          j: we,
                          i: g,
                          pathFrom: Le.pathFrom,
                          pathTo: Le.pathTo,
                          strokeWidth: Ae,
                          elSeries: se,
                          x: O,
                          y: N,
                          series: s,
                          barHeight: Le.barHeight ? Le.barHeight : b,
                          barWidth: Le.barWidth ? Le.barWidth : C,
                          elDataLabelsWrap: ee,
                          elGoalsMarkers: ue,
                          elBarShadows: he,
                          visibleSeries: this.visibleI,
                          type: "bar",
                        });
                    }
                    (c.globals.seriesXvalues[te] = G),
                      (c.globals.seriesYvalues[te] = H),
                      f.add(se);
                  }
                  return f;
                },
              },
              {
                key: "renderSeries",
                value: function (s) {
                  var o = s.realIndex,
                    c = s.pathFill,
                    h = s.lineFill,
                    d = s.j,
                    f = s.i,
                    g = s.groupIndex,
                    y = s.pathFrom,
                    x = s.pathTo,
                    k = s.strokeWidth,
                    _ = s.elSeries,
                    A = s.x,
                    O = s.y,
                    N = s.y1,
                    H = s.y2,
                    G = s.series,
                    te = s.barHeight,
                    se = s.barWidth,
                    b = s.barXPosition,
                    C = s.barYPosition,
                    F = s.elDataLabelsWrap,
                    ee = s.elGoalsMarkers,
                    ue = s.elBarShadows,
                    he = s.visibleSeries,
                    we = s.type,
                    Ae = this.w,
                    Le = new K(this.ctx);
                  h ||
                    (h = this.barOptions.distributed
                      ? Ae.globals.stroke.colors[d]
                      : Ae.globals.stroke.colors[o]),
                    Ae.config.series[f].data[d] &&
                      Ae.config.series[f].data[d].strokeColor &&
                      (h = Ae.config.series[f].data[d].strokeColor),
                    this.isNullValue && (c = "none");
                  var ze =
                      ((d / Ae.config.chart.animations.animateGradually.delay) *
                        (Ae.config.chart.animations.speed /
                          Ae.globals.dataPoints)) /
                      2.4,
                    De = Le.renderPaths({
                      i: f,
                      j: d,
                      realIndex: o,
                      pathFrom: y,
                      pathTo: x,
                      stroke: h,
                      strokeWidth: k,
                      strokeLineCap: Ae.config.stroke.lineCap,
                      fill: c,
                      animationDelay: ze,
                      initialSpeed: Ae.config.chart.animations.speed,
                      dataChangeSpeed:
                        Ae.config.chart.animations.dynamicAnimation.speed,
                      className: "apexcharts-".concat(we, "-area"),
                    });
                  De.attr(
                    "clip-path",
                    "url(#gridRectMask".concat(Ae.globals.cuid, ")")
                  );
                  var Ge = Ae.config.forecastDataPoints;
                  Ge.count > 0 &&
                    d >= Ae.globals.dataPoints - Ge.count &&
                    (De.node.setAttribute("stroke-dasharray", Ge.dashArray),
                    De.node.setAttribute("stroke-width", Ge.strokeWidth),
                    De.node.setAttribute("fill-opacity", Ge.fillOpacity)),
                    N !== void 0 &&
                      H !== void 0 &&
                      (De.attr("data-range-y1", N),
                      De.attr("data-range-y2", H)),
                    new re(this.ctx).setSelectionFilter(De, o, d),
                    _.add(De);
                  var it = new gr(this).handleBarDataLabels({
                    x: A,
                    y: O,
                    y1: N,
                    y2: H,
                    i: f,
                    j: d,
                    series: G,
                    realIndex: o,
                    groupIndex: g,
                    barHeight: te,
                    barWidth: se,
                    barXPosition: b,
                    barYPosition: C,
                    renderedPath: De,
                    visibleSeries: he,
                  });
                  return (
                    it.dataLabels !== null && F.add(it.dataLabels),
                    it.totalDataLabels && F.add(it.totalDataLabels),
                    _.add(F),
                    ee && _.add(ee),
                    ue && _.add(ue),
                    _
                  );
                },
              },
              {
                key: "drawBarPaths",
                value: function (s) {
                  var o,
                    c = s.indexes,
                    h = s.barHeight,
                    d = s.strokeWidth,
                    f = s.zeroW,
                    g = s.x,
                    y = s.y,
                    x = s.yDivision,
                    k = s.elSeries,
                    _ = this.w,
                    A = c.i,
                    O = c.j;
                  if (_.globals.isXNumeric)
                    o =
                      (y =
                        (_.globals.seriesX[A][O] - _.globals.minX) /
                          this.invertedXRatio -
                        h) +
                      h * this.visibleI;
                  else if (_.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
                    var N = 0,
                      H = 0;
                    _.globals.seriesPercent.forEach(function (te, se) {
                      te[O] && N++, se < A && te[O] === 0 && H++;
                    }),
                      N > 0 && (h = (this.seriesLen * h) / N),
                      (o = y + h * this.visibleI),
                      (o -= h * H);
                  } else o = y + h * this.visibleI;
                  this.isFunnel &&
                    (f -=
                      (this.barHelpers.getXForValue(this.series[A][O], f) - f) /
                      2),
                    (g = this.barHelpers.getXForValue(this.series[A][O], f));
                  var G = this.barHelpers.getBarpaths({
                    barYPosition: o,
                    barHeight: h,
                    x1: f,
                    x2: g,
                    strokeWidth: d,
                    series: this.series,
                    realIndex: c.realIndex,
                    i: A,
                    j: O,
                    w: _,
                  });
                  return (
                    _.globals.isXNumeric || (y += x),
                    this.barHelpers.barBackground({
                      j: O,
                      i: A,
                      y1: o - h * this.visibleI,
                      y2: h * this.seriesLen,
                      elSeries: k,
                    }),
                    {
                      pathTo: G.pathTo,
                      pathFrom: G.pathFrom,
                      x1: f,
                      x: g,
                      y,
                      goalX: this.barHelpers.getGoalValues("x", f, null, A, O),
                      barYPosition: o,
                      barHeight: h,
                    }
                  );
                },
              },
              {
                key: "drawColumnPaths",
                value: function (s) {
                  var o,
                    c = s.indexes,
                    h = s.x,
                    d = s.y,
                    f = s.xDivision,
                    g = s.barWidth,
                    y = s.zeroH,
                    x = s.strokeWidth,
                    k = s.elSeries,
                    _ = this.w,
                    A = c.realIndex,
                    O = c.i,
                    N = c.j,
                    H = c.bc;
                  if (_.globals.isXNumeric) {
                    var G = A;
                    _.globals.seriesX[A].length ||
                      (G = _.globals.maxValsInArrayIndex),
                      _.globals.seriesX[G][N] &&
                        (h =
                          (_.globals.seriesX[G][N] - _.globals.minX) /
                            this.xRatio -
                          (g * this.seriesLen) / 2),
                      (o = h + g * this.visibleI);
                  } else if (_.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
                    var te = 0,
                      se = 0;
                    _.globals.seriesPercent.forEach(function (C, F) {
                      C[N] && te++, F < O && C[N] === 0 && se++;
                    }),
                      te > 0 && (g = (this.seriesLen * g) / te),
                      (o = h + g * this.visibleI),
                      (o -= g * se);
                  } else o = h + g * this.visibleI;
                  d = this.barHelpers.getYForValue(this.series[O][N], y);
                  var b = this.barHelpers.getColumnPaths({
                    barXPosition: o,
                    barWidth: g,
                    y1: y,
                    y2: d,
                    strokeWidth: x,
                    series: this.series,
                    realIndex: c.realIndex,
                    i: O,
                    j: N,
                    w: _,
                  });
                  return (
                    _.globals.isXNumeric || (h += f),
                    this.barHelpers.barBackground({
                      bc: H,
                      j: N,
                      i: O,
                      x1: o - x / 2 - g * this.visibleI,
                      x2: g * this.seriesLen + x / 2,
                      elSeries: k,
                    }),
                    {
                      pathTo: b.pathTo,
                      pathFrom: b.pathFrom,
                      x: h,
                      y: d,
                      goalY: this.barHelpers.getGoalValues("y", null, y, O, N),
                      barXPosition: o,
                      barWidth: g,
                    }
                  );
                },
              },
              {
                key: "getPreviousPath",
                value: function (s, o) {
                  for (
                    var c, h = this.w, d = 0;
                    d < h.globals.previousPaths.length;
                    d++
                  ) {
                    var f = h.globals.previousPaths[d];
                    f.paths &&
                      f.paths.length > 0 &&
                      parseInt(f.realIndex, 10) === parseInt(s, 10) &&
                      h.globals.previousPaths[d].paths[o] !== void 0 &&
                      (c = h.globals.previousPaths[d].paths[o].d);
                  }
                  return c;
                },
              },
            ]),
            $
          );
        })(),
        lr = (function ($) {
          m(o, qt);
          var s = M(o);
          function o() {
            return a(this, o), s.apply(this, arguments);
          }
          return (
            u(o, [
              {
                key: "draw",
                value: function (c, h) {
                  var d = this,
                    f = this.w;
                  (this.graphics = new K(this.ctx)),
                    (this.bar = new qt(this.ctx, this.xyRatios));
                  var g = new fe(this.ctx, f);
                  (c = g.getLogSeries(c)),
                    (this.yRatio = g.getLogYRatios(this.yRatio)),
                    this.barHelpers.initVariables(c),
                    f.config.chart.stackType === "100%" &&
                      (c = f.globals.seriesPercent.slice()),
                    (this.series = c),
                    this.barHelpers.initializeStackedPrevVars(this);
                  for (
                    var y = this.graphics.group({
                        class: "apexcharts-bar-series apexcharts-plot-series",
                      }),
                      x = 0,
                      k = 0,
                      _ = function (N, H) {
                        var G = void 0,
                          te = void 0,
                          se = void 0,
                          b = void 0,
                          C = -1;
                        (d.groupCtx = d),
                          f.globals.seriesGroups.forEach(function (Wr, an) {
                            Wr.indexOf(f.config.series[N].name) > -1 &&
                              (C = an);
                          }),
                          C !== -1 &&
                            (d.groupCtx = d[f.globals.seriesGroups[C]]);
                        var F = [],
                          ee = [],
                          ue = f.globals.comboCharts ? h[N] : N;
                        d.yRatio.length > 1 && (d.yaxisIndex = ue),
                          (d.isReversed =
                            f.config.yaxis[d.yaxisIndex] &&
                            f.config.yaxis[d.yaxisIndex].reversed);
                        var he = d.graphics.group({
                          class: "apexcharts-series",
                          seriesName: B.escapeString(f.globals.seriesNames[ue]),
                          rel: N + 1,
                          "data:realIndex": ue,
                        });
                        d.ctx.series.addCollapsedClassToSeries(he, ue);
                        var we = d.graphics.group({
                            class: "apexcharts-datalabels",
                            "data:realIndex": ue,
                          }),
                          Ae = d.graphics.group({
                            class: "apexcharts-bar-goals-markers",
                          }),
                          Le = 0,
                          ze = 0,
                          De = d.initialPositions(x, k, G, te, se, b);
                        (k = De.y),
                          (Le = De.barHeight),
                          (te = De.yDivision),
                          (b = De.zeroW),
                          (x = De.x),
                          (ze = De.barWidth),
                          (G = De.xDivision),
                          (se = De.zeroH),
                          d.barHelpers.initializeStackedXYVars(d),
                          d.groupCtx.prevY.length === 1 &&
                            d.groupCtx.prevY[0].every(function (Wr) {
                              return isNaN(Wr);
                            }) &&
                            ((d.groupCtx.prevY[0] = d.groupCtx.prevY[0].map(
                              function (Wr) {
                                return se;
                              }
                            )),
                            (d.groupCtx.prevYF[0] = d.groupCtx.prevYF[0].map(
                              function (Wr) {
                                return 0;
                              }
                            )));
                        for (var Ge = 0; Ge < f.globals.dataPoints; Ge++) {
                          var it = d.barHelpers.getStrokeWidth(N, Ge, ue),
                            St = {
                              indexes: { i: N, j: Ge, realIndex: ue, bc: H },
                              strokeWidth: it,
                              x,
                              y: k,
                              elSeries: he,
                              groupIndex: C,
                              seriesGroup: f.globals.seriesGroups[C],
                            },
                            Lt = null;
                          d.isHorizontal
                            ? ((Lt = d.drawStackedBarPaths(
                                n(
                                  n({}, St),
                                  {},
                                  { zeroW: b, barHeight: Le, yDivision: te }
                                )
                              )),
                              (ze = d.series[N][Ge] / d.invertedYRatio))
                            : ((Lt = d.drawStackedColumnPaths(
                                n(
                                  n({}, St),
                                  {},
                                  { xDivision: G, barWidth: ze, zeroH: se }
                                )
                              )),
                              (Le = d.series[N][Ge] / d.yRatio[d.yaxisIndex]));
                          var Ht = d.barHelpers.drawGoalLine({
                            barXPosition: Lt.barXPosition,
                            barYPosition: Lt.barYPosition,
                            goalX: Lt.goalX,
                            goalY: Lt.goalY,
                            barHeight: Le,
                            barWidth: ze,
                          });
                          Ht && Ae.add(Ht),
                            (k = Lt.y),
                            (x = Lt.x),
                            F.push(x),
                            ee.push(k);
                          var Jr = d.barHelpers.getPathFillColor(c, N, Ge, ue);
                          he = d.renderSeries({
                            realIndex: ue,
                            pathFill: Jr,
                            j: Ge,
                            i: N,
                            groupIndex: C,
                            pathFrom: Lt.pathFrom,
                            pathTo: Lt.pathTo,
                            strokeWidth: it,
                            elSeries: he,
                            x,
                            y: k,
                            series: c,
                            barHeight: Le,
                            barWidth: ze,
                            elDataLabelsWrap: we,
                            elGoalsMarkers: Ae,
                            type: "bar",
                            visibleSeries: 0,
                          });
                        }
                        (f.globals.seriesXvalues[ue] = F),
                          (f.globals.seriesYvalues[ue] = ee),
                          d.groupCtx.prevY.push(d.groupCtx.yArrj),
                          d.groupCtx.prevYF.push(d.groupCtx.yArrjF),
                          d.groupCtx.prevYVal.push(d.groupCtx.yArrjVal),
                          d.groupCtx.prevX.push(d.groupCtx.xArrj),
                          d.groupCtx.prevXF.push(d.groupCtx.xArrjF),
                          d.groupCtx.prevXVal.push(d.groupCtx.xArrjVal),
                          y.add(he);
                      },
                      A = 0,
                      O = 0;
                    A < c.length;
                    A++, O++
                  )
                    _(A, O);
                  return y;
                },
              },
              {
                key: "initialPositions",
                value: function (c, h, d, f, g, y) {
                  var x,
                    k,
                    _,
                    A,
                    O = this.w;
                  return (
                    this.isHorizontal
                      ? ((_ =
                          ((_ = f =
                            O.globals.gridHeight / O.globals.dataPoints) *
                            parseInt(O.config.plotOptions.bar.barHeight, 10)) /
                          100),
                        String(O.config.plotOptions.bar.barHeight).indexOf(
                          "%"
                        ) === -1 &&
                          (_ = parseInt(
                            O.config.plotOptions.bar.barHeight,
                            10
                          )),
                        (y =
                          this.baseLineInvertedY +
                          O.globals.padHorizontal +
                          (this.isReversed ? O.globals.gridWidth : 0) -
                          (this.isReversed ? 2 * this.baseLineInvertedY : 0)),
                        (h = (f - _) / 2))
                      : ((A = d = O.globals.gridWidth / O.globals.dataPoints),
                        (A =
                          O.globals.isXNumeric && O.globals.dataPoints > 1
                            ? ((d = O.globals.minXDiff / this.xRatio) *
                                parseInt(this.barOptions.columnWidth, 10)) /
                              100
                            : (A *
                                parseInt(
                                  O.config.plotOptions.bar.columnWidth,
                                  10
                                )) /
                              100),
                        String(O.config.plotOptions.bar.columnWidth).indexOf(
                          "%"
                        ) === -1 &&
                          (A = parseInt(
                            O.config.plotOptions.bar.columnWidth,
                            10
                          )),
                        (g =
                          O.globals.gridHeight -
                          this.baseLineY[this.yaxisIndex] -
                          (this.isReversed ? O.globals.gridHeight : 0) +
                          (this.isReversed
                            ? 2 * this.baseLineY[this.yaxisIndex]
                            : 0)),
                        (c = O.globals.padHorizontal + (d - A) / 2)),
                    {
                      x: c,
                      y: h,
                      yDivision: f,
                      xDivision: d,
                      barHeight:
                        (x = O.globals.seriesGroups) !== null &&
                        x !== void 0 &&
                        x.length
                          ? _ / O.globals.seriesGroups.length
                          : _,
                      barWidth:
                        (k = O.globals.seriesGroups) !== null &&
                        k !== void 0 &&
                        k.length
                          ? A / O.globals.seriesGroups.length
                          : A,
                      zeroH: g,
                      zeroW: y,
                    }
                  );
                },
              },
              {
                key: "drawStackedBarPaths",
                value: function (c) {
                  for (
                    var h,
                      d = c.indexes,
                      f = c.barHeight,
                      g = c.strokeWidth,
                      y = c.zeroW,
                      x = c.x,
                      k = c.y,
                      _ = c.groupIndex,
                      A = c.seriesGroup,
                      O = c.yDivision,
                      N = c.elSeries,
                      H = this.w,
                      G = k + (_ !== -1 ? _ * f : 0),
                      te = d.i,
                      se = d.j,
                      b = 0,
                      C = 0;
                    C < this.groupCtx.prevXF.length;
                    C++
                  )
                    b += this.groupCtx.prevXF[C][se];
                  var F = te;
                  if ((A && (F = A.indexOf(H.config.series[te].name)), F > 0)) {
                    var ee = y;
                    this.groupCtx.prevXVal[F - 1][se] < 0
                      ? (ee =
                          this.series[te][se] >= 0
                            ? this.groupCtx.prevX[F - 1][se] +
                              b -
                              2 * (this.isReversed ? b : 0)
                            : this.groupCtx.prevX[F - 1][se])
                      : this.groupCtx.prevXVal[F - 1][se] >= 0 &&
                        (ee =
                          this.series[te][se] >= 0
                            ? this.groupCtx.prevX[F - 1][se]
                            : this.groupCtx.prevX[F - 1][se] -
                              b +
                              2 * (this.isReversed ? b : 0)),
                      (h = ee);
                  } else h = y;
                  x =
                    this.series[te][se] === null
                      ? h
                      : h +
                        this.series[te][se] / this.invertedYRatio -
                        2 *
                          (this.isReversed
                            ? this.series[te][se] / this.invertedYRatio
                            : 0);
                  var ue = this.barHelpers.getBarpaths({
                    barYPosition: G,
                    barHeight: f,
                    x1: h,
                    x2: x,
                    strokeWidth: g,
                    series: this.series,
                    realIndex: d.realIndex,
                    seriesGroup: A,
                    i: te,
                    j: se,
                    w: H,
                  });
                  return (
                    this.barHelpers.barBackground({
                      j: se,
                      i: te,
                      y1: G,
                      y2: f,
                      elSeries: N,
                    }),
                    (k += O),
                    {
                      pathTo: ue.pathTo,
                      pathFrom: ue.pathFrom,
                      goalX: this.barHelpers.getGoalValues(
                        "x",
                        y,
                        null,
                        te,
                        se
                      ),
                      barYPosition: G,
                      x,
                      y: k,
                    }
                  );
                },
              },
              {
                key: "drawStackedColumnPaths",
                value: function (c) {
                  var h = c.indexes,
                    d = c.x,
                    f = c.y,
                    g = c.xDivision,
                    y = c.barWidth,
                    x = c.zeroH,
                    k = c.groupIndex,
                    _ = c.seriesGroup,
                    A = c.elSeries,
                    O = this.w,
                    N = h.i,
                    H = h.j,
                    G = h.bc;
                  if (O.globals.isXNumeric) {
                    var te = O.globals.seriesX[N][H];
                    te || (te = 0),
                      (d = (te - O.globals.minX) / this.xRatio - y / 2),
                      O.globals.seriesGroups.length &&
                        (d =
                          (te - O.globals.minX) / this.xRatio -
                          (y / 2) * O.globals.seriesGroups.length);
                  }
                  for (
                    var se, b = d + (k !== -1 ? k * y : 0), C = 0, F = 0;
                    F < this.groupCtx.prevYF.length;
                    F++
                  )
                    C += isNaN(this.groupCtx.prevYF[F][H])
                      ? 0
                      : this.groupCtx.prevYF[F][H];
                  var ee = N;
                  if (
                    (_ && (ee = _.indexOf(O.config.series[N].name)),
                    (ee > 0 && !O.globals.isXNumeric) ||
                      (ee > 0 &&
                        O.globals.isXNumeric &&
                        O.globals.seriesX[N - 1][H] ===
                          O.globals.seriesX[N][H]))
                  ) {
                    var ue,
                      he,
                      we,
                      Ae = Math.min(this.yRatio.length + 1, N + 1);
                    if (
                      this.groupCtx.prevY[ee - 1] !== void 0 &&
                      this.groupCtx.prevY[ee - 1].length
                    )
                      for (var Le = 1; Le < Ae; Le++) {
                        var ze;
                        if (
                          !isNaN(
                            (ze = this.groupCtx.prevY[ee - Le]) === null ||
                              ze === void 0
                              ? void 0
                              : ze[H]
                          )
                        ) {
                          we = this.groupCtx.prevY[ee - Le][H];
                          break;
                        }
                      }
                    for (var De = 1; De < Ae; De++) {
                      var Ge, it;
                      if (
                        ((Ge = this.groupCtx.prevYVal[ee - De]) === null ||
                        Ge === void 0
                          ? void 0
                          : Ge[H]) < 0
                      ) {
                        he =
                          this.series[N][H] >= 0
                            ? we - C + 2 * (this.isReversed ? C : 0)
                            : we;
                        break;
                      }
                      if (
                        ((it = this.groupCtx.prevYVal[ee - De]) === null ||
                        it === void 0
                          ? void 0
                          : it[H]) >= 0
                      ) {
                        he =
                          this.series[N][H] >= 0
                            ? we
                            : we + C - 2 * (this.isReversed ? C : 0);
                        break;
                      }
                    }
                    he === void 0 && (he = O.globals.gridHeight),
                      (se =
                        (ue = this.groupCtx.prevYF[0]) !== null &&
                        ue !== void 0 &&
                        ue.every(function (Lt) {
                          return Lt === 0;
                        }) &&
                        this.groupCtx.prevYF.slice(1, ee).every(function (Lt) {
                          return Lt.every(function (Ht) {
                            return isNaN(Ht);
                          });
                        })
                          ? x
                          : he);
                  } else se = x;
                  f = this.series[N][H]
                    ? se -
                      this.series[N][H] / this.yRatio[this.yaxisIndex] +
                      2 *
                        (this.isReversed
                          ? this.series[N][H] / this.yRatio[this.yaxisIndex]
                          : 0)
                    : se;
                  var St = this.barHelpers.getColumnPaths({
                    barXPosition: b,
                    barWidth: y,
                    y1: se,
                    y2: f,
                    yRatio: this.yRatio[this.yaxisIndex],
                    strokeWidth: this.strokeWidth,
                    series: this.series,
                    seriesGroup: _,
                    realIndex: h.realIndex,
                    i: N,
                    j: H,
                    w: O,
                  });
                  return (
                    this.barHelpers.barBackground({
                      bc: G,
                      j: H,
                      i: N,
                      x1: b,
                      x2: y,
                      elSeries: A,
                    }),
                    (d += g),
                    {
                      pathTo: St.pathTo,
                      pathFrom: St.pathFrom,
                      goalY: this.barHelpers.getGoalValues("y", null, x, N, H),
                      barXPosition: b,
                      x: O.globals.isXNumeric ? d - g : d,
                      y: f,
                    }
                  );
                },
              },
            ]),
            o
          );
        })(),
        ts = (function ($) {
          m(o, qt);
          var s = M(o);
          function o() {
            return a(this, o), s.apply(this, arguments);
          }
          return (
            u(o, [
              {
                key: "draw",
                value: function (c, h, d) {
                  var f = this,
                    g = this.w,
                    y = new K(this.ctx),
                    x = g.globals.comboCharts ? h : g.config.chart.type,
                    k = new Z(this.ctx);
                  (this.candlestickOptions =
                    this.w.config.plotOptions.candlestick),
                    (this.boxOptions = this.w.config.plotOptions.boxPlot),
                    (this.isHorizontal = g.config.plotOptions.bar.horizontal);
                  var _ = new fe(this.ctx, g);
                  (c = _.getLogSeries(c)),
                    (this.series = c),
                    (this.yRatio = _.getLogYRatios(this.yRatio)),
                    this.barHelpers.initVariables(c);
                  for (
                    var A = y.group({
                        class: "apexcharts-".concat(
                          x,
                          "-series apexcharts-plot-series"
                        ),
                      }),
                      O = function (H) {
                        f.isBoxPlot =
                          g.config.chart.type === "boxPlot" ||
                          g.config.series[H].type === "boxPlot";
                        var G,
                          te,
                          se,
                          b,
                          C = void 0,
                          F = void 0,
                          ee = [],
                          ue = [],
                          he = g.globals.comboCharts ? d[H] : H,
                          we = y.group({
                            class: "apexcharts-series",
                            seriesName: B.escapeString(
                              g.globals.seriesNames[he]
                            ),
                            rel: H + 1,
                            "data:realIndex": he,
                          });
                        f.ctx.series.addCollapsedClassToSeries(we, he),
                          c[H].length > 0 && (f.visibleI = f.visibleI + 1);
                        var Ae, Le;
                        f.yRatio.length > 1 && (f.yaxisIndex = he);
                        var ze = f.barHelpers.initialPositions();
                        (F = ze.y),
                          (Ae = ze.barHeight),
                          (te = ze.yDivision),
                          (b = ze.zeroW),
                          (C = ze.x),
                          (Le = ze.barWidth),
                          (G = ze.xDivision),
                          (se = ze.zeroH),
                          ue.push(C + Le / 2);
                        for (
                          var De = y.group({
                              class: "apexcharts-datalabels",
                              "data:realIndex": he,
                            }),
                            Ge = function (St) {
                              var Lt = f.barHelpers.getStrokeWidth(H, St, he),
                                Ht = null,
                                Jr = {
                                  indexes: { i: H, j: St, realIndex: he },
                                  x: C,
                                  y: F,
                                  strokeWidth: Lt,
                                  elSeries: we,
                                };
                              (Ht = f.isHorizontal
                                ? f.drawHorizontalBoxPaths(
                                    n(
                                      n({}, Jr),
                                      {},
                                      { yDivision: te, barHeight: Ae, zeroW: b }
                                    )
                                  )
                                : f.drawVerticalBoxPaths(
                                    n(
                                      n({}, Jr),
                                      {},
                                      { xDivision: G, barWidth: Le, zeroH: se }
                                    )
                                  )),
                                (F = Ht.y),
                                (C = Ht.x),
                                St > 0 && ue.push(C + Le / 2),
                                ee.push(F),
                                Ht.pathTo.forEach(function (Wr, an) {
                                  var Ao =
                                      !f.isBoxPlot &&
                                      f.candlestickOptions.wick.useFillColor
                                        ? Ht.color[an]
                                        : g.globals.stroke.colors[H],
                                    Ml = k.fillPath({
                                      seriesNumber: he,
                                      dataPointIndex: St,
                                      color: Ht.color[an],
                                      value: c[H][St],
                                    });
                                  f.renderSeries({
                                    realIndex: he,
                                    pathFill: Ml,
                                    lineFill: Ao,
                                    j: St,
                                    i: H,
                                    pathFrom: Ht.pathFrom,
                                    pathTo: Wr,
                                    strokeWidth: Lt,
                                    elSeries: we,
                                    x: C,
                                    y: F,
                                    series: c,
                                    barHeight: Ae,
                                    barWidth: Le,
                                    elDataLabelsWrap: De,
                                    visibleSeries: f.visibleI,
                                    type: g.config.chart.type,
                                  });
                                });
                            },
                            it = 0;
                          it < g.globals.dataPoints;
                          it++
                        )
                          Ge(it);
                        (g.globals.seriesXvalues[he] = ue),
                          (g.globals.seriesYvalues[he] = ee),
                          A.add(we);
                      },
                      N = 0;
                    N < c.length;
                    N++
                  )
                    O(N);
                  return A;
                },
              },
              {
                key: "drawVerticalBoxPaths",
                value: function (c) {
                  var h = c.indexes,
                    d = c.x;
                  c.y;
                  var f = c.xDivision,
                    g = c.barWidth,
                    y = c.zeroH,
                    x = c.strokeWidth,
                    k = this.w,
                    _ = new K(this.ctx),
                    A = h.i,
                    O = h.j,
                    N = !0,
                    H = k.config.plotOptions.candlestick.colors.upward,
                    G = k.config.plotOptions.candlestick.colors.downward,
                    te = "";
                  this.isBoxPlot &&
                    (te = [
                      this.boxOptions.colors.lower,
                      this.boxOptions.colors.upper,
                    ]);
                  var se = this.yRatio[this.yaxisIndex],
                    b = h.realIndex,
                    C = this.getOHLCValue(b, O),
                    F = y,
                    ee = y;
                  C.o > C.c && (N = !1);
                  var ue = Math.min(C.o, C.c),
                    he = Math.max(C.o, C.c),
                    we = C.m;
                  k.globals.isXNumeric &&
                    (d =
                      (k.globals.seriesX[b][O] - k.globals.minX) / this.xRatio -
                      g / 2);
                  var Ae = d + g * this.visibleI;
                  this.series[A][O] === void 0 || this.series[A][O] === null
                    ? ((ue = y), (he = y))
                    : ((ue = y - ue / se),
                      (he = y - he / se),
                      (F = y - C.h / se),
                      (ee = y - C.l / se),
                      (we = y - C.m / se));
                  var Le = _.move(Ae, y),
                    ze = _.move(Ae + g / 2, ue);
                  return (
                    k.globals.previousPaths.length > 0 &&
                      (ze = this.getPreviousPath(b, O, !0)),
                    (Le = this.isBoxPlot
                      ? [
                          _.move(Ae, ue) +
                            _.line(Ae + g / 2, ue) +
                            _.line(Ae + g / 2, F) +
                            _.line(Ae + g / 4, F) +
                            _.line(Ae + g - g / 4, F) +
                            _.line(Ae + g / 2, F) +
                            _.line(Ae + g / 2, ue) +
                            _.line(Ae + g, ue) +
                            _.line(Ae + g, we) +
                            _.line(Ae, we) +
                            _.line(Ae, ue + x / 2),
                          _.move(Ae, we) +
                            _.line(Ae + g, we) +
                            _.line(Ae + g, he) +
                            _.line(Ae + g / 2, he) +
                            _.line(Ae + g / 2, ee) +
                            _.line(Ae + g - g / 4, ee) +
                            _.line(Ae + g / 4, ee) +
                            _.line(Ae + g / 2, ee) +
                            _.line(Ae + g / 2, he) +
                            _.line(Ae, he) +
                            _.line(Ae, we) +
                            "z",
                        ]
                      : [
                          _.move(Ae, he) +
                            _.line(Ae + g / 2, he) +
                            _.line(Ae + g / 2, F) +
                            _.line(Ae + g / 2, he) +
                            _.line(Ae + g, he) +
                            _.line(Ae + g, ue) +
                            _.line(Ae + g / 2, ue) +
                            _.line(Ae + g / 2, ee) +
                            _.line(Ae + g / 2, ue) +
                            _.line(Ae, ue) +
                            _.line(Ae, he - x / 2),
                        ]),
                    (ze += _.move(Ae, ue)),
                    k.globals.isXNumeric || (d += f),
                    {
                      pathTo: Le,
                      pathFrom: ze,
                      x: d,
                      y: he,
                      barXPosition: Ae,
                      color: this.isBoxPlot ? te : N ? [H] : [G],
                    }
                  );
                },
              },
              {
                key: "drawHorizontalBoxPaths",
                value: function (c) {
                  var h = c.indexes;
                  c.x;
                  var d = c.y,
                    f = c.yDivision,
                    g = c.barHeight,
                    y = c.zeroW,
                    x = c.strokeWidth,
                    k = this.w,
                    _ = new K(this.ctx),
                    A = h.i,
                    O = h.j,
                    N = this.boxOptions.colors.lower;
                  this.isBoxPlot &&
                    (N = [
                      this.boxOptions.colors.lower,
                      this.boxOptions.colors.upper,
                    ]);
                  var H = this.invertedYRatio,
                    G = h.realIndex,
                    te = this.getOHLCValue(G, O),
                    se = y,
                    b = y,
                    C = Math.min(te.o, te.c),
                    F = Math.max(te.o, te.c),
                    ee = te.m;
                  k.globals.isXNumeric &&
                    (d =
                      (k.globals.seriesX[G][O] - k.globals.minX) /
                        this.invertedXRatio -
                      g / 2);
                  var ue = d + g * this.visibleI;
                  this.series[A][O] === void 0 || this.series[A][O] === null
                    ? ((C = y), (F = y))
                    : ((C = y + C / H),
                      (F = y + F / H),
                      (se = y + te.h / H),
                      (b = y + te.l / H),
                      (ee = y + te.m / H));
                  var he = _.move(y, ue),
                    we = _.move(C, ue + g / 2);
                  return (
                    k.globals.previousPaths.length > 0 &&
                      (we = this.getPreviousPath(G, O, !0)),
                    (he = [
                      _.move(C, ue) +
                        _.line(C, ue + g / 2) +
                        _.line(se, ue + g / 2) +
                        _.line(se, ue + g / 2 - g / 4) +
                        _.line(se, ue + g / 2 + g / 4) +
                        _.line(se, ue + g / 2) +
                        _.line(C, ue + g / 2) +
                        _.line(C, ue + g) +
                        _.line(ee, ue + g) +
                        _.line(ee, ue) +
                        _.line(C + x / 2, ue),
                      _.move(ee, ue) +
                        _.line(ee, ue + g) +
                        _.line(F, ue + g) +
                        _.line(F, ue + g / 2) +
                        _.line(b, ue + g / 2) +
                        _.line(b, ue + g - g / 4) +
                        _.line(b, ue + g / 4) +
                        _.line(b, ue + g / 2) +
                        _.line(F, ue + g / 2) +
                        _.line(F, ue) +
                        _.line(ee, ue) +
                        "z",
                    ]),
                    (we += _.move(C, ue)),
                    k.globals.isXNumeric || (d += f),
                    {
                      pathTo: he,
                      pathFrom: we,
                      x: F,
                      y: d,
                      barYPosition: ue,
                      color: N,
                    }
                  );
                },
              },
              {
                key: "getOHLCValue",
                value: function (c, h) {
                  var d = this.w;
                  return {
                    o: this.isBoxPlot
                      ? d.globals.seriesCandleH[c][h]
                      : d.globals.seriesCandleO[c][h],
                    h: this.isBoxPlot
                      ? d.globals.seriesCandleO[c][h]
                      : d.globals.seriesCandleH[c][h],
                    m: d.globals.seriesCandleM[c][h],
                    l: this.isBoxPlot
                      ? d.globals.seriesCandleC[c][h]
                      : d.globals.seriesCandleL[c][h],
                    c: this.isBoxPlot
                      ? d.globals.seriesCandleL[c][h]
                      : d.globals.seriesCandleC[c][h],
                  };
                },
              },
            ]),
            o
          );
        })(),
        cr = (function () {
          function $(s) {
            a(this, $), (this.ctx = s), (this.w = s.w);
          }
          return (
            u($, [
              {
                key: "checkColorRange",
                value: function () {
                  var s = this.w,
                    o = !1,
                    c = s.config.plotOptions[s.config.chart.type];
                  return (
                    c.colorScale.ranges.length > 0 &&
                      c.colorScale.ranges.map(function (h, d) {
                        h.from <= 0 && (o = !0);
                      }),
                    o
                  );
                },
              },
              {
                key: "getShadeColor",
                value: function (s, o, c, h) {
                  var d = this.w,
                    f = 1,
                    g = d.config.plotOptions[s].shadeIntensity,
                    y = this.determineColor(s, o, c);
                  d.globals.hasNegs || h
                    ? (f = d.config.plotOptions[s].reverseNegativeShade
                        ? y.percent < 0
                          ? (y.percent / 100) * (1.25 * g)
                          : (1 - y.percent / 100) * (1.25 * g)
                        : y.percent <= 0
                        ? 1 - (1 + y.percent / 100) * g
                        : (1 - y.percent / 100) * g)
                    : ((f = 1 - y.percent / 100),
                      s === "treemap" &&
                        (f = (1 - y.percent / 100) * (1.25 * g)));
                  var x = y.color,
                    k = new B();
                  return (
                    d.config.plotOptions[s].enableShades &&
                      (x =
                        this.w.config.theme.mode === "dark"
                          ? B.hexToRgba(
                              k.shadeColor(-1 * f, y.color),
                              d.config.fill.opacity
                            )
                          : B.hexToRgba(
                              k.shadeColor(f, y.color),
                              d.config.fill.opacity
                            )),
                    { color: x, colorProps: y }
                  );
                },
              },
              {
                key: "determineColor",
                value: function (s, o, c) {
                  var h = this.w,
                    d = h.globals.series[o][c],
                    f = h.config.plotOptions[s],
                    g = f.colorScale.inverse ? c : o;
                  f.distributed && h.config.chart.type === "treemap" && (g = c);
                  var y = h.globals.colors[g],
                    x = null,
                    k = Math.min.apply(Math, z(h.globals.series[o])),
                    _ = Math.max.apply(Math, z(h.globals.series[o]));
                  f.distributed ||
                    s !== "heatmap" ||
                    ((k = h.globals.minY), (_ = h.globals.maxY)),
                    f.colorScale.min !== void 0 &&
                      ((k =
                        f.colorScale.min < h.globals.minY
                          ? f.colorScale.min
                          : h.globals.minY),
                      (_ =
                        f.colorScale.max > h.globals.maxY
                          ? f.colorScale.max
                          : h.globals.maxY));
                  var A = Math.abs(_) + Math.abs(k),
                    O = (100 * d) / (A === 0 ? A - 1e-6 : A);
                  return (
                    f.colorScale.ranges.length > 0 &&
                      f.colorScale.ranges.map(function (N, H) {
                        if (d >= N.from && d <= N.to) {
                          (y = N.color),
                            (x = N.foreColor ? N.foreColor : null),
                            (k = N.from),
                            (_ = N.to);
                          var G = Math.abs(_) + Math.abs(k);
                          O = (100 * d) / (G === 0 ? G - 1e-6 : G);
                        }
                      }),
                    { color: y, foreColor: x, percent: O }
                  );
                },
              },
              {
                key: "calculateDataLabels",
                value: function (s) {
                  var o = s.text,
                    c = s.x,
                    h = s.y,
                    d = s.i,
                    f = s.j,
                    g = s.colorProps,
                    y = s.fontSize,
                    x = this.w.config.dataLabels,
                    k = new K(this.ctx),
                    _ = new X(this.ctx),
                    A = null;
                  if (x.enabled) {
                    A = k.group({ class: "apexcharts-data-labels" });
                    var O = x.offsetX,
                      N = x.offsetY,
                      H = c + O,
                      G = h + parseFloat(x.style.fontSize) / 3 + N;
                    _.plotDataLabelsText({
                      x: H,
                      y: G,
                      text: o,
                      i: d,
                      j: f,
                      color: g.foreColor,
                      parent: A,
                      fontSize: y,
                      dataLabelsConfig: x,
                    });
                  }
                  return A;
                },
              },
              {
                key: "addListeners",
                value: function (s) {
                  var o = new K(this.ctx);
                  s.node.addEventListener(
                    "mouseenter",
                    o.pathMouseEnter.bind(this, s)
                  ),
                    s.node.addEventListener(
                      "mouseleave",
                      o.pathMouseLeave.bind(this, s)
                    ),
                    s.node.addEventListener(
                      "mousedown",
                      o.pathMouseDown.bind(this, s)
                    );
                },
              },
            ]),
            $
          );
        })(),
        mr = (function () {
          function $(s, o) {
            a(this, $),
              (this.ctx = s),
              (this.w = s.w),
              (this.xRatio = o.xRatio),
              (this.yRatio = o.yRatio),
              (this.dynamicAnim =
                this.w.config.chart.animations.dynamicAnimation),
              (this.helpers = new cr(s)),
              (this.rectRadius = this.w.config.plotOptions.heatmap.radius),
              (this.strokeWidth = this.w.config.stroke.show
                ? this.w.config.stroke.width
                : 0);
          }
          return (
            u($, [
              {
                key: "draw",
                value: function (s) {
                  var o = this.w,
                    c = new K(this.ctx),
                    h = c.group({ class: "apexcharts-heatmap" });
                  h.attr(
                    "clip-path",
                    "url(#gridRectMask".concat(o.globals.cuid, ")")
                  );
                  var d = o.globals.gridWidth / o.globals.dataPoints,
                    f = o.globals.gridHeight / o.globals.series.length,
                    g = 0,
                    y = !1;
                  this.negRange = this.helpers.checkColorRange();
                  var x = s.slice();
                  o.config.yaxis[0].reversed && ((y = !0), x.reverse());
                  for (
                    var k = y ? 0 : x.length - 1;
                    y ? k < x.length : k >= 0;
                    y ? k++ : k--
                  ) {
                    var _ = c.group({
                      class: "apexcharts-series apexcharts-heatmap-series",
                      seriesName: B.escapeString(o.globals.seriesNames[k]),
                      rel: k + 1,
                      "data:realIndex": k,
                    });
                    if (
                      (this.ctx.series.addCollapsedClassToSeries(_, k),
                      o.config.chart.dropShadow.enabled)
                    ) {
                      var A = o.config.chart.dropShadow;
                      new re(this.ctx).dropShadow(_, A, k);
                    }
                    for (
                      var O = 0,
                        N = o.config.plotOptions.heatmap.shadeIntensity,
                        H = 0;
                      H < x[k].length;
                      H++
                    ) {
                      var G = this.helpers.getShadeColor(
                          o.config.chart.type,
                          k,
                          H,
                          this.negRange
                        ),
                        te = G.color,
                        se = G.colorProps;
                      o.config.fill.type === "image" &&
                        (te = new Z(this.ctx).fillPath({
                          seriesNumber: k,
                          dataPointIndex: H,
                          opacity: o.globals.hasNegs
                            ? se.percent < 0
                              ? 1 - (1 + se.percent / 100)
                              : N + se.percent / 100
                            : se.percent / 100,
                          patternID: B.randomId(),
                          width: o.config.fill.image.width
                            ? o.config.fill.image.width
                            : d,
                          height: o.config.fill.image.height
                            ? o.config.fill.image.height
                            : f,
                        }));
                      var b = this.rectRadius,
                        C = c.drawRect(O, g, d, f, b);
                      if (
                        (C.attr({ cx: O, cy: g }),
                        C.node.classList.add("apexcharts-heatmap-rect"),
                        _.add(C),
                        C.attr({
                          fill: te,
                          i: k,
                          index: k,
                          j: H,
                          val: x[k][H],
                          "stroke-width": this.strokeWidth,
                          stroke: o.config.plotOptions.heatmap
                            .useFillColorAsStroke
                            ? te
                            : o.globals.stroke.colors[0],
                          color: te,
                        }),
                        this.helpers.addListeners(C),
                        o.config.chart.animations.enabled &&
                          !o.globals.dataChanged)
                      ) {
                        var F = 1;
                        o.globals.resized ||
                          (F = o.config.chart.animations.speed),
                          this.animateHeatMap(C, O, g, d, f, F);
                      }
                      if (o.globals.dataChanged) {
                        var ee = 1;
                        if (
                          this.dynamicAnim.enabled &&
                          o.globals.shouldAnimate
                        ) {
                          ee = this.dynamicAnim.speed;
                          var ue =
                            o.globals.previousPaths[k] &&
                            o.globals.previousPaths[k][H] &&
                            o.globals.previousPaths[k][H].color;
                          ue || (ue = "rgba(255, 255, 255, 0)"),
                            this.animateHeatColor(
                              C,
                              B.isColorHex(ue) ? ue : B.rgb2hex(ue),
                              B.isColorHex(te) ? te : B.rgb2hex(te),
                              ee
                            );
                        }
                      }
                      var he = (0, o.config.dataLabels.formatter)(
                          o.globals.series[k][H],
                          {
                            value: o.globals.series[k][H],
                            seriesIndex: k,
                            dataPointIndex: H,
                            w: o,
                          }
                        ),
                        we = this.helpers.calculateDataLabels({
                          text: he,
                          x: O + d / 2,
                          y: g + f / 2,
                          i: k,
                          j: H,
                          colorProps: se,
                          series: x,
                        });
                      we !== null && _.add(we), (O += d);
                    }
                    (g += f), h.add(_);
                  }
                  var Ae = o.globals.yAxisScale[0].result.slice();
                  o.config.yaxis[0].reversed ? Ae.unshift("") : Ae.push(""),
                    (o.globals.yAxisScale[0].result = Ae);
                  var Le = o.globals.gridHeight / o.globals.series.length;
                  return (o.config.yaxis[0].labels.offsetY = -Le / 2), h;
                },
              },
              {
                key: "animateHeatMap",
                value: function (s, o, c, h, d, f) {
                  var g = new ae(this.ctx);
                  g.animateRect(
                    s,
                    { x: o + h / 2, y: c + d / 2, width: 0, height: 0 },
                    { x: o, y: c, width: h, height: d },
                    f,
                    function () {
                      g.animationCompleted(s);
                    }
                  );
                },
              },
              {
                key: "animateHeatColor",
                value: function (s, o, c, h) {
                  s.attr({ fill: o }).animate(h).attr({ fill: c });
                },
              },
            ]),
            $
          );
        })(),
        Ts = (function () {
          function $(s) {
            a(this, $), (this.ctx = s), (this.w = s.w);
          }
          return (
            u($, [
              {
                key: "drawYAxisTexts",
                value: function (s, o, c, h) {
                  var d = this.w,
                    f = d.config.yaxis[0],
                    g = d.globals.yLabelFormatters[0];
                  return new K(this.ctx).drawText({
                    x: s + f.labels.offsetX,
                    y: o + f.labels.offsetY,
                    text: g(h, c),
                    textAnchor: "middle",
                    fontSize: f.labels.style.fontSize,
                    fontFamily: f.labels.style.fontFamily,
                    foreColor: Array.isArray(f.labels.style.colors)
                      ? f.labels.style.colors[c]
                      : f.labels.style.colors,
                  });
                },
              },
            ]),
            $
          );
        })(),
        ur = (function () {
          function $(s) {
            a(this, $), (this.ctx = s), (this.w = s.w);
            var o = this.w;
            (this.chartType = this.w.config.chart.type),
              (this.initialAnim = this.w.config.chart.animations.enabled),
              (this.dynamicAnim =
                this.initialAnim &&
                this.w.config.chart.animations.dynamicAnimation.enabled),
              (this.animBeginArr = [0]),
              (this.animDur = 0),
              (this.donutDataLabels =
                this.w.config.plotOptions.pie.donut.labels),
              (this.lineColorArr =
                o.globals.stroke.colors !== void 0
                  ? o.globals.stroke.colors
                  : o.globals.colors),
              (this.defaultSize = Math.min(
                o.globals.gridWidth,
                o.globals.gridHeight
              )),
              (this.centerY = this.defaultSize / 2),
              (this.centerX = o.globals.gridWidth / 2),
              o.config.chart.type === "radialBar"
                ? (this.fullAngle = 360)
                : (this.fullAngle = Math.abs(
                    o.config.plotOptions.pie.endAngle -
                      o.config.plotOptions.pie.startAngle
                  )),
              (this.initialAngle =
                o.config.plotOptions.pie.startAngle % this.fullAngle),
              (o.globals.radialSize =
                this.defaultSize / 2.05 -
                o.config.stroke.width -
                (o.config.chart.sparkline.enabled
                  ? 0
                  : o.config.chart.dropShadow.blur)),
              (this.donutSize =
                (o.globals.radialSize *
                  parseInt(o.config.plotOptions.pie.donut.size, 10)) /
                100),
              (this.maxY = 0),
              (this.sliceLabels = []),
              (this.sliceSizes = []),
              (this.prevSectorAngleArr = []);
          }
          return (
            u($, [
              {
                key: "draw",
                value: function (s) {
                  var o = this,
                    c = this.w,
                    h = new K(this.ctx);
                  if (
                    ((this.ret = h.group({ class: "apexcharts-pie" })),
                    c.globals.noData)
                  )
                    return this.ret;
                  for (var d = 0, f = 0; f < s.length; f++)
                    d += B.negToZero(s[f]);
                  var g = [],
                    y = h.group();
                  d === 0 && (d = 1e-5),
                    s.forEach(function (ue) {
                      o.maxY = Math.max(o.maxY, ue);
                    }),
                    c.config.yaxis[0].max &&
                      (this.maxY = c.config.yaxis[0].max),
                    c.config.grid.position === "back" &&
                      this.chartType === "polarArea" &&
                      this.drawPolarElements(this.ret);
                  for (var x = 0; x < s.length; x++) {
                    var k = (this.fullAngle * B.negToZero(s[x])) / d;
                    g.push(k),
                      this.chartType === "polarArea"
                        ? ((g[x] = this.fullAngle / s.length),
                          this.sliceSizes.push(
                            (c.globals.radialSize * s[x]) / this.maxY
                          ))
                        : this.sliceSizes.push(c.globals.radialSize);
                  }
                  if (c.globals.dataChanged) {
                    for (
                      var _, A = 0, O = 0;
                      O < c.globals.previousPaths.length;
                      O++
                    )
                      A += B.negToZero(c.globals.previousPaths[O]);
                    for (var N = 0; N < c.globals.previousPaths.length; N++)
                      (_ =
                        (this.fullAngle *
                          B.negToZero(c.globals.previousPaths[N])) /
                        A),
                        this.prevSectorAngleArr.push(_);
                  }
                  this.donutSize < 0 && (this.donutSize = 0);
                  var H = c.config.plotOptions.pie.customScale,
                    G = c.globals.gridWidth / 2,
                    te = c.globals.gridHeight / 2,
                    se = G - (c.globals.gridWidth / 2) * H,
                    b = te - (c.globals.gridHeight / 2) * H;
                  if (this.chartType === "donut") {
                    var C = h.drawCircle(this.donutSize);
                    C.attr({
                      cx: this.centerX,
                      cy: this.centerY,
                      fill: c.config.plotOptions.pie.donut.background
                        ? c.config.plotOptions.pie.donut.background
                        : "transparent",
                    }),
                      y.add(C);
                  }
                  var F = this.drawArcs(g, s);
                  if (
                    (this.sliceLabels.forEach(function (ue) {
                      F.add(ue);
                    }),
                    y.attr({
                      transform: "translate("
                        .concat(se, ", ")
                        .concat(b, ") scale(")
                        .concat(H, ")"),
                    }),
                    y.add(F),
                    this.ret.add(y),
                    this.donutDataLabels.show)
                  ) {
                    var ee = this.renderInnerDataLabels(this.donutDataLabels, {
                      hollowSize: this.donutSize,
                      centerX: this.centerX,
                      centerY: this.centerY,
                      opacity: this.donutDataLabels.show,
                      translateX: se,
                      translateY: b,
                    });
                    this.ret.add(ee);
                  }
                  return (
                    c.config.grid.position === "front" &&
                      this.chartType === "polarArea" &&
                      this.drawPolarElements(this.ret),
                    this.ret
                  );
                },
              },
              {
                key: "drawArcs",
                value: function (s, o) {
                  var c = this.w,
                    h = new re(this.ctx),
                    d = new K(this.ctx),
                    f = new Z(this.ctx),
                    g = d.group({ class: "apexcharts-slices" }),
                    y = this.initialAngle,
                    x = this.initialAngle,
                    k = this.initialAngle,
                    _ = this.initialAngle;
                  this.strokeWidth = c.config.stroke.show
                    ? c.config.stroke.width
                    : 0;
                  for (var A = 0; A < s.length; A++) {
                    var O = d.group({
                      class: "apexcharts-series apexcharts-pie-series",
                      seriesName: B.escapeString(c.globals.seriesNames[A]),
                      rel: A + 1,
                      "data:realIndex": A,
                    });
                    g.add(O),
                      (x = _),
                      (k = (y = k) + s[A]),
                      (_ = x + this.prevSectorAngleArr[A]);
                    var N = k < y ? this.fullAngle + k - y : k - y,
                      H = f.fillPath({
                        seriesNumber: A,
                        size: this.sliceSizes[A],
                        value: o[A],
                      }),
                      G = this.getChangedPath(x, _),
                      te = d.drawPath({
                        d: G,
                        stroke: Array.isArray(this.lineColorArr)
                          ? this.lineColorArr[A]
                          : this.lineColorArr,
                        strokeWidth: 0,
                        fill: H,
                        fillOpacity: c.config.fill.opacity,
                        classes: "apexcharts-pie-area apexcharts-"
                          .concat(this.chartType.toLowerCase(), "-slice-")
                          .concat(A),
                      });
                    if (
                      (te.attr({ index: 0, j: A }),
                      h.setSelectionFilter(te, 0, A),
                      c.config.chart.dropShadow.enabled)
                    ) {
                      var se = c.config.chart.dropShadow;
                      h.dropShadow(te, se, A);
                    }
                    this.addListeners(te, this.donutDataLabels),
                      K.setAttrs(te.node, {
                        "data:angle": N,
                        "data:startAngle": y,
                        "data:strokeWidth": this.strokeWidth,
                        "data:value": o[A],
                      });
                    var b = { x: 0, y: 0 };
                    this.chartType === "pie" || this.chartType === "polarArea"
                      ? (b = B.polarToCartesian(
                          this.centerX,
                          this.centerY,
                          c.globals.radialSize / 1.25 +
                            c.config.plotOptions.pie.dataLabels.offset,
                          (y + N / 2) % this.fullAngle
                        ))
                      : this.chartType === "donut" &&
                        (b = B.polarToCartesian(
                          this.centerX,
                          this.centerY,
                          (c.globals.radialSize + this.donutSize) / 2 +
                            c.config.plotOptions.pie.dataLabels.offset,
                          (y + N / 2) % this.fullAngle
                        )),
                      O.add(te);
                    var C = 0;
                    if (
                      (!this.initialAnim ||
                      c.globals.resized ||
                      c.globals.dataChanged
                        ? this.animBeginArr.push(0)
                        : ((C =
                            (N / this.fullAngle) *
                            c.config.chart.animations.speed) === 0 && (C = 1),
                          (this.animDur = C + this.animDur),
                          this.animBeginArr.push(this.animDur)),
                      this.dynamicAnim && c.globals.dataChanged
                        ? this.animatePaths(te, {
                            size: this.sliceSizes[A],
                            endAngle: k,
                            startAngle: y,
                            prevStartAngle: x,
                            prevEndAngle: _,
                            animateStartingPos: !0,
                            i: A,
                            animBeginArr: this.animBeginArr,
                            shouldSetPrevPaths: !0,
                            dur: c.config.chart.animations.dynamicAnimation
                              .speed,
                          })
                        : this.animatePaths(te, {
                            size: this.sliceSizes[A],
                            endAngle: k,
                            startAngle: y,
                            i: A,
                            totalItems: s.length - 1,
                            animBeginArr: this.animBeginArr,
                            dur: C,
                          }),
                      c.config.plotOptions.pie.expandOnClick &&
                        this.chartType !== "polarArea" &&
                        te.click(this.pieClicked.bind(this, A)),
                      c.globals.selectedDataPoints[0] !== void 0 &&
                        c.globals.selectedDataPoints[0].indexOf(A) > -1 &&
                        this.pieClicked(A),
                      c.config.dataLabels.enabled)
                    ) {
                      var F = b.x,
                        ee = b.y,
                        ue = (100 * N) / this.fullAngle + "%";
                      if (
                        N !== 0 &&
                        c.config.plotOptions.pie.dataLabels
                          .minAngleToShowLabel < s[A]
                      ) {
                        var he = c.config.dataLabels.formatter;
                        he !== void 0 &&
                          (ue = he(c.globals.seriesPercent[A][0], {
                            seriesIndex: A,
                            w: c,
                          }));
                        var we = c.globals.dataLabels.style.colors[A],
                          Ae = d.group({ class: "apexcharts-datalabels" }),
                          Le = d.drawText({
                            x: F,
                            y: ee,
                            text: ue,
                            textAnchor: "middle",
                            fontSize: c.config.dataLabels.style.fontSize,
                            fontFamily: c.config.dataLabels.style.fontFamily,
                            fontWeight: c.config.dataLabels.style.fontWeight,
                            foreColor: we,
                          });
                        if (
                          (Ae.add(Le), c.config.dataLabels.dropShadow.enabled)
                        ) {
                          var ze = c.config.dataLabels.dropShadow;
                          h.dropShadow(Le, ze);
                        }
                        Le.node.classList.add("apexcharts-pie-label"),
                          c.config.chart.animations.animate &&
                            c.globals.resized === !1 &&
                            (Le.node.classList.add(
                              "apexcharts-pie-label-delay"
                            ),
                            (Le.node.style.animationDelay =
                              c.config.chart.animations.speed / 940 + "s")),
                          this.sliceLabels.push(Ae);
                      }
                    }
                  }
                  return g;
                },
              },
              {
                key: "addListeners",
                value: function (s, o) {
                  var c = new K(this.ctx);
                  s.node.addEventListener(
                    "mouseenter",
                    c.pathMouseEnter.bind(this, s)
                  ),
                    s.node.addEventListener(
                      "mouseleave",
                      c.pathMouseLeave.bind(this, s)
                    ),
                    s.node.addEventListener(
                      "mouseleave",
                      this.revertDataLabelsInner.bind(this, s.node, o)
                    ),
                    s.node.addEventListener(
                      "mousedown",
                      c.pathMouseDown.bind(this, s)
                    ),
                    this.donutDataLabels.total.showAlways ||
                      (s.node.addEventListener(
                        "mouseenter",
                        this.printDataLabelsInner.bind(this, s.node, o)
                      ),
                      s.node.addEventListener(
                        "mousedown",
                        this.printDataLabelsInner.bind(this, s.node, o)
                      ));
                },
              },
              {
                key: "animatePaths",
                value: function (s, o) {
                  var c = this.w,
                    h =
                      o.endAngle < o.startAngle
                        ? this.fullAngle + o.endAngle - o.startAngle
                        : o.endAngle - o.startAngle,
                    d = h,
                    f = o.startAngle,
                    g = o.startAngle;
                  o.prevStartAngle !== void 0 &&
                    o.prevEndAngle !== void 0 &&
                    ((f = o.prevEndAngle),
                    (d =
                      o.prevEndAngle < o.prevStartAngle
                        ? this.fullAngle + o.prevEndAngle - o.prevStartAngle
                        : o.prevEndAngle - o.prevStartAngle)),
                    o.i === c.config.series.length - 1 &&
                      (h + g > this.fullAngle
                        ? (o.endAngle = o.endAngle - (h + g))
                        : h + g < this.fullAngle &&
                          (o.endAngle =
                            o.endAngle + (this.fullAngle - (h + g)))),
                    h === this.fullAngle && (h = this.fullAngle - 0.01),
                    this.animateArc(s, f, g, h, d, o);
                },
              },
              {
                key: "animateArc",
                value: function (s, o, c, h, d, f) {
                  var g,
                    y = this,
                    x = this.w,
                    k = new ae(this.ctx),
                    _ = f.size;
                  (isNaN(o) || isNaN(d)) && ((o = c), (d = h), (f.dur = 0));
                  var A = h,
                    O = c,
                    N = o < c ? this.fullAngle + o - c : o - c;
                  x.globals.dataChanged &&
                    f.shouldSetPrevPaths &&
                    f.prevEndAngle &&
                    ((g = y.getPiePath({
                      me: y,
                      startAngle: f.prevStartAngle,
                      angle:
                        f.prevEndAngle < f.prevStartAngle
                          ? this.fullAngle + f.prevEndAngle - f.prevStartAngle
                          : f.prevEndAngle - f.prevStartAngle,
                      size: _,
                    })),
                    s.attr({ d: g })),
                    f.dur !== 0
                      ? s
                          .animate(f.dur, x.globals.easing, f.animBeginArr[f.i])
                          .afterAll(function () {
                            (y.chartType !== "pie" &&
                              y.chartType !== "donut" &&
                              y.chartType !== "polarArea") ||
                              this.animate(
                                x.config.chart.animations.dynamicAnimation.speed
                              ).attr({ "stroke-width": y.strokeWidth }),
                              f.i === x.config.series.length - 1 &&
                                k.animationCompleted(s);
                          })
                          .during(function (H) {
                            (A = N + (h - N) * H),
                              f.animateStartingPos &&
                                ((A = d + (h - d) * H),
                                (O = o - d + (c - (o - d)) * H)),
                              (g = y.getPiePath({
                                me: y,
                                startAngle: O,
                                angle: A,
                                size: _,
                              })),
                              s.node.setAttribute("data:pathOrig", g),
                              s.attr({ d: g });
                          })
                      : ((g = y.getPiePath({
                          me: y,
                          startAngle: O,
                          angle: h,
                          size: _,
                        })),
                        f.isTrack || (x.globals.animationEnded = !0),
                        s.node.setAttribute("data:pathOrig", g),
                        s.attr({ d: g, "stroke-width": y.strokeWidth }));
                },
              },
              {
                key: "pieClicked",
                value: function (s) {
                  var o,
                    c = this.w,
                    h = this,
                    d =
                      h.sliceSizes[s] +
                      (c.config.plotOptions.pie.expandOnClick ? 4 : 0),
                    f = c.globals.dom.Paper.select(
                      ".apexcharts-"
                        .concat(h.chartType.toLowerCase(), "-slice-")
                        .concat(s)
                    ).members[0];
                  if (f.attr("data:pieClicked") !== "true") {
                    var g = c.globals.dom.baseEl.getElementsByClassName(
                      "apexcharts-pie-area"
                    );
                    Array.prototype.forEach.call(g, function (_) {
                      _.setAttribute("data:pieClicked", "false");
                      var A = _.getAttribute("data:pathOrig");
                      A && _.setAttribute("d", A);
                    }),
                      f.attr("data:pieClicked", "true");
                    var y = parseInt(f.attr("data:startAngle"), 10),
                      x = parseInt(f.attr("data:angle"), 10);
                    (o = h.getPiePath({
                      me: h,
                      startAngle: y,
                      angle: x,
                      size: d,
                    })),
                      x !== 360 && f.plot(o);
                  } else {
                    f.attr({ "data:pieClicked": "false" }),
                      this.revertDataLabelsInner(f.node, this.donutDataLabels);
                    var k = f.attr("data:pathOrig");
                    f.attr({ d: k });
                  }
                },
              },
              {
                key: "getChangedPath",
                value: function (s, o) {
                  var c = "";
                  return (
                    this.dynamicAnim &&
                      this.w.globals.dataChanged &&
                      (c = this.getPiePath({
                        me: this,
                        startAngle: s,
                        angle: o - s,
                        size: this.size,
                      })),
                    c
                  );
                },
              },
              {
                key: "getPiePath",
                value: function (s) {
                  var o = s.me,
                    c = s.startAngle,
                    h = s.angle,
                    d = s.size,
                    f = c,
                    g = (Math.PI * (f - 90)) / 180,
                    y = h + c;
                  Math.ceil(y) >=
                    this.fullAngle +
                      (this.w.config.plotOptions.pie.startAngle %
                        this.fullAngle) &&
                    (y =
                      this.fullAngle +
                      (this.w.config.plotOptions.pie.startAngle %
                        this.fullAngle) -
                      0.01),
                    Math.ceil(y) > this.fullAngle && (y -= this.fullAngle);
                  var x = (Math.PI * (y - 90)) / 180,
                    k = o.centerX + d * Math.cos(g),
                    _ = o.centerY + d * Math.sin(g),
                    A = o.centerX + d * Math.cos(x),
                    O = o.centerY + d * Math.sin(x),
                    N = B.polarToCartesian(
                      o.centerX,
                      o.centerY,
                      o.donutSize,
                      y
                    ),
                    H = B.polarToCartesian(
                      o.centerX,
                      o.centerY,
                      o.donutSize,
                      f
                    ),
                    G = h > 180 ? 1 : 0,
                    te = ["M", k, _, "A", d, d, 0, G, 1, A, O];
                  return o.chartType === "donut"
                    ? []
                        .concat(te, [
                          "L",
                          N.x,
                          N.y,
                          "A",
                          o.donutSize,
                          o.donutSize,
                          0,
                          G,
                          0,
                          H.x,
                          H.y,
                          "L",
                          k,
                          _,
                          "z",
                        ])
                        .join(" ")
                    : o.chartType === "pie" || o.chartType === "polarArea"
                    ? []
                        .concat(te, ["L", o.centerX, o.centerY, "L", k, _])
                        .join(" ")
                    : [].concat(te).join(" ");
                },
              },
              {
                key: "drawPolarElements",
                value: function (s) {
                  var o = this.w,
                    c = new oe(this.ctx),
                    h = new K(this.ctx),
                    d = new Ts(this.ctx),
                    f = h.group(),
                    g = h.group(),
                    y = c.niceScale(
                      0,
                      Math.ceil(this.maxY),
                      o.config.yaxis[0].tickAmount,
                      0,
                      !0
                    ),
                    x = y.result.reverse(),
                    k = y.result.length;
                  this.maxY = y.niceMax;
                  for (
                    var _ = o.globals.radialSize, A = _ / (k - 1), O = 0;
                    O < k - 1;
                    O++
                  ) {
                    var N = h.drawCircle(_);
                    if (
                      (N.attr({
                        cx: this.centerX,
                        cy: this.centerY,
                        fill: "none",
                        "stroke-width":
                          o.config.plotOptions.polarArea.rings.strokeWidth,
                        stroke:
                          o.config.plotOptions.polarArea.rings.strokeColor,
                      }),
                      o.config.yaxis[0].show)
                    ) {
                      var H = d.drawYAxisTexts(
                        this.centerX,
                        this.centerY -
                          _ +
                          parseInt(
                            o.config.yaxis[0].labels.style.fontSize,
                            10
                          ) /
                            2,
                        O,
                        x[O]
                      );
                      g.add(H);
                    }
                    f.add(N), (_ -= A);
                  }
                  this.drawSpokes(s), s.add(f), s.add(g);
                },
              },
              {
                key: "renderInnerDataLabels",
                value: function (s, o) {
                  var c = this.w,
                    h = new K(this.ctx),
                    d = h.group({
                      class: "apexcharts-datalabels-group",
                      transform: "translate("
                        .concat(o.translateX ? o.translateX : 0, ", ")
                        .concat(o.translateY ? o.translateY : 0, ") scale(")
                        .concat(c.config.plotOptions.pie.customScale, ")"),
                    }),
                    f = s.total.show;
                  d.node.style.opacity = o.opacity;
                  var g,
                    y,
                    x = o.centerX,
                    k = o.centerY;
                  g =
                    s.name.color === void 0
                      ? c.globals.colors[0]
                      : s.name.color;
                  var _ = s.name.fontSize,
                    A = s.name.fontFamily,
                    O = s.name.fontWeight;
                  y =
                    s.value.color === void 0
                      ? c.config.chart.foreColor
                      : s.value.color;
                  var N = s.value.formatter,
                    H = "",
                    G = "";
                  if (
                    (f
                      ? ((g = s.total.color),
                        (_ = s.total.fontSize),
                        (A = s.total.fontFamily),
                        (O = s.total.fontWeight),
                        (G = s.total.label),
                        (H = s.total.formatter(c)))
                      : c.globals.series.length === 1 &&
                        ((H = N(c.globals.series[0], c)),
                        (G = c.globals.seriesNames[0])),
                    G && (G = s.name.formatter(G, s.total.show, c)),
                    s.name.show)
                  ) {
                    var te = h.drawText({
                      x,
                      y: k + parseFloat(s.name.offsetY),
                      text: G,
                      textAnchor: "middle",
                      foreColor: g,
                      fontSize: _,
                      fontWeight: O,
                      fontFamily: A,
                    });
                    te.node.classList.add("apexcharts-datalabel-label"),
                      d.add(te);
                  }
                  if (s.value.show) {
                    var se = s.name.show
                        ? parseFloat(s.value.offsetY) + 16
                        : s.value.offsetY,
                      b = h.drawText({
                        x,
                        y: k + se,
                        text: H,
                        textAnchor: "middle",
                        foreColor: y,
                        fontWeight: s.value.fontWeight,
                        fontSize: s.value.fontSize,
                        fontFamily: s.value.fontFamily,
                      });
                    b.node.classList.add("apexcharts-datalabel-value"),
                      d.add(b);
                  }
                  return d;
                },
              },
              {
                key: "printInnerLabels",
                value: function (s, o, c, h) {
                  var d,
                    f = this.w;
                  h
                    ? (d =
                        s.name.color === void 0
                          ? f.globals.colors[
                              parseInt(h.parentNode.getAttribute("rel"), 10) - 1
                            ]
                          : s.name.color)
                    : f.globals.series.length > 1 &&
                      s.total.show &&
                      (d = s.total.color);
                  var g = f.globals.dom.baseEl.querySelector(
                      ".apexcharts-datalabel-label"
                    ),
                    y = f.globals.dom.baseEl.querySelector(
                      ".apexcharts-datalabel-value"
                    );
                  (c = (0, s.value.formatter)(c, f)),
                    h ||
                      typeof s.total.formatter != "function" ||
                      (c = s.total.formatter(f));
                  var x = o === s.total.label;
                  (o = s.name.formatter(o, x, f)),
                    g !== null && (g.textContent = o),
                    y !== null && (y.textContent = c),
                    g !== null && (g.style.fill = d);
                },
              },
              {
                key: "printDataLabelsInner",
                value: function (s, o) {
                  var c = this.w,
                    h = s.getAttribute("data:value"),
                    d =
                      c.globals.seriesNames[
                        parseInt(s.parentNode.getAttribute("rel"), 10) - 1
                      ];
                  c.globals.series.length > 1 &&
                    this.printInnerLabels(o, d, h, s);
                  var f = c.globals.dom.baseEl.querySelector(
                    ".apexcharts-datalabels-group"
                  );
                  f !== null && (f.style.opacity = 1);
                },
              },
              {
                key: "drawSpokes",
                value: function (s) {
                  var o = this,
                    c = this.w,
                    h = new K(this.ctx),
                    d = c.config.plotOptions.polarArea.spokes;
                  if (d.strokeWidth !== 0) {
                    for (
                      var f = [], g = 360 / c.globals.series.length, y = 0;
                      y < c.globals.series.length;
                      y++
                    )
                      f.push(
                        B.polarToCartesian(
                          this.centerX,
                          this.centerY,
                          c.globals.radialSize,
                          c.config.plotOptions.pie.startAngle + g * y
                        )
                      );
                    f.forEach(function (x, k) {
                      var _ = h.drawLine(
                        x.x,
                        x.y,
                        o.centerX,
                        o.centerY,
                        Array.isArray(d.connectorColors)
                          ? d.connectorColors[k]
                          : d.connectorColors
                      );
                      s.add(_);
                    });
                  }
                },
              },
              {
                key: "revertDataLabelsInner",
                value: function (s, o, c) {
                  var h = this,
                    d = this.w,
                    f = d.globals.dom.baseEl.querySelector(
                      ".apexcharts-datalabels-group"
                    ),
                    g = !1,
                    y = d.globals.dom.baseEl.getElementsByClassName(
                      "apexcharts-pie-area"
                    ),
                    x = function (A) {
                      var O = A.makeSliceOut,
                        N = A.printLabel;
                      Array.prototype.forEach.call(y, function (H) {
                        H.getAttribute("data:pieClicked") === "true" &&
                          (O && (g = !0), N && h.printDataLabelsInner(H, o));
                      });
                    };
                  if (
                    (x({ makeSliceOut: !0, printLabel: !1 }),
                    o.total.show && d.globals.series.length > 1)
                  )
                    g && !o.total.showAlways
                      ? x({ makeSliceOut: !1, printLabel: !0 })
                      : this.printInnerLabels(
                          o,
                          o.total.label,
                          o.total.formatter(d)
                        );
                  else if ((x({ makeSliceOut: !1, printLabel: !0 }), !g))
                    if (
                      d.globals.selectedDataPoints.length &&
                      d.globals.series.length > 1
                    )
                      if (d.globals.selectedDataPoints[0].length > 0) {
                        var k = d.globals.selectedDataPoints[0],
                          _ = d.globals.dom.baseEl.querySelector(
                            ".apexcharts-"
                              .concat(this.chartType.toLowerCase(), "-slice-")
                              .concat(k)
                          );
                        this.printDataLabelsInner(_, o);
                      } else
                        f &&
                          d.globals.selectedDataPoints.length &&
                          d.globals.selectedDataPoints[0].length === 0 &&
                          (f.style.opacity = 0);
                    else
                      f && d.globals.series.length > 1 && (f.style.opacity = 0);
                },
              },
            ]),
            $
          );
        })(),
        vr = (function () {
          function $(s) {
            a(this, $),
              (this.ctx = s),
              (this.w = s.w),
              (this.chartType = this.w.config.chart.type),
              (this.initialAnim = this.w.config.chart.animations.enabled),
              (this.dynamicAnim =
                this.initialAnim &&
                this.w.config.chart.animations.dynamicAnimation.enabled),
              (this.animDur = 0);
            var o = this.w;
            (this.graphics = new K(this.ctx)),
              (this.lineColorArr =
                o.globals.stroke.colors !== void 0
                  ? o.globals.stroke.colors
                  : o.globals.colors),
              (this.defaultSize =
                o.globals.svgHeight < o.globals.svgWidth
                  ? o.globals.gridHeight + 1.5 * o.globals.goldenPadding
                  : o.globals.gridWidth),
              (this.isLog = o.config.yaxis[0].logarithmic),
              (this.coreUtils = new fe(this.ctx)),
              (this.maxValue = this.isLog
                ? this.coreUtils.getLogVal(o.globals.maxY, 0)
                : o.globals.maxY),
              (this.minValue = this.isLog
                ? this.coreUtils.getLogVal(this.w.globals.minY, 0)
                : o.globals.minY),
              (this.polygons = o.config.plotOptions.radar.polygons),
              (this.strokeWidth = o.config.stroke.show
                ? o.config.stroke.width
                : 0),
              (this.size =
                this.defaultSize / 2.1 -
                this.strokeWidth -
                o.config.chart.dropShadow.blur),
              o.config.xaxis.labels.show &&
                (this.size = this.size - o.globals.xAxisLabelsWidth / 1.75),
              o.config.plotOptions.radar.size !== void 0 &&
                (this.size = o.config.plotOptions.radar.size),
              (this.dataRadiusOfPercent = []),
              (this.dataRadius = []),
              (this.angleArr = []),
              (this.yaxisLabelsTextsPos = []);
          }
          return (
            u($, [
              {
                key: "draw",
                value: function (s) {
                  var o = this,
                    c = this.w,
                    h = new Z(this.ctx),
                    d = [],
                    f = new X(this.ctx);
                  s.length &&
                    (this.dataPointsLen =
                      s[c.globals.maxValsInArrayIndex].length),
                    (this.disAngle = (2 * Math.PI) / this.dataPointsLen);
                  var g = c.globals.gridWidth / 2,
                    y = c.globals.gridHeight / 2,
                    x = g + c.config.plotOptions.radar.offsetX,
                    k = y + c.config.plotOptions.radar.offsetY,
                    _ = this.graphics.group({
                      class: "apexcharts-radar-series apexcharts-plot-series",
                      transform: "translate("
                        .concat(x || 0, ", ")
                        .concat(k || 0, ")"),
                    }),
                    A = [],
                    O = null,
                    N = null;
                  if (
                    ((this.yaxisLabels = this.graphics.group({
                      class: "apexcharts-yaxis",
                    })),
                    s.forEach(function (G, te) {
                      var se = G.length === c.globals.dataPoints,
                        b = o.graphics
                          .group()
                          .attr({
                            class: "apexcharts-series",
                            "data:longestSeries": se,
                            seriesName: B.escapeString(
                              c.globals.seriesNames[te]
                            ),
                            rel: te + 1,
                            "data:realIndex": te,
                          });
                      (o.dataRadiusOfPercent[te] = []),
                        (o.dataRadius[te] = []),
                        (o.angleArr[te] = []),
                        G.forEach(function (De, Ge) {
                          var it = Math.abs(o.maxValue - o.minValue);
                          (De += Math.abs(o.minValue)),
                            o.isLog && (De = o.coreUtils.getLogVal(De, 0)),
                            (o.dataRadiusOfPercent[te][Ge] = De / it),
                            (o.dataRadius[te][Ge] =
                              o.dataRadiusOfPercent[te][Ge] * o.size),
                            (o.angleArr[te][Ge] = Ge * o.disAngle);
                        }),
                        (A = o.getDataPointsPos(
                          o.dataRadius[te],
                          o.angleArr[te]
                        ));
                      var C = o.createPaths(A, { x: 0, y: 0 });
                      (O = o.graphics.group({
                        class:
                          "apexcharts-series-markers-wrap apexcharts-element-hidden",
                      })),
                        (N = o.graphics.group({
                          class: "apexcharts-datalabels",
                          "data:realIndex": te,
                        })),
                        c.globals.delayedElements.push({
                          el: O.node,
                          index: te,
                        });
                      var F = {
                          i: te,
                          realIndex: te,
                          animationDelay: te,
                          initialSpeed: c.config.chart.animations.speed,
                          dataChangeSpeed:
                            c.config.chart.animations.dynamicAnimation.speed,
                          className: "apexcharts-radar",
                          shouldClipToGrid: !1,
                          bindEventsOnPaths: !1,
                          stroke: c.globals.stroke.colors[te],
                          strokeLineCap: c.config.stroke.lineCap,
                        },
                        ee = null;
                      c.globals.previousPaths.length > 0 &&
                        (ee = o.getPreviousPath(te));
                      for (var ue = 0; ue < C.linePathsTo.length; ue++) {
                        var he = o.graphics.renderPaths(
                          n(
                            n({}, F),
                            {},
                            {
                              pathFrom: ee === null ? C.linePathsFrom[ue] : ee,
                              pathTo: C.linePathsTo[ue],
                              strokeWidth: Array.isArray(o.strokeWidth)
                                ? o.strokeWidth[te]
                                : o.strokeWidth,
                              fill: "none",
                              drawShadow: !1,
                            }
                          )
                        );
                        b.add(he);
                        var we = h.fillPath({ seriesNumber: te }),
                          Ae = o.graphics.renderPaths(
                            n(
                              n({}, F),
                              {},
                              {
                                pathFrom:
                                  ee === null ? C.areaPathsFrom[ue] : ee,
                                pathTo: C.areaPathsTo[ue],
                                strokeWidth: 0,
                                fill: we,
                                drawShadow: !1,
                              }
                            )
                          );
                        if (c.config.chart.dropShadow.enabled) {
                          var Le = new re(o.ctx),
                            ze = c.config.chart.dropShadow;
                          Le.dropShadow(
                            Ae,
                            Object.assign({}, ze, { noUserSpaceOnUse: !0 }),
                            te
                          );
                        }
                        b.add(Ae);
                      }
                      G.forEach(function (De, Ge) {
                        var it = new Oe(o.ctx).getMarkerConfig({
                            cssClass: "apexcharts-marker",
                            seriesIndex: te,
                            dataPointIndex: Ge,
                          }),
                          St = o.graphics.drawMarker(A[Ge].x, A[Ge].y, it);
                        St.attr("rel", Ge),
                          St.attr("j", Ge),
                          St.attr("index", te),
                          St.node.setAttribute("default-marker-size", it.pSize);
                        var Lt = o.graphics.group({
                          class: "apexcharts-series-markers",
                        });
                        Lt && Lt.add(St), O.add(Lt), b.add(O);
                        var Ht = c.config.dataLabels;
                        if (Ht.enabled) {
                          var Jr = Ht.formatter(c.globals.series[te][Ge], {
                            seriesIndex: te,
                            dataPointIndex: Ge,
                            w: c,
                          });
                          f.plotDataLabelsText({
                            x: A[Ge].x,
                            y: A[Ge].y,
                            text: Jr,
                            textAnchor: "middle",
                            i: te,
                            j: te,
                            parent: N,
                            offsetCorrection: !1,
                            dataLabelsConfig: n({}, Ht),
                          });
                        }
                        b.add(N);
                      }),
                        d.push(b);
                    }),
                    this.drawPolygons({ parent: _ }),
                    c.config.xaxis.labels.show)
                  ) {
                    var H = this.drawXAxisTexts();
                    _.add(H);
                  }
                  return (
                    d.forEach(function (G) {
                      _.add(G);
                    }),
                    _.add(this.yaxisLabels),
                    _
                  );
                },
              },
              {
                key: "drawPolygons",
                value: function (s) {
                  for (
                    var o = this,
                      c = this.w,
                      h = s.parent,
                      d = new Ts(this.ctx),
                      f = c.globals.yAxisScale[0].result.reverse(),
                      g = f.length,
                      y = [],
                      x = this.size / (g - 1),
                      k = 0;
                    k < g;
                    k++
                  )
                    y[k] = x * k;
                  y.reverse();
                  var _ = [],
                    A = [];
                  y.forEach(function (O, N) {
                    var H = B.getPolygonPos(O, o.dataPointsLen),
                      G = "";
                    H.forEach(function (te, se) {
                      if (N === 0) {
                        var b = o.graphics.drawLine(
                          te.x,
                          te.y,
                          0,
                          0,
                          Array.isArray(o.polygons.connectorColors)
                            ? o.polygons.connectorColors[se]
                            : o.polygons.connectorColors
                        );
                        A.push(b);
                      }
                      se === 0 &&
                        o.yaxisLabelsTextsPos.push({ x: te.x, y: te.y }),
                        (G += te.x + "," + te.y + " ");
                    }),
                      _.push(G);
                  }),
                    _.forEach(function (O, N) {
                      var H = o.polygons.strokeColors,
                        G = o.polygons.strokeWidth,
                        te = o.graphics.drawPolygon(
                          O,
                          Array.isArray(H) ? H[N] : H,
                          Array.isArray(G) ? G[N] : G,
                          c.globals.radarPolygons.fill.colors[N]
                        );
                      h.add(te);
                    }),
                    A.forEach(function (O) {
                      h.add(O);
                    }),
                    c.config.yaxis[0].show &&
                      this.yaxisLabelsTextsPos.forEach(function (O, N) {
                        var H = d.drawYAxisTexts(O.x, O.y, N, f[N]);
                        o.yaxisLabels.add(H);
                      });
                },
              },
              {
                key: "drawXAxisTexts",
                value: function () {
                  var s = this,
                    o = this.w,
                    c = o.config.xaxis.labels,
                    h = this.graphics.group({ class: "apexcharts-xaxis" }),
                    d = B.getPolygonPos(this.size, this.dataPointsLen);
                  return (
                    o.globals.labels.forEach(function (f, g) {
                      var y = o.config.xaxis.labels.formatter,
                        x = new X(s.ctx);
                      if (d[g]) {
                        var k = s.getTextPos(d[g], s.size),
                          _ = y(f, {
                            seriesIndex: -1,
                            dataPointIndex: g,
                            w: o,
                          });
                        x.plotDataLabelsText({
                          x: k.newX,
                          y: k.newY,
                          text: _,
                          textAnchor: k.textAnchor,
                          i: g,
                          j: g,
                          parent: h,
                          color:
                            Array.isArray(c.style.colors) && c.style.colors[g]
                              ? c.style.colors[g]
                              : "#a8a8a8",
                          dataLabelsConfig: n(
                            {
                              textAnchor: k.textAnchor,
                              dropShadow: { enabled: !1 },
                            },
                            c
                          ),
                          offsetCorrection: !1,
                        });
                      }
                    }),
                    h
                  );
                },
              },
              {
                key: "createPaths",
                value: function (s, o) {
                  var c = this,
                    h = [],
                    d = [],
                    f = [],
                    g = [];
                  if (s.length) {
                    (d = [this.graphics.move(o.x, o.y)]),
                      (g = [this.graphics.move(o.x, o.y)]);
                    var y = this.graphics.move(s[0].x, s[0].y),
                      x = this.graphics.move(s[0].x, s[0].y);
                    s.forEach(function (k, _) {
                      (y += c.graphics.line(k.x, k.y)),
                        (x += c.graphics.line(k.x, k.y)),
                        _ === s.length - 1 && ((y += "Z"), (x += "Z"));
                    }),
                      h.push(y),
                      f.push(x);
                  }
                  return {
                    linePathsFrom: d,
                    linePathsTo: h,
                    areaPathsFrom: g,
                    areaPathsTo: f,
                  };
                },
              },
              {
                key: "getTextPos",
                value: function (s, o) {
                  var c = "middle",
                    h = s.x,
                    d = s.y;
                  return (
                    Math.abs(s.x) >= 10
                      ? s.x > 0
                        ? ((c = "start"), (h += 10))
                        : s.x < 0 && ((c = "end"), (h -= 10))
                      : (c = "middle"),
                    Math.abs(s.y) >= o - 10 &&
                      (s.y < 0 ? (d -= 10) : s.y > 0 && (d += 10)),
                    { textAnchor: c, newX: h, newY: d }
                  );
                },
              },
              {
                key: "getPreviousPath",
                value: function (s) {
                  for (
                    var o = this.w, c = null, h = 0;
                    h < o.globals.previousPaths.length;
                    h++
                  ) {
                    var d = o.globals.previousPaths[h];
                    d.paths.length > 0 &&
                      parseInt(d.realIndex, 10) === parseInt(s, 10) &&
                      o.globals.previousPaths[h].paths[0] !== void 0 &&
                      (c = o.globals.previousPaths[h].paths[0].d);
                  }
                  return c;
                },
              },
              {
                key: "getDataPointsPos",
                value: function (s, o) {
                  var c =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : this.dataPointsLen;
                  (s = s || []), (o = o || []);
                  for (var h = [], d = 0; d < c; d++) {
                    var f = {};
                    (f.x = s[d] * Math.sin(o[d])),
                      (f.y = -s[d] * Math.cos(o[d])),
                      h.push(f);
                  }
                  return h;
                },
              },
            ]),
            $
          );
        })(),
        ka = (function ($) {
          m(o, ur);
          var s = M(o);
          function o(c) {
            var h;
            a(this, o),
              ((h = s.call(this, c)).ctx = c),
              (h.w = c.w),
              (h.animBeginArr = [0]),
              (h.animDur = 0);
            var d = h.w;
            return (
              (h.startAngle = d.config.plotOptions.radialBar.startAngle),
              (h.endAngle = d.config.plotOptions.radialBar.endAngle),
              (h.totalAngle = Math.abs(
                d.config.plotOptions.radialBar.endAngle -
                  d.config.plotOptions.radialBar.startAngle
              )),
              (h.trackStartAngle =
                d.config.plotOptions.radialBar.track.startAngle),
              (h.trackEndAngle = d.config.plotOptions.radialBar.track.endAngle),
              (h.donutDataLabels = h.w.config.plotOptions.radialBar.dataLabels),
              (h.radialDataLabels = h.donutDataLabels),
              h.trackStartAngle || (h.trackStartAngle = h.startAngle),
              h.trackEndAngle || (h.trackEndAngle = h.endAngle),
              h.endAngle === 360 && (h.endAngle = 359.99),
              (h.margin = parseInt(
                d.config.plotOptions.radialBar.track.margin,
                10
              )),
              h
            );
          }
          return (
            u(o, [
              {
                key: "draw",
                value: function (c) {
                  var h = this.w,
                    d = new K(this.ctx),
                    f = d.group({ class: "apexcharts-radialbar" });
                  if (h.globals.noData) return f;
                  var g = d.group(),
                    y = this.defaultSize / 2,
                    x = h.globals.gridWidth / 2,
                    k = this.defaultSize / 2.05;
                  h.config.chart.sparkline.enabled ||
                    (k =
                      k -
                      h.config.stroke.width -
                      h.config.chart.dropShadow.blur);
                  var _ = h.globals.fill.colors;
                  if (h.config.plotOptions.radialBar.track.show) {
                    var A = this.drawTracks({
                      size: k,
                      centerX: x,
                      centerY: y,
                      colorArr: _,
                      series: c,
                    });
                    g.add(A);
                  }
                  var O = this.drawArcs({
                      size: k,
                      centerX: x,
                      centerY: y,
                      colorArr: _,
                      series: c,
                    }),
                    N = 360;
                  h.config.plotOptions.radialBar.startAngle < 0 &&
                    (N = this.totalAngle);
                  var H = (360 - N) / 360;
                  if (
                    ((h.globals.radialSize = k - k * H),
                    this.radialDataLabels.value.show)
                  ) {
                    var G = Math.max(
                      this.radialDataLabels.value.offsetY,
                      this.radialDataLabels.name.offsetY
                    );
                    h.globals.radialSize += G * H;
                  }
                  return (
                    g.add(O.g),
                    h.config.plotOptions.radialBar.hollow.position ===
                      "front" &&
                      (O.g.add(O.elHollow),
                      O.dataLabels && O.g.add(O.dataLabels)),
                    f.add(g),
                    f
                  );
                },
              },
              {
                key: "drawTracks",
                value: function (c) {
                  var h = this.w,
                    d = new K(this.ctx),
                    f = d.group({ class: "apexcharts-tracks" }),
                    g = new re(this.ctx),
                    y = new Z(this.ctx),
                    x = this.getStrokeWidth(c);
                  c.size = c.size - x / 2;
                  for (var k = 0; k < c.series.length; k++) {
                    var _ = d.group({
                      class: "apexcharts-radialbar-track apexcharts-track",
                    });
                    f.add(_),
                      _.attr({ rel: k + 1 }),
                      (c.size = c.size - x - this.margin);
                    var A = h.config.plotOptions.radialBar.track,
                      O = y.fillPath({
                        seriesNumber: 0,
                        size: c.size,
                        fillColors: Array.isArray(A.background)
                          ? A.background[k]
                          : A.background,
                        solid: !0,
                      }),
                      N = this.trackStartAngle,
                      H = this.trackEndAngle;
                    Math.abs(H) + Math.abs(N) >= 360 &&
                      (H = 360 - Math.abs(this.startAngle) - 0.1);
                    var G = d.drawPath({
                      d: "",
                      stroke: O,
                      strokeWidth: (x * parseInt(A.strokeWidth, 10)) / 100,
                      fill: "none",
                      strokeOpacity: A.opacity,
                      classes: "apexcharts-radialbar-area",
                    });
                    if (A.dropShadow.enabled) {
                      var te = A.dropShadow;
                      g.dropShadow(G, te);
                    }
                    _.add(G),
                      G.attr("id", "apexcharts-radialbarTrack-" + k),
                      this.animatePaths(G, {
                        centerX: c.centerX,
                        centerY: c.centerY,
                        endAngle: H,
                        startAngle: N,
                        size: c.size,
                        i: k,
                        totalItems: 2,
                        animBeginArr: 0,
                        dur: 0,
                        isTrack: !0,
                        easing: h.globals.easing,
                      });
                  }
                  return f;
                },
              },
              {
                key: "drawArcs",
                value: function (c) {
                  var h = this.w,
                    d = new K(this.ctx),
                    f = new Z(this.ctx),
                    g = new re(this.ctx),
                    y = d.group(),
                    x = this.getStrokeWidth(c);
                  c.size = c.size - x / 2;
                  var k = h.config.plotOptions.radialBar.hollow.background,
                    _ =
                      c.size -
                      x * c.series.length -
                      this.margin * c.series.length -
                      (x *
                        parseInt(
                          h.config.plotOptions.radialBar.track.strokeWidth,
                          10
                        )) /
                        100 /
                        2,
                    A = _ - h.config.plotOptions.radialBar.hollow.margin;
                  h.config.plotOptions.radialBar.hollow.image !== void 0 &&
                    (k = this.drawHollowImage(c, y, _, k));
                  var O = this.drawHollow({
                    size: A,
                    centerX: c.centerX,
                    centerY: c.centerY,
                    fill: k || "transparent",
                  });
                  if (
                    h.config.plotOptions.radialBar.hollow.dropShadow.enabled
                  ) {
                    var N = h.config.plotOptions.radialBar.hollow.dropShadow;
                    g.dropShadow(O, N);
                  }
                  var H = 1;
                  !this.radialDataLabels.total.show &&
                    h.globals.series.length > 1 &&
                    (H = 0);
                  var G = null;
                  this.radialDataLabels.show &&
                    (G = this.renderInnerDataLabels(this.radialDataLabels, {
                      hollowSize: _,
                      centerX: c.centerX,
                      centerY: c.centerY,
                      opacity: H,
                    })),
                    h.config.plotOptions.radialBar.hollow.position === "back" &&
                      (y.add(O), G && y.add(G));
                  var te = !1;
                  h.config.plotOptions.radialBar.inverseOrder && (te = !0);
                  for (
                    var se = te ? c.series.length - 1 : 0;
                    te ? se >= 0 : se < c.series.length;
                    te ? se-- : se++
                  ) {
                    var b = d.group({
                      class: "apexcharts-series apexcharts-radial-series",
                      seriesName: B.escapeString(h.globals.seriesNames[se]),
                    });
                    y.add(b),
                      b.attr({ rel: se + 1, "data:realIndex": se }),
                      this.ctx.series.addCollapsedClassToSeries(b, se),
                      (c.size = c.size - x - this.margin);
                    var C = f.fillPath({
                        seriesNumber: se,
                        size: c.size,
                        value: c.series[se],
                      }),
                      F = this.startAngle,
                      ee = void 0,
                      ue =
                        B.negToZero(c.series[se] > 100 ? 100 : c.series[se]) /
                        100,
                      he = Math.round(this.totalAngle * ue) + this.startAngle,
                      we = void 0;
                    h.globals.dataChanged &&
                      ((ee = this.startAngle),
                      (we =
                        Math.round(
                          (this.totalAngle *
                            B.negToZero(h.globals.previousPaths[se])) /
                            100
                        ) + ee)),
                      Math.abs(he) + Math.abs(F) >= 360 && (he -= 0.01),
                      Math.abs(we) + Math.abs(ee) >= 360 && (we -= 0.01);
                    var Ae = he - F,
                      Le = Array.isArray(h.config.stroke.dashArray)
                        ? h.config.stroke.dashArray[se]
                        : h.config.stroke.dashArray,
                      ze = d.drawPath({
                        d: "",
                        stroke: C,
                        strokeWidth: x,
                        fill: "none",
                        fillOpacity: h.config.fill.opacity,
                        classes:
                          "apexcharts-radialbar-area apexcharts-radialbar-slice-" +
                          se,
                        strokeDashArray: Le,
                      });
                    if (
                      (K.setAttrs(ze.node, {
                        "data:angle": Ae,
                        "data:value": c.series[se],
                      }),
                      h.config.chart.dropShadow.enabled)
                    ) {
                      var De = h.config.chart.dropShadow;
                      g.dropShadow(ze, De, se);
                    }
                    g.setSelectionFilter(ze, 0, se),
                      this.addListeners(ze, this.radialDataLabels),
                      b.add(ze),
                      ze.attr({ index: 0, j: se });
                    var Ge = 0;
                    !this.initialAnim ||
                      h.globals.resized ||
                      h.globals.dataChanged ||
                      (Ge = h.config.chart.animations.speed),
                      h.globals.dataChanged &&
                        (Ge = h.config.chart.animations.dynamicAnimation.speed),
                      (this.animDur =
                        Ge / (1.2 * c.series.length) + this.animDur),
                      this.animBeginArr.push(this.animDur),
                      this.animatePaths(ze, {
                        centerX: c.centerX,
                        centerY: c.centerY,
                        endAngle: he,
                        startAngle: F,
                        prevEndAngle: we,
                        prevStartAngle: ee,
                        size: c.size,
                        i: se,
                        totalItems: 2,
                        animBeginArr: this.animBeginArr,
                        dur: Ge,
                        shouldSetPrevPaths: !0,
                        easing: h.globals.easing,
                      });
                  }
                  return { g: y, elHollow: O, dataLabels: G };
                },
              },
              {
                key: "drawHollow",
                value: function (c) {
                  var h = new K(this.ctx).drawCircle(2 * c.size);
                  return (
                    h.attr({
                      class: "apexcharts-radialbar-hollow",
                      cx: c.centerX,
                      cy: c.centerY,
                      r: c.size,
                      fill: c.fill,
                    }),
                    h
                  );
                },
              },
              {
                key: "drawHollowImage",
                value: function (c, h, d, f) {
                  var g = this.w,
                    y = new Z(this.ctx),
                    x = B.randomId(),
                    k = g.config.plotOptions.radialBar.hollow.image;
                  if (g.config.plotOptions.radialBar.hollow.imageClipped)
                    y.clippedImgArea({
                      width: d,
                      height: d,
                      image: k,
                      patternID: "pattern".concat(g.globals.cuid).concat(x),
                    }),
                      (f = "url(#pattern"
                        .concat(g.globals.cuid)
                        .concat(x, ")"));
                  else {
                    var _ = g.config.plotOptions.radialBar.hollow.imageWidth,
                      A = g.config.plotOptions.radialBar.hollow.imageHeight;
                    if (_ === void 0 && A === void 0) {
                      var O = g.globals.dom.Paper.image(k).loaded(function (H) {
                        this.move(
                          c.centerX -
                            H.width / 2 +
                            g.config.plotOptions.radialBar.hollow.imageOffsetX,
                          c.centerY -
                            H.height / 2 +
                            g.config.plotOptions.radialBar.hollow.imageOffsetY
                        );
                      });
                      h.add(O);
                    } else {
                      var N = g.globals.dom.Paper.image(k).loaded(function (H) {
                        this.move(
                          c.centerX -
                            _ / 2 +
                            g.config.plotOptions.radialBar.hollow.imageOffsetX,
                          c.centerY -
                            A / 2 +
                            g.config.plotOptions.radialBar.hollow.imageOffsetY
                        ),
                          this.size(_, A);
                      });
                      h.add(N);
                    }
                  }
                  return f;
                },
              },
              {
                key: "getStrokeWidth",
                value: function (c) {
                  var h = this.w;
                  return (
                    (c.size *
                      (100 -
                        parseInt(
                          h.config.plotOptions.radialBar.hollow.size,
                          10
                        ))) /
                      100 /
                      (c.series.length + 1) -
                    this.margin
                  );
                },
              },
            ]),
            o
          );
        })(),
        yr = (function ($) {
          m(o, qt);
          var s = M(o);
          function o() {
            return a(this, o), s.apply(this, arguments);
          }
          return (
            u(o, [
              {
                key: "draw",
                value: function (c, h) {
                  var d = this.w,
                    f = new K(this.ctx);
                  (this.rangeBarOptions = this.w.config.plotOptions.rangeBar),
                    (this.series = c),
                    (this.seriesRangeStart = d.globals.seriesRangeStart),
                    (this.seriesRangeEnd = d.globals.seriesRangeEnd),
                    this.barHelpers.initVariables(c);
                  for (
                    var g = f.group({
                        class:
                          "apexcharts-rangebar-series apexcharts-plot-series",
                      }),
                      y = 0;
                    y < c.length;
                    y++
                  ) {
                    var x,
                      k,
                      _,
                      A,
                      O = void 0,
                      N = void 0,
                      H = d.globals.comboCharts ? h[y] : y,
                      G = f.group({
                        class: "apexcharts-series",
                        seriesName: B.escapeString(d.globals.seriesNames[H]),
                        rel: y + 1,
                        "data:realIndex": H,
                      });
                    this.ctx.series.addCollapsedClassToSeries(G, H),
                      c[y].length > 0 && (this.visibleI = this.visibleI + 1);
                    var te = 0,
                      se = 0;
                    this.yRatio.length > 1 && (this.yaxisIndex = H);
                    var b = this.barHelpers.initialPositions();
                    (N = b.y),
                      (A = b.zeroW),
                      (O = b.x),
                      (se = b.barWidth),
                      (te = b.barHeight),
                      (x = b.xDivision),
                      (k = b.yDivision),
                      (_ = b.zeroH);
                    for (
                      var C = f.group({
                          class: "apexcharts-datalabels",
                          "data:realIndex": H,
                        }),
                        F = f.group({
                          class: "apexcharts-rangebar-goals-markers",
                        }),
                        ee = 0;
                      ee < d.globals.dataPoints;
                      ee++
                    ) {
                      var ue,
                        he = this.barHelpers.getStrokeWidth(y, ee, H),
                        we = this.seriesRangeStart[y][ee],
                        Ae = this.seriesRangeEnd[y][ee],
                        Le = null,
                        ze = null,
                        De = null,
                        Ge = { x: O, y: N, strokeWidth: he, elSeries: G },
                        it = this.seriesLen;
                      if (
                        (d.config.plotOptions.bar.rangeBarGroupRows && (it = 1),
                        d.config.series[y].data[ee] === void 0)
                      )
                        break;
                      if (this.isHorizontal) {
                        De = N + te * this.visibleI;
                        var St = (k - te * it) / 2;
                        if (d.config.series[y].data[ee].x) {
                          var Lt = this.detectOverlappingBars({
                            i: y,
                            j: ee,
                            barYPosition: De,
                            srty: St,
                            barHeight: te,
                            yDivision: k,
                            initPositions: b,
                          });
                          (te = Lt.barHeight), (De = Lt.barYPosition);
                        }
                        se = (Le = this.drawRangeBarPaths(
                          n(
                            {
                              indexes: { i: y, j: ee, realIndex: H },
                              barHeight: te,
                              barYPosition: De,
                              zeroW: A,
                              yDivision: k,
                              y1: we,
                              y2: Ae,
                            },
                            Ge
                          )
                        )).barWidth;
                      } else {
                        d.globals.isXNumeric &&
                          (O =
                            (d.globals.seriesX[y][ee] - d.globals.minX) /
                              this.xRatio -
                            se / 2),
                          (ze = O + se * this.visibleI);
                        var Ht = (x - se * it) / 2;
                        if (d.config.series[y].data[ee].x) {
                          var Jr = this.detectOverlappingBars({
                            i: y,
                            j: ee,
                            barXPosition: ze,
                            srtx: Ht,
                            barWidth: se,
                            xDivision: x,
                            initPositions: b,
                          });
                          (se = Jr.barWidth), (ze = Jr.barXPosition);
                        }
                        te = (Le = this.drawRangeColumnPaths(
                          n(
                            {
                              indexes: { i: y, j: ee, realIndex: H },
                              barWidth: se,
                              barXPosition: ze,
                              zeroH: _,
                              xDivision: x,
                            },
                            Ge
                          )
                        )).barHeight;
                      }
                      var Wr = this.barHelpers.drawGoalLine({
                        barXPosition: Le.barXPosition,
                        barYPosition: De,
                        goalX: Le.goalX,
                        goalY: Le.goalY,
                        barHeight: te,
                        barWidth: se,
                      });
                      Wr && F.add(Wr), (N = Le.y), (O = Le.x);
                      var an = this.barHelpers.getPathFillColor(c, y, ee, H),
                        Ao = d.globals.stroke.colors[H];
                      this.renderSeries(
                        (p(
                          (ue = {
                            realIndex: H,
                            pathFill: an,
                            lineFill: Ao,
                            j: ee,
                            i: y,
                            x: O,
                            y: N,
                            y1: we,
                            y2: Ae,
                            pathFrom: Le.pathFrom,
                            pathTo: Le.pathTo,
                            strokeWidth: he,
                            elSeries: G,
                            series: c,
                            barHeight: te,
                            barWidth: se,
                            barXPosition: ze,
                            barYPosition: De,
                          }),
                          "barWidth",
                          se
                        ),
                        p(ue, "elDataLabelsWrap", C),
                        p(ue, "elGoalsMarkers", F),
                        p(ue, "visibleSeries", this.visibleI),
                        p(ue, "type", "rangebar"),
                        ue)
                      );
                    }
                    g.add(G);
                  }
                  return g;
                },
              },
              {
                key: "detectOverlappingBars",
                value: function (c) {
                  var h = c.i,
                    d = c.j,
                    f = c.barYPosition,
                    g = c.barXPosition,
                    y = c.srty,
                    x = c.srtx,
                    k = c.barHeight,
                    _ = c.barWidth,
                    A = c.yDivision,
                    O = c.xDivision,
                    N = c.initPositions,
                    H = this.w,
                    G = [],
                    te = H.config.series[h].data[d].rangeName,
                    se = H.config.series[h].data[d].x,
                    b = Array.isArray(se) ? se.join(" ") : se,
                    C = H.globals.labels
                      .map(function (ee) {
                        return Array.isArray(ee) ? ee.join(" ") : ee;
                      })
                      .indexOf(b),
                    F = H.globals.seriesRange[h].findIndex(function (ee) {
                      return ee.x === b && ee.overlaps.length > 0;
                    });
                  return (
                    this.isHorizontal
                      ? ((f = H.config.plotOptions.bar.rangeBarGroupRows
                          ? y + A * C
                          : y + k * this.visibleI + A * C),
                        F > -1 &&
                          !H.config.plotOptions.bar.rangeBarOverlap &&
                          (G = H.globals.seriesRange[h][F].overlaps).indexOf(
                            te
                          ) > -1 &&
                          (f =
                            (k = N.barHeight / G.length) * this.visibleI +
                            (A *
                              (100 - parseInt(this.barOptions.barHeight, 10))) /
                              100 /
                              2 +
                            k * (this.visibleI + G.indexOf(te)) +
                            A * C))
                      : (C > -1 &&
                          (g = H.config.plotOptions.bar.rangeBarGroupRows
                            ? x + O * C
                            : x + _ * this.visibleI + O * C),
                        F > -1 &&
                          !H.config.plotOptions.bar.rangeBarOverlap &&
                          (G = H.globals.seriesRange[h][F].overlaps).indexOf(
                            te
                          ) > -1 &&
                          (g =
                            (_ = N.barWidth / G.length) * this.visibleI +
                            (O *
                              (100 - parseInt(this.barOptions.barWidth, 10))) /
                              100 /
                              2 +
                            _ * (this.visibleI + G.indexOf(te)) +
                            O * C)),
                    {
                      barYPosition: f,
                      barXPosition: g,
                      barHeight: k,
                      barWidth: _,
                    }
                  );
                },
              },
              {
                key: "drawRangeColumnPaths",
                value: function (c) {
                  var h = c.indexes,
                    d = c.x,
                    f = c.xDivision,
                    g = c.barWidth,
                    y = c.barXPosition,
                    x = c.zeroH,
                    k = this.w,
                    _ = h.i,
                    A = h.j,
                    O = this.yRatio[this.yaxisIndex],
                    N = h.realIndex,
                    H = this.getRangeValue(N, A),
                    G = Math.min(H.start, H.end),
                    te = Math.max(H.start, H.end);
                  this.series[_][A] === void 0 || this.series[_][A] === null
                    ? (G = x)
                    : ((G = x - G / O), (te = x - te / O));
                  var se = Math.abs(te - G),
                    b = this.barHelpers.getColumnPaths({
                      barXPosition: y,
                      barWidth: g,
                      y1: G,
                      y2: te,
                      strokeWidth: this.strokeWidth,
                      series: this.seriesRangeEnd,
                      realIndex: h.realIndex,
                      i: N,
                      j: A,
                      w: k,
                    });
                  return (
                    k.globals.isXNumeric || (d += f),
                    {
                      pathTo: b.pathTo,
                      pathFrom: b.pathFrom,
                      barHeight: se,
                      x: d,
                      y: te,
                      goalY: this.barHelpers.getGoalValues("y", null, x, _, A),
                      barXPosition: y,
                    }
                  );
                },
              },
              {
                key: "drawRangeBarPaths",
                value: function (c) {
                  var h = c.indexes,
                    d = c.y,
                    f = c.y1,
                    g = c.y2,
                    y = c.yDivision,
                    x = c.barHeight,
                    k = c.barYPosition,
                    _ = c.zeroW,
                    A = this.w,
                    O = _ + f / this.invertedYRatio,
                    N = _ + g / this.invertedYRatio,
                    H = Math.abs(N - O),
                    G = this.barHelpers.getBarpaths({
                      barYPosition: k,
                      barHeight: x,
                      x1: O,
                      x2: N,
                      strokeWidth: this.strokeWidth,
                      series: this.seriesRangeEnd,
                      i: h.realIndex,
                      realIndex: h.realIndex,
                      j: h.j,
                      w: A,
                    });
                  return (
                    A.globals.isXNumeric || (d += y),
                    {
                      pathTo: G.pathTo,
                      pathFrom: G.pathFrom,
                      barWidth: H,
                      x: N,
                      goalX: this.barHelpers.getGoalValues(
                        "x",
                        _,
                        null,
                        h.realIndex,
                        h.j
                      ),
                      y: d,
                    }
                  );
                },
              },
              {
                key: "getRangeValue",
                value: function (c, h) {
                  var d = this.w;
                  return {
                    start: d.globals.seriesRangeStart[c][h],
                    end: d.globals.seriesRangeEnd[c][h],
                  };
                },
              },
            ]),
            o
          );
        })(),
        br = (function () {
          function $(s) {
            a(this, $), (this.w = s.w), (this.lineCtx = s);
          }
          return (
            u($, [
              {
                key: "sameValueSeriesFix",
                value: function (s, o) {
                  var c = this.w;
                  if (
                    (c.config.fill.type === "gradient" ||
                      c.config.fill.type[s] === "gradient") &&
                    new fe(this.lineCtx.ctx, c).seriesHaveSameValues(s)
                  ) {
                    var h = o[s].slice();
                    (h[h.length - 1] = h[h.length - 1] + 1e-6), (o[s] = h);
                  }
                  return o;
                },
              },
              {
                key: "calculatePoints",
                value: function (s) {
                  var o = s.series,
                    c = s.realIndex,
                    h = s.x,
                    d = s.y,
                    f = s.i,
                    g = s.j,
                    y = s.prevY,
                    x = this.w,
                    k = [],
                    _ = [];
                  if (g === 0) {
                    var A =
                      this.lineCtx.categoryAxisCorrection +
                      x.config.markers.offsetX;
                    x.globals.isXNumeric &&
                      (A =
                        (x.globals.seriesX[c][0] - x.globals.minX) /
                          this.lineCtx.xRatio +
                        x.config.markers.offsetX),
                      k.push(A),
                      _.push(
                        B.isNumber(o[f][0])
                          ? y + x.config.markers.offsetY
                          : null
                      ),
                      k.push(h + x.config.markers.offsetX),
                      _.push(
                        B.isNumber(o[f][g + 1])
                          ? d + x.config.markers.offsetY
                          : null
                      );
                  } else
                    k.push(h + x.config.markers.offsetX),
                      _.push(
                        B.isNumber(o[f][g + 1])
                          ? d + x.config.markers.offsetY
                          : null
                      );
                  return { x: k, y: _ };
                },
              },
              {
                key: "checkPreviousPaths",
                value: function (s) {
                  for (
                    var o = s.pathFromLine,
                      c = s.pathFromArea,
                      h = s.realIndex,
                      d = this.w,
                      f = 0;
                    f < d.globals.previousPaths.length;
                    f++
                  ) {
                    var g = d.globals.previousPaths[f];
                    (g.type === "line" || g.type === "area") &&
                      g.paths.length > 0 &&
                      parseInt(g.realIndex, 10) === parseInt(h, 10) &&
                      (g.type === "line"
                        ? ((this.lineCtx.appendPathFrom = !1),
                          (o = d.globals.previousPaths[f].paths[0].d))
                        : g.type === "area" &&
                          ((this.lineCtx.appendPathFrom = !1),
                          (c = d.globals.previousPaths[f].paths[0].d),
                          d.config.stroke.show &&
                            d.globals.previousPaths[f].paths[1] &&
                            (o = d.globals.previousPaths[f].paths[1].d)));
                  }
                  return { pathFromLine: o, pathFromArea: c };
                },
              },
              {
                key: "determineFirstPrevY",
                value: function (s) {
                  var o,
                    c = s.i,
                    h = s.series,
                    d = s.prevY,
                    f = s.lineYPosition,
                    g = this.w;
                  if (
                    ((o = h[c]) === null || o === void 0 ? void 0 : o[0]) !==
                    void 0
                  )
                    d =
                      (f =
                        g.config.chart.stacked && c > 0
                          ? this.lineCtx.prevSeriesY[c - 1][0]
                          : this.lineCtx.zeroY) -
                      h[c][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] +
                      2 *
                        (this.lineCtx.isReversed
                          ? h[c][0] /
                            this.lineCtx.yRatio[this.lineCtx.yaxisIndex]
                          : 0);
                  else if (
                    g.config.chart.stacked &&
                    c > 0 &&
                    h[c][0] === void 0
                  ) {
                    for (var y = c - 1; y >= 0; y--)
                      if (h[y][0] !== null && h[y][0] !== void 0) {
                        d = f = this.lineCtx.prevSeriesY[y][0];
                        break;
                      }
                  }
                  return { prevY: d, lineYPosition: f };
                },
              },
            ]),
            $
          );
        })(),
        rs = (function () {
          function $(s, o, c) {
            a(this, $),
              (this.ctx = s),
              (this.w = s.w),
              (this.xyRatios = o),
              (this.pointsChart =
                !(
                  this.w.config.chart.type !== "bubble" &&
                  this.w.config.chart.type !== "scatter"
                ) || c),
              (this.scatter = new Me(this.ctx)),
              (this.noNegatives = this.w.globals.minX === Number.MAX_VALUE),
              (this.lineHelpers = new br(this)),
              (this.markers = new Oe(this.ctx)),
              (this.prevSeriesY = []),
              (this.categoryAxisCorrection = 0),
              (this.yaxisIndex = 0);
          }
          return (
            u($, [
              {
                key: "draw",
                value: function (s, o, c, h) {
                  var d = this.w,
                    f = new K(this.ctx),
                    g = d.globals.comboCharts ? o : d.config.chart.type,
                    y = f.group({
                      class: "apexcharts-".concat(
                        g,
                        "-series apexcharts-plot-series"
                      ),
                    }),
                    x = new fe(this.ctx, d);
                  (this.yRatio = this.xyRatios.yRatio),
                    (this.zRatio = this.xyRatios.zRatio),
                    (this.xRatio = this.xyRatios.xRatio),
                    (this.baseLineY = this.xyRatios.baseLineY),
                    (s = x.getLogSeries(s)),
                    (this.yRatio = x.getLogYRatios(this.yRatio));
                  for (var k = [], _ = 0; _ < s.length; _++) {
                    s = this.lineHelpers.sameValueSeriesFix(_, s);
                    var A = d.globals.comboCharts ? c[_] : _;
                    this._initSerieVariables(s, _, A);
                    var O = [],
                      N = [],
                      H = d.globals.padHorizontal + this.categoryAxisCorrection;
                    this.ctx.series.addCollapsedClassToSeries(this.elSeries, A),
                      d.globals.isXNumeric &&
                        d.globals.seriesX.length > 0 &&
                        (H =
                          (d.globals.seriesX[A][0] - d.globals.minX) /
                          this.xRatio),
                      N.push(H);
                    var G,
                      te = H,
                      se = void 0,
                      b = te,
                      C = this.zeroY,
                      F = this.zeroY;
                    (C = this.lineHelpers.determineFirstPrevY({
                      i: _,
                      series: s,
                      prevY: C,
                      lineYPosition: 0,
                    }).prevY),
                      O.push(C),
                      (G = C),
                      g === "rangeArea" &&
                        (se = F =
                          this.lineHelpers.determineFirstPrevY({
                            i: _,
                            series: h,
                            prevY: F,
                            lineYPosition: 0,
                          }).prevY);
                    var ee = {
                        type: g,
                        series: s,
                        realIndex: A,
                        i: _,
                        x: H,
                        y: 1,
                        pX: te,
                        pY: G,
                        pathsFrom: this._calculatePathsFrom({
                          type: g,
                          series: s,
                          i: _,
                          realIndex: A,
                          prevX: b,
                          prevY: C,
                          prevY2: F,
                        }),
                        linePaths: [],
                        areaPaths: [],
                        seriesIndex: c,
                        lineYPosition: 0,
                        xArrj: N,
                        yArrj: O,
                        seriesRangeEnd: h,
                      },
                      ue = this._iterateOverDataPoints(
                        n(
                          n({}, ee),
                          {},
                          {
                            iterations:
                              g === "rangeArea" ? s[_].length - 1 : void 0,
                            isRangeStart: !0,
                          }
                        )
                      );
                    if (g === "rangeArea") {
                      var he = this._calculatePathsFrom({
                          series: h,
                          i: _,
                          realIndex: A,
                          prevX: b,
                          prevY: F,
                        }),
                        we = this._iterateOverDataPoints(
                          n(
                            n({}, ee),
                            {},
                            {
                              series: h,
                              pY: se,
                              pathsFrom: he,
                              iterations: h[_].length - 1,
                              isRangeStart: !1,
                            }
                          )
                        );
                      (ue.linePaths[0] = we.linePath + ue.linePath),
                        (ue.pathFromLine = we.pathFromLine + ue.pathFromLine);
                    }
                    this._handlePaths({
                      type: g,
                      realIndex: A,
                      i: _,
                      paths: ue,
                    }),
                      this.elSeries.add(this.elPointsMain),
                      this.elSeries.add(this.elDataLabelsWrap),
                      k.push(this.elSeries);
                  }
                  if (d.config.chart.stacked)
                    for (var Ae = k.length; Ae > 0; Ae--) y.add(k[Ae - 1]);
                  else for (var Le = 0; Le < k.length; Le++) y.add(k[Le]);
                  return y;
                },
              },
              {
                key: "_initSerieVariables",
                value: function (s, o, c) {
                  var h = this.w,
                    d = new K(this.ctx);
                  (this.xDivision =
                    h.globals.gridWidth /
                    (h.globals.dataPoints -
                      (h.config.xaxis.tickPlacement === "on" ? 1 : 0))),
                    (this.strokeWidth = Array.isArray(h.config.stroke.width)
                      ? h.config.stroke.width[c]
                      : h.config.stroke.width),
                    this.yRatio.length > 1 && (this.yaxisIndex = c),
                    (this.isReversed =
                      h.config.yaxis[this.yaxisIndex] &&
                      h.config.yaxis[this.yaxisIndex].reversed),
                    (this.zeroY =
                      h.globals.gridHeight -
                      this.baseLineY[this.yaxisIndex] -
                      (this.isReversed ? h.globals.gridHeight : 0) +
                      (this.isReversed
                        ? 2 * this.baseLineY[this.yaxisIndex]
                        : 0)),
                    (this.areaBottomY = this.zeroY),
                    (this.zeroY > h.globals.gridHeight ||
                      h.config.plotOptions.area.fillTo === "end") &&
                      (this.areaBottomY = h.globals.gridHeight),
                    (this.categoryAxisCorrection = this.xDivision / 2),
                    (this.elSeries = d.group({
                      class: "apexcharts-series",
                      seriesName: B.escapeString(h.globals.seriesNames[c]),
                    })),
                    (this.elPointsMain = d.group({
                      class: "apexcharts-series-markers-wrap",
                      "data:realIndex": c,
                    })),
                    (this.elDataLabelsWrap = d.group({
                      class: "apexcharts-datalabels",
                      "data:realIndex": c,
                    }));
                  var f = s[o].length === h.globals.dataPoints;
                  this.elSeries.attr({
                    "data:longestSeries": f,
                    rel: o + 1,
                    "data:realIndex": c,
                  }),
                    (this.appendPathFrom = !0);
                },
              },
              {
                key: "_calculatePathsFrom",
                value: function (s) {
                  var o,
                    c,
                    h,
                    d,
                    f = s.type,
                    g = s.series,
                    y = s.i,
                    x = s.realIndex,
                    k = s.prevX,
                    _ = s.prevY,
                    A = s.prevY2,
                    O = this.w,
                    N = new K(this.ctx);
                  if (g[y][0] === null) {
                    for (var H = 0; H < g[y].length; H++)
                      if (g[y][H] !== null) {
                        (k = this.xDivision * H),
                          (_ =
                            this.zeroY -
                            g[y][H] / this.yRatio[this.yaxisIndex]),
                          (o = N.move(k, _)),
                          (c = N.move(k, this.areaBottomY));
                        break;
                      }
                  } else
                    (o = N.move(k, _)),
                      f === "rangeArea" && (o = N.move(k, A) + N.line(k, _)),
                      (c = N.move(k, this.areaBottomY) + N.line(k, _));
                  if (
                    ((h = N.move(-1, this.zeroY) + N.line(-1, this.zeroY)),
                    (d = N.move(-1, this.zeroY) + N.line(-1, this.zeroY)),
                    O.globals.previousPaths.length > 0)
                  ) {
                    var G = this.lineHelpers.checkPreviousPaths({
                      pathFromLine: h,
                      pathFromArea: d,
                      realIndex: x,
                    });
                    (h = G.pathFromLine), (d = G.pathFromArea);
                  }
                  return {
                    prevX: k,
                    prevY: _,
                    linePath: o,
                    areaPath: c,
                    pathFromLine: h,
                    pathFromArea: d,
                  };
                },
              },
              {
                key: "_handlePaths",
                value: function (s) {
                  var o = s.type,
                    c = s.realIndex,
                    h = s.i,
                    d = s.paths,
                    f = this.w,
                    g = new K(this.ctx),
                    y = new Z(this.ctx);
                  this.prevSeriesY.push(d.yArrj),
                    (f.globals.seriesXvalues[c] = d.xArrj),
                    (f.globals.seriesYvalues[c] = d.yArrj);
                  var x = f.config.forecastDataPoints;
                  if (x.count > 0 && o !== "rangeArea") {
                    var k =
                        f.globals.seriesXvalues[c][
                          f.globals.seriesXvalues[c].length - x.count - 1
                        ],
                      _ = g.drawRect(
                        k,
                        0,
                        f.globals.gridWidth,
                        f.globals.gridHeight,
                        0
                      );
                    f.globals.dom.elForecastMask.appendChild(_.node);
                    var A = g.drawRect(0, 0, k, f.globals.gridHeight, 0);
                    f.globals.dom.elNonForecastMask.appendChild(A.node);
                  }
                  this.pointsChart ||
                    f.globals.delayedElements.push({
                      el: this.elPointsMain.node,
                      index: c,
                    });
                  var O = {
                    i: h,
                    realIndex: c,
                    animationDelay: h,
                    initialSpeed: f.config.chart.animations.speed,
                    dataChangeSpeed:
                      f.config.chart.animations.dynamicAnimation.speed,
                    className: "apexcharts-".concat(o),
                  };
                  if (o === "area")
                    for (
                      var N = y.fillPath({ seriesNumber: c }), H = 0;
                      H < d.areaPaths.length;
                      H++
                    ) {
                      var G = g.renderPaths(
                        n(
                          n({}, O),
                          {},
                          {
                            pathFrom: d.pathFromArea,
                            pathTo: d.areaPaths[H],
                            stroke: "none",
                            strokeWidth: 0,
                            strokeLineCap: null,
                            fill: N,
                          }
                        )
                      );
                      this.elSeries.add(G);
                    }
                  if (f.config.stroke.show && !this.pointsChart) {
                    var te = null;
                    if (o === "line")
                      te = y.fillPath({ seriesNumber: c, i: h });
                    else if (f.config.stroke.fill.type === "solid")
                      te = f.globals.stroke.colors[c];
                    else {
                      var se = f.config.fill;
                      (f.config.fill = f.config.stroke.fill),
                        (te = y.fillPath({ seriesNumber: c, i: h })),
                        (f.config.fill = se);
                    }
                    for (var b = 0; b < d.linePaths.length; b++) {
                      var C = te;
                      o === "rangeArea" &&
                        (C = y.fillPath({ seriesNumber: c }));
                      var F = n(
                          n({}, O),
                          {},
                          {
                            pathFrom: d.pathFromLine,
                            pathTo: d.linePaths[b],
                            stroke: te,
                            strokeWidth: this.strokeWidth,
                            strokeLineCap: f.config.stroke.lineCap,
                            fill: o === "rangeArea" ? C : "none",
                          }
                        ),
                        ee = g.renderPaths(F);
                      if (
                        (this.elSeries.add(ee),
                        ee.attr("fill-rule", "evenodd"),
                        x.count > 0 && o !== "rangeArea")
                      ) {
                        var ue = g.renderPaths(F);
                        ue.node.setAttribute("stroke-dasharray", x.dashArray),
                          x.strokeWidth &&
                            ue.node.setAttribute("stroke-width", x.strokeWidth),
                          this.elSeries.add(ue),
                          ue.attr(
                            "clip-path",
                            "url(#forecastMask".concat(f.globals.cuid, ")")
                          ),
                          ee.attr(
                            "clip-path",
                            "url(#nonForecastMask".concat(f.globals.cuid, ")")
                          );
                      }
                    }
                  }
                },
              },
              {
                key: "_iterateOverDataPoints",
                value: function (s) {
                  var o = s.type,
                    c = s.series,
                    h = s.iterations,
                    d = s.realIndex,
                    f = s.i,
                    g = s.x,
                    y = s.y,
                    x = s.pX,
                    k = s.pY,
                    _ = s.pathsFrom,
                    A = s.linePaths,
                    O = s.areaPaths,
                    N = s.seriesIndex,
                    H = s.lineYPosition,
                    G = s.xArrj,
                    te = s.yArrj,
                    se = s.isRangeStart,
                    b = s.seriesRangeEnd,
                    C = this.w,
                    F = new K(this.ctx),
                    ee = this.yRatio,
                    ue = _.prevY,
                    he = _.linePath,
                    we = _.areaPath,
                    Ae = _.pathFromLine,
                    Le = _.pathFromArea,
                    ze = B.isNumber(C.globals.minYArr[d])
                      ? C.globals.minYArr[d]
                      : C.globals.minY;
                  h ||
                    (h =
                      C.globals.dataPoints > 1
                        ? C.globals.dataPoints - 1
                        : C.globals.dataPoints);
                  for (var De = y, Ge = 0; Ge < h; Ge++) {
                    var it = c[f][Ge + 1] === void 0 || c[f][Ge + 1] === null;
                    if (C.globals.isXNumeric) {
                      var St = C.globals.seriesX[d][Ge + 1];
                      C.globals.seriesX[d][Ge + 1] === void 0 &&
                        (St = C.globals.seriesX[d][h - 1]),
                        (g = (St - C.globals.minX) / this.xRatio);
                    } else g += this.xDivision;
                    C.config.chart.stacked
                      ? f > 0 &&
                        C.globals.collapsedSeries.length <
                          C.config.series.length - 1
                        ? (H =
                            this.prevSeriesY[
                              (function (Jr) {
                                for (
                                  var Wr = Jr, an = 0;
                                  an < C.globals.series.length;
                                  an++
                                )
                                  if (
                                    C.globals.collapsedSeriesIndices.indexOf(
                                      Jr
                                    ) > -1
                                  ) {
                                    Wr--;
                                    break;
                                  }
                                return Wr >= 0 ? Wr : 0;
                              })(f - 1)
                            ][Ge + 1])
                        : (H = this.zeroY)
                      : (H = this.zeroY),
                      it
                        ? (y =
                            H -
                            ze / ee[this.yaxisIndex] +
                            2 *
                              (this.isReversed ? ze / ee[this.yaxisIndex] : 0))
                        : ((y =
                            H -
                            c[f][Ge + 1] / ee[this.yaxisIndex] +
                            2 *
                              (this.isReversed
                                ? c[f][Ge + 1] / ee[this.yaxisIndex]
                                : 0)),
                          o === "rangeArea" &&
                            (De =
                              H -
                              b[f][Ge + 1] / ee[this.yaxisIndex] +
                              2 *
                                (this.isReversed
                                  ? b[f][Ge + 1] / ee[this.yaxisIndex]
                                  : 0))),
                      G.push(g),
                      te.push(y);
                    var Lt = this.lineHelpers.calculatePoints({
                        series: c,
                        x: g,
                        y,
                        realIndex: d,
                        i: f,
                        j: Ge,
                        prevY: ue,
                      }),
                      Ht = this._createPaths({
                        type: o,
                        series: c,
                        i: f,
                        realIndex: d,
                        j: Ge,
                        x: g,
                        y,
                        y2: De,
                        pX: x,
                        pY: k,
                        linePath: he,
                        areaPath: we,
                        linePaths: A,
                        areaPaths: O,
                        seriesIndex: N,
                        isRangeStart: se,
                      });
                    (O = Ht.areaPaths),
                      (A = Ht.linePaths),
                      (x = Ht.pX),
                      (k = Ht.pY),
                      (we = Ht.areaPath),
                      (he = Ht.linePath),
                      this.appendPathFrom &&
                        ((Ae += F.line(g, this.zeroY)),
                        (Le += F.line(g, this.zeroY))),
                      this.handleNullDataPoints(c, Lt, f, Ge, d),
                      this._handleMarkersAndLabels({
                        type: o,
                        pointsPos: Lt,
                        i: f,
                        j: Ge,
                        realIndex: d,
                        isRangeStart: se,
                      });
                  }
                  return {
                    yArrj: te,
                    xArrj: G,
                    pathFromArea: Le,
                    areaPaths: O,
                    pathFromLine: Ae,
                    linePaths: A,
                    linePath: he,
                    areaPath: we,
                  };
                },
              },
              {
                key: "_handleMarkersAndLabels",
                value: function (s) {
                  var o = s.type,
                    c = s.pointsPos,
                    h = s.isRangeStart,
                    d = s.i,
                    f = s.j,
                    g = s.realIndex,
                    y = this.w,
                    x = new X(this.ctx);
                  if (this.pointsChart)
                    this.scatter.draw(this.elSeries, f, {
                      realIndex: g,
                      pointsPos: c,
                      zRatio: this.zRatio,
                      elParent: this.elPointsMain,
                    });
                  else {
                    y.globals.series[d].length > 1 &&
                      this.elPointsMain.node.classList.add(
                        "apexcharts-element-hidden"
                      );
                    var k = this.markers.plotChartMarkers(c, g, f + 1);
                    k !== null && this.elPointsMain.add(k);
                  }
                  var _ = x.drawDataLabel({
                    type: o,
                    isRangeStart: h,
                    pos: c,
                    i: g,
                    j: f + 1,
                  });
                  _ !== null && this.elDataLabelsWrap.add(_);
                },
              },
              {
                key: "_createPaths",
                value: function (s) {
                  var o = s.type,
                    c = s.series,
                    h = s.i,
                    d = s.realIndex,
                    f = s.j,
                    g = s.x,
                    y = s.y,
                    x = s.y2,
                    k = s.pX,
                    _ = s.pY,
                    A = s.linePath,
                    O = s.areaPath,
                    N = s.linePaths,
                    H = s.areaPaths,
                    G = s.seriesIndex,
                    te = s.isRangeStart,
                    se = this.w,
                    b = new K(this.ctx),
                    C = se.config.stroke.curve,
                    F = this.areaBottomY;
                  if (
                    (Array.isArray(se.config.stroke.curve) &&
                      (C = Array.isArray(G)
                        ? se.config.stroke.curve[G[h]]
                        : se.config.stroke.curve[h]),
                    C === "smooth")
                  ) {
                    var ee = 0.35 * (g - k);
                    se.globals.hasNullValues
                      ? (c[h][f] !== null &&
                          (c[h][f + 1] !== null
                            ? ((A =
                                b.move(k, _) +
                                b.curve(k + ee, _, g - ee, y, g + 1, y)),
                              (O =
                                b.move(k + 1, _) +
                                b.curve(k + ee, _, g - ee, y, g + 1, y) +
                                b.line(g, F) +
                                b.line(k, F) +
                                "z"))
                            : ((A = b.move(k, _)), (O = b.move(k, _) + "z"))),
                        N.push(A),
                        H.push(O))
                      : ((A += b.curve(k + ee, _, g - ee, y, g, y)),
                        (O += b.curve(k + ee, _, g - ee, y, g, y))),
                      (k = g),
                      (_ = y),
                      f === c[h].length - 2 &&
                        ((O =
                          O + b.curve(k, _, g, y, g, F) + b.move(g, y) + "z"),
                        o === "rangeArea" && te
                          ? (A =
                              A +
                              b.curve(k, _, g, y, g, x) +
                              b.move(g, x) +
                              "z")
                          : se.globals.hasNullValues || (N.push(A), H.push(O)));
                  } else {
                    if (c[h][f + 1] === null) {
                      A += b.move(g, y);
                      var ue = se.globals.isXNumeric
                        ? (se.globals.seriesX[d][f] - se.globals.minX) /
                          this.xRatio
                        : g - this.xDivision;
                      O = O + b.line(ue, F) + b.move(g, y) + "z";
                    }
                    c[h][f] === null &&
                      ((A += b.move(g, y)), (O += b.move(g, F))),
                      C === "stepline"
                        ? ((A =
                            A + b.line(g, null, "H") + b.line(null, y, "V")),
                          (O = O + b.line(g, null, "H") + b.line(null, y, "V")))
                        : C === "straight" &&
                          ((A += b.line(g, y)), (O += b.line(g, y))),
                      f === c[h].length - 2 &&
                        ((O = O + b.line(g, F) + b.move(g, y) + "z"),
                        o === "rangeArea" && te
                          ? (A = A + b.line(g, x) + b.move(g, x) + "z")
                          : (N.push(A), H.push(O)));
                  }
                  return {
                    linePaths: N,
                    areaPaths: H,
                    pX: k,
                    pY: _,
                    linePath: A,
                    areaPath: O,
                  };
                },
              },
              {
                key: "handleNullDataPoints",
                value: function (s, o, c, h, d) {
                  var f = this.w;
                  if (
                    (s[c][h] === null && f.config.markers.showNullDataPoints) ||
                    s[c].length === 1
                  ) {
                    var g = this.markers.plotChartMarkers(
                      o,
                      d,
                      h + 1,
                      this.strokeWidth - f.config.markers.strokeWidth / 2,
                      !0
                    );
                    g !== null && this.elPointsMain.add(g);
                  }
                },
              },
            ]),
            $
          );
        })();
      (window.TreemapSquared = {}),
        (window.TreemapSquared.generate = (function () {
          function $(g, y, x, k) {
            (this.xoffset = g),
              (this.yoffset = y),
              (this.height = k),
              (this.width = x),
              (this.shortestEdge = function () {
                return Math.min(this.height, this.width);
              }),
              (this.getCoordinates = function (_) {
                var A,
                  O = [],
                  N = this.xoffset,
                  H = this.yoffset,
                  G = d(_) / this.height,
                  te = d(_) / this.width;
                if (this.width >= this.height)
                  for (A = 0; A < _.length; A++)
                    O.push([N, H, N + G, H + _[A] / G]), (H += _[A] / G);
                else
                  for (A = 0; A < _.length; A++)
                    O.push([N, H, N + _[A] / te, H + te]), (N += _[A] / te);
                return O;
              }),
              (this.cutArea = function (_) {
                var A;
                if (this.width >= this.height) {
                  var O = _ / this.height,
                    N = this.width - O;
                  A = new $(this.xoffset + O, this.yoffset, N, this.height);
                } else {
                  var H = _ / this.width,
                    G = this.height - H;
                  A = new $(this.xoffset, this.yoffset + H, this.width, G);
                }
                return A;
              });
          }
          function s(g, y, x, k, _) {
            (k = k === void 0 ? 0 : k), (_ = _ === void 0 ? 0 : _);
            var A = o(
              (function (O, N) {
                var H,
                  G = [],
                  te = N / d(O);
                for (H = 0; H < O.length; H++) G[H] = O[H] * te;
                return G;
              })(g, y * x),
              [],
              new $(k, _, y, x),
              []
            );
            return (function (O) {
              var N,
                H,
                G = [];
              for (N = 0; N < O.length; N++)
                for (H = 0; H < O[N].length; H++) G.push(O[N][H]);
              return G;
            })(A);
          }
          function o(g, y, x, k) {
            var _, A, O;
            if (g.length !== 0)
              return (
                (_ = x.shortestEdge()),
                (function (N, H, G) {
                  var te;
                  if (N.length === 0) return !0;
                  (te = N.slice()).push(H);
                  var se = c(N, G),
                    b = c(te, G);
                  return se >= b;
                })(y, (A = g[0]), _)
                  ? (y.push(A), o(g.slice(1), y, x, k))
                  : ((O = x.cutArea(d(y), k)),
                    k.push(x.getCoordinates(y)),
                    o(g, [], O, k)),
                k
              );
            k.push(x.getCoordinates(y));
          }
          function c(g, y) {
            var x = Math.min.apply(Math, g),
              k = Math.max.apply(Math, g),
              _ = d(g);
            return Math.max(
              (Math.pow(y, 2) * k) / Math.pow(_, 2),
              Math.pow(_, 2) / (Math.pow(y, 2) * x)
            );
          }
          function h(g) {
            return g && g.constructor === Array;
          }
          function d(g) {
            var y,
              x = 0;
            for (y = 0; y < g.length; y++) x += g[y];
            return x;
          }
          function f(g) {
            var y,
              x = 0;
            if (h(g[0])) for (y = 0; y < g.length; y++) x += f(g[y]);
            else x = d(g);
            return x;
          }
          return function g(y, x, k, _, A) {
            (_ = _ === void 0 ? 0 : _), (A = A === void 0 ? 0 : A);
            var O,
              N,
              H = [],
              G = [];
            if (h(y[0])) {
              for (N = 0; N < y.length; N++) H[N] = f(y[N]);
              for (O = s(H, x, k, _, A), N = 0; N < y.length; N++)
                G.push(
                  g(
                    y[N],
                    O[N][2] - O[N][0],
                    O[N][3] - O[N][1],
                    O[N][0],
                    O[N][1]
                  )
                );
            } else G = s(y, x, k, _, A);
            return G;
          };
        })());
      var Xt,
        er,
        _a = (function () {
          function $(s, o) {
            a(this, $),
              (this.ctx = s),
              (this.w = s.w),
              (this.strokeWidth = this.w.config.stroke.width),
              (this.helpers = new cr(s)),
              (this.dynamicAnim =
                this.w.config.chart.animations.dynamicAnimation),
              (this.labels = []);
          }
          return (
            u($, [
              {
                key: "draw",
                value: function (s) {
                  var o = this,
                    c = this.w,
                    h = new K(this.ctx),
                    d = new Z(this.ctx),
                    f = h.group({ class: "apexcharts-treemap" });
                  if (c.globals.noData) return f;
                  var g = [];
                  return (
                    s.forEach(function (y) {
                      var x = y.map(function (k) {
                        return Math.abs(k);
                      });
                      g.push(x);
                    }),
                    (this.negRange = this.helpers.checkColorRange()),
                    c.config.series.forEach(function (y, x) {
                      y.data.forEach(function (k) {
                        Array.isArray(o.labels[x]) || (o.labels[x] = []),
                          o.labels[x].push(k.x);
                      });
                    }),
                    window.TreemapSquared.generate(
                      g,
                      c.globals.gridWidth,
                      c.globals.gridHeight
                    ).forEach(function (y, x) {
                      var k = h.group({
                        class: "apexcharts-series apexcharts-treemap-series",
                        seriesName: B.escapeString(c.globals.seriesNames[x]),
                        rel: x + 1,
                        "data:realIndex": x,
                      });
                      if (c.config.chart.dropShadow.enabled) {
                        var _ = c.config.chart.dropShadow;
                        new re(o.ctx).dropShadow(f, _, x);
                      }
                      var A = h.group({ class: "apexcharts-data-labels" });
                      y.forEach(function (O, N) {
                        var H = O[0],
                          G = O[1],
                          te = O[2],
                          se = O[3],
                          b = h.drawRect(
                            H,
                            G,
                            te - H,
                            se - G,
                            0,
                            "#fff",
                            1,
                            o.strokeWidth,
                            c.config.plotOptions.treemap.useFillColorAsStroke
                              ? F
                              : c.globals.stroke.colors[x]
                          );
                        b.attr({
                          cx: H,
                          cy: G,
                          index: x,
                          i: x,
                          j: N,
                          width: te - H,
                          height: se - G,
                        });
                        var C = o.helpers.getShadeColor(
                            c.config.chart.type,
                            x,
                            N,
                            o.negRange
                          ),
                          F = C.color;
                        c.config.series[x].data[N] !== void 0 &&
                          c.config.series[x].data[N].fillColor &&
                          (F = c.config.series[x].data[N].fillColor);
                        var ee = d.fillPath({
                          color: F,
                          seriesNumber: x,
                          dataPointIndex: N,
                        });
                        b.node.classList.add("apexcharts-treemap-rect"),
                          b.attr({ fill: ee }),
                          o.helpers.addListeners(b);
                        var ue = {
                            x: H + (te - H) / 2,
                            y: G + (se - G) / 2,
                            width: 0,
                            height: 0,
                          },
                          he = { x: H, y: G, width: te - H, height: se - G };
                        if (
                          c.config.chart.animations.enabled &&
                          !c.globals.dataChanged
                        ) {
                          var we = 1;
                          c.globals.resized ||
                            (we = c.config.chart.animations.speed),
                            o.animateTreemap(b, ue, he, we);
                        }
                        if (c.globals.dataChanged) {
                          var Ae = 1;
                          o.dynamicAnim.enabled &&
                            c.globals.shouldAnimate &&
                            ((Ae = o.dynamicAnim.speed),
                            c.globals.previousPaths[x] &&
                              c.globals.previousPaths[x][N] &&
                              c.globals.previousPaths[x][N].rect &&
                              (ue = c.globals.previousPaths[x][N].rect),
                            o.animateTreemap(b, ue, he, Ae));
                        }
                        var Le = o.getFontSize(O),
                          ze = c.config.dataLabels.formatter(o.labels[x][N], {
                            value: c.globals.series[x][N],
                            seriesIndex: x,
                            dataPointIndex: N,
                            w: c,
                          });
                        c.config.plotOptions.treemap.dataLabels.format ===
                          "truncate" &&
                          ((Le = parseInt(
                            c.config.dataLabels.style.fontSize,
                            10
                          )),
                          (ze = o.truncateLabels(ze, Le, H, G, te, se)));
                        var De = o.helpers.calculateDataLabels({
                          text: ze,
                          x: (H + te) / 2,
                          y: (G + se) / 2 + o.strokeWidth / 2 + Le / 3,
                          i: x,
                          j: N,
                          colorProps: C,
                          fontSize: Le,
                          series: s,
                        });
                        c.config.dataLabels.enabled &&
                          De &&
                          o.rotateToFitLabel(De, Le, ze, H, G, te, se),
                          k.add(b),
                          De !== null && k.add(De);
                      }),
                        k.add(A),
                        f.add(k);
                    }),
                    f
                  );
                },
              },
              {
                key: "getFontSize",
                value: function (s) {
                  var o = this.w,
                    c,
                    h,
                    d,
                    f,
                    g =
                      (function y(x) {
                        var k,
                          _ = 0;
                        if (Array.isArray(x[0]))
                          for (k = 0; k < x.length; k++) _ += y(x[k]);
                        else for (k = 0; k < x.length; k++) _ += x[k].length;
                        return _;
                      })(this.labels) /
                      (function y(x) {
                        var k,
                          _ = 0;
                        if (Array.isArray(x[0]))
                          for (k = 0; k < x.length; k++) _ += y(x[k]);
                        else for (k = 0; k < x.length; k++) _ += 1;
                        return _;
                      })(this.labels);
                  return (
                    (c = s[2] - s[0]),
                    (h = s[3] - s[1]),
                    (d = c * h),
                    (f = Math.pow(d, 0.5)),
                    Math.min(
                      f / g,
                      parseInt(o.config.dataLabels.style.fontSize, 10)
                    )
                  );
                },
              },
              {
                key: "rotateToFitLabel",
                value: function (s, o, c, h, d, f, g) {
                  var y = new K(this.ctx),
                    x = y.getTextRects(c, o);
                  if (
                    x.width + this.w.config.stroke.width + 5 > f - h &&
                    x.width <= g - d
                  ) {
                    var k = y.rotateAroundCenter(s.node);
                    s.node.setAttribute(
                      "transform",
                      "rotate(-90 "
                        .concat(k.x, " ")
                        .concat(k.y, ") translate(")
                        .concat(x.height / 3, ")")
                    );
                  }
                },
              },
              {
                key: "truncateLabels",
                value: function (s, o, c, h, d, f) {
                  var g = new K(this.ctx),
                    y =
                      g.getTextRects(s, o).width +
                        this.w.config.stroke.width +
                        5 >
                        d - c && f - h > d - c
                        ? f - h
                        : d - c,
                    x = g.getTextBasedOnMaxWidth({
                      text: s,
                      maxWidth: y,
                      fontSize: o,
                    });
                  return s.length !== x.length && y / o < 5 ? "" : x;
                },
              },
              {
                key: "animateTreemap",
                value: function (s, o, c, h) {
                  var d = new ae(this.ctx);
                  d.animateRect(
                    s,
                    { x: o.x, y: o.y, width: o.width, height: o.height },
                    { x: c.x, y: c.y, width: c.width, height: c.height },
                    h,
                    function () {
                      d.animationCompleted(s);
                    }
                  );
                },
              },
            ]),
            $
          );
        })(),
        xr = 86400,
        wr = (function () {
          function $(s) {
            a(this, $),
              (this.ctx = s),
              (this.w = s.w),
              (this.timeScaleArray = []),
              (this.utc = this.w.config.xaxis.labels.datetimeUTC);
          }
          return (
            u($, [
              {
                key: "calculateTimeScaleTicks",
                value: function (s, o) {
                  var c = this,
                    h = this.w;
                  if (h.globals.allSeriesCollapsed)
                    return (
                      (h.globals.labels = []),
                      (h.globals.timescaleLabels = []),
                      []
                    );
                  var d = new P(this.ctx),
                    f = (o - s) / 864e5;
                  this.determineInterval(f),
                    (h.globals.disableZoomIn = !1),
                    (h.globals.disableZoomOut = !1),
                    f < 0.00011574074074074076
                      ? (h.globals.disableZoomIn = !0)
                      : f > 5e4 && (h.globals.disableZoomOut = !0);
                  var g = d.getTimeUnitsfromTimestamp(s, o, this.utc),
                    y = h.globals.gridWidth / f,
                    x = y / 24,
                    k = x / 60,
                    _ = k / 60,
                    A = Math.floor(24 * f),
                    O = Math.floor(1440 * f),
                    N = Math.floor(f * xr),
                    H = Math.floor(f),
                    G = Math.floor(f / 30),
                    te = Math.floor(f / 365),
                    se = {
                      minMillisecond: g.minMillisecond,
                      minSecond: g.minSecond,
                      minMinute: g.minMinute,
                      minHour: g.minHour,
                      minDate: g.minDate,
                      minMonth: g.minMonth,
                      minYear: g.minYear,
                    },
                    b = {
                      firstVal: se,
                      currentMillisecond: se.minMillisecond,
                      currentSecond: se.minSecond,
                      currentMinute: se.minMinute,
                      currentHour: se.minHour,
                      currentMonthDate: se.minDate,
                      currentDate: se.minDate,
                      currentMonth: se.minMonth,
                      currentYear: se.minYear,
                      daysWidthOnXAxis: y,
                      hoursWidthOnXAxis: x,
                      minutesWidthOnXAxis: k,
                      secondsWidthOnXAxis: _,
                      numberOfSeconds: N,
                      numberOfMinutes: O,
                      numberOfHours: A,
                      numberOfDays: H,
                      numberOfMonths: G,
                      numberOfYears: te,
                    };
                  switch (this.tickInterval) {
                    case "years":
                      this.generateYearScale(b);
                      break;
                    case "months":
                    case "half_year":
                      this.generateMonthScale(b);
                      break;
                    case "months_days":
                    case "months_fortnight":
                    case "days":
                    case "week_days":
                      this.generateDayScale(b);
                      break;
                    case "hours":
                      this.generateHourScale(b);
                      break;
                    case "minutes_fives":
                    case "minutes":
                      this.generateMinuteScale(b);
                      break;
                    case "seconds_tens":
                    case "seconds_fives":
                    case "seconds":
                      this.generateSecondScale(b);
                  }
                  var C = this.timeScaleArray.map(function (F) {
                    var ee = {
                      position: F.position,
                      unit: F.unit,
                      year: F.year,
                      day: F.day ? F.day : 1,
                      hour: F.hour ? F.hour : 0,
                      month: F.month + 1,
                    };
                    return F.unit === "month"
                      ? n(n({}, ee), {}, { day: 1, value: F.value + 1 })
                      : F.unit === "day" || F.unit === "hour"
                      ? n(n({}, ee), {}, { value: F.value })
                      : F.unit === "minute"
                      ? n(n({}, ee), {}, { value: F.value, minute: F.value })
                      : F.unit === "second"
                      ? n(
                          n({}, ee),
                          {},
                          { value: F.value, minute: F.minute, second: F.second }
                        )
                      : F;
                  });
                  return C.filter(function (F) {
                    var ee = 1,
                      ue = Math.ceil(h.globals.gridWidth / 120),
                      he = F.value;
                    h.config.xaxis.tickAmount !== void 0 &&
                      (ue = h.config.xaxis.tickAmount),
                      C.length > ue && (ee = Math.floor(C.length / ue));
                    var we = !1,
                      Ae = !1;
                    switch (c.tickInterval) {
                      case "years":
                        F.unit === "year" && (we = !0);
                        break;
                      case "half_year":
                        (ee = 7), F.unit === "year" && (we = !0);
                        break;
                      case "months":
                        (ee = 1), F.unit === "year" && (we = !0);
                        break;
                      case "months_fortnight":
                        (ee = 15),
                          (F.unit !== "year" && F.unit !== "month") ||
                            (we = !0),
                          he === 30 && (Ae = !0);
                        break;
                      case "months_days":
                        (ee = 10),
                          F.unit === "month" && (we = !0),
                          he === 30 && (Ae = !0);
                        break;
                      case "week_days":
                        (ee = 8), F.unit === "month" && (we = !0);
                        break;
                      case "days":
                        (ee = 1), F.unit === "month" && (we = !0);
                        break;
                      case "hours":
                        F.unit === "day" && (we = !0);
                        break;
                      case "minutes_fives":
                      case "seconds_fives":
                        he % 5 != 0 && (Ae = !0);
                        break;
                      case "seconds_tens":
                        he % 10 != 0 && (Ae = !0);
                    }
                    if (
                      c.tickInterval === "hours" ||
                      c.tickInterval === "minutes_fives" ||
                      c.tickInterval === "seconds_tens" ||
                      c.tickInterval === "seconds_fives"
                    ) {
                      if (!Ae) return !0;
                    } else if ((he % ee == 0 || we) && !Ae) return !0;
                  });
                },
              },
              {
                key: "recalcDimensionsBasedOnFormat",
                value: function (s, o) {
                  var c = this.w,
                    h = this.formatDates(s),
                    d = this.removeOverlappingTS(h);
                  (c.globals.timescaleLabels = d.slice()),
                    new Be(this.ctx).plotCoords();
                },
              },
              {
                key: "determineInterval",
                value: function (s) {
                  var o = 24 * s,
                    c = 60 * o;
                  switch (!0) {
                    case s / 365 > 5:
                      this.tickInterval = "years";
                      break;
                    case s > 800:
                      this.tickInterval = "half_year";
                      break;
                    case s > 180:
                      this.tickInterval = "months";
                      break;
                    case s > 90:
                      this.tickInterval = "months_fortnight";
                      break;
                    case s > 60:
                      this.tickInterval = "months_days";
                      break;
                    case s > 30:
                      this.tickInterval = "week_days";
                      break;
                    case s > 2:
                      this.tickInterval = "days";
                      break;
                    case o > 2.4:
                      this.tickInterval = "hours";
                      break;
                    case c > 15:
                      this.tickInterval = "minutes_fives";
                      break;
                    case c > 5:
                      this.tickInterval = "minutes";
                      break;
                    case c > 1:
                      this.tickInterval = "seconds_tens";
                      break;
                    case 60 * c > 20:
                      this.tickInterval = "seconds_fives";
                      break;
                    default:
                      this.tickInterval = "seconds";
                  }
                },
              },
              {
                key: "generateYearScale",
                value: function (s) {
                  var o = s.firstVal,
                    c = s.currentMonth,
                    h = s.currentYear,
                    d = s.daysWidthOnXAxis,
                    f = s.numberOfYears,
                    g = o.minYear,
                    y = 0,
                    x = new P(this.ctx),
                    k = "year";
                  if (o.minDate > 1 || o.minMonth > 0) {
                    var _ = x.determineRemainingDaysOfYear(
                      o.minYear,
                      o.minMonth,
                      o.minDate
                    );
                    (y = (x.determineDaysOfYear(o.minYear) - _ + 1) * d),
                      (g = o.minYear + 1),
                      this.timeScaleArray.push({
                        position: y,
                        value: g,
                        unit: k,
                        year: g,
                        month: B.monthMod(c + 1),
                      });
                  } else
                    o.minDate === 1 &&
                      o.minMonth === 0 &&
                      this.timeScaleArray.push({
                        position: y,
                        value: g,
                        unit: k,
                        year: h,
                        month: B.monthMod(c + 1),
                      });
                  for (var A = g, O = y, N = 0; N < f; N++)
                    A++,
                      (O = x.determineDaysOfYear(A - 1) * d + O),
                      this.timeScaleArray.push({
                        position: O,
                        value: A,
                        unit: k,
                        year: A,
                        month: 1,
                      });
                },
              },
              {
                key: "generateMonthScale",
                value: function (s) {
                  var o = s.firstVal,
                    c = s.currentMonthDate,
                    h = s.currentMonth,
                    d = s.currentYear,
                    f = s.daysWidthOnXAxis,
                    g = s.numberOfMonths,
                    y = h,
                    x = 0,
                    k = new P(this.ctx),
                    _ = "month",
                    A = 0;
                  if (o.minDate > 1) {
                    (x =
                      (k.determineDaysOfMonths(h + 1, o.minYear) - c + 1) * f),
                      (y = B.monthMod(h + 1));
                    var O = d + A,
                      N = B.monthMod(y),
                      H = y;
                    y === 0 && ((_ = "year"), (H = O), (N = 1), (O += A += 1)),
                      this.timeScaleArray.push({
                        position: x,
                        value: H,
                        unit: _,
                        year: O,
                        month: N,
                      });
                  } else
                    this.timeScaleArray.push({
                      position: x,
                      value: y,
                      unit: _,
                      year: d,
                      month: B.monthMod(h),
                    });
                  for (
                    var G = y + 1, te = x, se = 0, b = 1;
                    se < g;
                    se++, b++
                  ) {
                    (G = B.monthMod(G)) === 0
                      ? ((_ = "year"), (A += 1))
                      : (_ = "month");
                    var C = this._getYear(d, G, A);
                    te = k.determineDaysOfMonths(G, C) * f + te;
                    var F = G === 0 ? C : G;
                    this.timeScaleArray.push({
                      position: te,
                      value: F,
                      unit: _,
                      year: C,
                      month: G === 0 ? 1 : G,
                    }),
                      G++;
                  }
                },
              },
              {
                key: "generateDayScale",
                value: function (s) {
                  var o = s.firstVal,
                    c = s.currentMonth,
                    h = s.currentYear,
                    d = s.hoursWidthOnXAxis,
                    f = s.numberOfDays,
                    g = new P(this.ctx),
                    y = "day",
                    x = o.minDate + 1,
                    k = x,
                    _ = function (b, C, F) {
                      return (
                        b > g.determineDaysOfMonths(C + 1, F) &&
                          ((k = 1), (y = "month"), (O = C += 1)),
                        C
                      );
                    },
                    A = (24 - o.minHour) * d,
                    O = x,
                    N = _(k, c, h);
                  o.minHour === 0 && o.minDate === 1
                    ? ((A = 0),
                      (O = B.monthMod(o.minMonth)),
                      (y = "month"),
                      (k = o.minDate),
                      f++)
                    : o.minDate !== 1 &&
                      o.minHour === 0 &&
                      o.minMinute === 0 &&
                      ((A = 0),
                      (x = o.minDate),
                      (O = x),
                      (N = _((k = x), c, h))),
                    this.timeScaleArray.push({
                      position: A,
                      value: O,
                      unit: y,
                      year: this._getYear(h, N, 0),
                      month: B.monthMod(N),
                      day: k,
                    });
                  for (var H = A, G = 0; G < f; G++) {
                    (y = "day"), (N = _((k += 1), N, this._getYear(h, N, 0)));
                    var te = this._getYear(h, N, 0);
                    H = 24 * d + H;
                    var se = k === 1 ? B.monthMod(N) : k;
                    this.timeScaleArray.push({
                      position: H,
                      value: se,
                      unit: y,
                      year: te,
                      month: B.monthMod(N),
                      day: se,
                    });
                  }
                },
              },
              {
                key: "generateHourScale",
                value: function (s) {
                  var o = s.firstVal,
                    c = s.currentDate,
                    h = s.currentMonth,
                    d = s.currentYear,
                    f = s.minutesWidthOnXAxis,
                    g = s.numberOfHours,
                    y = new P(this.ctx),
                    x = "hour",
                    k = function (ee, ue) {
                      return (
                        ee > y.determineDaysOfMonths(ue + 1, d) &&
                          ((G = 1), (ue += 1)),
                        { month: ue, date: G }
                      );
                    },
                    _ = function (ee, ue) {
                      return ee > y.determineDaysOfMonths(ue + 1, d)
                        ? (ue += 1)
                        : ue;
                    },
                    A = 60 - (o.minMinute + o.minSecond / 60),
                    O = A * f,
                    N = o.minHour + 1,
                    H = N + 1;
                  A === 60 && ((O = 0), (H = (N = o.minHour) + 1));
                  var G = c,
                    te = _(G, h);
                  this.timeScaleArray.push({
                    position: O,
                    value: N,
                    unit: x,
                    day: G,
                    hour: H,
                    year: d,
                    month: B.monthMod(te),
                  });
                  for (var se = O, b = 0; b < g; b++) {
                    (x = "hour"),
                      H >= 24 &&
                        ((H = 0),
                        (x = "day"),
                        (te = k((G += 1), te).month),
                        (te = _(G, te)));
                    var C = this._getYear(d, te, 0);
                    se = 60 * f + se;
                    var F = H === 0 ? G : H;
                    this.timeScaleArray.push({
                      position: se,
                      value: F,
                      unit: x,
                      hour: H,
                      day: G,
                      year: C,
                      month: B.monthMod(te),
                    }),
                      H++;
                  }
                },
              },
              {
                key: "generateMinuteScale",
                value: function (s) {
                  for (
                    var o = s.currentMillisecond,
                      c = s.currentSecond,
                      h = s.currentMinute,
                      d = s.currentHour,
                      f = s.currentDate,
                      g = s.currentMonth,
                      y = s.currentYear,
                      x = s.minutesWidthOnXAxis,
                      k = s.secondsWidthOnXAxis,
                      _ = s.numberOfMinutes,
                      A = h + 1,
                      O = f,
                      N = g,
                      H = y,
                      G = d,
                      te = (60 - c - o / 1e3) * k,
                      se = 0;
                    se < _;
                    se++
                  )
                    A >= 60 && ((A = 0), (G += 1) === 24 && (G = 0)),
                      this.timeScaleArray.push({
                        position: te,
                        value: A,
                        unit: "minute",
                        hour: G,
                        minute: A,
                        day: O,
                        year: this._getYear(H, N, 0),
                        month: B.monthMod(N),
                      }),
                      (te += x),
                      A++;
                },
              },
              {
                key: "generateSecondScale",
                value: function (s) {
                  for (
                    var o = s.currentMillisecond,
                      c = s.currentSecond,
                      h = s.currentMinute,
                      d = s.currentHour,
                      f = s.currentDate,
                      g = s.currentMonth,
                      y = s.currentYear,
                      x = s.secondsWidthOnXAxis,
                      k = s.numberOfSeconds,
                      _ = c + 1,
                      A = h,
                      O = f,
                      N = g,
                      H = y,
                      G = d,
                      te = ((1e3 - o) / 1e3) * x,
                      se = 0;
                    se < k;
                    se++
                  )
                    _ >= 60 &&
                      ((_ = 0), ++A >= 60 && ((A = 0), ++G === 24 && (G = 0))),
                      this.timeScaleArray.push({
                        position: te,
                        value: _,
                        unit: "second",
                        hour: G,
                        minute: A,
                        second: _,
                        day: O,
                        year: this._getYear(H, N, 0),
                        month: B.monthMod(N),
                      }),
                      (te += x),
                      _++;
                },
              },
              {
                key: "createRawDateString",
                value: function (s, o) {
                  var c = s.year;
                  return (
                    s.month === 0 && (s.month = 1),
                    (c += "-" + ("0" + s.month.toString()).slice(-2)),
                    s.unit === "day"
                      ? (c +=
                          s.unit === "day" ? "-" + ("0" + o).slice(-2) : "-01")
                      : (c += "-" + ("0" + (s.day ? s.day : "1")).slice(-2)),
                    s.unit === "hour"
                      ? (c +=
                          s.unit === "hour" ? "T" + ("0" + o).slice(-2) : "T00")
                      : (c += "T" + ("0" + (s.hour ? s.hour : "0")).slice(-2)),
                    s.unit === "minute"
                      ? (c += ":" + ("0" + o).slice(-2))
                      : (c +=
                          ":" + (s.minute ? ("0" + s.minute).slice(-2) : "00")),
                    s.unit === "second"
                      ? (c += ":" + ("0" + o).slice(-2))
                      : (c += ":00"),
                    this.utc && (c += ".000Z"),
                    c
                  );
                },
              },
              {
                key: "formatDates",
                value: function (s) {
                  var o = this,
                    c = this.w;
                  return s.map(function (h) {
                    var d = h.value.toString(),
                      f = new P(o.ctx),
                      g = o.createRawDateString(h, d),
                      y = f.getDate(f.parseDate(g));
                    if (
                      (o.utc || (y = f.getDate(f.parseDateWithTimezone(g))),
                      c.config.xaxis.labels.format === void 0)
                    ) {
                      var x = "dd MMM",
                        k = c.config.xaxis.labels.datetimeFormatter;
                      h.unit === "year" && (x = k.year),
                        h.unit === "month" && (x = k.month),
                        h.unit === "day" && (x = k.day),
                        h.unit === "hour" && (x = k.hour),
                        h.unit === "minute" && (x = k.minute),
                        h.unit === "second" && (x = k.second),
                        (d = f.formatDate(y, x));
                    } else d = f.formatDate(y, c.config.xaxis.labels.format);
                    return {
                      dateString: g,
                      position: h.position,
                      value: d,
                      unit: h.unit,
                      year: h.year,
                      month: h.month,
                    };
                  });
                },
              },
              {
                key: "removeOverlappingTS",
                value: function (s) {
                  var o,
                    c = this,
                    h = new K(this.ctx),
                    d = !1;
                  s.length > 0 &&
                    s[0].value &&
                    s.every(function (y) {
                      return y.value.length === s[0].value.length;
                    }) &&
                    ((d = !0), (o = h.getTextRects(s[0].value).width));
                  var f = 0,
                    g = s.map(function (y, x) {
                      if (
                        x > 0 &&
                        c.w.config.xaxis.labels.hideOverlappingLabels
                      ) {
                        var k = d ? o : h.getTextRects(s[f].value).width,
                          _ = s[f].position;
                        return y.position > _ + k + 10 ? ((f = x), y) : null;
                      }
                      return y;
                    });
                  return (g = g.filter(function (y) {
                    return y !== null;
                  }));
                },
              },
              {
                key: "_getYear",
                value: function (s, o, c) {
                  return s + Math.floor(o / 12) + c;
                },
              },
            ]),
            $
          );
        })(),
        Aa = (function () {
          function $(s, o) {
            a(this, $), (this.ctx = o), (this.w = o.w), (this.el = s);
          }
          return (
            u($, [
              {
                key: "setupElements",
                value: function () {
                  var s = this.w.globals,
                    o = this.w.config,
                    c = o.chart.type;
                  (s.axisCharts =
                    [
                      "line",
                      "area",
                      "bar",
                      "rangeBar",
                      "rangeArea",
                      "candlestick",
                      "boxPlot",
                      "scatter",
                      "bubble",
                      "radar",
                      "heatmap",
                      "treemap",
                    ].indexOf(c) > -1),
                    (s.xyCharts =
                      [
                        "line",
                        "area",
                        "bar",
                        "rangeBar",
                        "rangeArea",
                        "candlestick",
                        "boxPlot",
                        "scatter",
                        "bubble",
                      ].indexOf(c) > -1),
                    (s.isBarHorizontal =
                      (o.chart.type === "bar" ||
                        o.chart.type === "rangeBar" ||
                        o.chart.type === "boxPlot") &&
                      o.plotOptions.bar.horizontal),
                    (s.chartClass = ".apexcharts" + s.chartID),
                    (s.dom.baseEl = this.el),
                    (s.dom.elWrap = document.createElement("div")),
                    K.setAttrs(s.dom.elWrap, {
                      id: s.chartClass.substring(1),
                      class: "apexcharts-canvas " + s.chartClass.substring(1),
                    }),
                    this.el.appendChild(s.dom.elWrap),
                    (s.dom.Paper = new window.SVG.Doc(s.dom.elWrap)),
                    s.dom.Paper.attr({
                      class: "apexcharts-svg",
                      "xmlns:data": "ApexChartsNS",
                      transform: "translate("
                        .concat(o.chart.offsetX, ", ")
                        .concat(o.chart.offsetY, ")"),
                    }),
                    (s.dom.Paper.node.style.background = o.chart.background),
                    this.setSVGDimensions(),
                    (s.dom.elLegendForeign = document.createElementNS(
                      s.SVGNS,
                      "foreignObject"
                    )),
                    K.setAttrs(s.dom.elLegendForeign, {
                      x: 0,
                      y: 0,
                      width: s.svgWidth,
                      height: s.svgHeight,
                    }),
                    (s.dom.elLegendWrap = document.createElement("div")),
                    s.dom.elLegendWrap.classList.add("apexcharts-legend"),
                    s.dom.elLegendWrap.setAttribute(
                      "xmlns",
                      "http://www.w3.org/1999/xhtml"
                    ),
                    s.dom.elLegendForeign.appendChild(s.dom.elLegendWrap),
                    s.dom.Paper.node.appendChild(s.dom.elLegendForeign),
                    (s.dom.elGraphical = s.dom.Paper.group().attr({
                      class: "apexcharts-inner apexcharts-graphical",
                    })),
                    (s.dom.elDefs = s.dom.Paper.defs()),
                    s.dom.Paper.add(s.dom.elGraphical),
                    s.dom.elGraphical.add(s.dom.elDefs);
                },
              },
              {
                key: "plotChartType",
                value: function (s, o) {
                  var c = this.w,
                    h = c.config,
                    d = c.globals,
                    f = { series: [], i: [] },
                    g = { series: [], i: [] },
                    y = { series: [], i: [] },
                    x = { series: [], i: [] },
                    k = { series: [], i: [] },
                    _ = { series: [], i: [] },
                    A = { series: [], i: [] },
                    O = { series: [], i: [] },
                    N = { series: [], seriesRangeEnd: [], i: [] };
                  d.series.map(function (ue, he) {
                    var we = 0;
                    s[he].type !== void 0
                      ? (s[he].type === "column" || s[he].type === "bar"
                          ? (d.series.length > 1 &&
                              h.plotOptions.bar.horizontal &&
                              console.warn(
                                "Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`"
                              ),
                            k.series.push(ue),
                            k.i.push(he),
                            we++,
                            (c.globals.columnSeries = k.series))
                          : s[he].type === "area"
                          ? (g.series.push(ue), g.i.push(he), we++)
                          : s[he].type === "line"
                          ? (f.series.push(ue), f.i.push(he), we++)
                          : s[he].type === "scatter"
                          ? (y.series.push(ue), y.i.push(he))
                          : s[he].type === "bubble"
                          ? (x.series.push(ue), x.i.push(he), we++)
                          : s[he].type === "candlestick"
                          ? (_.series.push(ue), _.i.push(he), we++)
                          : s[he].type === "boxPlot"
                          ? (A.series.push(ue), A.i.push(he), we++)
                          : s[he].type === "rangeBar"
                          ? (O.series.push(ue), O.i.push(he), we++)
                          : s[he].type === "rangeArea"
                          ? (N.series.push(d.seriesRangeStart[he]),
                            N.seriesRangeEnd.push(d.seriesRangeEnd[he]),
                            N.i.push(he),
                            we++)
                          : console.warn(
                              "You have specified an unrecognized chart type. Available types for this property are line/area/column/bar/scatter/bubble/candlestick/boxPlot/rangeBar/rangeArea"
                            ),
                        we > 1 && (d.comboCharts = !0))
                      : (f.series.push(ue), f.i.push(he));
                  });
                  var H = new rs(this.ctx, o),
                    G = new ts(this.ctx, o);
                  this.ctx.pie = new ur(this.ctx);
                  var te = new ka(this.ctx);
                  this.ctx.rangeBar = new yr(this.ctx, o);
                  var se = new vr(this.ctx),
                    b = [];
                  if (d.comboCharts) {
                    if (
                      (g.series.length > 0 &&
                        b.push(H.draw(g.series, "area", g.i)),
                      k.series.length > 0)
                    )
                      if (c.config.chart.stacked) {
                        var C = new lr(this.ctx, o);
                        b.push(C.draw(k.series, k.i));
                      } else
                        (this.ctx.bar = new qt(this.ctx, o)),
                          b.push(this.ctx.bar.draw(k.series, k.i));
                    if (
                      (N.series.length > 0 &&
                        b.push(
                          H.draw(N.series, "rangeArea", N.i, N.seriesRangeEnd)
                        ),
                      f.series.length > 0 &&
                        b.push(H.draw(f.series, "line", f.i)),
                      _.series.length > 0 &&
                        b.push(G.draw(_.series, "candlestick", _.i)),
                      A.series.length > 0 &&
                        b.push(G.draw(A.series, "boxPlot", A.i)),
                      O.series.length > 0 &&
                        b.push(this.ctx.rangeBar.draw(O.series, O.i)),
                      y.series.length > 0)
                    ) {
                      var F = new rs(this.ctx, o, !0);
                      b.push(F.draw(y.series, "scatter", y.i));
                    }
                    if (x.series.length > 0) {
                      var ee = new rs(this.ctx, o, !0);
                      b.push(ee.draw(x.series, "bubble", x.i));
                    }
                  } else
                    switch (h.chart.type) {
                      case "line":
                        b = H.draw(d.series, "line");
                        break;
                      case "area":
                        b = H.draw(d.series, "area");
                        break;
                      case "bar":
                        h.chart.stacked
                          ? (b = new lr(this.ctx, o).draw(d.series))
                          : ((this.ctx.bar = new qt(this.ctx, o)),
                            (b = this.ctx.bar.draw(d.series)));
                        break;
                      case "candlestick":
                        b = new ts(this.ctx, o).draw(d.series, "candlestick");
                        break;
                      case "boxPlot":
                        b = new ts(this.ctx, o).draw(d.series, h.chart.type);
                        break;
                      case "rangeBar":
                        b = this.ctx.rangeBar.draw(d.series);
                        break;
                      case "rangeArea":
                        b = H.draw(
                          d.seriesRangeStart,
                          "rangeArea",
                          void 0,
                          d.seriesRangeEnd
                        );
                        break;
                      case "heatmap":
                        b = new mr(this.ctx, o).draw(d.series);
                        break;
                      case "treemap":
                        b = new _a(this.ctx, o).draw(d.series);
                        break;
                      case "pie":
                      case "donut":
                      case "polarArea":
                        b = this.ctx.pie.draw(d.series);
                        break;
                      case "radialBar":
                        b = te.draw(d.series);
                        break;
                      case "radar":
                        b = se.draw(d.series);
                        break;
                      default:
                        b = H.draw(d.series);
                    }
                  return b;
                },
              },
              {
                key: "setSVGDimensions",
                value: function () {
                  var s = this.w.globals,
                    o = this.w.config;
                  (s.svgWidth = o.chart.width), (s.svgHeight = o.chart.height);
                  var c = B.getDimensions(this.el),
                    h = o.chart.width
                      .toString()
                      .split(/[0-9]+/g)
                      .pop();
                  h === "%"
                    ? B.isNumber(c[0]) &&
                      (c[0].width === 0 &&
                        (c = B.getDimensions(this.el.parentNode)),
                      (s.svgWidth = (c[0] * parseInt(o.chart.width, 10)) / 100))
                    : (h !== "px" && h !== "") ||
                      (s.svgWidth = parseInt(o.chart.width, 10));
                  var d = o.chart.height
                    .toString()
                    .split(/[0-9]+/g)
                    .pop();
                  if (s.svgHeight !== "auto" && s.svgHeight !== "")
                    if (d === "%") {
                      var f = B.getDimensions(this.el.parentNode);
                      s.svgHeight = (f[1] * parseInt(o.chart.height, 10)) / 100;
                    } else s.svgHeight = parseInt(o.chart.height, 10);
                  else
                    s.axisCharts
                      ? (s.svgHeight = s.svgWidth / 1.61)
                      : (s.svgHeight = s.svgWidth / 1.2);
                  if (
                    (s.svgWidth < 0 && (s.svgWidth = 0),
                    s.svgHeight < 0 && (s.svgHeight = 0),
                    K.setAttrs(s.dom.Paper.node, {
                      width: s.svgWidth,
                      height: s.svgHeight,
                    }),
                    d !== "%")
                  ) {
                    var g = o.chart.sparkline.enabled
                      ? 0
                      : s.axisCharts
                      ? o.chart.parentHeightOffset
                      : 0;
                    s.dom.Paper.node.parentNode.parentNode.style.minHeight =
                      s.svgHeight + g + "px";
                  }
                  (s.dom.elWrap.style.width = s.svgWidth + "px"),
                    (s.dom.elWrap.style.height = s.svgHeight + "px");
                },
              },
              {
                key: "shiftGraphPosition",
                value: function () {
                  var s = this.w.globals,
                    o = s.translateY,
                    c = {
                      transform: "translate(" + s.translateX + ", " + o + ")",
                    };
                  K.setAttrs(s.dom.elGraphical.node, c);
                },
              },
              {
                key: "resizeNonAxisCharts",
                value: function () {
                  var s = this.w,
                    o = s.globals,
                    c = 0,
                    h = s.config.chart.sparkline.enabled ? 1 : 15;
                  (h += s.config.grid.padding.bottom),
                    (s.config.legend.position !== "top" &&
                      s.config.legend.position !== "bottom") ||
                      !s.config.legend.show ||
                      s.config.legend.floating ||
                      (c =
                        new Je(this.ctx).legendHelpers.getLegendBBox().clwh +
                        10);
                  var d = s.globals.dom.baseEl.querySelector(
                      ".apexcharts-radialbar, .apexcharts-pie"
                    ),
                    f = 2.05 * s.globals.radialSize;
                  if (
                    d &&
                    !s.config.chart.sparkline.enabled &&
                    s.config.plotOptions.radialBar.startAngle !== 0
                  ) {
                    var g = B.getBoundingClientRect(d);
                    f = g.bottom;
                    var y = g.bottom - g.top;
                    f = Math.max(2.05 * s.globals.radialSize, y);
                  }
                  var x = f + o.translateY + c + h;
                  o.dom.elLegendForeign &&
                    o.dom.elLegendForeign.setAttribute("height", x),
                    (s.config.chart.height &&
                      String(s.config.chart.height).indexOf("%") > 0) ||
                      ((o.dom.elWrap.style.height = x + "px"),
                      K.setAttrs(o.dom.Paper.node, { height: x }),
                      (o.dom.Paper.node.parentNode.parentNode.style.minHeight =
                        x + "px"));
                },
              },
              {
                key: "coreCalculations",
                value: function () {
                  new W(this.ctx).init();
                },
              },
              {
                key: "resetGlobals",
                value: function () {
                  var s = this,
                    o = function () {
                      return s.w.config.series.map(function (d) {
                        return [];
                      });
                    },
                    c = new J(),
                    h = this.w.globals;
                  c.initGlobalVars(h),
                    (h.seriesXvalues = o()),
                    (h.seriesYvalues = o());
                },
              },
              {
                key: "isMultipleY",
                value: function () {
                  if (
                    this.w.config.yaxis.constructor === Array &&
                    this.w.config.yaxis.length > 1
                  )
                    return (this.w.globals.isMultipleYAxis = !0), !0;
                },
              },
              {
                key: "xySettings",
                value: function () {
                  var s = null,
                    o = this.w;
                  if (o.globals.axisCharts) {
                    if (
                      (o.config.xaxis.crosshairs.position === "back" &&
                        new q(this.ctx).drawXCrosshairs(),
                      o.config.yaxis[0].crosshairs.position === "back" &&
                        new q(this.ctx).drawYCrosshairs(),
                      o.config.xaxis.type === "datetime" &&
                        o.config.xaxis.labels.formatter === void 0)
                    ) {
                      this.ctx.timeScale = new wr(this.ctx);
                      var c = [];
                      isFinite(o.globals.minX) &&
                      isFinite(o.globals.maxX) &&
                      !o.globals.isBarHorizontal
                        ? (c = this.ctx.timeScale.calculateTimeScaleTicks(
                            o.globals.minX,
                            o.globals.maxX
                          ))
                        : o.globals.isBarHorizontal &&
                          (c = this.ctx.timeScale.calculateTimeScaleTicks(
                            o.globals.minY,
                            o.globals.maxY
                          )),
                        this.ctx.timeScale.recalcDimensionsBasedOnFormat(c);
                    }
                    s = new fe(this.ctx).getCalculatedRatios();
                  }
                  return s;
                },
              },
              {
                key: "updateSourceChart",
                value: function (s) {
                  (this.ctx.w.globals.selection = void 0),
                    this.ctx.updateHelpers._updateOptions(
                      {
                        chart: {
                          selection: {
                            xaxis: {
                              min: s.w.globals.minX,
                              max: s.w.globals.maxX,
                            },
                          },
                        },
                      },
                      !1,
                      !1
                    );
                },
              },
              {
                key: "setupBrushHandler",
                value: function () {
                  var s = this,
                    o = this.w;
                  if (
                    o.config.chart.brush.enabled &&
                    typeof o.config.chart.events.selection != "function"
                  ) {
                    var c = Array.isArray(o.config.chart.brush.targets) || [
                      o.config.chart.brush.target,
                    ];
                    c.forEach(function (h) {
                      var d = ApexCharts.getChartByID(h);
                      (d.w.globals.brushSource = s.ctx),
                        typeof d.w.config.chart.events.zoomed != "function" &&
                          (d.w.config.chart.events.zoomed = function () {
                            s.updateSourceChart(d);
                          }),
                        typeof d.w.config.chart.events.scrolled != "function" &&
                          (d.w.config.chart.events.scrolled = function () {
                            s.updateSourceChart(d);
                          });
                    }),
                      (o.config.chart.events.selection = function (h, d) {
                        c.forEach(function (f) {
                          var g = ApexCharts.getChartByID(f),
                            y = B.clone(o.config.yaxis);
                          if (
                            o.config.chart.brush.autoScaleYaxis &&
                            g.w.globals.series.length === 1
                          ) {
                            var x = new oe(g);
                            y = x.autoScaleY(g, y, d);
                          }
                          var k = g.w.config.yaxis.reduce(function (_, A, O) {
                            return [].concat(z(_), [
                              n(
                                n({}, g.w.config.yaxis[O]),
                                {},
                                { min: y[0].min, max: y[0].max }
                              ),
                            ]);
                          }, []);
                          g.ctx.updateHelpers._updateOptions(
                            {
                              xaxis: { min: d.xaxis.min, max: d.xaxis.max },
                              yaxis: k,
                            },
                            !1,
                            !1,
                            !1,
                            !1
                          );
                        });
                      });
                  }
                },
              },
            ]),
            $
          );
        })(),
        kr = (function () {
          function $(s) {
            a(this, $), (this.ctx = s), (this.w = s.w);
          }
          return (
            u($, [
              {
                key: "_updateOptions",
                value: function (s) {
                  var o = this,
                    c =
                      arguments.length > 1 &&
                      arguments[1] !== void 0 &&
                      arguments[1],
                    h =
                      !(arguments.length > 2 && arguments[2] !== void 0) ||
                      arguments[2],
                    d =
                      !(arguments.length > 3 && arguments[3] !== void 0) ||
                      arguments[3],
                    f =
                      arguments.length > 4 &&
                      arguments[4] !== void 0 &&
                      arguments[4];
                  return new Promise(function (g) {
                    var y = [o.ctx];
                    d && (y = o.ctx.getSyncedCharts()),
                      o.ctx.w.globals.isExecCalled &&
                        ((y = [o.ctx]), (o.ctx.w.globals.isExecCalled = !1)),
                      y.forEach(function (x, k) {
                        var _ = x.w;
                        if (
                          ((_.globals.shouldAnimate = h),
                          c ||
                            ((_.globals.resized = !0),
                            (_.globals.dataChanged = !0),
                            h && x.series.getPreviousPaths()),
                          s &&
                            i(s) === "object" &&
                            ((x.config = new le(s)),
                            (s = fe.extendArrayProps(x.config, s, _)),
                            x.w.globals.chartID !== o.ctx.w.globals.chartID &&
                              delete s.series,
                            (_.config = B.extend(_.config, s)),
                            f &&
                              ((_.globals.lastXAxis = s.xaxis
                                ? B.clone(s.xaxis)
                                : []),
                              (_.globals.lastYAxis = s.yaxis
                                ? B.clone(s.yaxis)
                                : []),
                              (_.globals.initialConfig = B.extend(
                                {},
                                _.config
                              )),
                              (_.globals.initialSeries = B.clone(
                                _.config.series
                              )),
                              s.series)))
                        ) {
                          for (
                            var A = 0;
                            A < _.globals.collapsedSeriesIndices.length;
                            A++
                          ) {
                            var O =
                              _.config.series[
                                _.globals.collapsedSeriesIndices[A]
                              ];
                            _.globals.collapsedSeries[A].data = _.globals
                              .axisCharts
                              ? O.data.slice()
                              : O;
                          }
                          for (
                            var N = 0;
                            N <
                            _.globals.ancillaryCollapsedSeriesIndices.length;
                            N++
                          ) {
                            var H =
                              _.config.series[
                                _.globals.ancillaryCollapsedSeriesIndices[N]
                              ];
                            _.globals.ancillaryCollapsedSeries[N].data = _
                              .globals.axisCharts
                              ? H.data.slice()
                              : H;
                          }
                          x.series.emptyCollapsedSeries(_.config.series);
                        }
                        return x.update(s).then(function () {
                          k === y.length - 1 && g(x);
                        });
                      });
                  });
                },
              },
              {
                key: "_updateSeries",
                value: function (s, o) {
                  var c = this,
                    h =
                      arguments.length > 2 &&
                      arguments[2] !== void 0 &&
                      arguments[2];
                  return new Promise(function (d) {
                    var f,
                      g = c.w;
                    return (
                      (g.globals.shouldAnimate = o),
                      (g.globals.dataChanged = !0),
                      o && c.ctx.series.getPreviousPaths(),
                      g.globals.axisCharts
                        ? ((f = s.map(function (y, x) {
                            return c._extendSeries(y, x);
                          })).length === 0 && (f = [{ data: [] }]),
                          (g.config.series = f))
                        : (g.config.series = s.slice()),
                      h &&
                        ((g.globals.initialConfig.series = B.clone(
                          g.config.series
                        )),
                        (g.globals.initialSeries = B.clone(g.config.series))),
                      c.ctx.update().then(function () {
                        d(c.ctx);
                      })
                    );
                  });
                },
              },
              {
                key: "_extendSeries",
                value: function (s, o) {
                  var c = this.w,
                    h = c.config.series[o];
                  return n(
                    n({}, c.config.series[o]),
                    {},
                    {
                      name: s.name ? s.name : h && h.name,
                      color: s.color ? s.color : h && h.color,
                      type: s.type ? s.type : h && h.type,
                      group: s.group ? s.group : h && h.group,
                      data: s.data ? s.data : h && h.data,
                    }
                  );
                },
              },
              {
                key: "toggleDataPointSelection",
                value: function (s, o) {
                  var c = this.w,
                    h = null,
                    d = ".apexcharts-series[data\\:realIndex='".concat(s, "']");
                  return (
                    c.globals.axisCharts
                      ? (h = c.globals.dom.Paper.select(
                          ""
                            .concat(d, " path[j='")
                            .concat(o, "'], ")
                            .concat(d, " circle[j='")
                            .concat(o, "'], ")
                            .concat(d, " rect[j='")
                            .concat(o, "']")
                        ).members[0])
                      : o === void 0 &&
                        ((h = c.globals.dom.Paper.select(
                          "".concat(d, " path[j='").concat(s, "']")
                        ).members[0]),
                        (c.config.chart.type !== "pie" &&
                          c.config.chart.type !== "polarArea" &&
                          c.config.chart.type !== "donut") ||
                          this.ctx.pie.pieClicked(s)),
                    h
                      ? (new K(this.ctx).pathMouseDown(h, null),
                        h.node ? h.node : null)
                      : (console.warn(
                          "toggleDataPointSelection: Element not found"
                        ),
                        null)
                  );
                },
              },
              {
                key: "forceXAxisUpdate",
                value: function (s) {
                  var o = this.w;
                  if (
                    (["min", "max"].forEach(function (h) {
                      s.xaxis[h] !== void 0 &&
                        ((o.config.xaxis[h] = s.xaxis[h]),
                        (o.globals.lastXAxis[h] = s.xaxis[h]));
                    }),
                    s.xaxis.categories &&
                      s.xaxis.categories.length &&
                      (o.config.xaxis.categories = s.xaxis.categories),
                    o.config.xaxis.convertedCatToNumeric)
                  ) {
                    var c = new ie(s);
                    s = c.convertCatToNumericXaxis(s, this.ctx);
                  }
                  return s;
                },
              },
              {
                key: "forceYAxisUpdate",
                value: function (s) {
                  return (
                    s.chart &&
                      s.chart.stacked &&
                      s.chart.stackType === "100%" &&
                      (Array.isArray(s.yaxis)
                        ? s.yaxis.forEach(function (o, c) {
                            (s.yaxis[c].min = 0), (s.yaxis[c].max = 100);
                          })
                        : ((s.yaxis.min = 0), (s.yaxis.max = 100))),
                    s
                  );
                },
              },
              {
                key: "revertDefaultAxisMinMax",
                value: function (s) {
                  var o = this,
                    c = this.w,
                    h = c.globals.lastXAxis,
                    d = c.globals.lastYAxis;
                  s && s.xaxis && (h = s.xaxis),
                    s && s.yaxis && (d = s.yaxis),
                    (c.config.xaxis.min = h.min),
                    (c.config.xaxis.max = h.max);
                  var f = function (g) {
                    d[g] !== void 0 &&
                      ((c.config.yaxis[g].min = d[g].min),
                      (c.config.yaxis[g].max = d[g].max));
                  };
                  c.config.yaxis.map(function (g, y) {
                    c.globals.zoomed || d[y] !== void 0
                      ? f(y)
                      : o.ctx.opts.yaxis[y] !== void 0 &&
                        ((g.min = o.ctx.opts.yaxis[y].min),
                        (g.max = o.ctx.opts.yaxis[y].max));
                  });
                },
              },
            ]),
            $
          );
        })();
      (Xt = typeof window < "u" ? window : void 0),
        (er = function ($, s) {
          var o = ((this !== void 0 ? this : $).SVG = function (b) {
            if (o.supported)
              return (b = new o.Doc(b)), o.parser.draw || o.prepare(), b;
          });
          if (
            ((o.ns = "http://www.w3.org/2000/svg"),
            (o.xmlns = "http://www.w3.org/2000/xmlns/"),
            (o.xlink = "http://www.w3.org/1999/xlink"),
            (o.svgjs = "http://svgjs.dev"),
            (o.supported = !0),
            !o.supported)
          )
            return !1;
          (o.did = 1e3),
            (o.eid = function (b) {
              return "Svgjs" + k(b) + o.did++;
            }),
            (o.create = function (b) {
              var C = s.createElementNS(this.ns, b);
              return C.setAttribute("id", this.eid(b)), C;
            }),
            (o.extend = function () {
              var b, C;
              C = (b = [].slice.call(arguments)).pop();
              for (var F = b.length - 1; F >= 0; F--)
                if (b[F]) for (var ee in C) b[F].prototype[ee] = C[ee];
              o.Set && o.Set.inherit && o.Set.inherit();
            }),
            (o.invent = function (b) {
              var C =
                typeof b.create == "function"
                  ? b.create
                  : function () {
                      this.constructor.call(this, o.create(b.create));
                    };
              return (
                b.inherit && (C.prototype = new b.inherit()),
                b.extend && o.extend(C, b.extend),
                b.construct && o.extend(b.parent || o.Container, b.construct),
                C
              );
            }),
            (o.adopt = function (b) {
              return b
                ? b.instance
                  ? b.instance
                  : (((C =
                      b.nodeName == "svg"
                        ? b.parentNode instanceof $.SVGElement
                          ? new o.Nested()
                          : new o.Doc()
                        : b.nodeName == "linearGradient"
                        ? new o.Gradient("linear")
                        : b.nodeName == "radialGradient"
                        ? new o.Gradient("radial")
                        : o[k(b.nodeName)]
                        ? new o[k(b.nodeName)]()
                        : new o.Element(b)).type = b.nodeName),
                    (C.node = b),
                    (b.instance = C),
                    C instanceof o.Doc && C.namespace().defs(),
                    C.setData(JSON.parse(b.getAttribute("svgjs:data")) || {}),
                    C)
                : null;
              var C;
            }),
            (o.prepare = function () {
              var b = s.getElementsByTagName("body")[0],
                C = (
                  b ? new o.Doc(b) : o.adopt(s.documentElement).nested()
                ).size(2, 0);
              o.parser = {
                body: b || s.documentElement,
                draw: C.style(
                  "opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden"
                ).node,
                poly: C.polyline().node,
                path: C.path().node,
                native: o.create("svg"),
              };
            }),
            (o.parser = { native: o.create("svg") }),
            s.addEventListener(
              "DOMContentLoaded",
              function () {
                o.parser.draw || o.prepare();
              },
              !1
            ),
            (o.regex = {
              numberAndUnit:
                /^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i,
              hex: /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
              rgb: /rgb\((\d+),(\d+),(\d+)\)/,
              reference: /#([a-z0-9\-_]+)/i,
              transforms: /\)\s*,?\s*/,
              whitespace: /\s/g,
              isHex: /^#[a-f0-9]{3,6}$/i,
              isRgb: /^rgb\(/,
              isCss: /[^:]+:[^;]+;?/,
              isBlank: /^(\s+)?$/,
              isNumber: /^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
              isPercent: /^-?[\d\.]+%$/,
              isImage: /\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i,
              delimiter: /[\s,]+/,
              hyphen: /([^e])\-/gi,
              pathLetters: /[MLHVCSQTAZ]/gi,
              isPathLetter: /[MLHVCSQTAZ]/i,
              numbersWithDots:
                /((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi,
              dots: /\./g,
            }),
            (o.utils = {
              map: function (b, C) {
                for (var F = b.length, ee = [], ue = 0; ue < F; ue++)
                  ee.push(C(b[ue]));
                return ee;
              },
              filter: function (b, C) {
                for (var F = b.length, ee = [], ue = 0; ue < F; ue++)
                  C(b[ue]) && ee.push(b[ue]);
                return ee;
              },
              filterSVGElements: function (b) {
                return this.filter(b, function (C) {
                  return C instanceof $.SVGElement;
                });
              },
            }),
            (o.defaults = {
              attrs: {
                "fill-opacity": 1,
                "stroke-opacity": 1,
                "stroke-width": 0,
                "stroke-linejoin": "miter",
                "stroke-linecap": "butt",
                fill: "#000000",
                stroke: "#000000",
                opacity: 1,
                x: 0,
                y: 0,
                cx: 0,
                cy: 0,
                width: 0,
                height: 0,
                r: 0,
                rx: 0,
                ry: 0,
                offset: 0,
                "stop-opacity": 1,
                "stop-color": "#000000",
                "font-size": 16,
                "font-family": "Helvetica, Arial, sans-serif",
                "text-anchor": "start",
              },
            }),
            (o.Color = function (b) {
              var C, F;
              (this.r = 0),
                (this.g = 0),
                (this.b = 0),
                b &&
                  (typeof b == "string"
                    ? o.regex.isRgb.test(b)
                      ? ((C = o.regex.rgb.exec(
                          b.replace(o.regex.whitespace, "")
                        )),
                        (this.r = parseInt(C[1])),
                        (this.g = parseInt(C[2])),
                        (this.b = parseInt(C[3])))
                      : o.regex.isHex.test(b) &&
                        ((C = o.regex.hex.exec(
                          (F = b).length == 4
                            ? [
                                "#",
                                F.substring(1, 2),
                                F.substring(1, 2),
                                F.substring(2, 3),
                                F.substring(2, 3),
                                F.substring(3, 4),
                                F.substring(3, 4),
                              ].join("")
                            : F
                        )),
                        (this.r = parseInt(C[1], 16)),
                        (this.g = parseInt(C[2], 16)),
                        (this.b = parseInt(C[3], 16)))
                    : i(b) === "object" &&
                      ((this.r = b.r), (this.g = b.g), (this.b = b.b)));
            }),
            o.extend(o.Color, {
              toString: function () {
                return this.toHex();
              },
              toHex: function () {
                return "#" + _(this.r) + _(this.g) + _(this.b);
              },
              toRgb: function () {
                return "rgb(" + [this.r, this.g, this.b].join() + ")";
              },
              brightness: function () {
                return (
                  (this.r / 255) * 0.3 +
                  (this.g / 255) * 0.59 +
                  (this.b / 255) * 0.11
                );
              },
              morph: function (b) {
                return (this.destination = new o.Color(b)), this;
              },
              at: function (b) {
                return this.destination
                  ? ((b = b < 0 ? 0 : b > 1 ? 1 : b),
                    new o.Color({
                      r: ~~(this.r + (this.destination.r - this.r) * b),
                      g: ~~(this.g + (this.destination.g - this.g) * b),
                      b: ~~(this.b + (this.destination.b - this.b) * b),
                    }))
                  : this;
              },
            }),
            (o.Color.test = function (b) {
              return (b += ""), o.regex.isHex.test(b) || o.regex.isRgb.test(b);
            }),
            (o.Color.isRgb = function (b) {
              return (
                b &&
                typeof b.r == "number" &&
                typeof b.g == "number" &&
                typeof b.b == "number"
              );
            }),
            (o.Color.isColor = function (b) {
              return o.Color.isRgb(b) || o.Color.test(b);
            }),
            (o.Array = function (b, C) {
              (b = (b || []).valueOf()).length == 0 && C && (b = C.valueOf()),
                (this.value = this.parse(b));
            }),
            o.extend(o.Array, {
              toString: function () {
                return this.value.join(" ");
              },
              valueOf: function () {
                return this.value;
              },
              parse: function (b) {
                return (b = b.valueOf()), Array.isArray(b) ? b : this.split(b);
              },
            }),
            (o.PointArray = function (b, C) {
              o.Array.call(this, b, C || [[0, 0]]);
            }),
            (o.PointArray.prototype = new o.Array()),
            (o.PointArray.prototype.constructor = o.PointArray);
          for (
            var c = {
                M: function (b, C, F) {
                  return (
                    (C.x = F.x = b[0]), (C.y = F.y = b[1]), ["M", C.x, C.y]
                  );
                },
                L: function (b, C) {
                  return (C.x = b[0]), (C.y = b[1]), ["L", b[0], b[1]];
                },
                H: function (b, C) {
                  return (C.x = b[0]), ["H", b[0]];
                },
                V: function (b, C) {
                  return (C.y = b[0]), ["V", b[0]];
                },
                C: function (b, C) {
                  return (
                    (C.x = b[4]),
                    (C.y = b[5]),
                    ["C", b[0], b[1], b[2], b[3], b[4], b[5]]
                  );
                },
                Q: function (b, C) {
                  return (
                    (C.x = b[2]), (C.y = b[3]), ["Q", b[0], b[1], b[2], b[3]]
                  );
                },
                Z: function (b, C, F) {
                  return (C.x = F.x), (C.y = F.y), ["Z"];
                },
              },
              h = "mlhvqtcsaz".split(""),
              d = 0,
              f = h.length;
            d < f;
            ++d
          )
            c[h[d]] = (function (b) {
              return function (C, F, ee) {
                if (b == "H") C[0] = C[0] + F.x;
                else if (b == "V") C[0] = C[0] + F.y;
                else if (b == "A") (C[5] = C[5] + F.x), (C[6] = C[6] + F.y);
                else
                  for (var ue = 0, he = C.length; ue < he; ++ue)
                    C[ue] = C[ue] + (ue % 2 ? F.y : F.x);
                if (c && typeof c[b] == "function") return c[b](C, F, ee);
              };
            })(h[d].toUpperCase());
          (o.PathArray = function (b, C) {
            o.Array.call(this, b, C || [["M", 0, 0]]);
          }),
            (o.PathArray.prototype = new o.Array()),
            (o.PathArray.prototype.constructor = o.PathArray),
            o.extend(o.PathArray, {
              toString: function () {
                return (function (b) {
                  for (var C = 0, F = b.length, ee = ""; C < F; C++)
                    (ee += b[C][0]),
                      b[C][1] != null &&
                        ((ee += b[C][1]),
                        b[C][2] != null &&
                          ((ee += " "),
                          (ee += b[C][2]),
                          b[C][3] != null &&
                            ((ee += " "),
                            (ee += b[C][3]),
                            (ee += " "),
                            (ee += b[C][4]),
                            b[C][5] != null &&
                              ((ee += " "),
                              (ee += b[C][5]),
                              (ee += " "),
                              (ee += b[C][6]),
                              b[C][7] != null &&
                                ((ee += " "), (ee += b[C][7]))))));
                  return ee + " ";
                })(this.value);
              },
              move: function (b, C) {
                var F = this.bbox();
                return F.x, F.y, this;
              },
              at: function (b) {
                if (!this.destination) return this;
                for (
                  var C = this.value,
                    F = this.destination.value,
                    ee = [],
                    ue = new o.PathArray(),
                    he = 0,
                    we = C.length;
                  he < we;
                  he++
                ) {
                  ee[he] = [C[he][0]];
                  for (var Ae = 1, Le = C[he].length; Ae < Le; Ae++)
                    ee[he][Ae] = C[he][Ae] + (F[he][Ae] - C[he][Ae]) * b;
                  ee[he][0] === "A" &&
                    ((ee[he][4] = +(ee[he][4] != 0)),
                    (ee[he][5] = +(ee[he][5] != 0)));
                }
                return (ue.value = ee), ue;
              },
              parse: function (b) {
                if (b instanceof o.PathArray) return b.valueOf();
                var C,
                  F = {
                    M: 2,
                    L: 2,
                    H: 1,
                    V: 1,
                    C: 6,
                    S: 4,
                    Q: 4,
                    T: 2,
                    A: 7,
                    Z: 0,
                  };
                b =
                  typeof b == "string"
                    ? b
                        .replace(o.regex.numbersWithDots, y)
                        .replace(o.regex.pathLetters, " $& ")
                        .replace(o.regex.hyphen, "$1 -")
                        .trim()
                        .split(o.regex.delimiter)
                    : b.reduce(function (Le, ze) {
                        return [].concat.call(Le, ze);
                      }, []);
                var ee = [],
                  ue = new o.Point(),
                  he = new o.Point(),
                  we = 0,
                  Ae = b.length;
                do
                  o.regex.isPathLetter.test(b[we])
                    ? ((C = b[we]), ++we)
                    : C == "M"
                    ? (C = "L")
                    : C == "m" && (C = "l"),
                    ee.push(
                      c[C].call(
                        null,
                        b.slice(we, (we += F[C.toUpperCase()])).map(parseFloat),
                        ue,
                        he
                      )
                    );
                while (Ae > we);
                return ee;
              },
              bbox: function () {
                return (
                  o.parser.draw || o.prepare(),
                  o.parser.path.setAttribute("d", this.toString()),
                  o.parser.path.getBBox()
                );
              },
            }),
            (o.Number = o.invent({
              create: function (b, C) {
                (this.value = 0),
                  (this.unit = C || ""),
                  typeof b == "number"
                    ? (this.value = isNaN(b)
                        ? 0
                        : isFinite(b)
                        ? b
                        : b < 0
                        ? -34e37
                        : 34e37)
                    : typeof b == "string"
                    ? (C = b.match(o.regex.numberAndUnit)) &&
                      ((this.value = parseFloat(C[1])),
                      C[5] == "%"
                        ? (this.value /= 100)
                        : C[5] == "s" && (this.value *= 1e3),
                      (this.unit = C[5]))
                    : b instanceof o.Number &&
                      ((this.value = b.valueOf()), (this.unit = b.unit));
              },
              extend: {
                toString: function () {
                  return (
                    (this.unit == "%"
                      ? ~~(1e8 * this.value) / 1e6
                      : this.unit == "s"
                      ? this.value / 1e3
                      : this.value) + this.unit
                  );
                },
                toJSON: function () {
                  return this.toString();
                },
                valueOf: function () {
                  return this.value;
                },
                plus: function (b) {
                  return (
                    (b = new o.Number(b)),
                    new o.Number(this + b, this.unit || b.unit)
                  );
                },
                minus: function (b) {
                  return (
                    (b = new o.Number(b)),
                    new o.Number(this - b, this.unit || b.unit)
                  );
                },
                times: function (b) {
                  return (
                    (b = new o.Number(b)),
                    new o.Number(this * b, this.unit || b.unit)
                  );
                },
                divide: function (b) {
                  return (
                    (b = new o.Number(b)),
                    new o.Number(this / b, this.unit || b.unit)
                  );
                },
                to: function (b) {
                  var C = new o.Number(this);
                  return typeof b == "string" && (C.unit = b), C;
                },
                morph: function (b) {
                  return (
                    (this.destination = new o.Number(b)),
                    b.relative && (this.destination.value += this.value),
                    this
                  );
                },
                at: function (b) {
                  return this.destination
                    ? new o.Number(this.destination)
                        .minus(this)
                        .times(b)
                        .plus(this)
                    : this;
                },
              },
            })),
            (o.Element = o.invent({
              create: function (b) {
                (this._stroke = o.defaults.attrs.stroke),
                  (this._event = null),
                  (this.dom = {}),
                  (this.node = b) &&
                    ((this.type = b.nodeName),
                    (this.node.instance = this),
                    (this._stroke = b.getAttribute("stroke") || this._stroke));
              },
              extend: {
                x: function (b) {
                  return this.attr("x", b);
                },
                y: function (b) {
                  return this.attr("y", b);
                },
                cx: function (b) {
                  return b == null
                    ? this.x() + this.width() / 2
                    : this.x(b - this.width() / 2);
                },
                cy: function (b) {
                  return b == null
                    ? this.y() + this.height() / 2
                    : this.y(b - this.height() / 2);
                },
                move: function (b, C) {
                  return this.x(b).y(C);
                },
                center: function (b, C) {
                  return this.cx(b).cy(C);
                },
                width: function (b) {
                  return this.attr("width", b);
                },
                height: function (b) {
                  return this.attr("height", b);
                },
                size: function (b, C) {
                  var F = A(this, b, C);
                  return this.width(new o.Number(F.width)).height(
                    new o.Number(F.height)
                  );
                },
                clone: function (b) {
                  this.writeDataToDom();
                  var C = H(this.node.cloneNode(!0));
                  return b ? b.add(C) : this.after(C), C;
                },
                remove: function () {
                  return (
                    this.parent() && this.parent().removeElement(this), this
                  );
                },
                replace: function (b) {
                  return this.after(b).remove(), b;
                },
                addTo: function (b) {
                  return b.put(this);
                },
                putIn: function (b) {
                  return b.add(this);
                },
                id: function (b) {
                  return this.attr("id", b);
                },
                show: function () {
                  return this.style("display", "");
                },
                hide: function () {
                  return this.style("display", "none");
                },
                visible: function () {
                  return this.style("display") != "none";
                },
                toString: function () {
                  return this.attr("id");
                },
                classes: function () {
                  var b = this.attr("class");
                  return b == null ? [] : b.trim().split(o.regex.delimiter);
                },
                hasClass: function (b) {
                  return this.classes().indexOf(b) != -1;
                },
                addClass: function (b) {
                  if (!this.hasClass(b)) {
                    var C = this.classes();
                    C.push(b), this.attr("class", C.join(" "));
                  }
                  return this;
                },
                removeClass: function (b) {
                  return (
                    this.hasClass(b) &&
                      this.attr(
                        "class",
                        this.classes()
                          .filter(function (C) {
                            return C != b;
                          })
                          .join(" ")
                      ),
                    this
                  );
                },
                toggleClass: function (b) {
                  return this.hasClass(b)
                    ? this.removeClass(b)
                    : this.addClass(b);
                },
                reference: function (b) {
                  return o.get(this.attr(b));
                },
                parent: function (b) {
                  var C = this;
                  if (!C.node.parentNode) return null;
                  if (((C = o.adopt(C.node.parentNode)), !b)) return C;
                  for (; C && C.node instanceof $.SVGElement; ) {
                    if (typeof b == "string" ? C.matches(b) : C instanceof b)
                      return C;
                    if (
                      !C.node.parentNode ||
                      C.node.parentNode.nodeName == "#document"
                    )
                      return null;
                    C = o.adopt(C.node.parentNode);
                  }
                },
                doc: function () {
                  return this instanceof o.Doc ? this : this.parent(o.Doc);
                },
                parents: function (b) {
                  var C = [],
                    F = this;
                  do {
                    if (!(F = F.parent(b)) || !F.node) break;
                    C.push(F);
                  } while (F.parent);
                  return C;
                },
                matches: function (b) {
                  return (function (C, F) {
                    return (
                      C.matches ||
                      C.matchesSelector ||
                      C.msMatchesSelector ||
                      C.mozMatchesSelector ||
                      C.webkitMatchesSelector ||
                      C.oMatchesSelector
                    ).call(C, F);
                  })(this.node, b);
                },
                native: function () {
                  return this.node;
                },
                svg: function (b) {
                  var C = s.createElement("svg");
                  if (!(b && this instanceof o.Parent))
                    return (
                      C.appendChild((b = s.createElement("svg"))),
                      this.writeDataToDom(),
                      b.appendChild(this.node.cloneNode(!0)),
                      C.innerHTML.replace(/^<svg>/, "").replace(/<\/svg>$/, "")
                    );
                  C.innerHTML =
                    "<svg>" +
                    b
                      .replace(/\n/, "")
                      .replace(/<([\w:-]+)([^<]+?)\/>/g, "<$1$2></$1>") +
                    "</svg>";
                  for (
                    var F = 0, ee = C.firstChild.childNodes.length;
                    F < ee;
                    F++
                  )
                    this.node.appendChild(C.firstChild.firstChild);
                  return this;
                },
                writeDataToDom: function () {
                  return (
                    (this.each || this.lines) &&
                      (this.each ? this : this.lines()).each(function () {
                        this.writeDataToDom();
                      }),
                    this.node.removeAttribute("svgjs:data"),
                    Object.keys(this.dom).length &&
                      this.node.setAttribute(
                        "svgjs:data",
                        JSON.stringify(this.dom)
                      ),
                    this
                  );
                },
                setData: function (b) {
                  return (this.dom = b), this;
                },
                is: function (b) {
                  return (function (C, F) {
                    return C instanceof F;
                  })(this, b);
                },
              },
            })),
            (o.easing = {
              "-": function (b) {
                return b;
              },
              "<>": function (b) {
                return -Math.cos(b * Math.PI) / 2 + 0.5;
              },
              ">": function (b) {
                return Math.sin((b * Math.PI) / 2);
              },
              "<": function (b) {
                return 1 - Math.cos((b * Math.PI) / 2);
              },
            }),
            (o.morph = function (b) {
              return function (C, F) {
                return new o.MorphObj(C, F).at(b);
              };
            }),
            (o.Situation = o.invent({
              create: function (b) {
                (this.init = !1),
                  (this.reversed = !1),
                  (this.reversing = !1),
                  (this.duration = new o.Number(b.duration).valueOf()),
                  (this.delay = new o.Number(b.delay).valueOf()),
                  (this.start = +new Date() + this.delay),
                  (this.finish = this.start + this.duration),
                  (this.ease = b.ease),
                  (this.loop = 0),
                  (this.loops = !1),
                  (this.animations = {}),
                  (this.attrs = {}),
                  (this.styles = {}),
                  (this.transforms = []),
                  (this.once = {});
              },
            })),
            (o.FX = o.invent({
              create: function (b) {
                (this._target = b),
                  (this.situations = []),
                  (this.active = !1),
                  (this.situation = null),
                  (this.paused = !1),
                  (this.lastPos = 0),
                  (this.pos = 0),
                  (this.absPos = 0),
                  (this._speed = 1);
              },
              extend: {
                animate: function (b, C, F) {
                  i(b) === "object" &&
                    ((C = b.ease), (F = b.delay), (b = b.duration));
                  var ee = new o.Situation({
                    duration: b || 1e3,
                    delay: F || 0,
                    ease: o.easing[C || "-"] || C,
                  });
                  return this.queue(ee), this;
                },
                target: function (b) {
                  return b && b instanceof o.Element
                    ? ((this._target = b), this)
                    : this._target;
                },
                timeToAbsPos: function (b) {
                  return (
                    (b - this.situation.start) /
                    (this.situation.duration / this._speed)
                  );
                },
                absPosToTime: function (b) {
                  return (
                    (this.situation.duration / this._speed) * b +
                    this.situation.start
                  );
                },
                startAnimFrame: function () {
                  this.stopAnimFrame(),
                    (this.animationFrame = $.requestAnimationFrame(
                      function () {
                        this.step();
                      }.bind(this)
                    ));
                },
                stopAnimFrame: function () {
                  $.cancelAnimationFrame(this.animationFrame);
                },
                start: function () {
                  return (
                    !this.active &&
                      this.situation &&
                      ((this.active = !0), this.startCurrent()),
                    this
                  );
                },
                startCurrent: function () {
                  return (
                    (this.situation.start =
                      +new Date() + this.situation.delay / this._speed),
                    (this.situation.finish =
                      this.situation.start +
                      this.situation.duration / this._speed),
                    this.initAnimations().step()
                  );
                },
                queue: function (b) {
                  return (
                    (typeof b == "function" || b instanceof o.Situation) &&
                      this.situations.push(b),
                    this.situation ||
                      (this.situation = this.situations.shift()),
                    this
                  );
                },
                dequeue: function () {
                  return (
                    this.stop(),
                    (this.situation = this.situations.shift()),
                    this.situation &&
                      (this.situation instanceof o.Situation
                        ? this.start()
                        : this.situation.call(this)),
                    this
                  );
                },
                initAnimations: function () {
                  var b,
                    C = this.situation;
                  if (C.init) return this;
                  for (var F in C.animations) {
                    (b = this.target()[F]()),
                      Array.isArray(b) || (b = [b]),
                      Array.isArray(C.animations[F]) ||
                        (C.animations[F] = [C.animations[F]]);
                    for (var ee = b.length; ee--; )
                      C.animations[F][ee] instanceof o.Number &&
                        (b[ee] = new o.Number(b[ee])),
                        (C.animations[F][ee] = b[ee].morph(
                          C.animations[F][ee]
                        ));
                  }
                  for (var F in C.attrs)
                    C.attrs[F] = new o.MorphObj(
                      this.target().attr(F),
                      C.attrs[F]
                    );
                  for (var F in C.styles)
                    C.styles[F] = new o.MorphObj(
                      this.target().style(F),
                      C.styles[F]
                    );
                  return (
                    (C.initialTransformation = this.target().matrixify()),
                    (C.init = !0),
                    this
                  );
                },
                clearQueue: function () {
                  return (this.situations = []), this;
                },
                clearCurrent: function () {
                  return (this.situation = null), this;
                },
                stop: function (b, C) {
                  var F = this.active;
                  return (
                    (this.active = !1),
                    C && this.clearQueue(),
                    b &&
                      this.situation &&
                      (!F && this.startCurrent(), this.atEnd()),
                    this.stopAnimFrame(),
                    this.clearCurrent()
                  );
                },
                after: function (b) {
                  var C = this.last();
                  return (
                    this.target().on("finished.fx", function F(ee) {
                      ee.detail.situation == C &&
                        (b.call(this, C), this.off("finished.fx", F));
                    }),
                    this._callStart()
                  );
                },
                during: function (b) {
                  var C = this.last(),
                    F = function (ee) {
                      ee.detail.situation == C &&
                        b.call(
                          this,
                          ee.detail.pos,
                          o.morph(ee.detail.pos),
                          ee.detail.eased,
                          C
                        );
                    };
                  return (
                    this.target().off("during.fx", F).on("during.fx", F),
                    this.after(function () {
                      this.off("during.fx", F);
                    }),
                    this._callStart()
                  );
                },
                afterAll: function (b) {
                  var C = function F(ee) {
                    b.call(this), this.off("allfinished.fx", F);
                  };
                  return (
                    this.target()
                      .off("allfinished.fx", C)
                      .on("allfinished.fx", C),
                    this._callStart()
                  );
                },
                last: function () {
                  return this.situations.length
                    ? this.situations[this.situations.length - 1]
                    : this.situation;
                },
                add: function (b, C, F) {
                  return (
                    (this.last()[F || "animations"][b] = C), this._callStart()
                  );
                },
                step: function (b) {
                  var C, F, ee;
                  b || (this.absPos = this.timeToAbsPos(+new Date())),
                    this.situation.loops !== !1
                      ? ((C = Math.max(this.absPos, 0)),
                        (F = Math.floor(C)),
                        this.situation.loops === !0 || F < this.situation.loops
                          ? ((this.pos = C - F),
                            (ee = this.situation.loop),
                            (this.situation.loop = F))
                          : ((this.absPos = this.situation.loops),
                            (this.pos = 1),
                            (ee = this.situation.loop - 1),
                            (this.situation.loop = this.situation.loops)),
                        this.situation.reversing &&
                          (this.situation.reversed =
                            this.situation.reversed !=
                            !!((this.situation.loop - ee) % 2)))
                      : ((this.absPos = Math.min(this.absPos, 1)),
                        (this.pos = this.absPos)),
                    this.pos < 0 && (this.pos = 0),
                    this.situation.reversed && (this.pos = 1 - this.pos);
                  var ue = this.situation.ease(this.pos);
                  for (var he in this.situation.once)
                    he > this.lastPos &&
                      he <= ue &&
                      (this.situation.once[he].call(
                        this.target(),
                        this.pos,
                        ue
                      ),
                      delete this.situation.once[he]);
                  return (
                    this.active &&
                      this.target().fire("during", {
                        pos: this.pos,
                        eased: ue,
                        fx: this,
                        situation: this.situation,
                      }),
                    this.situation
                      ? (this.eachAt(),
                        (this.pos == 1 && !this.situation.reversed) ||
                        (this.situation.reversed && this.pos == 0)
                          ? (this.stopAnimFrame(),
                            this.target().fire("finished", {
                              fx: this,
                              situation: this.situation,
                            }),
                            this.situations.length ||
                              (this.target().fire("allfinished"),
                              this.situations.length ||
                                (this.target().off(".fx"), (this.active = !1))),
                            this.active ? this.dequeue() : this.clearCurrent())
                          : !this.paused &&
                            this.active &&
                            this.startAnimFrame(),
                        (this.lastPos = ue),
                        this)
                      : this
                  );
                },
                eachAt: function () {
                  var b,
                    C = this,
                    F = this.target(),
                    ee = this.situation;
                  for (var ue in ee.animations)
                    (b = [].concat(ee.animations[ue]).map(function (Ae) {
                      return typeof Ae != "string" && Ae.at
                        ? Ae.at(ee.ease(C.pos), C.pos)
                        : Ae;
                    })),
                      F[ue].apply(F, b);
                  for (var ue in ee.attrs)
                    (b = [ue].concat(ee.attrs[ue]).map(function (Le) {
                      return typeof Le != "string" && Le.at
                        ? Le.at(ee.ease(C.pos), C.pos)
                        : Le;
                    })),
                      F.attr.apply(F, b);
                  for (var ue in ee.styles)
                    (b = [ue].concat(ee.styles[ue]).map(function (Le) {
                      return typeof Le != "string" && Le.at
                        ? Le.at(ee.ease(C.pos), C.pos)
                        : Le;
                    })),
                      F.style.apply(F, b);
                  if (ee.transforms.length) {
                    (b = ee.initialTransformation), (ue = 0);
                    for (var he = ee.transforms.length; ue < he; ue++) {
                      var we = ee.transforms[ue];
                      we instanceof o.Matrix
                        ? (b = we.relative
                            ? b.multiply(
                                new o.Matrix().morph(we).at(ee.ease(this.pos))
                              )
                            : b.morph(we).at(ee.ease(this.pos)))
                        : (we.relative || we.undo(b.extract()),
                          (b = b.multiply(we.at(ee.ease(this.pos)))));
                    }
                    F.matrix(b);
                  }
                  return this;
                },
                once: function (b, C, F) {
                  var ee = this.last();
                  return F || (b = ee.ease(b)), (ee.once[b] = C), this;
                },
                _callStart: function () {
                  return (
                    setTimeout(
                      function () {
                        this.start();
                      }.bind(this),
                      0
                    ),
                    this
                  );
                },
              },
              parent: o.Element,
              construct: {
                animate: function (b, C, F) {
                  return (this.fx || (this.fx = new o.FX(this))).animate(
                    b,
                    C,
                    F
                  );
                },
                delay: function (b) {
                  return (this.fx || (this.fx = new o.FX(this))).delay(b);
                },
                stop: function (b, C) {
                  return this.fx && this.fx.stop(b, C), this;
                },
                finish: function () {
                  return this.fx && this.fx.finish(), this;
                },
              },
            })),
            (o.MorphObj = o.invent({
              create: function (b, C) {
                return o.Color.isColor(C)
                  ? new o.Color(b).morph(C)
                  : o.regex.delimiter.test(b)
                  ? o.regex.pathLetters.test(b)
                    ? new o.PathArray(b).morph(C)
                    : new o.Array(b).morph(C)
                  : o.regex.numberAndUnit.test(C)
                  ? new o.Number(b).morph(C)
                  : ((this.value = b), void (this.destination = C));
              },
              extend: {
                at: function (b, C) {
                  return C < 1 ? this.value : this.destination;
                },
                valueOf: function () {
                  return this.value;
                },
              },
            })),
            o.extend(o.FX, {
              attr: function (b, C, F) {
                if (i(b) === "object") for (var ee in b) this.attr(ee, b[ee]);
                else this.add(b, C, "attrs");
                return this;
              },
              plot: function (b, C, F, ee) {
                return arguments.length == 4
                  ? this.plot([b, C, F, ee])
                  : this.add("plot", new (this.target().morphArray)(b));
              },
            }),
            (o.Box = o.invent({
              create: function (b, C, F, ee) {
                if (!(i(b) !== "object" || b instanceof o.Element))
                  return o.Box.call(
                    this,
                    b.left != null ? b.left : b.x,
                    b.top != null ? b.top : b.y,
                    b.width,
                    b.height
                  );
                var ue;
                arguments.length == 4 &&
                  ((this.x = b),
                  (this.y = C),
                  (this.width = F),
                  (this.height = ee)),
                  (ue = this).x == null &&
                    ((ue.x = 0), (ue.y = 0), (ue.width = 0), (ue.height = 0)),
                  (ue.w = ue.width),
                  (ue.h = ue.height),
                  (ue.x2 = ue.x + ue.width),
                  (ue.y2 = ue.y + ue.height),
                  (ue.cx = ue.x + ue.width / 2),
                  (ue.cy = ue.y + ue.height / 2);
              },
            })),
            (o.BBox = o.invent({
              create: function (b) {
                if (
                  (o.Box.apply(this, [].slice.call(arguments)),
                  b instanceof o.Element)
                ) {
                  var C;
                  try {
                    if (!s.documentElement.contains) {
                      for (var F = b.node; F.parentNode; ) F = F.parentNode;
                      if (F != s) throw new Error("Element not in the dom");
                    }
                    C = b.node.getBBox();
                  } catch {
                    if (b instanceof o.Shape) {
                      o.parser.draw || o.prepare();
                      var ee = b.clone(o.parser.draw.instance).show();
                      ee &&
                        ee.node &&
                        typeof ee.node.getBBox == "function" &&
                        (C = ee.node.getBBox()),
                        ee && typeof ee.remove == "function" && ee.remove();
                    } else
                      C = {
                        x: b.node.clientLeft,
                        y: b.node.clientTop,
                        width: b.node.clientWidth,
                        height: b.node.clientHeight,
                      };
                  }
                  o.Box.call(this, C);
                }
              },
              inherit: o.Box,
              parent: o.Element,
              construct: {
                bbox: function () {
                  return new o.BBox(this);
                },
              },
            })),
            (o.BBox.prototype.constructor = o.BBox),
            (o.Matrix = o.invent({
              create: function (b) {
                var C = N([1, 0, 0, 1, 0, 0]);
                b =
                  b === null
                    ? C
                    : b instanceof o.Element
                    ? b.matrixify()
                    : typeof b == "string"
                    ? N(b.split(o.regex.delimiter).map(parseFloat))
                    : arguments.length == 6
                    ? N([].slice.call(arguments))
                    : Array.isArray(b)
                    ? N(b)
                    : b && i(b) === "object"
                    ? b
                    : C;
                for (var F = te.length - 1; F >= 0; --F)
                  this[te[F]] = b[te[F]] != null ? b[te[F]] : C[te[F]];
              },
              extend: {
                extract: function () {
                  var b = O(this, 0, 1);
                  O(this, 1, 0);
                  var C = (180 / Math.PI) * Math.atan2(b.y, b.x) - 90;
                  return {
                    x: this.e,
                    y: this.f,
                    transformedX:
                      (this.e * Math.cos((C * Math.PI) / 180) +
                        this.f * Math.sin((C * Math.PI) / 180)) /
                      Math.sqrt(this.a * this.a + this.b * this.b),
                    transformedY:
                      (this.f * Math.cos((C * Math.PI) / 180) +
                        this.e * Math.sin((-C * Math.PI) / 180)) /
                      Math.sqrt(this.c * this.c + this.d * this.d),
                    rotation: C,
                    a: this.a,
                    b: this.b,
                    c: this.c,
                    d: this.d,
                    e: this.e,
                    f: this.f,
                    matrix: new o.Matrix(this),
                  };
                },
                clone: function () {
                  return new o.Matrix(this);
                },
                morph: function (b) {
                  return (this.destination = new o.Matrix(b)), this;
                },
                multiply: function (b) {
                  return new o.Matrix(
                    this.native().multiply(
                      (function (C) {
                        return (
                          C instanceof o.Matrix || (C = new o.Matrix(C)), C
                        );
                      })(b).native()
                    )
                  );
                },
                inverse: function () {
                  return new o.Matrix(this.native().inverse());
                },
                translate: function (b, C) {
                  return new o.Matrix(this.native().translate(b || 0, C || 0));
                },
                native: function () {
                  for (
                    var b = o.parser.native.createSVGMatrix(),
                      C = te.length - 1;
                    C >= 0;
                    C--
                  )
                    b[te[C]] = this[te[C]];
                  return b;
                },
                toString: function () {
                  return (
                    "matrix(" +
                    G(this.a) +
                    "," +
                    G(this.b) +
                    "," +
                    G(this.c) +
                    "," +
                    G(this.d) +
                    "," +
                    G(this.e) +
                    "," +
                    G(this.f) +
                    ")"
                  );
                },
              },
              parent: o.Element,
              construct: {
                ctm: function () {
                  return new o.Matrix(this.node.getCTM());
                },
                screenCTM: function () {
                  if (this instanceof o.Nested) {
                    var b = this.rect(1, 1),
                      C = b.node.getScreenCTM();
                    return b.remove(), new o.Matrix(C);
                  }
                  return new o.Matrix(this.node.getScreenCTM());
                },
              },
            })),
            (o.Point = o.invent({
              create: function (b, C) {
                var F;
                (F = Array.isArray(b)
                  ? { x: b[0], y: b[1] }
                  : i(b) === "object"
                  ? { x: b.x, y: b.y }
                  : b != null
                  ? { x: b, y: C ?? b }
                  : { x: 0, y: 0 }),
                  (this.x = F.x),
                  (this.y = F.y);
              },
              extend: {
                clone: function () {
                  return new o.Point(this);
                },
                morph: function (b, C) {
                  return (this.destination = new o.Point(b, C)), this;
                },
              },
            })),
            o.extend(o.Element, {
              point: function (b, C) {
                return new o.Point(b, C).transform(this.screenCTM().inverse());
              },
            }),
            o.extend(o.Element, {
              attr: function (b, C, F) {
                if (b == null) {
                  for (
                    b = {}, F = (C = this.node.attributes).length - 1;
                    F >= 0;
                    F--
                  )
                    b[C[F].nodeName] = o.regex.isNumber.test(C[F].nodeValue)
                      ? parseFloat(C[F].nodeValue)
                      : C[F].nodeValue;
                  return b;
                }
                if (i(b) === "object") for (var ee in b) this.attr(ee, b[ee]);
                else if (C === null) this.node.removeAttribute(b);
                else {
                  if (C == null)
                    return (C = this.node.getAttribute(b)) == null
                      ? o.defaults.attrs[b]
                      : o.regex.isNumber.test(C)
                      ? parseFloat(C)
                      : C;
                  b == "stroke-width"
                    ? this.attr(
                        "stroke",
                        parseFloat(C) > 0 ? this._stroke : null
                      )
                    : b == "stroke" && (this._stroke = C),
                    (b != "fill" && b != "stroke") ||
                      (o.regex.isImage.test(C) &&
                        (C = this.doc().defs().image(C, 0, 0)),
                      C instanceof o.Image &&
                        (C = this.doc()
                          .defs()
                          .pattern(0, 0, function () {
                            this.add(C);
                          }))),
                    typeof C == "number"
                      ? (C = new o.Number(C))
                      : o.Color.isColor(C)
                      ? (C = new o.Color(C))
                      : Array.isArray(C) && (C = new o.Array(C)),
                    b == "leading"
                      ? this.leading && this.leading(C)
                      : typeof F == "string"
                      ? this.node.setAttributeNS(F, b, C.toString())
                      : this.node.setAttribute(b, C.toString()),
                    !this.rebuild ||
                      (b != "font-size" && b != "x") ||
                      this.rebuild(b, C);
                }
                return this;
              },
            }),
            o.extend(o.Element, {
              transform: function (b, C) {
                var F;
                return i(b) !== "object"
                  ? ((F = new o.Matrix(this).extract()),
                    typeof b == "string" ? F[b] : F)
                  : ((F = new o.Matrix(this)),
                    (C = !!C || !!b.relative),
                    b.a != null &&
                      (F = C ? F.multiply(new o.Matrix(b)) : new o.Matrix(b)),
                    this.attr("transform", F));
              },
            }),
            o.extend(o.Element, {
              untransform: function () {
                return this.attr("transform", null);
              },
              matrixify: function () {
                return (this.attr("transform") || "")
                  .split(o.regex.transforms)
                  .slice(0, -1)
                  .map(function (b) {
                    var C = b.trim().split("(");
                    return [
                      C[0],
                      C[1].split(o.regex.delimiter).map(function (F) {
                        return parseFloat(F);
                      }),
                    ];
                  })
                  .reduce(function (b, C) {
                    return C[0] == "matrix"
                      ? b.multiply(N(C[1]))
                      : b[C[0]].apply(b, C[1]);
                  }, new o.Matrix());
              },
              toParent: function (b) {
                if (this == b) return this;
                var C = this.screenCTM(),
                  F = b.screenCTM().inverse();
                return (
                  this.addTo(b).untransform().transform(F.multiply(C)), this
                );
              },
              toDoc: function () {
                return this.toParent(this.doc());
              },
            }),
            (o.Transformation = o.invent({
              create: function (b, C) {
                if (arguments.length > 1 && typeof C != "boolean")
                  return this.constructor.call(this, [].slice.call(arguments));
                if (Array.isArray(b))
                  for (var F = 0, ee = this.arguments.length; F < ee; ++F)
                    this[this.arguments[F]] = b[F];
                else if (b && i(b) === "object")
                  for (F = 0, ee = this.arguments.length; F < ee; ++F)
                    this[this.arguments[F]] = b[this.arguments[F]];
                (this.inversed = !1), C === !0 && (this.inversed = !0);
              },
            })),
            (o.Translate = o.invent({
              parent: o.Matrix,
              inherit: o.Transformation,
              create: function (b, C) {
                this.constructor.apply(this, [].slice.call(arguments));
              },
              extend: {
                arguments: ["transformedX", "transformedY"],
                method: "translate",
              },
            })),
            o.extend(o.Element, {
              style: function (b, C) {
                if (arguments.length == 0) return this.node.style.cssText || "";
                if (arguments.length < 2)
                  if (i(b) === "object") for (var F in b) this.style(F, b[F]);
                  else {
                    if (!o.regex.isCss.test(b)) return this.node.style[x(b)];
                    for (
                      b = b
                        .split(/\s*;\s*/)
                        .filter(function (ee) {
                          return !!ee;
                        })
                        .map(function (ee) {
                          return ee.split(/\s*:\s*/);
                        });
                      (C = b.pop());

                    )
                      this.style(C[0], C[1]);
                  }
                else
                  this.node.style[x(b)] =
                    C === null || o.regex.isBlank.test(C) ? "" : C;
                return this;
              },
            }),
            (o.Parent = o.invent({
              create: function (b) {
                this.constructor.call(this, b);
              },
              inherit: o.Element,
              extend: {
                children: function () {
                  return o.utils.map(
                    o.utils.filterSVGElements(this.node.childNodes),
                    function (b) {
                      return o.adopt(b);
                    }
                  );
                },
                add: function (b, C) {
                  return (
                    C == null
                      ? this.node.appendChild(b.node)
                      : b.node != this.node.childNodes[C] &&
                        this.node.insertBefore(b.node, this.node.childNodes[C]),
                    this
                  );
                },
                put: function (b, C) {
                  return this.add(b, C), b;
                },
                has: function (b) {
                  return this.index(b) >= 0;
                },
                index: function (b) {
                  return [].slice.call(this.node.childNodes).indexOf(b.node);
                },
                get: function (b) {
                  return o.adopt(this.node.childNodes[b]);
                },
                first: function () {
                  return this.get(0);
                },
                last: function () {
                  return this.get(this.node.childNodes.length - 1);
                },
                each: function (b, C) {
                  for (
                    var F = this.children(), ee = 0, ue = F.length;
                    ee < ue;
                    ee++
                  )
                    F[ee] instanceof o.Element && b.apply(F[ee], [ee, F]),
                      C && F[ee] instanceof o.Container && F[ee].each(b, C);
                  return this;
                },
                removeElement: function (b) {
                  return this.node.removeChild(b.node), this;
                },
                clear: function () {
                  for (; this.node.hasChildNodes(); )
                    this.node.removeChild(this.node.lastChild);
                  return delete this._defs, this;
                },
                defs: function () {
                  return this.doc().defs();
                },
              },
            })),
            o.extend(o.Parent, {
              ungroup: function (b, C) {
                return (
                  C === 0 ||
                    this instanceof o.Defs ||
                    this.node == o.parser.draw ||
                    ((b =
                      b ||
                      (this instanceof o.Doc ? this : this.parent(o.Parent))),
                    (C = C || 1 / 0),
                    this.each(function () {
                      return this instanceof o.Defs
                        ? this
                        : this instanceof o.Parent
                        ? this.ungroup(b, C - 1)
                        : this.toParent(b);
                    }),
                    this.node.firstChild || this.remove()),
                  this
                );
              },
              flatten: function (b, C) {
                return this.ungroup(b, C);
              },
            }),
            (o.Container = o.invent({
              create: function (b) {
                this.constructor.call(this, b);
              },
              inherit: o.Parent,
            })),
            (o.ViewBox = o.invent({ parent: o.Container, construct: {} })),
            [
              "click",
              "dblclick",
              "mousedown",
              "mouseup",
              "mouseover",
              "mouseout",
              "mousemove",
              "touchstart",
              "touchmove",
              "touchleave",
              "touchend",
              "touchcancel",
            ].forEach(function (b) {
              o.Element.prototype[b] = function (C) {
                return o.on(this.node, b, C), this;
              };
            }),
            (o.listeners = []),
            (o.handlerMap = []),
            (o.listenerId = 0),
            (o.on = function (b, C, F, ee, ue) {
              var he = F.bind(ee || b.instance || b),
                we = (o.handlerMap.indexOf(b) + 1 || o.handlerMap.push(b)) - 1,
                Ae = C.split(".")[0],
                Le = C.split(".")[1] || "*";
              (o.listeners[we] = o.listeners[we] || {}),
                (o.listeners[we][Ae] = o.listeners[we][Ae] || {}),
                (o.listeners[we][Ae][Le] = o.listeners[we][Ae][Le] || {}),
                F._svgjsListenerId || (F._svgjsListenerId = ++o.listenerId),
                (o.listeners[we][Ae][Le][F._svgjsListenerId] = he),
                b.addEventListener(Ae, he, ue || { passive: !0 });
            }),
            (o.off = function (b, C, F) {
              var ee = o.handlerMap.indexOf(b),
                ue = C && C.split(".")[0],
                he = C && C.split(".")[1],
                we = "";
              if (ee != -1)
                if (F) {
                  if ((typeof F == "function" && (F = F._svgjsListenerId), !F))
                    return;
                  o.listeners[ee][ue] &&
                    o.listeners[ee][ue][he || "*"] &&
                    (b.removeEventListener(
                      ue,
                      o.listeners[ee][ue][he || "*"][F],
                      !1
                    ),
                    delete o.listeners[ee][ue][he || "*"][F]);
                } else if (he && ue) {
                  if (o.listeners[ee][ue] && o.listeners[ee][ue][he]) {
                    for (var Ae in o.listeners[ee][ue][he])
                      o.off(b, [ue, he].join("."), Ae);
                    delete o.listeners[ee][ue][he];
                  }
                } else if (he)
                  for (var Le in o.listeners[ee])
                    for (var we in o.listeners[ee][Le])
                      he === we && o.off(b, [Le, he].join("."));
                else if (ue) {
                  if (o.listeners[ee][ue]) {
                    for (var we in o.listeners[ee][ue])
                      o.off(b, [ue, we].join("."));
                    delete o.listeners[ee][ue];
                  }
                } else {
                  for (var Le in o.listeners[ee]) o.off(b, Le);
                  delete o.listeners[ee], delete o.handlerMap[ee];
                }
            }),
            o.extend(o.Element, {
              on: function (b, C, F, ee) {
                return o.on(this.node, b, C, F, ee), this;
              },
              off: function (b, C) {
                return o.off(this.node, b, C), this;
              },
              fire: function (b, C) {
                return (
                  b instanceof $.Event
                    ? this.node.dispatchEvent(b)
                    : this.node.dispatchEvent(
                        (b = new o.CustomEvent(b, {
                          detail: C,
                          cancelable: !0,
                        }))
                      ),
                  (this._event = b),
                  this
                );
              },
              event: function () {
                return this._event;
              },
            }),
            (o.Defs = o.invent({ create: "defs", inherit: o.Container })),
            (o.G = o.invent({
              create: "g",
              inherit: o.Container,
              extend: {
                x: function (b) {
                  return b == null
                    ? this.transform("x")
                    : this.transform({ x: b - this.x() }, !0);
                },
              },
              construct: {
                group: function () {
                  return this.put(new o.G());
                },
              },
            })),
            (o.Doc = o.invent({
              create: function (b) {
                b &&
                  ((b = typeof b == "string" ? s.getElementById(b) : b)
                    .nodeName == "svg"
                    ? this.constructor.call(this, b)
                    : (this.constructor.call(this, o.create("svg")),
                      b.appendChild(this.node),
                      this.size("100%", "100%")),
                  this.namespace().defs());
              },
              inherit: o.Container,
              extend: {
                namespace: function () {
                  return this.attr({ xmlns: o.ns, version: "1.1" })
                    .attr("xmlns:xlink", o.xlink, o.xmlns)
                    .attr("xmlns:svgjs", o.svgjs, o.xmlns);
                },
                defs: function () {
                  var b;
                  return (
                    this._defs ||
                      ((b = this.node.getElementsByTagName("defs")[0])
                        ? (this._defs = o.adopt(b))
                        : (this._defs = new o.Defs()),
                      this.node.appendChild(this._defs.node)),
                    this._defs
                  );
                },
                parent: function () {
                  return this.node.parentNode &&
                    this.node.parentNode.nodeName != "#document"
                    ? this.node.parentNode
                    : null;
                },
                remove: function () {
                  return (
                    this.parent() && this.parent().removeChild(this.node), this
                  );
                },
                clear: function () {
                  for (; this.node.hasChildNodes(); )
                    this.node.removeChild(this.node.lastChild);
                  return (
                    delete this._defs,
                    o.parser.draw &&
                      !o.parser.draw.parentNode &&
                      this.node.appendChild(o.parser.draw),
                    this
                  );
                },
                clone: function (b) {
                  this.writeDataToDom();
                  var C = this.node,
                    F = H(C.cloneNode(!0));
                  return (
                    b
                      ? (b.node || b).appendChild(F.node)
                      : C.parentNode.insertBefore(F.node, C.nextSibling),
                    F
                  );
                },
              },
            })),
            o.extend(o.Element, {}),
            (o.Gradient = o.invent({
              create: function (b) {
                this.constructor.call(this, o.create(b + "Gradient")),
                  (this.type = b);
              },
              inherit: o.Container,
              extend: {
                at: function (b, C, F) {
                  return this.put(new o.Stop()).update(b, C, F);
                },
                update: function (b) {
                  return (
                    this.clear(),
                    typeof b == "function" && b.call(this, this),
                    this
                  );
                },
                fill: function () {
                  return "url(#" + this.id() + ")";
                },
                toString: function () {
                  return this.fill();
                },
                attr: function (b, C, F) {
                  return (
                    b == "transform" && (b = "gradientTransform"),
                    o.Container.prototype.attr.call(this, b, C, F)
                  );
                },
              },
              construct: {
                gradient: function (b, C) {
                  return this.defs().gradient(b, C);
                },
              },
            })),
            o.extend(o.Gradient, o.FX, {
              from: function (b, C) {
                return (this._target || this).type == "radial"
                  ? this.attr({ fx: new o.Number(b), fy: new o.Number(C) })
                  : this.attr({ x1: new o.Number(b), y1: new o.Number(C) });
              },
              to: function (b, C) {
                return (this._target || this).type == "radial"
                  ? this.attr({ cx: new o.Number(b), cy: new o.Number(C) })
                  : this.attr({ x2: new o.Number(b), y2: new o.Number(C) });
              },
            }),
            o.extend(o.Defs, {
              gradient: function (b, C) {
                return this.put(new o.Gradient(b)).update(C);
              },
            }),
            (o.Stop = o.invent({
              create: "stop",
              inherit: o.Element,
              extend: {
                update: function (b) {
                  return (
                    (typeof b == "number" || b instanceof o.Number) &&
                      (b = {
                        offset: arguments[0],
                        color: arguments[1],
                        opacity: arguments[2],
                      }),
                    b.opacity != null && this.attr("stop-opacity", b.opacity),
                    b.color != null && this.attr("stop-color", b.color),
                    b.offset != null &&
                      this.attr("offset", new o.Number(b.offset)),
                    this
                  );
                },
              },
            })),
            (o.Pattern = o.invent({
              create: "pattern",
              inherit: o.Container,
              extend: {
                fill: function () {
                  return "url(#" + this.id() + ")";
                },
                update: function (b) {
                  return (
                    this.clear(),
                    typeof b == "function" && b.call(this, this),
                    this
                  );
                },
                toString: function () {
                  return this.fill();
                },
                attr: function (b, C, F) {
                  return (
                    b == "transform" && (b = "patternTransform"),
                    o.Container.prototype.attr.call(this, b, C, F)
                  );
                },
              },
              construct: {
                pattern: function (b, C, F) {
                  return this.defs().pattern(b, C, F);
                },
              },
            })),
            o.extend(o.Defs, {
              pattern: function (b, C, F) {
                return this.put(new o.Pattern())
                  .update(F)
                  .attr({
                    x: 0,
                    y: 0,
                    width: b,
                    height: C,
                    patternUnits: "userSpaceOnUse",
                  });
              },
            }),
            (o.Shape = o.invent({
              create: function (b) {
                this.constructor.call(this, b);
              },
              inherit: o.Element,
            })),
            (o.Symbol = o.invent({
              create: "symbol",
              inherit: o.Container,
              construct: {
                symbol: function () {
                  return this.put(new o.Symbol());
                },
              },
            })),
            (o.Use = o.invent({
              create: "use",
              inherit: o.Shape,
              extend: {
                element: function (b, C) {
                  return this.attr("href", (C || "") + "#" + b, o.xlink);
                },
              },
              construct: {
                use: function (b, C) {
                  return this.put(new o.Use()).element(b, C);
                },
              },
            })),
            (o.Rect = o.invent({
              create: "rect",
              inherit: o.Shape,
              construct: {
                rect: function (b, C) {
                  return this.put(new o.Rect()).size(b, C);
                },
              },
            })),
            (o.Circle = o.invent({
              create: "circle",
              inherit: o.Shape,
              construct: {
                circle: function (b) {
                  return this.put(new o.Circle())
                    .rx(new o.Number(b).divide(2))
                    .move(0, 0);
                },
              },
            })),
            o.extend(o.Circle, o.FX, {
              rx: function (b) {
                return this.attr("r", b);
              },
              ry: function (b) {
                return this.rx(b);
              },
            }),
            (o.Ellipse = o.invent({
              create: "ellipse",
              inherit: o.Shape,
              construct: {
                ellipse: function (b, C) {
                  return this.put(new o.Ellipse()).size(b, C).move(0, 0);
                },
              },
            })),
            o.extend(o.Ellipse, o.Rect, o.FX, {
              rx: function (b) {
                return this.attr("rx", b);
              },
              ry: function (b) {
                return this.attr("ry", b);
              },
            }),
            o.extend(o.Circle, o.Ellipse, {
              x: function (b) {
                return b == null
                  ? this.cx() - this.rx()
                  : this.cx(b + this.rx());
              },
              y: function (b) {
                return b == null
                  ? this.cy() - this.ry()
                  : this.cy(b + this.ry());
              },
              cx: function (b) {
                return b == null ? this.attr("cx") : this.attr("cx", b);
              },
              cy: function (b) {
                return b == null ? this.attr("cy") : this.attr("cy", b);
              },
              width: function (b) {
                return b == null
                  ? 2 * this.rx()
                  : this.rx(new o.Number(b).divide(2));
              },
              height: function (b) {
                return b == null
                  ? 2 * this.ry()
                  : this.ry(new o.Number(b).divide(2));
              },
              size: function (b, C) {
                var F = A(this, b, C);
                return this.rx(new o.Number(F.width).divide(2)).ry(
                  new o.Number(F.height).divide(2)
                );
              },
            }),
            (o.Line = o.invent({
              create: "line",
              inherit: o.Shape,
              extend: {
                array: function () {
                  return new o.PointArray([
                    [this.attr("x1"), this.attr("y1")],
                    [this.attr("x2"), this.attr("y2")],
                  ]);
                },
                plot: function (b, C, F, ee) {
                  return b == null
                    ? this.array()
                    : ((b =
                        C !== void 0
                          ? { x1: b, y1: C, x2: F, y2: ee }
                          : new o.PointArray(b).toLine()),
                      this.attr(b));
                },
                move: function (b, C) {
                  return this.attr(this.array().move(b, C).toLine());
                },
                size: function (b, C) {
                  var F = A(this, b, C);
                  return this.attr(
                    this.array().size(F.width, F.height).toLine()
                  );
                },
              },
              construct: {
                line: function (b, C, F, ee) {
                  return o.Line.prototype.plot.apply(
                    this.put(new o.Line()),
                    b != null ? [b, C, F, ee] : [0, 0, 0, 0]
                  );
                },
              },
            })),
            (o.Polyline = o.invent({
              create: "polyline",
              inherit: o.Shape,
              construct: {
                polyline: function (b) {
                  return this.put(new o.Polyline()).plot(
                    b || new o.PointArray()
                  );
                },
              },
            })),
            (o.Polygon = o.invent({
              create: "polygon",
              inherit: o.Shape,
              construct: {
                polygon: function (b) {
                  return this.put(new o.Polygon()).plot(
                    b || new o.PointArray()
                  );
                },
              },
            })),
            o.extend(o.Polyline, o.Polygon, {
              array: function () {
                return (
                  this._array ||
                  (this._array = new o.PointArray(this.attr("points")))
                );
              },
              plot: function (b) {
                return b == null
                  ? this.array()
                  : this.clear().attr(
                      "points",
                      typeof b == "string"
                        ? b
                        : (this._array = new o.PointArray(b))
                    );
              },
              clear: function () {
                return delete this._array, this;
              },
              move: function (b, C) {
                return this.attr("points", this.array().move(b, C));
              },
              size: function (b, C) {
                var F = A(this, b, C);
                return this.attr(
                  "points",
                  this.array().size(F.width, F.height)
                );
              },
            }),
            o.extend(o.Line, o.Polyline, o.Polygon, {
              morphArray: o.PointArray,
              x: function (b) {
                return b == null ? this.bbox().x : this.move(b, this.bbox().y);
              },
              y: function (b) {
                return b == null ? this.bbox().y : this.move(this.bbox().x, b);
              },
              width: function (b) {
                var C = this.bbox();
                return b == null ? C.width : this.size(b, C.height);
              },
              height: function (b) {
                var C = this.bbox();
                return b == null ? C.height : this.size(C.width, b);
              },
            }),
            (o.Path = o.invent({
              create: "path",
              inherit: o.Shape,
              extend: {
                morphArray: o.PathArray,
                array: function () {
                  return (
                    this._array ||
                    (this._array = new o.PathArray(this.attr("d")))
                  );
                },
                plot: function (b) {
                  return b == null
                    ? this.array()
                    : this.clear().attr(
                        "d",
                        typeof b == "string"
                          ? b
                          : (this._array = new o.PathArray(b))
                      );
                },
                clear: function () {
                  return delete this._array, this;
                },
              },
              construct: {
                path: function (b) {
                  return this.put(new o.Path()).plot(b || new o.PathArray());
                },
              },
            })),
            (o.Image = o.invent({
              create: "image",
              inherit: o.Shape,
              extend: {
                load: function (b) {
                  if (!b) return this;
                  var C = this,
                    F = new $.Image();
                  return (
                    o.on(F, "load", function () {
                      o.off(F);
                      var ee = C.parent(o.Pattern);
                      ee !== null &&
                        (C.width() == 0 &&
                          C.height() == 0 &&
                          C.size(F.width, F.height),
                        ee &&
                          ee.width() == 0 &&
                          ee.height() == 0 &&
                          ee.size(C.width(), C.height()),
                        typeof C._loaded == "function" &&
                          C._loaded.call(C, {
                            width: F.width,
                            height: F.height,
                            ratio: F.width / F.height,
                            url: b,
                          }));
                    }),
                    o.on(F, "error", function (ee) {
                      o.off(F),
                        typeof C._error == "function" && C._error.call(C, ee);
                    }),
                    this.attr("href", (F.src = this.src = b), o.xlink)
                  );
                },
                loaded: function (b) {
                  return (this._loaded = b), this;
                },
                error: function (b) {
                  return (this._error = b), this;
                },
              },
              construct: {
                image: function (b, C, F) {
                  return this.put(new o.Image())
                    .load(b)
                    .size(C || 0, F || C || 0);
                },
              },
            })),
            (o.Text = o.invent({
              create: function () {
                this.constructor.call(this, o.create("text")),
                  (this.dom.leading = new o.Number(1.3)),
                  (this._rebuild = !0),
                  (this._build = !1),
                  this.attr("font-family", o.defaults.attrs["font-family"]);
              },
              inherit: o.Shape,
              extend: {
                x: function (b) {
                  return b == null ? this.attr("x") : this.attr("x", b);
                },
                text: function (b) {
                  if (b === void 0) {
                    b = "";
                    for (
                      var C = this.node.childNodes, F = 0, ee = C.length;
                      F < ee;
                      ++F
                    )
                      F != 0 &&
                        C[F].nodeType != 3 &&
                        o.adopt(C[F]).dom.newLined == 1 &&
                        (b += `
`),
                        (b += C[F].textContent);
                    return b;
                  }
                  if ((this.clear().build(!0), typeof b == "function"))
                    b.call(this, this);
                  else {
                    F = 0;
                    for (
                      var ue = (b = b.split(`
`)).length;
                      F < ue;
                      F++
                    )
                      this.tspan(b[F]).newLine();
                  }
                  return this.build(!1).rebuild();
                },
                size: function (b) {
                  return this.attr("font-size", b).rebuild();
                },
                leading: function (b) {
                  return b == null
                    ? this.dom.leading
                    : ((this.dom.leading = new o.Number(b)), this.rebuild());
                },
                lines: function () {
                  var b = ((this.textPath && this.textPath()) || this).node,
                    C = o.utils.map(
                      o.utils.filterSVGElements(b.childNodes),
                      function (F) {
                        return o.adopt(F);
                      }
                    );
                  return new o.Set(C);
                },
                rebuild: function (b) {
                  if (
                    (typeof b == "boolean" && (this._rebuild = b),
                    this._rebuild)
                  ) {
                    var C = this,
                      F = 0,
                      ee =
                        this.dom.leading * new o.Number(this.attr("font-size"));
                    this.lines().each(function () {
                      this.dom.newLined &&
                        (C.textPath() || this.attr("x", C.attr("x")),
                        this.text() ==
                        `
`
                          ? (F += ee)
                          : (this.attr("dy", ee + F), (F = 0)));
                    }),
                      this.fire("rebuild");
                  }
                  return this;
                },
                build: function (b) {
                  return (this._build = !!b), this;
                },
                setData: function (b) {
                  return (
                    (this.dom = b),
                    (this.dom.leading = new o.Number(b.leading || 1.3)),
                    this
                  );
                },
              },
              construct: {
                text: function (b) {
                  return this.put(new o.Text()).text(b);
                },
                plain: function (b) {
                  return this.put(new o.Text()).plain(b);
                },
              },
            })),
            (o.Tspan = o.invent({
              create: "tspan",
              inherit: o.Shape,
              extend: {
                text: function (b) {
                  return b == null
                    ? this.node.textContent +
                        (this.dom.newLined
                          ? `
`
                          : "")
                    : (typeof b == "function"
                        ? b.call(this, this)
                        : this.plain(b),
                      this);
                },
                dx: function (b) {
                  return this.attr("dx", b);
                },
                dy: function (b) {
                  return this.attr("dy", b);
                },
                newLine: function () {
                  var b = this.parent(o.Text);
                  return (
                    (this.dom.newLined = !0),
                    this.dy(b.dom.leading * b.attr("font-size")).attr(
                      "x",
                      b.x()
                    )
                  );
                },
              },
            })),
            o.extend(o.Text, o.Tspan, {
              plain: function (b) {
                return (
                  this._build === !1 && this.clear(),
                  this.node.appendChild(s.createTextNode(b)),
                  this
                );
              },
              tspan: function (b) {
                var C = ((this.textPath && this.textPath()) || this).node,
                  F = new o.Tspan();
                return (
                  this._build === !1 && this.clear(),
                  C.appendChild(F.node),
                  F.text(b)
                );
              },
              clear: function () {
                for (
                  var b = ((this.textPath && this.textPath()) || this).node;
                  b.hasChildNodes();

                )
                  b.removeChild(b.lastChild);
                return this;
              },
              length: function () {
                return this.node.getComputedTextLength();
              },
            }),
            (o.TextPath = o.invent({
              create: "textPath",
              inherit: o.Parent,
              parent: o.Text,
              construct: {
                morphArray: o.PathArray,
                array: function () {
                  var b = this.track();
                  return b ? b.array() : null;
                },
                plot: function (b) {
                  var C = this.track(),
                    F = null;
                  return C && (F = C.plot(b)), b == null ? F : this;
                },
                track: function () {
                  var b = this.textPath();
                  if (b) return b.reference("href");
                },
                textPath: function () {
                  if (
                    this.node.firstChild &&
                    this.node.firstChild.nodeName == "textPath"
                  )
                    return o.adopt(this.node.firstChild);
                },
              },
            })),
            (o.Nested = o.invent({
              create: function () {
                this.constructor.call(this, o.create("svg")),
                  this.style("overflow", "visible");
              },
              inherit: o.Container,
              construct: {
                nested: function () {
                  return this.put(new o.Nested());
                },
              },
            }));
          var g = {
            stroke: [
              "color",
              "width",
              "opacity",
              "linecap",
              "linejoin",
              "miterlimit",
              "dasharray",
              "dashoffset",
            ],
            fill: ["color", "opacity", "rule"],
            prefix: function (b, C) {
              return C == "color" ? b : b + "-" + C;
            },
          };
          function y(b, C, F, ee) {
            return F + ee.replace(o.regex.dots, " .");
          }
          function x(b) {
            return b.toLowerCase().replace(/-(.)/g, function (C, F) {
              return F.toUpperCase();
            });
          }
          function k(b) {
            return b.charAt(0).toUpperCase() + b.slice(1);
          }
          function _(b) {
            var C = b.toString(16);
            return C.length == 1 ? "0" + C : C;
          }
          function A(b, C, F) {
            if (C == null || F == null) {
              var ee = b.bbox();
              C == null
                ? (C = (ee.width / ee.height) * F)
                : F == null && (F = (ee.height / ee.width) * C);
            }
            return { width: C, height: F };
          }
          function O(b, C, F) {
            return { x: C * b.a + F * b.c + 0, y: C * b.b + F * b.d + 0 };
          }
          function N(b) {
            return { a: b[0], b: b[1], c: b[2], d: b[3], e: b[4], f: b[5] };
          }
          function H(b) {
            for (var C = b.childNodes.length - 1; C >= 0; C--)
              b.childNodes[C] instanceof $.SVGElement && H(b.childNodes[C]);
            return o.adopt(b).id(o.eid(b.nodeName));
          }
          function G(b) {
            return Math.abs(b) > 1e-37 ? b : 0;
          }
          ["fill", "stroke"].forEach(function (b) {
            var C = {};
            (C[b] = function (F) {
              if (F === void 0) return this;
              if (
                typeof F == "string" ||
                o.Color.isRgb(F) ||
                (F && typeof F.fill == "function")
              )
                this.attr(b, F);
              else
                for (var ee = g[b].length - 1; ee >= 0; ee--)
                  F[g[b][ee]] != null &&
                    this.attr(g.prefix(b, g[b][ee]), F[g[b][ee]]);
              return this;
            }),
              o.extend(o.Element, o.FX, C);
          }),
            o.extend(o.Element, o.FX, {
              translate: function (b, C) {
                return this.transform({ x: b, y: C });
              },
              matrix: function (b) {
                return this.attr(
                  "transform",
                  new o.Matrix(
                    arguments.length == 6 ? [].slice.call(arguments) : b
                  )
                );
              },
              opacity: function (b) {
                return this.attr("opacity", b);
              },
              dx: function (b) {
                return this.x(
                  new o.Number(b).plus(this instanceof o.FX ? 0 : this.x()),
                  !0
                );
              },
              dy: function (b) {
                return this.y(
                  new o.Number(b).plus(this instanceof o.FX ? 0 : this.y()),
                  !0
                );
              },
            }),
            o.extend(o.Path, {
              length: function () {
                return this.node.getTotalLength();
              },
              pointAt: function (b) {
                return this.node.getPointAtLength(b);
              },
            }),
            (o.Set = o.invent({
              create: function (b) {
                Array.isArray(b) ? (this.members = b) : this.clear();
              },
              extend: {
                add: function () {
                  for (
                    var b = [].slice.call(arguments), C = 0, F = b.length;
                    C < F;
                    C++
                  )
                    this.members.push(b[C]);
                  return this;
                },
                remove: function (b) {
                  var C = this.index(b);
                  return C > -1 && this.members.splice(C, 1), this;
                },
                each: function (b) {
                  for (var C = 0, F = this.members.length; C < F; C++)
                    b.apply(this.members[C], [C, this.members]);
                  return this;
                },
                clear: function () {
                  return (this.members = []), this;
                },
                length: function () {
                  return this.members.length;
                },
                has: function (b) {
                  return this.index(b) >= 0;
                },
                index: function (b) {
                  return this.members.indexOf(b);
                },
                get: function (b) {
                  return this.members[b];
                },
                first: function () {
                  return this.get(0);
                },
                last: function () {
                  return this.get(this.members.length - 1);
                },
                valueOf: function () {
                  return this.members;
                },
              },
              construct: {
                set: function (b) {
                  return new o.Set(b);
                },
              },
            })),
            (o.FX.Set = o.invent({
              create: function (b) {
                this.set = b;
              },
            })),
            (o.Set.inherit = function () {
              var b = [];
              for (var C in o.Shape.prototype)
                typeof o.Shape.prototype[C] == "function" &&
                  typeof o.Set.prototype[C] != "function" &&
                  b.push(C);
              for (var C in (b.forEach(function (ee) {
                o.Set.prototype[ee] = function () {
                  for (var ue = 0, he = this.members.length; ue < he; ue++)
                    this.members[ue] &&
                      typeof this.members[ue][ee] == "function" &&
                      this.members[ue][ee].apply(this.members[ue], arguments);
                  return ee == "animate"
                    ? this.fx || (this.fx = new o.FX.Set(this))
                    : this;
                };
              }),
              (b = []),
              o.FX.prototype))
                typeof o.FX.prototype[C] == "function" &&
                  typeof o.FX.Set.prototype[C] != "function" &&
                  b.push(C);
              b.forEach(function (F) {
                o.FX.Set.prototype[F] = function () {
                  for (var ee = 0, ue = this.set.members.length; ee < ue; ee++)
                    this.set.members[ee].fx[F].apply(
                      this.set.members[ee].fx,
                      arguments
                    );
                  return this;
                };
              });
            }),
            o.extend(o.Element, {}),
            o.extend(o.Element, {
              remember: function (b, C) {
                if (i(arguments[0]) === "object")
                  for (var F in b) this.remember(F, b[F]);
                else {
                  if (arguments.length == 1) return this.memory()[b];
                  this.memory()[b] = C;
                }
                return this;
              },
              forget: function () {
                if (arguments.length == 0) this._memory = {};
                else
                  for (var b = arguments.length - 1; b >= 0; b--)
                    delete this.memory()[arguments[b]];
                return this;
              },
              memory: function () {
                return this._memory || (this._memory = {});
              },
            }),
            (o.get = function (b) {
              var C = s.getElementById(
                (function (F) {
                  var ee = (F || "").toString().match(o.regex.reference);
                  if (ee) return ee[1];
                })(b) || b
              );
              return o.adopt(C);
            }),
            (o.select = function (b, C) {
              return new o.Set(
                o.utils.map((C || s).querySelectorAll(b), function (F) {
                  return o.adopt(F);
                })
              );
            }),
            o.extend(o.Parent, {
              select: function (b) {
                return o.select(b, this.node);
              },
            });
          var te = "abcdef".split("");
          if (typeof $.CustomEvent != "function") {
            var se = function (b, C) {
              C = C || { bubbles: !1, cancelable: !1, detail: void 0 };
              var F = s.createEvent("CustomEvent");
              return F.initCustomEvent(b, C.bubbles, C.cancelable, C.detail), F;
            };
            (se.prototype = $.Event.prototype), (o.CustomEvent = se);
          } else o.CustomEvent = $.CustomEvent;
          return o;
        }),
        i(e) === "object"
          ? (t.exports = Xt.document
              ? er(Xt, Xt.document)
              : function ($) {
                  return er($, $.document);
                })
          : (Xt.SVG = er(Xt, Xt.document)),
        function () {
          (SVG.Filter = SVG.invent({
            create: "filter",
            inherit: SVG.Parent,
            extend: {
              source: "SourceGraphic",
              sourceAlpha: "SourceAlpha",
              background: "BackgroundImage",
              backgroundAlpha: "BackgroundAlpha",
              fill: "FillPaint",
              stroke: "StrokePaint",
              autoSetIn: !0,
              put: function (f, g) {
                return (
                  this.add(f, g),
                  !f.attr("in") && this.autoSetIn && f.attr("in", this.source),
                  f.attr("result") || f.attr("result", f),
                  f
                );
              },
              blend: function (f, g, y) {
                return this.put(new SVG.BlendEffect(f, g, y));
              },
              colorMatrix: function (f, g) {
                return this.put(new SVG.ColorMatrixEffect(f, g));
              },
              convolveMatrix: function (f) {
                return this.put(new SVG.ConvolveMatrixEffect(f));
              },
              componentTransfer: function (f) {
                return this.put(new SVG.ComponentTransferEffect(f));
              },
              composite: function (f, g, y) {
                return this.put(new SVG.CompositeEffect(f, g, y));
              },
              flood: function (f, g) {
                return this.put(new SVG.FloodEffect(f, g));
              },
              offset: function (f, g) {
                return this.put(new SVG.OffsetEffect(f, g));
              },
              image: function (f) {
                return this.put(new SVG.ImageEffect(f));
              },
              merge: function () {
                var f = [void 0];
                for (var g in arguments) f.push(arguments[g]);
                return this.put(
                  new (SVG.MergeEffect.bind.apply(SVG.MergeEffect, f))()
                );
              },
              gaussianBlur: function (f, g) {
                return this.put(new SVG.GaussianBlurEffect(f, g));
              },
              morphology: function (f, g) {
                return this.put(new SVG.MorphologyEffect(f, g));
              },
              diffuseLighting: function (f, g, y) {
                return this.put(new SVG.DiffuseLightingEffect(f, g, y));
              },
              displacementMap: function (f, g, y, x, k) {
                return this.put(new SVG.DisplacementMapEffect(f, g, y, x, k));
              },
              specularLighting: function (f, g, y, x) {
                return this.put(new SVG.SpecularLightingEffect(f, g, y, x));
              },
              tile: function () {
                return this.put(new SVG.TileEffect());
              },
              turbulence: function (f, g, y, x, k) {
                return this.put(new SVG.TurbulenceEffect(f, g, y, x, k));
              },
              toString: function () {
                return "url(#" + this.attr("id") + ")";
              },
            },
          })),
            SVG.extend(SVG.Defs, {
              filter: function (f) {
                var g = this.put(new SVG.Filter());
                return typeof f == "function" && f.call(g, g), g;
              },
            }),
            SVG.extend(SVG.Container, {
              filter: function (f) {
                return this.defs().filter(f);
              },
            }),
            SVG.extend(SVG.Element, SVG.G, SVG.Nested, {
              filter: function (f) {
                return (
                  (this.filterer =
                    f instanceof SVG.Element ? f : this.doc().filter(f)),
                  this.doc() &&
                    this.filterer.doc() !== this.doc() &&
                    this.doc().defs().add(this.filterer),
                  this.attr("filter", this.filterer),
                  this.filterer
                );
              },
              unfilter: function (f) {
                return (
                  this.filterer && f === !0 && this.filterer.remove(),
                  delete this.filterer,
                  this.attr("filter", null)
                );
              },
            }),
            (SVG.Effect = SVG.invent({
              create: function () {
                this.constructor.call(this);
              },
              inherit: SVG.Element,
              extend: {
                in: function (f) {
                  return f == null
                    ? (this.parent() &&
                        this.parent()
                          .select('[result="' + this.attr("in") + '"]')
                          .get(0)) ||
                        this.attr("in")
                    : this.attr("in", f);
                },
                result: function (f) {
                  return f == null
                    ? this.attr("result")
                    : this.attr("result", f);
                },
                toString: function () {
                  return this.result();
                },
              },
            })),
            (SVG.ParentEffect = SVG.invent({
              create: function () {
                this.constructor.call(this);
              },
              inherit: SVG.Parent,
              extend: {
                in: function (f) {
                  return f == null
                    ? (this.parent() &&
                        this.parent()
                          .select('[result="' + this.attr("in") + '"]')
                          .get(0)) ||
                        this.attr("in")
                    : this.attr("in", f);
                },
                result: function (f) {
                  return f == null
                    ? this.attr("result")
                    : this.attr("result", f);
                },
                toString: function () {
                  return this.result();
                },
              },
            }));
          var $ = {
            blend: function (f, g) {
              return this.parent() && this.parent().blend(this, f, g);
            },
            colorMatrix: function (f, g) {
              return this.parent() && this.parent().colorMatrix(f, g).in(this);
            },
            convolveMatrix: function (f) {
              return this.parent() && this.parent().convolveMatrix(f).in(this);
            },
            componentTransfer: function (f) {
              return (
                this.parent() && this.parent().componentTransfer(f).in(this)
              );
            },
            composite: function (f, g) {
              return this.parent() && this.parent().composite(this, f, g);
            },
            flood: function (f, g) {
              return this.parent() && this.parent().flood(f, g);
            },
            offset: function (f, g) {
              return this.parent() && this.parent().offset(f, g).in(this);
            },
            image: function (f) {
              return this.parent() && this.parent().image(f);
            },
            merge: function () {
              return (
                this.parent() &&
                this.parent().merge.apply(
                  this.parent(),
                  [this].concat(arguments)
                )
              );
            },
            gaussianBlur: function (f, g) {
              return this.parent() && this.parent().gaussianBlur(f, g).in(this);
            },
            morphology: function (f, g) {
              return this.parent() && this.parent().morphology(f, g).in(this);
            },
            diffuseLighting: function (f, g, y) {
              return (
                this.parent() && this.parent().diffuseLighting(f, g, y).in(this)
              );
            },
            displacementMap: function (f, g, y, x) {
              return (
                this.parent() && this.parent().displacementMap(this, f, g, y, x)
              );
            },
            specularLighting: function (f, g, y, x) {
              return (
                this.parent() &&
                this.parent().specularLighting(f, g, y, x).in(this)
              );
            },
            tile: function () {
              return this.parent() && this.parent().tile().in(this);
            },
            turbulence: function (f, g, y, x, k) {
              return (
                this.parent() &&
                this.parent().turbulence(f, g, y, x, k).in(this)
              );
            },
          };
          SVG.extend(SVG.Effect, $),
            SVG.extend(SVG.ParentEffect, $),
            (SVG.ChildEffect = SVG.invent({
              create: function () {
                this.constructor.call(this);
              },
              inherit: SVG.Element,
              extend: {
                in: function (f) {
                  this.attr("in", f);
                },
              },
            }));
          var s = {
              blend: function (f, g, y) {
                this.attr({ in: f, in2: g, mode: y || "normal" });
              },
              colorMatrix: function (f, g) {
                f == "matrix" && (g = h(g)),
                  this.attr({ type: f, values: g === void 0 ? null : g });
              },
              convolveMatrix: function (f) {
                (f = h(f)),
                  this.attr({
                    order: Math.sqrt(f.split(" ").length),
                    kernelMatrix: f,
                  });
              },
              composite: function (f, g, y) {
                this.attr({ in: f, in2: g, operator: y });
              },
              flood: function (f, g) {
                this.attr("flood-color", f),
                  g != null && this.attr("flood-opacity", g);
              },
              offset: function (f, g) {
                this.attr({ dx: f, dy: g });
              },
              image: function (f) {
                this.attr("href", f, SVG.xlink);
              },
              displacementMap: function (f, g, y, x, k) {
                this.attr({
                  in: f,
                  in2: g,
                  scale: y,
                  xChannelSelector: x,
                  yChannelSelector: k,
                });
              },
              gaussianBlur: function (f, g) {
                f != null || g != null
                  ? this.attr(
                      "stdDeviation",
                      (function (y) {
                        if (!Array.isArray(y)) return y;
                        for (var x = 0, k = y.length, _ = []; x < k; x++)
                          _.push(y[x]);
                        return _.join(" ");
                      })(Array.prototype.slice.call(arguments))
                    )
                  : this.attr("stdDeviation", "0 0");
              },
              morphology: function (f, g) {
                this.attr({ operator: f, radius: g });
              },
              tile: function () {},
              turbulence: function (f, g, y, x, k) {
                this.attr({
                  numOctaves: g,
                  seed: y,
                  stitchTiles: x,
                  baseFrequency: f,
                  type: k,
                });
              },
            },
            o = {
              merge: function () {
                var f;
                if (arguments[0] instanceof SVG.Set) {
                  var g = this;
                  arguments[0].each(function (x) {
                    this instanceof SVG.MergeNode
                      ? g.put(this)
                      : (this instanceof SVG.Effect ||
                          this instanceof SVG.ParentEffect) &&
                        g.put(new SVG.MergeNode(this));
                  });
                } else {
                  f = Array.isArray(arguments[0]) ? arguments[0] : arguments;
                  for (var y = 0; y < f.length; y++)
                    f[y] instanceof SVG.MergeNode
                      ? this.put(f[y])
                      : this.put(new SVG.MergeNode(f[y]));
                }
              },
              componentTransfer: function (f) {
                if (
                  ((this.rgb = new SVG.Set()),
                  ["r", "g", "b", "a"].forEach(
                    function (y) {
                      (this[y] = new SVG["Func" + y.toUpperCase()]("identity")),
                        this.rgb.add(this[y]),
                        this.node.appendChild(this[y].node);
                    }.bind(this)
                  ),
                  f)
                )
                  for (var g in (f.rgb &&
                    (["r", "g", "b"].forEach(
                      function (y) {
                        this[y].attr(f.rgb);
                      }.bind(this)
                    ),
                    delete f.rgb),
                  f))
                    this[g].attr(f[g]);
              },
              diffuseLighting: function (f, g, y) {
                this.attr({
                  surfaceScale: f,
                  diffuseConstant: g,
                  kernelUnitLength: y,
                });
              },
              specularLighting: function (f, g, y, x) {
                this.attr({
                  surfaceScale: f,
                  diffuseConstant: g,
                  specularExponent: y,
                  kernelUnitLength: x,
                });
              },
            },
            c = {
              distantLight: function (f, g) {
                this.attr({ azimuth: f, elevation: g });
              },
              pointLight: function (f, g, y) {
                this.attr({ x: f, y: g, z: y });
              },
              spotLight: function (f, g, y, x, k, _) {
                this.attr({
                  x: f,
                  y: g,
                  z: y,
                  pointsAtX: x,
                  pointsAtY: k,
                  pointsAtZ: _,
                });
              },
              mergeNode: function (f) {
                this.attr("in", f);
              },
            };
          function h(f) {
            return (
              Array.isArray(f) && (f = new SVG.Array(f)),
              f
                .toString()
                .replace(/^\s+/, "")
                .replace(/\s+$/, "")
                .replace(/\s+/g, " ")
            );
          }
          function d() {
            var f = function () {};
            for (var g in (typeof arguments[arguments.length - 1] ==
              "function" &&
              ((f = arguments[arguments.length - 1]),
              Array.prototype.splice.call(arguments, arguments.length - 1, 1)),
            arguments))
              for (var y in arguments[g]) f(arguments[g][y], y, arguments[g]);
          }
          ["r", "g", "b", "a"].forEach(function (f) {
            c["Func" + f.toUpperCase()] = function (g) {
              switch ((this.attr("type", g), g)) {
                case "table":
                  this.attr("tableValues", arguments[1]);
                  break;
                case "linear":
                  this.attr("slope", arguments[1]),
                    this.attr("intercept", arguments[2]);
                  break;
                case "gamma":
                  this.attr("amplitude", arguments[1]),
                    this.attr("exponent", arguments[2]),
                    this.attr("offset", arguments[2]);
              }
            };
          }),
            d(s, function (f, g) {
              var y = g.charAt(0).toUpperCase() + g.slice(1);
              SVG[y + "Effect"] = SVG.invent({
                create: function () {
                  this.constructor.call(this, SVG.create("fe" + y)),
                    f.apply(this, arguments),
                    this.result(this.attr("id") + "Out");
                },
                inherit: SVG.Effect,
                extend: {},
              });
            }),
            d(o, function (f, g) {
              var y = g.charAt(0).toUpperCase() + g.slice(1);
              SVG[y + "Effect"] = SVG.invent({
                create: function () {
                  this.constructor.call(this, SVG.create("fe" + y)),
                    f.apply(this, arguments),
                    this.result(this.attr("id") + "Out");
                },
                inherit: SVG.ParentEffect,
                extend: {},
              });
            }),
            d(c, function (f, g) {
              var y = g.charAt(0).toUpperCase() + g.slice(1);
              SVG[y] = SVG.invent({
                create: function () {
                  this.constructor.call(this, SVG.create("fe" + y)),
                    f.apply(this, arguments);
                },
                inherit: SVG.ChildEffect,
                extend: {},
              });
            }),
            SVG.extend(SVG.MergeEffect, {
              in: function (f) {
                return (
                  f instanceof SVG.MergeNode
                    ? this.add(f, 0)
                    : this.add(new SVG.MergeNode(f), 0),
                  this
                );
              },
            }),
            SVG.extend(
              SVG.CompositeEffect,
              SVG.BlendEffect,
              SVG.DisplacementMapEffect,
              {
                in2: function (f) {
                  return f == null
                    ? (this.parent() &&
                        this.parent()
                          .select('[result="' + this.attr("in2") + '"]')
                          .get(0)) ||
                        this.attr("in2")
                    : this.attr("in2", f);
                },
              }
            ),
            (SVG.filter = {
              sepiatone: [
                0.343, 0.669, 0.119, 0, 0, 0.249, 0.626, 0.13, 0, 0, 0.172,
                0.334, 0.111, 0, 0, 0, 0, 0, 1, 0,
              ],
            });
        }.call(void 0),
        (function () {
          function $(d, f, g, y, x, k, _) {
            for (
              var A = d.slice(f, g || _),
                O = y.slice(x, k || _),
                N = 0,
                H = { pos: [0, 0], start: [0, 0] },
                G = { pos: [0, 0], start: [0, 0] };
              (A[N] = s.call(H, A[N])),
                (O[N] = s.call(G, O[N])),
                A[N][0] != O[N][0] ||
                A[N][0] == "M" ||
                (A[N][0] == "A" && (A[N][4] != O[N][4] || A[N][5] != O[N][5]))
                  ? (Array.prototype.splice.apply(
                      A,
                      [N, 1].concat(c.call(H, A[N]))
                    ),
                    Array.prototype.splice.apply(
                      O,
                      [N, 1].concat(c.call(G, O[N]))
                    ))
                  : ((A[N] = o.call(H, A[N])), (O[N] = o.call(G, O[N]))),
                !(++N == A.length && N == O.length);

            )
              N == A.length &&
                A.push([
                  "C",
                  H.pos[0],
                  H.pos[1],
                  H.pos[0],
                  H.pos[1],
                  H.pos[0],
                  H.pos[1],
                ]),
                N == O.length &&
                  O.push([
                    "C",
                    G.pos[0],
                    G.pos[1],
                    G.pos[0],
                    G.pos[1],
                    G.pos[0],
                    G.pos[1],
                  ]);
            return { start: A, dest: O };
          }
          function s(d) {
            switch (d[0]) {
              case "z":
              case "Z":
                (d[0] = "L"), (d[1] = this.start[0]), (d[2] = this.start[1]);
                break;
              case "H":
                (d[0] = "L"), (d[2] = this.pos[1]);
                break;
              case "V":
                (d[0] = "L"), (d[2] = d[1]), (d[1] = this.pos[0]);
                break;
              case "T":
                (d[0] = "Q"),
                  (d[3] = d[1]),
                  (d[4] = d[2]),
                  (d[1] = this.reflection[1]),
                  (d[2] = this.reflection[0]);
                break;
              case "S":
                (d[0] = "C"),
                  (d[6] = d[4]),
                  (d[5] = d[3]),
                  (d[4] = d[2]),
                  (d[3] = d[1]),
                  (d[2] = this.reflection[1]),
                  (d[1] = this.reflection[0]);
            }
            return d;
          }
          function o(d) {
            var f = d.length;
            return (
              (this.pos = [d[f - 2], d[f - 1]]),
              "SCQT".indexOf(d[0]) != -1 &&
                (this.reflection = [
                  2 * this.pos[0] - d[f - 4],
                  2 * this.pos[1] - d[f - 3],
                ]),
              d
            );
          }
          function c(d) {
            var f = [d];
            switch (d[0]) {
              case "M":
                return (this.pos = this.start = [d[1], d[2]]), f;
              case "L":
                (d[5] = d[3] = d[1]),
                  (d[6] = d[4] = d[2]),
                  (d[1] = this.pos[0]),
                  (d[2] = this.pos[1]);
                break;
              case "Q":
                (d[6] = d[4]),
                  (d[5] = d[3]),
                  (d[4] = (1 * d[4]) / 3 + (2 * d[2]) / 3),
                  (d[3] = (1 * d[3]) / 3 + (2 * d[1]) / 3),
                  (d[2] = (1 * this.pos[1]) / 3 + (2 * d[2]) / 3),
                  (d[1] = (1 * this.pos[0]) / 3 + (2 * d[1]) / 3);
                break;
              case "A":
                (f = (function (g, y) {
                  var x,
                    k,
                    _,
                    A,
                    O,
                    N,
                    H,
                    G,
                    te,
                    se,
                    b,
                    C,
                    F,
                    ee,
                    ue,
                    he,
                    we,
                    Ae,
                    Le,
                    ze,
                    De,
                    Ge,
                    it,
                    St,
                    Lt,
                    Ht,
                    Jr = Math.abs(y[1]),
                    Wr = Math.abs(y[2]),
                    an = y[3] % 360,
                    Ao = y[4],
                    Ml = y[5],
                    Nw = y[6],
                    Bw = y[7],
                    ri = new SVG.Point(g),
                    Rn = new SVG.Point(Nw, Bw),
                    fL = [];
                  if (Jr === 0 || Wr === 0 || (ri.x === Rn.x && ri.y === Rn.y))
                    return [["C", ri.x, ri.y, Rn.x, Rn.y, Rn.x, Rn.y]];
                  for (
                    x = new SVG.Point(
                      (ri.x - Rn.x) / 2,
                      (ri.y - Rn.y) / 2
                    ).transform(new SVG.Matrix().rotate(an)),
                      (k = (x.x * x.x) / (Jr * Jr) + (x.y * x.y) / (Wr * Wr)) >
                        1 && ((Jr *= k = Math.sqrt(k)), (Wr *= k)),
                      _ = new SVG.Matrix()
                        .rotate(an)
                        .scale(1 / Jr, 1 / Wr)
                        .rotate(-an),
                      ri = ri.transform(_),
                      Rn = Rn.transform(_),
                      A = [Rn.x - ri.x, Rn.y - ri.y],
                      N = A[0] * A[0] + A[1] * A[1],
                      O = Math.sqrt(N),
                      A[0] /= O,
                      A[1] /= O,
                      H = N < 4 ? Math.sqrt(1 - N / 4) : 0,
                      Ao === Ml && (H *= -1),
                      G = new SVG.Point(
                        (Rn.x + ri.x) / 2 + H * -A[1],
                        (Rn.y + ri.y) / 2 + H * A[0]
                      ),
                      te = new SVG.Point(ri.x - G.x, ri.y - G.y),
                      se = new SVG.Point(Rn.x - G.x, Rn.y - G.y),
                      b = Math.acos(
                        te.x / Math.sqrt(te.x * te.x + te.y * te.y)
                      ),
                      te.y < 0 && (b *= -1),
                      C = Math.acos(
                        se.x / Math.sqrt(se.x * se.x + se.y * se.y)
                      ),
                      se.y < 0 && (C *= -1),
                      Ml && b > C && (C += 2 * Math.PI),
                      !Ml && b < C && (C -= 2 * Math.PI),
                      ee = Math.ceil((2 * Math.abs(b - C)) / Math.PI),
                      he = [],
                      we = b,
                      F = (C - b) / ee,
                      ue = (4 * Math.tan(F / 4)) / 3,
                      De = 0;
                    De <= ee;
                    De++
                  )
                    (Le = Math.cos(we)),
                      (Ae = Math.sin(we)),
                      (ze = new SVG.Point(G.x + Le, G.y + Ae)),
                      (he[De] = [
                        new SVG.Point(ze.x + ue * Ae, ze.y - ue * Le),
                        ze,
                        new SVG.Point(ze.x - ue * Ae, ze.y + ue * Le),
                      ]),
                      (we += F);
                  for (
                    he[0][0] = he[0][1].clone(),
                      he[he.length - 1][2] = he[he.length - 1][1].clone(),
                      _ = new SVG.Matrix().rotate(an).scale(Jr, Wr).rotate(-an),
                      De = 0,
                      Ge = he.length;
                    De < Ge;
                    De++
                  )
                    (he[De][0] = he[De][0].transform(_)),
                      (he[De][1] = he[De][1].transform(_)),
                      (he[De][2] = he[De][2].transform(_));
                  for (De = 1, Ge = he.length; De < Ge; De++)
                    (it = (ze = he[De - 1][2]).x),
                      (St = ze.y),
                      (Lt = (ze = he[De][0]).x),
                      (Ht = ze.y),
                      (Nw = (ze = he[De][1]).x),
                      (Bw = ze.y),
                      fL.push(["C", it, St, Lt, Ht, Nw, Bw]);
                  return fL;
                })(this.pos, d)),
                  (d = f[0]);
            }
            return (
              (d[0] = "C"),
              (this.pos = [d[5], d[6]]),
              (this.reflection = [2 * d[5] - d[3], 2 * d[6] - d[4]]),
              f
            );
          }
          function h(d, f) {
            if (f === !1) return !1;
            for (var g = f, y = d.length; g < y; ++g)
              if (d[g][0] == "M") return g;
            return !1;
          }
          SVG.extend(SVG.PathArray, {
            morph: function (d) {
              for (
                var f = this.value,
                  g = this.parse(d),
                  y = 0,
                  x = 0,
                  k = !1,
                  _ = !1;
                y !== !1 || x !== !1;

              ) {
                var A;
                (k = h(f, y !== !1 && y + 1)),
                  (_ = h(g, x !== !1 && x + 1)),
                  y === !1 &&
                    (y =
                      (A = new SVG.PathArray(O.start).bbox()).height == 0 ||
                      A.width == 0
                        ? f.push(f[0]) - 1
                        : f.push(["M", A.x + A.width / 2, A.y + A.height / 2]) -
                          1),
                  x === !1 &&
                    (x =
                      (A = new SVG.PathArray(O.dest).bbox()).height == 0 ||
                      A.width == 0
                        ? g.push(g[0]) - 1
                        : g.push(["M", A.x + A.width / 2, A.y + A.height / 2]) -
                          1);
                var O = $(f, y, k, g, x, _);
                (f = f.slice(0, y).concat(O.start, k === !1 ? [] : f.slice(k))),
                  (g = g
                    .slice(0, x)
                    .concat(O.dest, _ === !1 ? [] : g.slice(_))),
                  (y = k !== !1 && y + O.start.length),
                  (x = _ !== !1 && x + O.dest.length);
              }
              return (
                (this.value = f),
                (this.destination = new SVG.PathArray()),
                (this.destination.value = g),
                this
              );
            },
          });
        })(),
        function () {
          function $(s) {
            s.remember("_draggable", this), (this.el = s);
          }
          ($.prototype.init = function (s, o) {
            var c = this;
            (this.constraint = s),
              (this.value = o),
              this.el.on("mousedown.drag", function (h) {
                c.start(h);
              }),
              this.el.on("touchstart.drag", function (h) {
                c.start(h);
              });
          }),
            ($.prototype.transformPoint = function (s, o) {
              var c =
                ((s = s || window.event).changedTouches &&
                  s.changedTouches[0]) ||
                s;
              return (
                (this.p.x = c.clientX - (o || 0)),
                (this.p.y = c.clientY),
                this.p.matrixTransform(this.m)
              );
            }),
            ($.prototype.getBBox = function () {
              var s = this.el.bbox();
              return (
                this.el instanceof SVG.Nested && (s = this.el.rbox()),
                (this.el instanceof SVG.G ||
                  this.el instanceof SVG.Use ||
                  this.el instanceof SVG.Nested) &&
                  ((s.x = this.el.x()), (s.y = this.el.y())),
                s
              );
            }),
            ($.prototype.start = function (s) {
              if (
                (s.type != "click" &&
                  s.type != "mousedown" &&
                  s.type != "mousemove") ||
                (s.which || s.buttons) == 1
              ) {
                var o = this;
                if (
                  (this.el.fire("beforedrag", { event: s, handler: this }),
                  !this.el.event().defaultPrevented)
                ) {
                  s.preventDefault(),
                    s.stopPropagation(),
                    (this.parent =
                      this.parent ||
                      this.el.parent(SVG.Nested) ||
                      this.el.parent(SVG.Doc)),
                    (this.p = this.parent.node.createSVGPoint()),
                    (this.m = this.el.node.getScreenCTM().inverse());
                  var c,
                    h = this.getBBox();
                  if (this.el instanceof SVG.Text)
                    switch (
                      ((c = this.el.node.getComputedTextLength()),
                      this.el.attr("text-anchor"))
                    ) {
                      case "middle":
                        c /= 2;
                        break;
                      case "start":
                        c = 0;
                    }
                  (this.startPoints = {
                    point: this.transformPoint(s, c),
                    box: h,
                    transform: this.el.transform(),
                  }),
                    SVG.on(window, "mousemove.drag", function (d) {
                      o.drag(d);
                    }),
                    SVG.on(window, "touchmove.drag", function (d) {
                      o.drag(d);
                    }),
                    SVG.on(window, "mouseup.drag", function (d) {
                      o.end(d);
                    }),
                    SVG.on(window, "touchend.drag", function (d) {
                      o.end(d);
                    }),
                    this.el.fire("dragstart", {
                      event: s,
                      p: this.startPoints.point,
                      m: this.m,
                      handler: this,
                    });
                }
              }
            }),
            ($.prototype.drag = function (s) {
              var o = this.getBBox(),
                c = this.transformPoint(s),
                h = this.startPoints.box.x + c.x - this.startPoints.point.x,
                d = this.startPoints.box.y + c.y - this.startPoints.point.y,
                f = this.constraint,
                g = c.x - this.startPoints.point.x,
                y = c.y - this.startPoints.point.y;
              if (
                (this.el.fire("dragmove", {
                  event: s,
                  p: c,
                  m: this.m,
                  handler: this,
                }),
                this.el.event().defaultPrevented)
              )
                return c;
              if (typeof f == "function") {
                var x = f.call(this.el, h, d, this.m);
                typeof x == "boolean" && (x = { x, y: x }),
                  x.x === !0 ? this.el.x(h) : x.x !== !1 && this.el.x(x.x),
                  x.y === !0 ? this.el.y(d) : x.y !== !1 && this.el.y(x.y);
              } else
                typeof f == "object" &&
                  (f.minX != null && h < f.minX
                    ? (g = (h = f.minX) - this.startPoints.box.x)
                    : f.maxX != null &&
                      h > f.maxX - o.width &&
                      (g = (h = f.maxX - o.width) - this.startPoints.box.x),
                  f.minY != null && d < f.minY
                    ? (y = (d = f.minY) - this.startPoints.box.y)
                    : f.maxY != null &&
                      d > f.maxY - o.height &&
                      (y = (d = f.maxY - o.height) - this.startPoints.box.y),
                  f.snapToGrid != null &&
                    ((h -= h % f.snapToGrid),
                    (d -= d % f.snapToGrid),
                    (g -= g % f.snapToGrid),
                    (y -= y % f.snapToGrid)),
                  this.el instanceof SVG.G
                    ? this.el
                        .matrix(this.startPoints.transform)
                        .transform({ x: g, y }, !0)
                    : this.el.move(h, d));
              return c;
            }),
            ($.prototype.end = function (s) {
              var o = this.drag(s);
              this.el.fire("dragend", {
                event: s,
                p: o,
                m: this.m,
                handler: this,
              }),
                SVG.off(window, "mousemove.drag"),
                SVG.off(window, "touchmove.drag"),
                SVG.off(window, "mouseup.drag"),
                SVG.off(window, "touchend.drag");
            }),
            SVG.extend(SVG.Element, {
              draggable: function (s, o) {
                (typeof s != "function" && typeof s != "object") ||
                  ((o = s), (s = !0));
                var c = this.remember("_draggable") || new $(this);
                return (
                  (s = s === void 0 || s)
                    ? c.init(o || {}, s)
                    : (this.off("mousedown.drag"), this.off("touchstart.drag")),
                  this
                );
              },
            });
        }.call(void 0),
        (function () {
          function $(s) {
            (this.el = s),
              s.remember("_selectHandler", this),
              (this.pointSelection = { isSelected: !1 }),
              (this.rectSelection = { isSelected: !1 }),
              (this.pointsList = {
                lt: [0, 0],
                rt: ["width", 0],
                rb: ["width", "height"],
                lb: [0, "height"],
                t: ["width", 0],
                r: ["width", "height"],
                b: ["width", "height"],
                l: [0, "height"],
              }),
              (this.pointCoord = function (o, c, h) {
                var d = typeof o != "string" ? o : c[o];
                return h ? d / 2 : d;
              }),
              (this.pointCoords = function (o, c) {
                var h = this.pointsList[o];
                return {
                  x: this.pointCoord(h[0], c, o === "t" || o === "b"),
                  y: this.pointCoord(h[1], c, o === "r" || o === "l"),
                };
              });
          }
          ($.prototype.init = function (s, o) {
            var c = this.el.bbox();
            this.options = {};
            var h = this.el.selectize.defaults.points;
            for (var d in this.el.selectize.defaults)
              (this.options[d] = this.el.selectize.defaults[d]),
                o[d] !== void 0 && (this.options[d] = o[d]);
            var f = ["points", "pointsExclude"];
            for (var d in f) {
              var g = this.options[f[d]];
              typeof g == "string"
                ? (g = g.length > 0 ? g.split(/\s*,\s*/i) : [])
                : typeof g == "boolean" &&
                  f[d] === "points" &&
                  (g = g ? h : []),
                (this.options[f[d]] = g);
            }
            (this.options.points = [h, this.options.points].reduce(function (
              y,
              x
            ) {
              return y.filter(function (k) {
                return x.indexOf(k) > -1;
              });
            })),
              (this.options.points = [
                this.options.points,
                this.options.pointsExclude,
              ].reduce(function (y, x) {
                return y.filter(function (k) {
                  return x.indexOf(k) < 0;
                });
              })),
              (this.parent = this.el.parent()),
              (this.nested = this.nested || this.parent.group()),
              this.nested.matrix(new SVG.Matrix(this.el).translate(c.x, c.y)),
              this.options.deepSelect &&
              ["line", "polyline", "polygon"].indexOf(this.el.type) !== -1
                ? this.selectPoints(s)
                : this.selectRect(s),
              this.observe(),
              this.cleanup();
          }),
            ($.prototype.selectPoints = function (s) {
              return (
                (this.pointSelection.isSelected = s),
                this.pointSelection.set ||
                  ((this.pointSelection.set = this.parent.set()),
                  this.drawPoints()),
                this
              );
            }),
            ($.prototype.getPointArray = function () {
              var s = this.el.bbox();
              return this.el
                .array()
                .valueOf()
                .map(function (o) {
                  return [o[0] - s.x, o[1] - s.y];
                });
            }),
            ($.prototype.drawPoints = function () {
              for (
                var s = this, o = this.getPointArray(), c = 0, h = o.length;
                c < h;
                ++c
              ) {
                var d = (function (g) {
                    return function (y) {
                      (y = y || window.event).preventDefault
                        ? y.preventDefault()
                        : (y.returnValue = !1),
                        y.stopPropagation();
                      var x = y.pageX || y.touches[0].pageX,
                        k = y.pageY || y.touches[0].pageY;
                      s.el.fire("point", { x, y: k, i: g, event: y });
                    };
                  })(c),
                  f = this.drawPoint(o[c][0], o[c][1])
                    .addClass(this.options.classPoints)
                    .addClass(this.options.classPoints + "_point")
                    .on("touchstart", d)
                    .on("mousedown", d);
                this.pointSelection.set.add(f);
              }
            }),
            ($.prototype.drawPoint = function (s, o) {
              var c = this.options.pointType;
              switch (c) {
                case "circle":
                  return this.drawCircle(s, o);
                case "rect":
                  return this.drawRect(s, o);
                default:
                  if (typeof c == "function") return c.call(this, s, o);
                  throw new Error("Unknown " + c + " point type!");
              }
            }),
            ($.prototype.drawCircle = function (s, o) {
              return this.nested.circle(this.options.pointSize).center(s, o);
            }),
            ($.prototype.drawRect = function (s, o) {
              return this.nested
                .rect(this.options.pointSize, this.options.pointSize)
                .center(s, o);
            }),
            ($.prototype.updatePointSelection = function () {
              var s = this.getPointArray();
              this.pointSelection.set.each(function (o) {
                (this.cx() === s[o][0] && this.cy() === s[o][1]) ||
                  this.center(s[o][0], s[o][1]);
              });
            }),
            ($.prototype.updateRectSelection = function () {
              var s = this,
                o = this.el.bbox();
              if (
                (this.rectSelection.set
                  .get(0)
                  .attr({ width: o.width, height: o.height }),
                this.options.points.length &&
                  this.options.points.map(function (h, d) {
                    var f = s.pointCoords(h, o);
                    s.rectSelection.set.get(d + 1).center(f.x, f.y);
                  }),
                this.options.rotationPoint)
              ) {
                var c = this.rectSelection.set.length();
                this.rectSelection.set.get(c - 1).center(o.width / 2, 20);
              }
            }),
            ($.prototype.selectRect = function (s) {
              var o = this,
                c = this.el.bbox();
              function h(g) {
                return function (y) {
                  (y = y || window.event).preventDefault
                    ? y.preventDefault()
                    : (y.returnValue = !1),
                    y.stopPropagation();
                  var x = y.pageX || y.touches[0].pageX,
                    k = y.pageY || y.touches[0].pageY;
                  o.el.fire(g, { x, y: k, event: y });
                };
              }
              if (
                ((this.rectSelection.isSelected = s),
                (this.rectSelection.set =
                  this.rectSelection.set || this.parent.set()),
                this.rectSelection.set.get(0) ||
                  this.rectSelection.set.add(
                    this.nested
                      .rect(c.width, c.height)
                      .addClass(this.options.classRect)
                  ),
                this.options.points.length &&
                  this.rectSelection.set.length() < 2 &&
                  (this.options.points.map(function (g, y) {
                    var x = o.pointCoords(g, c),
                      k = o
                        .drawPoint(x.x, x.y)
                        .attr("class", o.options.classPoints + "_" + g)
                        .on("mousedown", h(g))
                        .on("touchstart", h(g));
                    o.rectSelection.set.add(k);
                  }),
                  this.rectSelection.set.each(function () {
                    this.addClass(o.options.classPoints);
                  })),
                this.options.rotationPoint &&
                  ((this.options.points && !this.rectSelection.set.get(9)) ||
                    (!this.options.points && !this.rectSelection.set.get(1))))
              ) {
                var d = function (g) {
                    (g = g || window.event).preventDefault
                      ? g.preventDefault()
                      : (g.returnValue = !1),
                      g.stopPropagation();
                    var y = g.pageX || g.touches[0].pageX,
                      x = g.pageY || g.touches[0].pageY;
                    o.el.fire("rot", { x: y, y: x, event: g });
                  },
                  f = this.drawPoint(c.width / 2, 20)
                    .attr("class", this.options.classPoints + "_rot")
                    .on("touchstart", d)
                    .on("mousedown", d);
                this.rectSelection.set.add(f);
              }
            }),
            ($.prototype.handler = function () {
              var s = this.el.bbox();
              this.nested.matrix(new SVG.Matrix(this.el).translate(s.x, s.y)),
                this.rectSelection.isSelected && this.updateRectSelection(),
                this.pointSelection.isSelected && this.updatePointSelection();
            }),
            ($.prototype.observe = function () {
              var s = this;
              if (MutationObserver)
                if (
                  this.rectSelection.isSelected ||
                  this.pointSelection.isSelected
                )
                  (this.observerInst =
                    this.observerInst ||
                    new MutationObserver(function () {
                      s.handler();
                    })),
                    this.observerInst.observe(this.el.node, { attributes: !0 });
                else
                  try {
                    this.observerInst.disconnect(), delete this.observerInst;
                  } catch {}
              else
                this.el.off("DOMAttrModified.select"),
                  (this.rectSelection.isSelected ||
                    this.pointSelection.isSelected) &&
                    this.el.on("DOMAttrModified.select", function () {
                      s.handler();
                    });
            }),
            ($.prototype.cleanup = function () {
              !this.rectSelection.isSelected &&
                this.rectSelection.set &&
                (this.rectSelection.set.each(function () {
                  this.remove();
                }),
                this.rectSelection.set.clear(),
                delete this.rectSelection.set),
                !this.pointSelection.isSelected &&
                  this.pointSelection.set &&
                  (this.pointSelection.set.each(function () {
                    this.remove();
                  }),
                  this.pointSelection.set.clear(),
                  delete this.pointSelection.set),
                this.pointSelection.isSelected ||
                  this.rectSelection.isSelected ||
                  (this.nested.remove(), delete this.nested);
            }),
            SVG.extend(SVG.Element, {
              selectize: function (s, o) {
                return (
                  typeof s == "object" && ((o = s), (s = !0)),
                  (this.remember("_selectHandler") || new $(this)).init(
                    s === void 0 || s,
                    o || {}
                  ),
                  this
                );
              },
            }),
            (SVG.Element.prototype.selectize.defaults = {
              points: ["lt", "rt", "rb", "lb", "t", "r", "b", "l"],
              pointsExclude: [],
              classRect: "svg_select_boundingRect",
              classPoints: "svg_select_points",
              pointSize: 7,
              rotationPoint: !0,
              deepSelect: !1,
              pointType: "circle",
            });
        })(),
        (function () {
          (function () {
            function $(s) {
              s.remember("_resizeHandler", this),
                (this.el = s),
                (this.parameters = {}),
                (this.lastUpdateCall = null),
                (this.p = s.doc().node.createSVGPoint());
            }
            ($.prototype.transformPoint = function (s, o, c) {
              return (
                (this.p.x = s - (this.offset.x - window.pageXOffset)),
                (this.p.y = o - (this.offset.y - window.pageYOffset)),
                this.p.matrixTransform(c || this.m)
              );
            }),
              ($.prototype._extractPosition = function (s) {
                return {
                  x: s.clientX != null ? s.clientX : s.touches[0].clientX,
                  y: s.clientY != null ? s.clientY : s.touches[0].clientY,
                };
              }),
              ($.prototype.init = function (s) {
                var o = this;
                if ((this.stop(), s !== "stop")) {
                  for (var c in ((this.options = {}), this.el.resize.defaults))
                    (this.options[c] = this.el.resize.defaults[c]),
                      s[c] !== void 0 && (this.options[c] = s[c]);
                  this.el.on("lt.resize", function (h) {
                    o.resize(h || window.event);
                  }),
                    this.el.on("rt.resize", function (h) {
                      o.resize(h || window.event);
                    }),
                    this.el.on("rb.resize", function (h) {
                      o.resize(h || window.event);
                    }),
                    this.el.on("lb.resize", function (h) {
                      o.resize(h || window.event);
                    }),
                    this.el.on("t.resize", function (h) {
                      o.resize(h || window.event);
                    }),
                    this.el.on("r.resize", function (h) {
                      o.resize(h || window.event);
                    }),
                    this.el.on("b.resize", function (h) {
                      o.resize(h || window.event);
                    }),
                    this.el.on("l.resize", function (h) {
                      o.resize(h || window.event);
                    }),
                    this.el.on("rot.resize", function (h) {
                      o.resize(h || window.event);
                    }),
                    this.el.on("point.resize", function (h) {
                      o.resize(h || window.event);
                    }),
                    this.update();
                }
              }),
              ($.prototype.stop = function () {
                return (
                  this.el.off("lt.resize"),
                  this.el.off("rt.resize"),
                  this.el.off("rb.resize"),
                  this.el.off("lb.resize"),
                  this.el.off("t.resize"),
                  this.el.off("r.resize"),
                  this.el.off("b.resize"),
                  this.el.off("l.resize"),
                  this.el.off("rot.resize"),
                  this.el.off("point.resize"),
                  this
                );
              }),
              ($.prototype.resize = function (s) {
                var o = this;
                (this.m = this.el.node.getScreenCTM().inverse()),
                  (this.offset = {
                    x: window.pageXOffset,
                    y: window.pageYOffset,
                  });
                var c = this._extractPosition(s.detail.event);
                if (
                  ((this.parameters = {
                    type: this.el.type,
                    p: this.transformPoint(c.x, c.y),
                    x: s.detail.x,
                    y: s.detail.y,
                    box: this.el.bbox(),
                    rotation: this.el.transform().rotation,
                  }),
                  this.el.type === "text" &&
                    (this.parameters.fontSize = this.el.attr()["font-size"]),
                  s.detail.i !== void 0)
                ) {
                  var h = this.el.array().valueOf();
                  (this.parameters.i = s.detail.i),
                    (this.parameters.pointCoords = [
                      h[s.detail.i][0],
                      h[s.detail.i][1],
                    ]);
                }
                switch (s.type) {
                  case "lt":
                    this.calc = function (d, f) {
                      var g = this.snapToGrid(d, f);
                      if (
                        this.parameters.box.width - g[0] > 0 &&
                        this.parameters.box.height - g[1] > 0
                      ) {
                        if (this.parameters.type === "text")
                          return (
                            this.el.move(
                              this.parameters.box.x + g[0],
                              this.parameters.box.y
                            ),
                            void this.el.attr(
                              "font-size",
                              this.parameters.fontSize - g[0]
                            )
                          );
                        (g = this.checkAspectRatio(g)),
                          this.el
                            .move(
                              this.parameters.box.x + g[0],
                              this.parameters.box.y + g[1]
                            )
                            .size(
                              this.parameters.box.width - g[0],
                              this.parameters.box.height - g[1]
                            );
                      }
                    };
                    break;
                  case "rt":
                    this.calc = function (d, f) {
                      var g = this.snapToGrid(d, f, 2);
                      if (
                        this.parameters.box.width + g[0] > 0 &&
                        this.parameters.box.height - g[1] > 0
                      ) {
                        if (this.parameters.type === "text")
                          return (
                            this.el.move(
                              this.parameters.box.x - g[0],
                              this.parameters.box.y
                            ),
                            void this.el.attr(
                              "font-size",
                              this.parameters.fontSize + g[0]
                            )
                          );
                        (g = this.checkAspectRatio(g, !0)),
                          this.el
                            .move(
                              this.parameters.box.x,
                              this.parameters.box.y + g[1]
                            )
                            .size(
                              this.parameters.box.width + g[0],
                              this.parameters.box.height - g[1]
                            );
                      }
                    };
                    break;
                  case "rb":
                    this.calc = function (d, f) {
                      var g = this.snapToGrid(d, f, 0);
                      if (
                        this.parameters.box.width + g[0] > 0 &&
                        this.parameters.box.height + g[1] > 0
                      ) {
                        if (this.parameters.type === "text")
                          return (
                            this.el.move(
                              this.parameters.box.x - g[0],
                              this.parameters.box.y
                            ),
                            void this.el.attr(
                              "font-size",
                              this.parameters.fontSize + g[0]
                            )
                          );
                        (g = this.checkAspectRatio(g)),
                          this.el
                            .move(this.parameters.box.x, this.parameters.box.y)
                            .size(
                              this.parameters.box.width + g[0],
                              this.parameters.box.height + g[1]
                            );
                      }
                    };
                    break;
                  case "lb":
                    this.calc = function (d, f) {
                      var g = this.snapToGrid(d, f, 1);
                      if (
                        this.parameters.box.width - g[0] > 0 &&
                        this.parameters.box.height + g[1] > 0
                      ) {
                        if (this.parameters.type === "text")
                          return (
                            this.el.move(
                              this.parameters.box.x + g[0],
                              this.parameters.box.y
                            ),
                            void this.el.attr(
                              "font-size",
                              this.parameters.fontSize - g[0]
                            )
                          );
                        (g = this.checkAspectRatio(g, !0)),
                          this.el
                            .move(
                              this.parameters.box.x + g[0],
                              this.parameters.box.y
                            )
                            .size(
                              this.parameters.box.width - g[0],
                              this.parameters.box.height + g[1]
                            );
                      }
                    };
                    break;
                  case "t":
                    this.calc = function (d, f) {
                      var g = this.snapToGrid(d, f, 2);
                      if (this.parameters.box.height - g[1] > 0) {
                        if (this.parameters.type === "text") return;
                        this.el
                          .move(
                            this.parameters.box.x,
                            this.parameters.box.y + g[1]
                          )
                          .height(this.parameters.box.height - g[1]);
                      }
                    };
                    break;
                  case "r":
                    this.calc = function (d, f) {
                      var g = this.snapToGrid(d, f, 0);
                      if (this.parameters.box.width + g[0] > 0) {
                        if (this.parameters.type === "text") return;
                        this.el
                          .move(this.parameters.box.x, this.parameters.box.y)
                          .width(this.parameters.box.width + g[0]);
                      }
                    };
                    break;
                  case "b":
                    this.calc = function (d, f) {
                      var g = this.snapToGrid(d, f, 0);
                      if (this.parameters.box.height + g[1] > 0) {
                        if (this.parameters.type === "text") return;
                        this.el
                          .move(this.parameters.box.x, this.parameters.box.y)
                          .height(this.parameters.box.height + g[1]);
                      }
                    };
                    break;
                  case "l":
                    this.calc = function (d, f) {
                      var g = this.snapToGrid(d, f, 1);
                      if (this.parameters.box.width - g[0] > 0) {
                        if (this.parameters.type === "text") return;
                        this.el
                          .move(
                            this.parameters.box.x + g[0],
                            this.parameters.box.y
                          )
                          .width(this.parameters.box.width - g[0]);
                      }
                    };
                    break;
                  case "rot":
                    this.calc = function (d, f) {
                      var g = d + this.parameters.p.x,
                        y = f + this.parameters.p.y,
                        x = Math.atan2(
                          this.parameters.p.y -
                            this.parameters.box.y -
                            this.parameters.box.height / 2,
                          this.parameters.p.x -
                            this.parameters.box.x -
                            this.parameters.box.width / 2
                        ),
                        k = Math.atan2(
                          y -
                            this.parameters.box.y -
                            this.parameters.box.height / 2,
                          g -
                            this.parameters.box.x -
                            this.parameters.box.width / 2
                        ),
                        _ =
                          this.parameters.rotation +
                          (180 * (k - x)) / Math.PI +
                          this.options.snapToAngle / 2;
                      this.el
                        .center(this.parameters.box.cx, this.parameters.box.cy)
                        .rotate(
                          _ - (_ % this.options.snapToAngle),
                          this.parameters.box.cx,
                          this.parameters.box.cy
                        );
                    };
                    break;
                  case "point":
                    this.calc = function (d, f) {
                      var g = this.snapToGrid(
                          d,
                          f,
                          this.parameters.pointCoords[0],
                          this.parameters.pointCoords[1]
                        ),
                        y = this.el.array().valueOf();
                      (y[this.parameters.i][0] =
                        this.parameters.pointCoords[0] + g[0]),
                        (y[this.parameters.i][1] =
                          this.parameters.pointCoords[1] + g[1]),
                        this.el.plot(y);
                    };
                }
                this.el.fire("resizestart", {
                  dx: this.parameters.x,
                  dy: this.parameters.y,
                  event: s,
                }),
                  SVG.on(window, "touchmove.resize", function (d) {
                    o.update(d || window.event);
                  }),
                  SVG.on(window, "touchend.resize", function () {
                    o.done();
                  }),
                  SVG.on(window, "mousemove.resize", function (d) {
                    o.update(d || window.event);
                  }),
                  SVG.on(window, "mouseup.resize", function () {
                    o.done();
                  });
              }),
              ($.prototype.update = function (s) {
                if (s) {
                  var o = this._extractPosition(s),
                    c = this.transformPoint(o.x, o.y),
                    h = c.x - this.parameters.p.x,
                    d = c.y - this.parameters.p.y;
                  (this.lastUpdateCall = [h, d]),
                    this.calc(h, d),
                    this.el.fire("resizing", { dx: h, dy: d, event: s });
                } else
                  this.lastUpdateCall &&
                    this.calc(this.lastUpdateCall[0], this.lastUpdateCall[1]);
              }),
              ($.prototype.done = function () {
                (this.lastUpdateCall = null),
                  SVG.off(window, "mousemove.resize"),
                  SVG.off(window, "mouseup.resize"),
                  SVG.off(window, "touchmove.resize"),
                  SVG.off(window, "touchend.resize"),
                  this.el.fire("resizedone");
              }),
              ($.prototype.snapToGrid = function (s, o, c, h) {
                var d;
                return (
                  h !== void 0
                    ? (d = [
                        (c + s) % this.options.snapToGrid,
                        (h + o) % this.options.snapToGrid,
                      ])
                    : ((c = c ?? 3),
                      (d = [
                        (this.parameters.box.x +
                          s +
                          (1 & c ? 0 : this.parameters.box.width)) %
                          this.options.snapToGrid,
                        (this.parameters.box.y +
                          o +
                          (2 & c ? 0 : this.parameters.box.height)) %
                          this.options.snapToGrid,
                      ])),
                  s < 0 && (d[0] -= this.options.snapToGrid),
                  o < 0 && (d[1] -= this.options.snapToGrid),
                  (s -=
                    Math.abs(d[0]) < this.options.snapToGrid / 2
                      ? d[0]
                      : d[0] -
                        (s < 0
                          ? -this.options.snapToGrid
                          : this.options.snapToGrid)),
                  (o -=
                    Math.abs(d[1]) < this.options.snapToGrid / 2
                      ? d[1]
                      : d[1] -
                        (o < 0
                          ? -this.options.snapToGrid
                          : this.options.snapToGrid)),
                  this.constraintToBox(s, o, c, h)
                );
              }),
              ($.prototype.constraintToBox = function (s, o, c, h) {
                var d,
                  f,
                  g = this.options.constraint || {};
                return (
                  h !== void 0
                    ? ((d = c), (f = h))
                    : ((d =
                        this.parameters.box.x +
                        (1 & c ? 0 : this.parameters.box.width)),
                      (f =
                        this.parameters.box.y +
                        (2 & c ? 0 : this.parameters.box.height))),
                  g.minX !== void 0 && d + s < g.minX && (s = g.minX - d),
                  g.maxX !== void 0 && d + s > g.maxX && (s = g.maxX - d),
                  g.minY !== void 0 && f + o < g.minY && (o = g.minY - f),
                  g.maxY !== void 0 && f + o > g.maxY && (o = g.maxY - f),
                  [s, o]
                );
              }),
              ($.prototype.checkAspectRatio = function (s, o) {
                if (!this.options.saveAspectRatio) return s;
                var c = s.slice(),
                  h = this.parameters.box.width / this.parameters.box.height,
                  d = this.parameters.box.width + s[0],
                  f = this.parameters.box.height - s[1],
                  g = d / f;
                return (
                  g < h
                    ? ((c[1] = d / h - this.parameters.box.height),
                      o && (c[1] = -c[1]))
                    : g > h &&
                      ((c[0] = this.parameters.box.width - f * h),
                      o && (c[0] = -c[0])),
                  c
                );
              }),
              SVG.extend(SVG.Element, {
                resize: function (s) {
                  return (
                    (this.remember("_resizeHandler") || new $(this)).init(
                      s || {}
                    ),
                    this
                  );
                },
              }),
              (SVG.Element.prototype.resize.defaults = {
                snapToAngle: 0.1,
                snapToGrid: 1,
                constraint: {},
                saveAspectRatio: !1,
              });
          }).call(this);
        })(),
        window.Apex === void 0 && (window.Apex = {});
      var hr = (function () {
          function $(s) {
            a(this, $), (this.ctx = s), (this.w = s.w);
          }
          return (
            u($, [
              {
                key: "initModules",
                value: function () {
                  (this.ctx.publicMethods = [
                    "updateOptions",
                    "updateSeries",
                    "appendData",
                    "appendSeries",
                    "toggleSeries",
                    "showSeries",
                    "hideSeries",
                    "setLocale",
                    "resetSeries",
                    "zoomX",
                    "toggleDataPointSelection",
                    "dataURI",
                    "exportToCSV",
                    "addXaxisAnnotation",
                    "addYaxisAnnotation",
                    "addPointAnnotation",
                    "clearAnnotations",
                    "removeAnnotation",
                    "paper",
                    "destroy",
                  ]),
                    (this.ctx.eventList = [
                      "click",
                      "mousedown",
                      "mousemove",
                      "mouseleave",
                      "touchstart",
                      "touchmove",
                      "touchleave",
                      "mouseup",
                      "touchend",
                    ]),
                    (this.ctx.animations = new ae(this.ctx)),
                    (this.ctx.axes = new R(this.ctx)),
                    (this.ctx.core = new Aa(this.ctx.el, this.ctx)),
                    (this.ctx.config = new le({})),
                    (this.ctx.data = new me(this.ctx)),
                    (this.ctx.grid = new Ne(this.ctx)),
                    (this.ctx.graphics = new K(this.ctx)),
                    (this.ctx.coreUtils = new fe(this.ctx)),
                    (this.ctx.crosshairs = new q(this.ctx)),
                    (this.ctx.events = new ge(this.ctx)),
                    (this.ctx.exports = new Se(this.ctx)),
                    (this.ctx.localization = new I(this.ctx)),
                    (this.ctx.options = new ke()),
                    (this.ctx.responsive = new ce(this.ctx)),
                    (this.ctx.series = new Ee(this.ctx)),
                    (this.ctx.theme = new ne(this.ctx)),
                    (this.ctx.formatters = new L(this.ctx)),
                    (this.ctx.titleSubtitle = new de(this.ctx)),
                    (this.ctx.legend = new Je(this.ctx)),
                    (this.ctx.toolbar = new st(this.ctx)),
                    (this.ctx.tooltip = new Zt(this.ctx)),
                    (this.ctx.dimensions = new Be(this.ctx)),
                    (this.ctx.updateHelpers = new kr(this.ctx)),
                    (this.ctx.zoomPanSelection = new Ur(this.ctx)),
                    (this.ctx.w.globals.tooltip = new Zt(this.ctx));
                },
              },
            ]),
            $
          );
        })(),
        Ps = (function () {
          function $(s) {
            a(this, $), (this.ctx = s), (this.w = s.w);
          }
          return (
            u($, [
              {
                key: "clear",
                value: function (s) {
                  var o = s.isUpdating;
                  this.ctx.zoomPanSelection &&
                    this.ctx.zoomPanSelection.destroy(),
                    this.ctx.toolbar && this.ctx.toolbar.destroy(),
                    (this.ctx.animations = null),
                    (this.ctx.axes = null),
                    (this.ctx.annotations = null),
                    (this.ctx.core = null),
                    (this.ctx.data = null),
                    (this.ctx.grid = null),
                    (this.ctx.series = null),
                    (this.ctx.responsive = null),
                    (this.ctx.theme = null),
                    (this.ctx.formatters = null),
                    (this.ctx.titleSubtitle = null),
                    (this.ctx.legend = null),
                    (this.ctx.dimensions = null),
                    (this.ctx.options = null),
                    (this.ctx.crosshairs = null),
                    (this.ctx.zoomPanSelection = null),
                    (this.ctx.updateHelpers = null),
                    (this.ctx.toolbar = null),
                    (this.ctx.localization = null),
                    (this.ctx.w.globals.tooltip = null),
                    this.clearDomElements({ isUpdating: o });
                },
              },
              {
                key: "killSVG",
                value: function (s) {
                  s.each(function (o, c) {
                    this.removeClass("*"), this.off(), this.stop();
                  }, !0),
                    s.ungroup(),
                    s.clear();
                },
              },
              {
                key: "clearDomElements",
                value: function (s) {
                  var o = this,
                    c = s.isUpdating,
                    h = this.w.globals.dom.Paper.node;
                  h.parentNode &&
                    h.parentNode.parentNode &&
                    !c &&
                    (h.parentNode.parentNode.style.minHeight = "unset");
                  var d = this.w.globals.dom.baseEl;
                  d &&
                    this.ctx.eventList.forEach(function (g) {
                      d.removeEventListener(g, o.ctx.events.documentEvent);
                    });
                  var f = this.w.globals.dom;
                  if (this.ctx.el !== null)
                    for (; this.ctx.el.firstChild; )
                      this.ctx.el.removeChild(this.ctx.el.firstChild);
                  this.killSVG(f.Paper),
                    f.Paper.remove(),
                    (f.elWrap = null),
                    (f.elGraphical = null),
                    (f.elLegendWrap = null),
                    (f.elLegendForeign = null),
                    (f.baseEl = null),
                    (f.elGridRect = null),
                    (f.elGridRectMask = null),
                    (f.elGridRectMarkerMask = null),
                    (f.elForecastMask = null),
                    (f.elNonForecastMask = null),
                    (f.elDefs = null);
                },
              },
            ]),
            $
          );
        })(),
        ir = new WeakMap(),
        _r = (function () {
          function $(s, o) {
            a(this, $),
              (this.opts = o),
              (this.ctx = this),
              (this.w = new T(o).init()),
              (this.el = s),
              (this.w.globals.cuid = B.randomId()),
              (this.w.globals.chartID = this.w.config.chart.id
                ? B.escapeString(this.w.config.chart.id)
                : this.w.globals.cuid),
              new hr(this).initModules(),
              (this.create = B.bind(this.create, this)),
              (this.windowResizeHandler = this._windowResizeHandler.bind(this)),
              (this.parentResizeHandler =
                this._parentResizeCallback.bind(this));
          }
          return (
            u(
              $,
              [
                {
                  key: "render",
                  value: function () {
                    var s = this;
                    return new Promise(function (o, c) {
                      if (s.el !== null) {
                        Apex._chartInstances === void 0 &&
                          (Apex._chartInstances = []),
                          s.w.config.chart.id &&
                            Apex._chartInstances.push({
                              id: s.w.globals.chartID,
                              group: s.w.config.chart.group,
                              chart: s,
                            }),
                          s.setLocale(s.w.config.chart.defaultLocale);
                        var h = s.w.config.chart.events.beforeMount;
                        if (
                          (typeof h == "function" && h(s, s.w),
                          s.events.fireEvent("beforeMount", [s, s.w]),
                          window.addEventListener(
                            "resize",
                            s.windowResizeHandler
                          ),
                          (function (k, _) {
                            var A = !1;
                            if (k.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {
                              var O = k.getBoundingClientRect();
                              (k.style.display !== "none" && O.width !== 0) ||
                                (A = !0);
                            }
                            var N = new ResizeObserver(function (H) {
                              A && _.call(k, H), (A = !0);
                            });
                            k.nodeType === Node.DOCUMENT_FRAGMENT_NODE
                              ? Array.from(k.children).forEach(function (H) {
                                  return N.observe(H);
                                })
                              : N.observe(k),
                              ir.set(_, N);
                          })(s.el.parentNode, s.parentResizeHandler),
                          !s.css)
                        ) {
                          var d = s.el.getRootNode && s.el.getRootNode(),
                            f = B.is("ShadowRoot", d),
                            g = s.el.ownerDocument,
                            y = g.getElementById("apexcharts-css");
                          (!f && y) ||
                            ((s.css = document.createElement("style")),
                            (s.css.id = "apexcharts-css"),
                            (s.css.textContent = `@keyframes opaque {
  0% {
      opacity: 0
  }

  to {
      opacity: 1
  }
}

@keyframes resizeanim {
  0%,to {
      opacity: 0
  }
}

.apexcharts-canvas {
  position: relative;
  user-select: none
}

.apexcharts-canvas ::-webkit-scrollbar {
  -webkit-appearance: none;
  width: 6px
}

.apexcharts-canvas ::-webkit-scrollbar-thumb {
  border-radius: 4px;
  background-color: rgba(0,0,0,.5);
  box-shadow: 0 0 1px rgba(255,255,255,.5);
  -webkit-box-shadow: 0 0 1px rgba(255,255,255,.5)
}

.apexcharts-inner {
  position: relative
}

.apexcharts-text tspan {
  font-family: inherit
}

.legend-mouseover-inactive {
  transition: .15s ease all;
  opacity: .2
}

.apexcharts-legend-text {
  padding-left: 15px;
  margin-left: -15px;
}

.apexcharts-series-collapsed {
  opacity: 0
}

.apexcharts-tooltip {
  border-radius: 5px;
  box-shadow: 2px 2px 6px -4px #999;
  cursor: default;
  font-size: 14px;
  left: 62px;
  opacity: 0;
  pointer-events: none;
  position: absolute;
  top: 20px;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  white-space: nowrap;
  z-index: 12;
  transition: .15s ease all
}

.apexcharts-tooltip.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-tooltip.apexcharts-theme-light {
  border: 1px solid #e3e3e3;
  background: rgba(255,255,255,.96)
}

.apexcharts-tooltip.apexcharts-theme-dark {
  color: #fff;
  background: rgba(30,30,30,.8)
}

.apexcharts-tooltip * {
  font-family: inherit
}

.apexcharts-tooltip-title {
  padding: 6px;
  font-size: 15px;
  margin-bottom: 4px
}

.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {
  background: #eceff1;
  border-bottom: 1px solid #ddd
}

.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {
  background: rgba(0,0,0,.7);
  border-bottom: 1px solid #333
}

.apexcharts-tooltip-text-goals-value,.apexcharts-tooltip-text-y-value,.apexcharts-tooltip-text-z-value {
  display: inline-block;
  margin-left: 5px;
  font-weight: 600
}

.apexcharts-tooltip-text-goals-label:empty,.apexcharts-tooltip-text-goals-value:empty,.apexcharts-tooltip-text-y-label:empty,.apexcharts-tooltip-text-y-value:empty,.apexcharts-tooltip-text-z-value:empty,.apexcharts-tooltip-title:empty {
  display: none
}

.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {
  padding: 6px 0 5px
}

.apexcharts-tooltip-goals-group,.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {
  display: flex
}

.apexcharts-tooltip-text-goals-label:not(:empty),.apexcharts-tooltip-text-goals-value:not(:empty) {
  margin-top: -6px
}

.apexcharts-tooltip-marker {
  width: 12px;
  height: 12px;
  position: relative;
  top: 0;
  margin-right: 10px;
  border-radius: 50%
}

.apexcharts-tooltip-series-group {
  padding: 0 10px;
  display: none;
  text-align: left;
  justify-content: left;
  align-items: center
}

.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {
  opacity: 1
}

.apexcharts-tooltip-series-group.apexcharts-active,.apexcharts-tooltip-series-group:last-child {
  padding-bottom: 4px
}

.apexcharts-tooltip-series-group-hidden {
  opacity: 0;
  height: 0;
  line-height: 0;
  padding: 0!important
}

.apexcharts-tooltip-y-group {
  padding: 6px 0 5px
}

.apexcharts-custom-tooltip,.apexcharts-tooltip-box {
  padding: 4px 8px
}

.apexcharts-tooltip-boxPlot {
  display: flex;
  flex-direction: column-reverse
}

.apexcharts-tooltip-box>div {
  margin: 4px 0
}

.apexcharts-tooltip-box span.value {
  font-weight: 700
}

.apexcharts-tooltip-rangebar {
  padding: 5px 8px
}

.apexcharts-tooltip-rangebar .category {
  font-weight: 600;
  color: #777
}

.apexcharts-tooltip-rangebar .series-name {
  font-weight: 700;
  display: block;
  margin-bottom: 5px
}

.apexcharts-xaxistooltip,.apexcharts-yaxistooltip {
  opacity: 0;
  pointer-events: none;
  color: #373d3f;
  font-size: 13px;
  text-align: center;
  border-radius: 2px;
  position: absolute;
  z-index: 10;
  background: #eceff1;
  border: 1px solid #90a4ae
}

.apexcharts-xaxistooltip {
  padding: 9px 10px;
  transition: .15s ease all
}

.apexcharts-xaxistooltip.apexcharts-theme-dark {
  background: rgba(0,0,0,.7);
  border: 1px solid rgba(0,0,0,.5);
  color: #fff
}

.apexcharts-xaxistooltip:after,.apexcharts-xaxistooltip:before {
  left: 50%;
  border: solid transparent;
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none
}

.apexcharts-xaxistooltip:after {
  border-color: transparent;
  border-width: 6px;
  margin-left: -6px
}

.apexcharts-xaxistooltip:before {
  border-color: transparent;
  border-width: 7px;
  margin-left: -7px
}

.apexcharts-xaxistooltip-bottom:after,.apexcharts-xaxistooltip-bottom:before {
  bottom: 100%
}

.apexcharts-xaxistooltip-top:after,.apexcharts-xaxistooltip-top:before {
  top: 100%
}

.apexcharts-xaxistooltip-bottom:after {
  border-bottom-color: #eceff1
}

.apexcharts-xaxistooltip-bottom:before {
  border-bottom-color: #90a4ae
}

.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {
  border-bottom-color: rgba(0,0,0,.5)
}

.apexcharts-xaxistooltip-top:after {
  border-top-color: #eceff1
}

.apexcharts-xaxistooltip-top:before {
  border-top-color: #90a4ae
}

.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {
  border-top-color: rgba(0,0,0,.5)
}

.apexcharts-xaxistooltip.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-yaxistooltip {
  padding: 4px 10px
}

.apexcharts-yaxistooltip.apexcharts-theme-dark {
  background: rgba(0,0,0,.7);
  border: 1px solid rgba(0,0,0,.5);
  color: #fff
}

.apexcharts-yaxistooltip:after,.apexcharts-yaxistooltip:before {
  top: 50%;
  border: solid transparent;
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none
}

.apexcharts-yaxistooltip:after {
  border-color: transparent;
  border-width: 6px;
  margin-top: -6px
}

.apexcharts-yaxistooltip:before {
  border-color: transparent;
  border-width: 7px;
  margin-top: -7px
}

.apexcharts-yaxistooltip-left:after,.apexcharts-yaxistooltip-left:before {
  left: 100%
}

.apexcharts-yaxistooltip-right:after,.apexcharts-yaxistooltip-right:before {
  right: 100%
}

.apexcharts-yaxistooltip-left:after {
  border-left-color: #eceff1
}

.apexcharts-yaxistooltip-left:before {
  border-left-color: #90a4ae
}

.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {
  border-left-color: rgba(0,0,0,.5)
}

.apexcharts-yaxistooltip-right:after {
  border-right-color: #eceff1
}

.apexcharts-yaxistooltip-right:before {
  border-right-color: #90a4ae
}

.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {
  border-right-color: rgba(0,0,0,.5)
}

.apexcharts-yaxistooltip.apexcharts-active {
  opacity: 1
}

.apexcharts-yaxistooltip-hidden {
  display: none
}

.apexcharts-xcrosshairs,.apexcharts-ycrosshairs {
  pointer-events: none;
  opacity: 0;
  transition: .15s ease all
}

.apexcharts-xcrosshairs.apexcharts-active,.apexcharts-ycrosshairs.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-ycrosshairs-hidden {
  opacity: 0
}

.apexcharts-selection-rect {
  cursor: move
}

.svg_select_boundingRect,.svg_select_points_rot {
  pointer-events: none;
  opacity: 0;
  visibility: hidden
}

.apexcharts-selection-rect+g .svg_select_boundingRect,.apexcharts-selection-rect+g .svg_select_points_rot {
  opacity: 0;
  visibility: hidden
}

.apexcharts-selection-rect+g .svg_select_points_l,.apexcharts-selection-rect+g .svg_select_points_r {
  cursor: ew-resize;
  opacity: 1;
  visibility: visible
}

.svg_select_points {
  fill: #efefef;
  stroke: #333;
  rx: 2
}

.apexcharts-svg.apexcharts-zoomable.hovering-zoom {
  cursor: crosshair
}

.apexcharts-svg.apexcharts-zoomable.hovering-pan {
  cursor: move
}

.apexcharts-menu-icon,.apexcharts-pan-icon,.apexcharts-reset-icon,.apexcharts-selection-icon,.apexcharts-toolbar-custom-icon,.apexcharts-zoom-icon,.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {
  cursor: pointer;
  width: 20px;
  height: 20px;
  line-height: 24px;
  color: #6e8192;
  text-align: center
}

.apexcharts-menu-icon svg,.apexcharts-reset-icon svg,.apexcharts-zoom-icon svg,.apexcharts-zoomin-icon svg,.apexcharts-zoomout-icon svg {
  fill: #6e8192
}

.apexcharts-selection-icon svg {
  fill: #444;
  transform: scale(.76)
}

.apexcharts-theme-dark .apexcharts-menu-icon svg,.apexcharts-theme-dark .apexcharts-pan-icon svg,.apexcharts-theme-dark .apexcharts-reset-icon svg,.apexcharts-theme-dark .apexcharts-selection-icon svg,.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg,.apexcharts-theme-dark .apexcharts-zoom-icon svg,.apexcharts-theme-dark .apexcharts-zoomin-icon svg,.apexcharts-theme-dark .apexcharts-zoomout-icon svg {
  fill: #f3f4f5
}

.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg {
  fill: #008ffb
}

.apexcharts-theme-light .apexcharts-menu-icon:hover svg,.apexcharts-theme-light .apexcharts-reset-icon:hover svg,.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg {
  fill: #333
}

.apexcharts-menu-icon,.apexcharts-selection-icon {
  position: relative
}

.apexcharts-reset-icon {
  margin-left: 5px
}

.apexcharts-menu-icon,.apexcharts-reset-icon,.apexcharts-zoom-icon {
  transform: scale(.85)
}

.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {
  transform: scale(.7)
}

.apexcharts-zoomout-icon {
  margin-right: 3px
}

.apexcharts-pan-icon {
  transform: scale(.62);
  position: relative;
  left: 1px;
  top: 0
}

.apexcharts-pan-icon svg {
  fill: #fff;
  stroke: #6e8192;
  stroke-width: 2
}

.apexcharts-pan-icon.apexcharts-selected svg {
  stroke: #008ffb
}

.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {
  stroke: #333
}

.apexcharts-toolbar {
  position: absolute;
  z-index: 11;
  max-width: 176px;
  text-align: right;
  border-radius: 3px;
  padding: 0 6px 2px;
  display: flex;
  justify-content: space-between;
  align-items: center
}

.apexcharts-menu {
  background: #fff;
  position: absolute;
  top: 100%;
  border: 1px solid #ddd;
  border-radius: 3px;
  padding: 3px;
  right: 10px;
  opacity: 0;
  min-width: 110px;
  transition: .15s ease all;
  pointer-events: none
}

.apexcharts-menu.apexcharts-menu-open {
  opacity: 1;
  pointer-events: all;
  transition: .15s ease all
}

.apexcharts-menu-item {
  padding: 6px 7px;
  font-size: 12px;
  cursor: pointer
}

.apexcharts-theme-light .apexcharts-menu-item:hover {
  background: #eee
}

.apexcharts-theme-dark .apexcharts-menu {
  background: rgba(0,0,0,.7);
  color: #fff
}

@media screen and (min-width:768px) {
  .apexcharts-canvas:hover .apexcharts-toolbar {
      opacity: 1
  }
}

.apexcharts-canvas .apexcharts-element-hidden,.apexcharts-datalabel.apexcharts-element-hidden,.apexcharts-hide .apexcharts-series-points {
  opacity: 0
}

.apexcharts-hidden-element-shown {
  opacity: 1;
  transition: 0.25s ease all;
}
.apexcharts-datalabel,.apexcharts-datalabel-label,.apexcharts-datalabel-value,.apexcharts-datalabels,.apexcharts-pie-label {
  cursor: default;
  pointer-events: none
}

.apexcharts-pie-label-delay {
  opacity: 0;
  animation-name: opaque;
  animation-duration: .3s;
  animation-fill-mode: forwards;
  animation-timing-function: ease
}

.apexcharts-annotation-rect,.apexcharts-area-series .apexcharts-area,.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-gridline,.apexcharts-line,.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-point-annotation-label,.apexcharts-radar-series path,.apexcharts-radar-series polygon,.apexcharts-toolbar svg,.apexcharts-tooltip .apexcharts-marker,.apexcharts-xaxis-annotation-label,.apexcharts-yaxis-annotation-label,.apexcharts-zoom-rect {
  pointer-events: none
}

.apexcharts-marker {
  transition: .15s ease all
}

.resize-triggers {
  animation: 1ms resizeanim;
  visibility: hidden;
  opacity: 0;
  height: 100%;
  width: 100%;
  overflow: hidden
}

.contract-trigger:before,.resize-triggers,.resize-triggers>div {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  left: 0
}

.resize-triggers>div {
  height: 100%;
  width: 100%;
  background: #eee;
  overflow: auto
}

.contract-trigger:before {
  overflow: hidden;
  width: 200%;
  height: 200%
}

.apexcharts-bar-goals-markers{
  pointer-events: none
}

.apexcharts-bar-shadows{
  pointer-events: none
}

.apexcharts-rangebar-goals-markers{
  pointer-events: none
}`),
                            f ? d.prepend(s.css) : g.head.appendChild(s.css));
                        }
                        var x = s.create(s.w.config.series, {});
                        if (!x) return o(s);
                        s.mount(x)
                          .then(function () {
                            typeof s.w.config.chart.events.mounted ==
                              "function" &&
                              s.w.config.chart.events.mounted(s, s.w),
                              s.events.fireEvent("mounted", [s, s.w]),
                              o(x);
                          })
                          .catch(function (k) {
                            c(k);
                          });
                      } else c(new Error("Element not found"));
                    });
                  },
                },
                {
                  key: "create",
                  value: function (s, o) {
                    var c = this.w;
                    new hr(this).initModules();
                    var h = this.w.globals;
                    if (
                      ((h.noData = !1),
                      (h.animationEnded = !1),
                      this.responsive.checkResponsiveConfig(o),
                      c.config.xaxis.convertedCatToNumeric &&
                        new ie(c.config).convertCatToNumericXaxis(
                          c.config,
                          this.ctx
                        ),
                      this.el === null ||
                        (this.core.setupElements(),
                        c.config.chart.type === "treemap" &&
                          ((c.config.grid.show = !1),
                          (c.config.yaxis[0].show = !1)),
                        h.svgWidth === 0))
                    )
                      return (h.animationEnded = !0), null;
                    var d = fe.checkComboSeries(s);
                    (h.comboCharts = d.comboCharts),
                      (h.comboBarCount = d.comboBarCount);
                    var f = s.every(function (k) {
                      return k.data && k.data.length === 0;
                    });
                    (s.length === 0 || f) && this.series.handleNoData(),
                      this.events.setupEventHandlers(),
                      this.data.parseData(s),
                      this.theme.init(),
                      new Oe(this).setGlobalMarkerSize(),
                      this.formatters.setLabelFormatters(),
                      this.titleSubtitle.draw(),
                      (h.noData &&
                        h.collapsedSeries.length !== h.series.length &&
                        !c.config.legend.showForSingleSeries) ||
                        this.legend.init(),
                      this.series.hasAllSeriesEqualX(),
                      h.axisCharts &&
                        (this.core.coreCalculations(),
                        c.config.xaxis.type !== "category" &&
                          this.formatters.setLabelFormatters(),
                        (this.ctx.toolbar.minX = c.globals.minX),
                        (this.ctx.toolbar.maxX = c.globals.maxX)),
                      this.formatters.heatmapLabelFormatters(),
                      new fe(this).getLargestMarkerSize(),
                      this.dimensions.plotCoords();
                    var g = this.core.xySettings();
                    this.grid.createGridMask();
                    var y = this.core.plotChartType(s, g),
                      x = new X(this);
                    return (
                      x.bringForward(),
                      c.config.dataLabels.background.enabled &&
                        x.dataLabelsBackground(),
                      this.core.shiftGraphPosition(),
                      {
                        elGraph: y,
                        xyRatios: g,
                        dimensions: {
                          plot: {
                            left: c.globals.translateX,
                            top: c.globals.translateY,
                            width: c.globals.gridWidth,
                            height: c.globals.gridHeight,
                          },
                        },
                      }
                    );
                  },
                },
                {
                  key: "mount",
                  value: function () {
                    var s = this,
                      o =
                        arguments.length > 0 && arguments[0] !== void 0
                          ? arguments[0]
                          : null,
                      c = this,
                      h = c.w;
                    return new Promise(function (d, f) {
                      if (c.el === null)
                        return f(
                          new Error(
                            "Not enough data to display or target element not found"
                          )
                        );
                      (o === null || h.globals.allSeriesCollapsed) &&
                        c.series.handleNoData(),
                        (c.grid = new Ne(c));
                      var g,
                        y,
                        x = c.grid.drawGrid();
                      if (
                        ((c.annotations = new E(c)),
                        c.annotations.drawImageAnnos(),
                        c.annotations.drawTextAnnos(),
                        h.config.grid.position === "back" &&
                          (x && h.globals.dom.elGraphical.add(x.el),
                          x != null &&
                            (g = x.elGridBorders) !== null &&
                            g !== void 0 &&
                            g.node &&
                            h.globals.dom.elGraphical.add(x.elGridBorders)),
                        Array.isArray(o.elGraph))
                      )
                        for (var k = 0; k < o.elGraph.length; k++)
                          h.globals.dom.elGraphical.add(o.elGraph[k]);
                      else h.globals.dom.elGraphical.add(o.elGraph);
                      h.config.grid.position === "front" &&
                        (x && h.globals.dom.elGraphical.add(x.el),
                        x != null &&
                          (y = x.elGridBorders) !== null &&
                          y !== void 0 &&
                          y.node &&
                          h.globals.dom.elGraphical.add(x.elGridBorders)),
                        h.config.xaxis.crosshairs.position === "front" &&
                          c.crosshairs.drawXCrosshairs(),
                        h.config.yaxis[0].crosshairs.position === "front" &&
                          c.crosshairs.drawYCrosshairs(),
                        h.config.chart.type !== "treemap" &&
                          c.axes.drawAxis(h.config.chart.type, x);
                      var _ = new Ie(s.ctx, x),
                        A = new Q(s.ctx, x);
                      if (
                        (x !== null &&
                          (_.xAxisLabelCorrections(x.xAxisTickWidth),
                          A.setYAxisTextAlignments(),
                          h.config.yaxis.map(function (N, H) {
                            h.globals.ignoreYAxisIndexes.indexOf(H) === -1 &&
                              A.yAxisTitleRotate(H, N.opposite);
                          })),
                        c.annotations.drawAxesAnnotations(),
                        !h.globals.noData)
                      ) {
                        if (
                          (h.config.tooltip.enabled &&
                            !h.globals.noData &&
                            c.w.globals.tooltip.drawTooltip(o.xyRatios),
                          h.globals.axisCharts &&
                            (h.globals.isXNumeric ||
                              h.config.xaxis.convertedCatToNumeric ||
                              h.globals.isRangeBar))
                        )
                          (h.config.chart.zoom.enabled ||
                            (h.config.chart.selection &&
                              h.config.chart.selection.enabled) ||
                            (h.config.chart.pan &&
                              h.config.chart.pan.enabled)) &&
                            c.zoomPanSelection.init({ xyRatios: o.xyRatios });
                        else {
                          var O = h.config.chart.toolbar.tools;
                          [
                            "zoom",
                            "zoomin",
                            "zoomout",
                            "selection",
                            "pan",
                            "reset",
                          ].forEach(function (N) {
                            O[N] = !1;
                          });
                        }
                        h.config.chart.toolbar.show &&
                          !h.globals.allSeriesCollapsed &&
                          c.toolbar.createToolbar();
                      }
                      h.globals.memory.methodsToExec.length > 0 &&
                        h.globals.memory.methodsToExec.forEach(function (N) {
                          N.method(N.params, !1, N.context);
                        }),
                        h.globals.axisCharts ||
                          h.globals.noData ||
                          c.core.resizeNonAxisCharts(),
                        d(c);
                    });
                  },
                },
                {
                  key: "destroy",
                  value: function () {
                    var s, o;
                    window.removeEventListener(
                      "resize",
                      this.windowResizeHandler
                    ),
                      this.el.parentNode,
                      (s = this.parentResizeHandler),
                      (o = ir.get(s)) && (o.disconnect(), ir.delete(s));
                    var c = this.w.config.chart.id;
                    c &&
                      Apex._chartInstances.forEach(function (h, d) {
                        h.id === B.escapeString(c) &&
                          Apex._chartInstances.splice(d, 1);
                      }),
                      new Ps(this.ctx).clear({ isUpdating: !1 });
                  },
                },
                {
                  key: "updateOptions",
                  value: function (s) {
                    var o = this,
                      c =
                        arguments.length > 1 &&
                        arguments[1] !== void 0 &&
                        arguments[1],
                      h =
                        !(arguments.length > 2 && arguments[2] !== void 0) ||
                        arguments[2],
                      d =
                        !(arguments.length > 3 && arguments[3] !== void 0) ||
                        arguments[3],
                      f =
                        !(arguments.length > 4 && arguments[4] !== void 0) ||
                        arguments[4],
                      g = this.w;
                    return (
                      (g.globals.selection = void 0),
                      s.series &&
                        (this.series.resetSeries(!1, !0, !1),
                        s.series.length &&
                          s.series[0].data &&
                          (s.series = s.series.map(function (y, x) {
                            return o.updateHelpers._extendSeries(y, x);
                          })),
                        this.updateHelpers.revertDefaultAxisMinMax()),
                      s.xaxis && (s = this.updateHelpers.forceXAxisUpdate(s)),
                      s.yaxis && (s = this.updateHelpers.forceYAxisUpdate(s)),
                      g.globals.collapsedSeriesIndices.length > 0 &&
                        this.series.clearPreviousPaths(),
                      s.theme && (s = this.theme.updateThemeOptions(s)),
                      this.updateHelpers._updateOptions(s, c, h, d, f)
                    );
                  },
                },
                {
                  key: "updateSeries",
                  value: function () {
                    var s =
                        arguments.length > 0 && arguments[0] !== void 0
                          ? arguments[0]
                          : [],
                      o =
                        !(arguments.length > 1 && arguments[1] !== void 0) ||
                        arguments[1],
                      c =
                        !(arguments.length > 2 && arguments[2] !== void 0) ||
                        arguments[2];
                    return (
                      this.series.resetSeries(!1),
                      this.updateHelpers.revertDefaultAxisMinMax(),
                      this.updateHelpers._updateSeries(s, o, c)
                    );
                  },
                },
                {
                  key: "appendSeries",
                  value: function (s) {
                    var o =
                        !(arguments.length > 1 && arguments[1] !== void 0) ||
                        arguments[1],
                      c =
                        !(arguments.length > 2 && arguments[2] !== void 0) ||
                        arguments[2],
                      h = this.w.config.series.slice();
                    return (
                      h.push(s),
                      this.series.resetSeries(!1),
                      this.updateHelpers.revertDefaultAxisMinMax(),
                      this.updateHelpers._updateSeries(h, o, c)
                    );
                  },
                },
                {
                  key: "appendData",
                  value: function (s) {
                    var o =
                        !(arguments.length > 1 && arguments[1] !== void 0) ||
                        arguments[1],
                      c = this;
                    (c.w.globals.dataChanged = !0), c.series.getPreviousPaths();
                    for (
                      var h = c.w.config.series.slice(), d = 0;
                      d < h.length;
                      d++
                    )
                      if (s[d] !== null && s[d] !== void 0)
                        for (var f = 0; f < s[d].data.length; f++)
                          h[d].data.push(s[d].data[f]);
                    return (
                      (c.w.config.series = h),
                      o &&
                        (c.w.globals.initialSeries = B.clone(
                          c.w.config.series
                        )),
                      this.update()
                    );
                  },
                },
                {
                  key: "update",
                  value: function (s) {
                    var o = this;
                    return new Promise(function (c, h) {
                      new Ps(o.ctx).clear({ isUpdating: !0 });
                      var d = o.create(o.w.config.series, s);
                      if (!d) return c(o);
                      o.mount(d)
                        .then(function () {
                          typeof o.w.config.chart.events.updated ==
                            "function" &&
                            o.w.config.chart.events.updated(o, o.w),
                            o.events.fireEvent("updated", [o, o.w]),
                            (o.w.globals.isDirty = !0),
                            c(o);
                        })
                        .catch(function (f) {
                          h(f);
                        });
                    });
                  },
                },
                {
                  key: "getSyncedCharts",
                  value: function () {
                    var s = this.getGroupedCharts(),
                      o = [this];
                    return (
                      s.length &&
                        ((o = []),
                        s.forEach(function (c) {
                          o.push(c);
                        })),
                      o
                    );
                  },
                },
                {
                  key: "getGroupedCharts",
                  value: function () {
                    var s = this;
                    return Apex._chartInstances
                      .filter(function (o) {
                        if (o.group) return !0;
                      })
                      .map(function (o) {
                        return s.w.config.chart.group === o.group ? o.chart : s;
                      });
                  },
                },
                {
                  key: "toggleSeries",
                  value: function (s) {
                    return this.series.toggleSeries(s);
                  },
                },
                {
                  key: "highlightSeriesOnLegendHover",
                  value: function (s, o) {
                    return this.series.toggleSeriesOnHover(s, o);
                  },
                },
                {
                  key: "showSeries",
                  value: function (s) {
                    this.series.showSeries(s);
                  },
                },
                {
                  key: "hideSeries",
                  value: function (s) {
                    this.series.hideSeries(s);
                  },
                },
                {
                  key: "resetSeries",
                  value: function () {
                    var s =
                        !(arguments.length > 0 && arguments[0] !== void 0) ||
                        arguments[0],
                      o =
                        !(arguments.length > 1 && arguments[1] !== void 0) ||
                        arguments[1];
                    this.series.resetSeries(s, o);
                  },
                },
                {
                  key: "addEventListener",
                  value: function (s, o) {
                    this.events.addEventListener(s, o);
                  },
                },
                {
                  key: "removeEventListener",
                  value: function (s, o) {
                    this.events.removeEventListener(s, o);
                  },
                },
                {
                  key: "addXaxisAnnotation",
                  value: function (s) {
                    var o =
                        !(arguments.length > 1 && arguments[1] !== void 0) ||
                        arguments[1],
                      c =
                        arguments.length > 2 && arguments[2] !== void 0
                          ? arguments[2]
                          : void 0,
                      h = this;
                    c && (h = c),
                      h.annotations.addXaxisAnnotationExternal(s, o, h);
                  },
                },
                {
                  key: "addYaxisAnnotation",
                  value: function (s) {
                    var o =
                        !(arguments.length > 1 && arguments[1] !== void 0) ||
                        arguments[1],
                      c =
                        arguments.length > 2 && arguments[2] !== void 0
                          ? arguments[2]
                          : void 0,
                      h = this;
                    c && (h = c),
                      h.annotations.addYaxisAnnotationExternal(s, o, h);
                  },
                },
                {
                  key: "addPointAnnotation",
                  value: function (s) {
                    var o =
                        !(arguments.length > 1 && arguments[1] !== void 0) ||
                        arguments[1],
                      c =
                        arguments.length > 2 && arguments[2] !== void 0
                          ? arguments[2]
                          : void 0,
                      h = this;
                    c && (h = c),
                      h.annotations.addPointAnnotationExternal(s, o, h);
                  },
                },
                {
                  key: "clearAnnotations",
                  value: function () {
                    var s =
                        arguments.length > 0 && arguments[0] !== void 0
                          ? arguments[0]
                          : void 0,
                      o = this;
                    s && (o = s), o.annotations.clearAnnotations(o);
                  },
                },
                {
                  key: "removeAnnotation",
                  value: function (s) {
                    var o =
                        arguments.length > 1 && arguments[1] !== void 0
                          ? arguments[1]
                          : void 0,
                      c = this;
                    o && (c = o), c.annotations.removeAnnotation(c, s);
                  },
                },
                {
                  key: "getChartArea",
                  value: function () {
                    return this.w.globals.dom.baseEl.querySelector(
                      ".apexcharts-inner"
                    );
                  },
                },
                {
                  key: "getSeriesTotalXRange",
                  value: function (s, o) {
                    return this.coreUtils.getSeriesTotalsXRange(s, o);
                  },
                },
                {
                  key: "getHighestValueInSeries",
                  value: function () {
                    var s =
                      arguments.length > 0 && arguments[0] !== void 0
                        ? arguments[0]
                        : 0;
                    return new W(this.ctx).getMinYMaxY(s).highestY;
                  },
                },
                {
                  key: "getLowestValueInSeries",
                  value: function () {
                    var s =
                      arguments.length > 0 && arguments[0] !== void 0
                        ? arguments[0]
                        : 0;
                    return new W(this.ctx).getMinYMaxY(s).lowestY;
                  },
                },
                {
                  key: "getSeriesTotal",
                  value: function () {
                    return this.w.globals.seriesTotals;
                  },
                },
                {
                  key: "toggleDataPointSelection",
                  value: function (s, o) {
                    return this.updateHelpers.toggleDataPointSelection(s, o);
                  },
                },
                {
                  key: "zoomX",
                  value: function (s, o) {
                    this.ctx.toolbar.zoomUpdateOptions(s, o);
                  },
                },
                {
                  key: "setLocale",
                  value: function (s) {
                    this.localization.setCurrentLocaleValues(s);
                  },
                },
                {
                  key: "dataURI",
                  value: function (s) {
                    return new Se(this.ctx).dataURI(s);
                  },
                },
                {
                  key: "exportToCSV",
                  value: function () {
                    var s =
                      arguments.length > 0 && arguments[0] !== void 0
                        ? arguments[0]
                        : {};
                    return new Se(this.ctx).exportToCSV(s);
                  },
                },
                {
                  key: "paper",
                  value: function () {
                    return this.w.globals.dom.Paper;
                  },
                },
                {
                  key: "_parentResizeCallback",
                  value: function () {
                    this.w.globals.animationEnded &&
                      this.w.config.chart.redrawOnParentResize &&
                      this._windowResize();
                  },
                },
                {
                  key: "_windowResize",
                  value: function () {
                    var s = this;
                    clearTimeout(this.w.globals.resizeTimer),
                      (this.w.globals.resizeTimer = window.setTimeout(
                        function () {
                          (s.w.globals.resized = !0),
                            (s.w.globals.dataChanged = !1),
                            s.ctx.update();
                        },
                        150
                      ));
                  },
                },
                {
                  key: "_windowResizeHandler",
                  value: function () {
                    var s = this.w.config.chart.redrawOnWindowResize;
                    typeof s == "function" && (s = s()),
                      s && this._windowResize();
                  },
                },
              ],
              [
                {
                  key: "getChartByID",
                  value: function (s) {
                    var o = B.escapeString(s),
                      c = Apex._chartInstances.filter(function (h) {
                        return h.id === o;
                      })[0];
                    return c && c.chart;
                  },
                },
                {
                  key: "initOnLoad",
                  value: function () {
                    for (
                      var s = document.querySelectorAll("[data-apexcharts]"),
                        o = 0;
                      o < s.length;
                      o++
                    )
                      new $(
                        s[o],
                        JSON.parse(s[o].getAttribute("data-options"))
                      ).render();
                  },
                },
                {
                  key: "exec",
                  value: function (s, o) {
                    var c = this.getChartByID(s);
                    if (c) {
                      c.w.globals.isExecCalled = !0;
                      var h = null;
                      if (c.publicMethods.indexOf(o) !== -1) {
                        for (
                          var d = arguments.length,
                            f = new Array(d > 2 ? d - 2 : 0),
                            g = 2;
                          g < d;
                          g++
                        )
                          f[g - 2] = arguments[g];
                        h = c[o].apply(c, f);
                      }
                      return h;
                    }
                  },
                },
                {
                  key: "merge",
                  value: function (s, o) {
                    return B.extend(s, o);
                  },
                },
              ]
            ),
            $
          );
        })();
      t.exports = _r;
    })(Ob, Ob.exports);
    var eV = Ob.exports;
    const Uc = ns(eV),
      tV = ve("div", { id: "performance-chart" }, null, -1),
      rV = [tV],
      nV = dt({
        __name: "PerformanceChart",
        props: { data: {} },
        setup(t) {
          const e = t,
            r = We(null),
            n = He(() => ({
              chart: {
                width: "100%",
                type: "area",
                fontFamily: "Inter, sans-serif",
                dropShadow: { enabled: !1 },
                sparkline: { enabled: !0 },
                toolbar: { show: !1 },
                zoom: { enabled: !1 },
                legend: { show: !1 },
                redrawOnParentResize: !0,
                redrawOnWindowResize: !0,
              },
              tooltip: { enabled: !0, x: { show: !1 } },
              fill: {
                type: "gradient",
                gradient: {
                  opacityFrom: 0.55,
                  opacityTo: 0,
                  shade: "#22c55e",
                  gradientToColors: ["#22c55e"],
                },
              },
              dataLabels: { enabled: !1 },
              stroke: { width: 2 },
              grid: {
                show: !1,
                strokeDashArray: 4,
                padding: { left: 0, right: 0, top: 0 },
              },
              series: [{ name: "", data: e.data.chartData, color: "#22c55e" }],
              xaxis: {
                categories: [
                  "11/08",
                  "12/08",
                  "13/08",
                  "14/08",
                  "15/08",
                  "16/08",
                  "17/08",
                ],
                labels: { show: !1 },
                axisBorder: { show: !1 },
                axisTicks: { show: !1 },
              },
              yaxis: { show: !1, min: 0, max: 100 },
            }));
          return (
            Or(
              () => e.data.chartData,
              async (i) => {
                i &&
                  r.value &&
                  r.value.updateSeries([
                    { name: "", data: i, color: "#22c55e" },
                  ]);
              },
              { immediate: !0 }
            ),
            sr(async () => {
              document.getElementById("performance-chart") &&
                typeof Uc < "u" &&
                ((r.value = new Uc(
                  document.getElementById("performance-chart"),
                  n.value
                )),
                await r.value.render());
            }),
            (i, a) => (je(), et("div", null, rV))
          );
        },
      }),
      iV = { class: "max-w-sm w-full rounded-lg shadow opacity-80" },
      sV = ve("div", { class: "py-6", id: "successful-calls-chart" }, null, -1),
      aV = [sV],
      oV = dt({
        __name: "SuccessfulCallsChart",
        props: { data: {} },
        setup(t) {
          const e = t,
            r = We(null),
            n = He(() => ({
              series: e.data.chartData,
              colors: ["#22c55e", "#942525"],
              chart: {
                height: 150,
                type: "donut",
                sparkline: { enabled: !0 },
                legend: { show: !1 },
              },
              stroke: { show: !1 },
              plotOptions: {
                pie: {
                  labels: { show: !0 },
                  size: "100%",
                  dataLabels: { offset: -25 },
                },
              },
              labels: ["Successful", "Non-successful"],
              dataLabels: {
                enabled: !0,
                style: { fontFamily: "Inter, sans-serif" },
              },
              yaxis: {
                labels: {
                  formatter: function (i) {
                    return i;
                  },
                },
              },
              xaxis: {
                labels: {
                  formatter: function (i) {
                    return i + "%";
                  },
                },
                axisTicks: { show: !1 },
                axisBorder: { show: !1 },
              },
            }));
          return (
            Or(
              () => e.data.chartData,
              async (i) => {
                i && r.value && r.value.updateSeries(i);
              },
              { immediate: !0 }
            ),
            sr(async () => {
              document.getElementById("successful-calls-chart") &&
                typeof Uc < "u" &&
                ((r.value = new Uc(
                  document.getElementById("successful-calls-chart"),
                  n.value
                )),
                await r.value.render());
            }),
            (i, a) => (je(), et("div", iV, aV))
          );
        },
      }),
      lV = ve("div", { id: "average-calls-per-day-chart" }, null, -1),
      cV = [lV],
      uV = dt({
        __name: "AverageCallsPerDayChart",
        props: { data: {} },
        setup(t) {
          const e = t,
            r = We(null),
            n = He(() => ({
              chart: {
                width: "100%",
                type: "area",
                fontFamily: "Inter, sans-serif",
                dropShadow: { enabled: !1 },
                sparkline: { enabled: !0 },
                toolbar: { show: !1 },
                zoom: { enabled: !1 },
                legend: { show: !1 },
                redrawOnParentResize: !0,
                redrawOnWindowResize: !0,
              },
              tooltip: { enabled: !0, x: { show: !1 } },
              fill: {
                type: "gradient",
                gradient: {
                  opacityFrom: 0.55,
                  opacityTo: 0,
                  shade: "#e7eaee",
                  gradientToColors: ["#e7eaee"],
                },
              },
              dataLabels: { enabled: !1 },
              stroke: { width: 2 },
              grid: {
                show: !1,
                strokeDashArray: 4,
                padding: { left: 0, right: 0, top: 0 },
              },
              series: [{ name: "", data: e.data.chartData, color: "#e7eaee" }],
              xaxis: {
                categories: [
                  "11/08",
                  "12/08",
                  "13/08",
                  "14/08",
                  "15/08",
                  "16/08",
                  "17/08",
                ],
                labels: { show: !1 },
                axisBorder: { show: !1 },
                axisTicks: { show: !1 },
              },
              yaxis: {
                show: !1,
                min: 0,
                max:
                  Math.max(...e.data.chartData) +
                  Math.max(...e.data.chartData) * 0.1,
              },
            }));
          return (
            Or(
              () => e.data.chartData,
              async (i) => {
                i &&
                  r.value &&
                  r.value.updateSeries([
                    { name: "", data: i, color: "#e7eaee" },
                  ]);
              },
              { immediate: !0 }
            ),
            sr(async () => {
              document.getElementById("average-calls-per-day-chart") &&
                typeof Uc < "u" &&
                ((r.value = new Uc(
                  document.getElementById("average-calls-per-day-chart"),
                  n.value
                )),
                await r.value.render());
            }),
            (i, a) => (je(), et("div", null, cV))
          );
        },
      }),
      hV = {
        class: "flex w-full justify-between px-4 pt-10 max-w-[300px] mx-auto",
      },
      dV = { class: "leading-none text-3xl font-bold text-white pb-2" },
      fV = {
        key: 0,
        class:
          "flex w-full justify-between px-4 max-w-[300px] mx-auto text-gray-400",
      },
      pV = ve("span", { class: "text-base pt-1" }, "No calls found", -1),
      gV = [pV],
      mV = { class: "max-w-[180px] font-normal text-gray-200 truncate" },
      vV = { class: "font-bold" },
      yV = {
        class: "max-w-[180px] text-xs font-normal text-gray-300 truncate",
      },
      bV = {
        class:
          "flex items-center px-2.5 py-0.5 font-semibold text-xl text-center text-green-400",
      },
      xV = dt({
        __name: "StatsBestTokens",
        props: { tokens: {}, size: {} },
        setup(t) {
          const e = t;
          return (r, n) => (
            je(),
            et(
              "div",
              {
                class: ot([
                  "flex items-baseline flex-col w-full border-t border-gray-500 lg:border-t-0 mx-auto",
                  [e.size === "sm" ? "pb-10" : ""],
                ]),
              },
              [
                ve("div", hV, [
                  ve(
                    "h5",
                    dV,
                    Bt(e.size === "sm" ? "Best Call" : "Best Calls"),
                    1
                  ),
                ]),
                e.tokens.length === 0 ? (je(), et("div", fV, gV)) : Yr("", !0),
                (je(!0),
                et(
                  dr,
                  null,
                  Hs(
                    e.tokens,
                    (i) => (
                      je(),
                      et(
                        "div",
                        {
                          key: i.name,
                          class: ot([
                            "flex w-full justify-between px-4 max-w-[300px] mx-auto",
                            [
                              e.size === "sm"
                                ? "text-base pt-1"
                                : "text-md pt-5",
                            ],
                          ]),
                        },
                        [
                          ve("div", null, [
                            ve("p", mV, [
                              ve("span", vV, Bt(i.symbol), 1),
                              Ws(" / " + Bt(i.name), 1),
                            ]),
                            ve(
                              "p",
                              yV,
                              Bt(
                                Xe(Er)(i.callTime * 1e3).format(
                                  "DD MMM YYYY HH:mm"
                                )
                              ) + " LT",
                              1
                            ),
                          ]),
                          ve("div", bV, Bt(i.maxProfit) + " % ", 1),
                        ],
                        2
                      )
                    )
                  ),
                  128
                )),
              ],
              2
            )
          );
        },
      }),
      wV = { class: "relative isolate overflow-hidden" },
      kV = { class: "mt-4 pb-4" },
      _V = {
        class:
          "mx-4 flex max-w-7xl flex-wrap items-center gap-6 sm:flex-nowrap sm:mx-8",
      },
      AV = ve(
        "h1",
        { class: "text-2xl font-semibold leading-7" },
        "Overview",
        -1
      ),
      CV = { class: "grid grid-cols-3 gap-3 sm:grid-cols-6 text-center" },
      SV = {
        class:
          "border-b border-b-gray-500 lg:border-t lg:border-t-gray-500 bg-gray-800",
      },
      EV = {
        class:
          "mx-auto grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 min-h-[140px]",
      },
      IV = ve(
        "div",
        {
          class:
            "absolute left-0 top-full -z-10 mt-96 origin-top-left translate-y-40 -rotate-90 transform-gpu opacity-20 blur-3xl sm:left-1/2 sm:-ml-96 sm:-mt-10 sm:translate-y-0 sm:rotate-0 sm:transform-gpu sm:opacity-50",
          "aria-hidden": "true",
        },
        [
          ve("div", {
            class:
              "aspect-[1154/678] w-[72.125rem] bg-gradient-to-br from-[#FF80B5] to-[#9089FC]",
            style: {
              "clip-path":
                "polygon(100% 38.5%, 82.6% 100%, 60.2% 37.7%, 52.4% 32.1%, 47.5% 41.8%, 45.2% 65.6%, 27.5% 23.4%, 0.1% 35.3%, 17.9% 0%, 27.7% 23.4%, 76.2% 2.5%, 74.2% 56%, 100% 38.5%)",
            },
          }),
        ],
        -1
      ),
      TV = dt({
        __name: "StatsOverview",
        props: {
          isLoading: { type: Boolean },
          stats: {},
          last24HoursStats: {},
          isTierOne: { type: Boolean },
        },
        emits: ["update:period"],
        setup(t, { emit: e }) {
          const r = t,
            { checkWallet: n } = Pb(),
            i = He(() => [
              { name: "Last 24 hours", value: "1d", isDisabled: !r.isTierOne },
              { name: "Last 7 days", value: "7d", isDisabled: !1 },
              { name: "Last 30 days", value: "30d", isDisabled: !1 },
            ]),
            a = We(i.value[1]);
          async function l(D) {
            if (((a.value = D), D.value === "1d"))
              if (await n()) {
                e("update:period", D.value);
                return;
              } else return;
            e("update:period", D.value);
          }
          const u = He(() =>
              a.value.value === "1d" || a.value.value === "7d" ? 7 : 30
            ),
            p = He(() => {
              const D = r.stats.daily
                  .slice(0, u.value)
                  .map((j) => ({
                    date: j.date,
                    value: j.successfulCallsPercentage,
                    totalCalls: j.totalCalls || 0,
                  })),
                z = Array.from({ length: u.value }, (j, B) => {
                  const ae = new Date();
                  return (
                    ae.setDate(ae.getDate() - B),
                    { date: Er(ae).format("DD/MM/YYYY"), value: 0 }
                  );
                });
              D.forEach((j) => {
                const B = z.findIndex((ae) => ae.date === j.date);
                z[B] = j;
              });
              const V = z.reverse();
              return V.map((j, B) => ({
                ...j,
                change: B === 0 ? j.value : j.value - V[B - 1].value,
              }));
            }),
            m = He(() => {
              const D = r.stats.daily
                  .slice(0, u.value)
                  .map((j) => ({
                    date: j.date,
                    value: `${j.successfulCalls}/${j.totalCalls}`,
                    successfulCalls: j.successfulCalls,
                    totalCalls: j.totalCalls,
                  })),
                z = Array.from({ length: u.value }, (j, B) => {
                  const ae = new Date();
                  return (
                    ae.setDate(ae.getDate() - B),
                    {
                      date: Er(ae).format("DD/MM/YYYY"),
                      value: 0,
                      successfulCalls: 0,
                      totalCalls: 0,
                    }
                  );
                });
              D.forEach((j) => {
                const B = z.findIndex((ae) => ae.date === j.date);
                z[B] = j;
              });
              const V = z.reverse();
              return V.map((j, B) => ({
                ...j,
                change:
                  B === 0
                    ? j.successfulCalls
                    : j.successfulCalls - V[B - 1].successfulCalls,
              }));
            }),
            v = He(() => {
              if (r.stats.period === "1d") {
                const { successfulCalls: D, totalCalls: z } =
                  r.last24HoursStats;
                return {
                  value: `${D}/${z}`,
                  successfulCalls: D,
                  totalCalls: z,
                };
              } else {
                const D = m.value.reduce(
                    (V, j) => V + Number(j.successfulCalls),
                    0
                  ),
                  z = m.value.reduce((V, j) => V + Number(j.totalCalls), 0);
                return {
                  value: `${D}/${z}`,
                  successfulCalls: D,
                  totalCalls: z,
                };
              }
            }),
            w = He(() => {
              const D = r.stats.daily
                  .slice(0, u.value)
                  .map((j) => ({ date: j.date, value: j.totalCallsChange })),
                z = Array.from({ length: u.value }, (j, B) => {
                  const ae = new Date();
                  return (
                    ae.setDate(ae.getDate() - B),
                    { date: Er(ae).format("DD/MM/YYYY"), value: 0 }
                  );
                });
              D.forEach((j) => {
                const B = z.findIndex((ae) => ae.date === j.date);
                z[B] = j;
              });
              const V = z.reverse();
              return V.map((j, B) => ({
                ...j,
                change: B === 0 ? j.value : j.value - V[B - 1].value,
              }));
            }),
            S = He(() =>
              r.stats.period === "1d"
                ? r.last24HoursStats.totalCalls
                : (
                    w.value.reduce((D, z) => D + Number(z.value), 0) /
                    w.value.length
                  ).toFixed(0)
            ),
            M = He(() => [
              {
                name: "Success ratio",
                value: `${
                  v.value.totalCalls
                    ? (
                        (v.value.successfulCalls / v.value.totalCalls) *
                        100
                      ).toFixed(1)
                    : 0
                } %`,
                change: `${p.value[p.value.length - 1].change} %`,
                changeType:
                  p.value[p.value.length - 1].change > 0
                    ? "positive"
                    : p.value[p.value.length - 1].change < 0
                    ? "negative"
                    : "neutral",
                chartComponent: nV,
                chartData: p.value.map((D) => D.value),
              },
              {
                name: "Successful calls",
                value: `${v.value.value}`,
                change: `${m.value[m.value.length - 1].change}`,
                changeType:
                  m.value[m.value.length - 1].change > 0
                    ? "positive"
                    : m.value[m.value.length - 1].change < 0
                    ? "negative"
                    : "neutral",
                chartComponent: oV,
                chartData: [
                  v.value.successfulCalls,
                  v.value.totalCalls - v.value.successfulCalls,
                ],
              },
              {
                name:
                  a.value.value === "1d"
                    ? "Total Calls"
                    : "Average calls per day",
                value: S.value,
                change: w.value[p.value.length - 1].change,
                changeType:
                  w.value[p.value.length - 1].change > 0
                    ? "positive"
                    : w.value[p.value.length - 1].change < 0
                    ? "negative"
                    : "neutral",
                chartComponent: uV,
                chartData: w.value.map((D) => D.value),
              },
            ]);
          return (
            Or(
              () => r.isTierOne,
              () => {
                (a.value = i.value[1]), e("update:period", i.value[1].value);
              }
            ),
            (D, z) => (
              je(),
              et("div", wV, [
                ve("header", kV, [
                  ve("div", _V, [
                    AV,
                    $e(
                      Xe(qB),
                      {
                        "model-value": a.value,
                        "onUpdate:modelValue": l,
                        class:
                          "order-last flex w-full gap-x-8 text-sm font-semibold leading-6 sm:order-none sm:w-auto sm:border-l sm:border-gray-500 sm:pl-6 sm:leading-7",
                      },
                      {
                        default: Ft(() => [
                          $e(
                            Xe(aA),
                            { class: "sr-only" },
                            { default: Ft(() => [Ws("Choose a period")]), _: 1 }
                          ),
                          ve("div", CV, [
                            (je(!0),
                            et(
                              dr,
                              null,
                              Hs(
                                i.value,
                                (V) => (
                                  je(),
                                  jt(
                                    Xe($B),
                                    {
                                      as: "template",
                                      disabled: V.isDisabled,
                                      key: V.name,
                                      value: V,
                                      class: ot({
                                        "text-gray-50/25": V.isDisabled,
                                      }),
                                    },
                                    {
                                      default: Ft(
                                        ({ active: j, checked: B }) => [
                                          ve(
                                            "div",
                                            {
                                              class: ot([
                                                "focus:outline-none",
                                                [
                                                  B
                                                    ? "font-bold text-gray-300 underline"
                                                    : "text-gray-400 no-underline",
                                                  V.isDisabled
                                                    ? "cursor-not-allowed"
                                                    : "cursor-pointer",
                                                ],
                                              ]),
                                            },
                                            [
                                              $e(
                                                Xe(aA),
                                                { as: "span" },
                                                {
                                                  default: Ft(() => [
                                                    Ws(Bt(V.name), 1),
                                                  ]),
                                                  _: 2,
                                                },
                                                1024
                                              ),
                                            ],
                                            2
                                          ),
                                        ]
                                      ),
                                      _: 2,
                                    },
                                    1032,
                                    ["disabled", "value", "class"]
                                  )
                                )
                              ),
                              128
                            )),
                          ]),
                        ]),
                        _: 1,
                      },
                      8,
                      ["model-value"]
                    ),
                  ]),
                ]),
                ve("div", SV, [
                  ve("dl", EV, [
                    r.isLoading
                      ? (je(),
                        et(
                          dr,
                          { key: 0 },
                          Hs([1, 2, 3, 4], (V, j) =>
                            ve(
                              "div",
                              {
                                class: ot([
                                  "h-[297px] border-gray-500",
                                  [
                                    j % 2 === 1
                                      ? "sm:border-l"
                                      : j === 2
                                      ? "lg:border-l"
                                      : "",
                                  ],
                                ]),
                              },
                              [
                                $e(
                                  i0,
                                  { size: Xe(Yn).medium, theme: Xe(Bi).dark },
                                  null,
                                  8,
                                  ["size", "theme"]
                                ),
                              ],
                              2
                            )
                          ),
                          64
                        ))
                      : Yr("", !0),
                    r.isLoading
                      ? Yr("", !0)
                      : (je(!0),
                        et(
                          dr,
                          { key: 1 },
                          Hs(
                            M.value,
                            (V, j) => (
                              je(),
                              jt(
                                JY,
                                {
                                  class: ot([
                                    j % 2 === 1
                                      ? "sm:border-l"
                                      : j === 2
                                      ? "lg:border-l"
                                      : "",
                                    a.value.value === "1d" ? "pb-10" : "",
                                  ]),
                                  stat: V,
                                  size: a.value.value === "1d" ? "sm" : "lg",
                                  "is-chart-visible": a.value.value !== "1d",
                                },
                                null,
                                8,
                                ["class", "stat", "size", "is-chart-visible"]
                              )
                            )
                          ),
                          256
                        )),
                    r.isLoading
                      ? Yr("", !0)
                      : (je(),
                        jt(
                          xV,
                          {
                            key: 2,
                            class: "mb-8 sm:mb-0 sm:border-l",
                            tokens:
                              a.value.value === "1d"
                                ? [r.stats.best3Calls[0]]
                                : r.stats.best3Calls,
                            size: a.value.value === "1d" ? "sm" : "lg",
                          },
                          null,
                          8,
                          ["tokens", "size"]
                        )),
                  ]),
                ]),
                IV,
              ])
            )
          );
        },
      }),
      PV = 2;
    function _I(t, e = PV) {
      return e
        ? t.toFixed(e).replace(/\d(?=(\d{3})+\.)/gu, "$&,")
        : t.toLocaleString();
    }
    function OV(t, e) {
      return (
        je(),
        et(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            viewBox: "0 0 24 24",
            fill: "currentColor",
            "aria-hidden": "true",
          },
          [
            ve("path", {
              "fill-rule": "evenodd",
              d: "M12.963 2.286a.75.75 0 00-1.071-.136 9.742 9.742 0 00-3.539 6.177A7.547 7.547 0 016.648 6.61a.75.75 0 00-1.152-.082A9 9 0 1015.68 4.534a7.46 7.46 0 01-2.717-2.248zM15.75 14.25a3.75 3.75 0 11-7.313-1.172c.628.465 1.35.81 2.133 1a5.99 5.99 0 011.925-3.545 3.75 3.75 0 013.255 3.717z",
              "clip-rule": "evenodd",
            }),
          ]
        )
      );
    }
    function LV(t, e) {
      return (
        je(),
        et(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            viewBox: "0 0 20 20",
            fill: "currentColor",
            "aria-hidden": "true",
          },
          [
            ve("path", {
              "fill-rule": "evenodd",
              d: "M18 10a.75.75 0 01-.75.75H4.66l2.1 1.95a.75.75 0 11-1.02 1.1l-3.5-3.25a.75.75 0 010-1.1l3.5-3.25a.75.75 0 111.02 1.1l-2.1 1.95h12.59A.75.75 0 0118 10z",
              "clip-rule": "evenodd",
            }),
          ]
        )
      );
    }
    function MV(t, e) {
      return (
        je(),
        et(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            viewBox: "0 0 20 20",
            fill: "currentColor",
            "aria-hidden": "true",
          },
          [
            ve("path", {
              "fill-rule": "evenodd",
              d: "M2 10a.75.75 0 01.75-.75h12.59l-2.1-1.95a.75.75 0 111.02-1.1l3.5 3.25a.75.75 0 010 1.1l-3.5 3.25a.75.75 0 11-1.02-1.1l2.1-1.95H2.75A.75.75 0 012 10z",
              "clip-rule": "evenodd",
            }),
          ]
        )
      );
    }
    function AI(t, e) {
      return (
        je(),
        et(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            viewBox: "0 0 20 20",
            fill: "currentColor",
            "aria-hidden": "true",
          },
          [
            ve("path", {
              "fill-rule": "evenodd",
              d: "M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z",
              "clip-rule": "evenodd",
            }),
          ]
        )
      );
    }
    function Lb(t, e) {
      return (
        je(),
        et(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            viewBox: "0 0 20 20",
            fill: "currentColor",
            "aria-hidden": "true",
          },
          [
            ve("path", {
              d: "M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z",
            }),
          ]
        )
      );
    }
    const RV = {
        class:
          "border-b bg-gray-800 border-gray-700 hover:bg-gray-50 hover:bg-gray-600",
      },
      NV = { class: "w-2 p-2" },
      BV = { class: "relative rounded-full" },
      FV = {
        class:
          "absolute mx-0 my-auto left-0 right-0 flex flex-col justify-center items-center rounded-full",
      },
      DV = {
        class:
          "min-w-40 sm:min-w-48 px-1 sm:px-6 py-4 font-medium whitespace-nowrap text-white",
      },
      zV = { class: "flex" },
      HV = { class: "w-96 px-3 sm:px-6 py-4" },
      UV = { class: "flex-auto" },
      WV = { class: "flex items-start gap-x-3" },
      XV = {
        class:
          "min-w-36 max-w-[180px] sm:max-w-[300px] truncate leading-6 text-gray-200",
      },
      jV = { class: "font-bold" },
      GV = { key: 0, class: "mt-1 text-xs leading-5 text-gray-300" },
      YV = { class: "min-w-34 px-3 sm:px-6 py-4 text-gray-300" },
      VV = { class: "text-sm leading-6" },
      qV = { class: "mt-1 text-xs leading-5 text-gray-300" },
      KV = { class: "min-w-34 px-3 sm:px-6 py-4 text-gray-300" },
      $V = { class: "text-sm leading-6" },
      ZV = { class: "text-sm leading-6" },
      QV = { class: "min-w-52 px-3 sm:px-6 py-4 text-gray-300" },
      JV = { class: "text-sm leading-6 flex" },
      eq = { class: "mt-1 text-sm leading-5 text-gray-300 flex" },
      tq = { class: "px-3 sm:px-6 py-4" },
      rq = { class: "flex flex-col justify-end" },
      nq = ["href"],
      iq = ["href"],
      sq = dt({
        __name: "TableRowItem",
        props: { call: {} },
        setup(t) {
          const e = t,
            r = He(() => e.call.maxProfit > 400),
            n = He(() => e.call.maxProfit > 1e6),
            i = He(() => ({
              icon: n.value ? HA : e.call.isSuccessful ? zA : DA,
              color: n.value
                ? "text-yellow-400"
                : e.call.isSuccessful
                ? "text-green-400"
                : "text-red-400",
            })),
            a = He(() => !e.call.h24);
          return (l, u) => (
            je(),
            et("tr", RV, [
              ve("td", NV, [
                ve(
                  "div",
                  {
                    class: ot([
                      "ml-2 sm:ml-4 h-2 w-2 rounded-full",
                      [a.value ? "bg-green-400" : "bg-red-400/50"],
                    ]),
                  },
                  [
                    ve("div", BV, [
                      ve("div", FV, [
                        ve(
                          "span",
                          {
                            class: ot([
                              "bg-transparent border-1 h-2 w-2 flex flex-col justify-center rounded-full",
                              [
                                a.value
                                  ? "ripple border-green-400"
                                  : "border-red-400",
                              ],
                            ]),
                          },
                          null,
                          2
                        ),
                      ]),
                    ]),
                  ],
                  2
                ),
              ]),
              ve("td", DV, [
                ve("div", zV, [
                  e.call.min5
                    ? (je(),
                      jt(
                        zs(i.value.icon),
                        {
                          key: 1,
                          class: ot([
                            [
                              e.call.min5 ? "" : "text-transparent",
                              i.value.color,
                            ],
                            "w-6 flex-none",
                          ]),
                          "aria-hidden": "true",
                        },
                        null,
                        8,
                        ["class"]
                      ))
                    : (je(),
                      jt(Xe(HF), {
                        key: 0,
                        class:
                          "w-6 flex-none text-project-primary active-price-tracking-dot",
                        "aria-hidden": "true",
                      })),
                  ve(
                    "span",
                    {
                      class: ot([
                        "flex items-center ml-2 text-xl",
                        [
                          n.value
                            ? "text-yellow-200"
                            : e.call.min5
                            ? e.call.isSuccessful
                              ? "text-green-400"
                              : "text-red-400"
                            : "text-gray-500",
                        ],
                      ]),
                    },
                    Bt(
                      n.value ? "-" : e.call.min5 ? e.call.maxProfit || 0 : "-"
                    ) + " % ",
                    3
                  ),
                  r.value && !n.value
                    ? (je(),
                      jt(zs(Xe(OV)), {
                        key: 2,
                        class: "ml-2 w-6 flex-none sm:block text-orange-400",
                        "aria-hidden": "true",
                      }))
                    : Yr("", !0),
                ]),
              ]),
              ve("td", HV, [
                ve("div", UV, [
                  ve("div", WV, [
                    ve("div", XV, [
                      ve("span", jV, Bt(e.call.symbol), 1),
                      Ws(" / " + Bt(e.call.name), 1),
                    ]),
                  ]),
                  e.call.callTime
                    ? (je(),
                      et(
                        "div",
                        GV,
                        Bt(
                          Xe(Er)(e.call.callTime * 1e3).format(
                            "DD MMM YYYY HH:mm"
                          )
                        ) + " LT",
                        1
                      ))
                    : Yr("", !0),
                ]),
              ]),
              ve("td", YV, [
                ve("div", VV, "$" + Bt(Xe(_I)(e.call.marketcap)), 1),
                ve(
                  "div",
                  qV,
                  Bt(e.call.buyTax) + "% / " + Bt(e.call.sellTax) + "% ",
                  1
                ),
              ]),
              ve("td", KV, [
                ve("div", $V, "$" + Bt(Xe(_I)(e.call.liquidityUSD)), 1),
                ve("div", ZV, Bt(e.call.liquidityETH) + " ETH", 1),
              ]),
              ve("td", QV, [
                ve("div", JV, [
                  Ws(
                    " \u{1F41D} \xA0 Honeypot - " +
                      Bt(e.call.honeypotCheck ? "Failed" : "Passed") +
                      " ",
                    1
                  ),
                  (je(),
                  jt(
                    zs(e.call.honeypotCheck ? Xe(Lb) : Xe(AI)),
                    {
                      class: ot([
                        "w-5",
                        {
                          "text-red-500 mt-0 ml-1": e.call.honeypotCheck,
                          "text-green-400 ml-2 -mt-1": !e.call.honeypotCheck,
                        },
                      ]),
                    },
                    null,
                    8,
                    ["class"]
                  )),
                ]),
                ve("div", eq, [
                  $e(
                    Xe(BF),
                    {
                      class: ot([
                        "w-5 mr-1 -mt-1",
                        {
                          "text-red-500": !e.call.renounced,
                          "text-green-400": e.call.renounced,
                        },
                      ]),
                    },
                    null,
                    8,
                    ["class"]
                  ),
                  Ws(" Renounced "),
                  (je(),
                  jt(
                    zs(e.call.renounced ? Xe(AI) : Xe(Lb)),
                    {
                      class: ot([
                        "w-5",
                        {
                          "text-red-500 mt-0 ml-1": !e.call.renounced,
                          "text-green-400 ml-1.5 -mt-1": e.call.renounced,
                        },
                      ]),
                    },
                    null,
                    8,
                    ["class"]
                  )),
                ]),
              ]),
              ve("td", tq, [
                ve("div", rq, [
                  ve(
                    "a",
                    {
                      href: `https://etherscan.io/address/${e.call.address}`,
                      target: "_blank",
                      class:
                        "text-sm font-medium leading-6 text-white hover:text-grey-300 visited:text-white",
                    },
                    "Etherscan",
                    8,
                    nq
                  ),
                  ve(
                    "a",
                    {
                      href: `https://dexspy.io/eth/token/${e.call.address}`,
                      target: "_blank",
                      class:
                        "text-sm font-medium leading-6 text-white hover:text-grey-300 visited:text-white active:text-white",
                    },
                    " DexSpy ",
                    8,
                    iq
                  ),
                ]),
              ]),
            ])
          );
        },
      }),
      aq = Jl(sq, [["__scopeId", "data-v-807b499b"]]),
      oq = {
        class:
          "flex items-center justify-center border-t border-gray-200 px-4 sm:px-0 pb-4 select-none",
      },
      lq = { class: "-mt-px flex" },
      cq = { class: "hidden md:-mt-px md:flex" },
      uq = ["onClick"],
      hq = { class: "-mt-px flex justify-end" },
      dq = {
        __name: "BasePagination",
        props: {
          pageSize: { type: Number, default: 10 },
          itemsCount: { type: Number, default: 0 },
          currentPage: { type: Number, default: 0 },
          isDisabled: { type: Boolean, default: !1 },
        },
        emits: ["pageChanged", "pageSizeChanged"],
        setup(t, { emit: e }) {
          const r = t;
          He(() => {
            const v = r.currentPage * r.pageSize + 1;
            let w = v + r.pageSize - 1;
            return (
              w > r.itemsCount && (w = r.itemsCount),
              w === 0
                ? `${r.itemsCount} items`
                : w === 1
                ? `${w} of ${r.itemsCount} item`
                : `${v}-${w} of ${r.itemsCount} items`
            );
          });
          const n = He(() => Math.ceil(r.itemsCount / r.pageSize)),
            i = He(() => r.currentPage > 1),
            a = He(() => r.currentPage * r.pageSize <= r.itemsCount),
            l = He(() => {
              const v = r.currentPage,
                w = n.value;
              if (w <= 10)
                return [...Array(w).keys()].map((M) => ({
                  label: M + 1,
                  value: M + 1,
                }));
              const S = Array(9);
              if (
                ((S[0] = { label: 1, value: 1 }),
                (S[8] = { label: w, value: w }),
                v < 5)
              ) {
                for (let M = 1; M < 7; M++)
                  S[M] = { label: M + 1, value: M + 1 };
                return (S[7] = { label: "...", value: S[6].value + 1 }), S;
              }
              if (v >= w - 3) {
                for (let M = 2; M < 8; M++)
                  S[M] = { label: M + w - 8, value: M + w - 8 };
                return (S[1] = { label: "...", value: S[2].value - 1 }), S;
              }
              for (let M = 2; M < 7; M++)
                S[M] = { label: v - 4 + M, value: v - 4 + M };
              return (
                (S[1] = { label: "...", value: S[2].value - 1 }),
                (S[7] = { label: "...", value: S[6].value + 1 }),
                S
              );
            });
          function u(v) {
            e("pageChanged", v);
          }
          function p() {
            i.value && e("pageChanged", r.currentPage - 1);
          }
          function m() {
            a.value && e("pageChanged", r.currentPage + 1);
          }
          return (v, w) => (
            je(),
            et("nav", oq, [
              ve("div", lq, [
                ve(
                  "span",
                  {
                    class:
                      "inline-flex items-center border-t-2 border-transparent pr-1 pt-4 text-sm font-medium text-gray-500 hover:text-gray-700 cursor-pointer",
                    onClick: w[0] || (w[0] = (S) => i.value && p()),
                  },
                  [
                    $e(
                      Xe(LV),
                      {
                        class: ot([
                          "mr-3 h-5 w-5 text-gray-400",
                          [i.value ? "text-blue-500" : "text-gray-200"],
                        ]),
                        "aria-hidden": "true",
                      },
                      null,
                      8,
                      ["class"]
                    ),
                  ]
                ),
              ]),
              ve("div", cq, [
                (je(!0),
                et(
                  dr,
                  null,
                  Hs(
                    l.value,
                    (S) => (
                      je(),
                      et(
                        "span",
                        {
                          class: ot([
                            "w-10 inline-flex justify-center items-center px-4 pt-4 text-sm font-medium text-gray-500 hover:border-gray-300 hover:text-gray-700 cursor-pointer",
                            [
                              S.value === r.currentPage
                                ? "text-white border-t-2 border-white hover:border-white"
                                : "border-transparent",
                            ],
                          ]),
                          onClick: (M) => u(S.value),
                        },
                        Bt(S.label),
                        11,
                        uq
                      )
                    )
                  ),
                  256
                )),
              ]),
              ve("div", hq, [
                ve(
                  "span",
                  {
                    class:
                      "inline-flex items-center border-t-2 border-transparent pl-1 pt-4 text-sm font-medium text-gray-500 hover:text-gray-700 cursor-pointer",
                    onClick: w[1] || (w[1] = (S) => a.value && m()),
                  },
                  [
                    $e(Xe(MV), {
                      class: "ml-3 h-5 w-5 text-gray-400",
                      "aria-hidden": "true",
                    }),
                  ]
                ),
              ]),
            ])
          );
        },
      };
    var fq = (function () {
        function t(e, r) {
          r === void 0 && (r = []),
            (this._eventType = e),
            (this._eventFunctions = r);
        }
        return (
          (t.prototype.init = function () {
            var e = this;
            this._eventFunctions.forEach(function (r) {
              typeof window < "u" && window.addEventListener(e._eventType, r);
            });
          }),
          t
        );
      })(),
      gg =
        (globalThis && globalThis.__assign) ||
        function () {
          return (
            (gg =
              Object.assign ||
              function (t) {
                for (var e, r = 1, n = arguments.length; r < n; r++) {
                  e = arguments[r];
                  for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                }
                return t;
              }),
            gg.apply(this, arguments)
          );
        },
      mg = {
        alwaysOpen: !1,
        activeClasses:
          "bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white",
        inactiveClasses: "text-gray-500 dark:text-gray-400",
        onOpen: function () {},
        onClose: function () {},
        onToggle: function () {},
      },
      CI = (function () {
        function t(e, r) {
          e === void 0 && (e = []),
            r === void 0 && (r = mg),
            (this._items = e),
            (this._options = gg(gg({}, mg), r)),
            this._init();
        }
        return (
          (t.prototype._init = function () {
            var e = this;
            this._items.length &&
              this._items.map(function (r) {
                r.active && e.open(r.id),
                  r.triggerEl.addEventListener("click", function () {
                    e.toggle(r.id);
                  });
              });
          }),
          (t.prototype.getItem = function (e) {
            return this._items.filter(function (r) {
              return r.id === e;
            })[0];
          }),
          (t.prototype.open = function (e) {
            var r,
              n,
              i = this,
              a = this.getItem(e);
            this._options.alwaysOpen ||
              this._items.map(function (l) {
                var u, p;
                l !== a &&
                  ((u = l.triggerEl.classList).remove.apply(
                    u,
                    i._options.activeClasses.split(" ")
                  ),
                  (p = l.triggerEl.classList).add.apply(
                    p,
                    i._options.inactiveClasses.split(" ")
                  ),
                  l.targetEl.classList.add("hidden"),
                  l.triggerEl.setAttribute("aria-expanded", "false"),
                  (l.active = !1),
                  l.iconEl && l.iconEl.classList.remove("rotate-180"));
              }),
              (r = a.triggerEl.classList).add.apply(
                r,
                this._options.activeClasses.split(" ")
              ),
              (n = a.triggerEl.classList).remove.apply(
                n,
                this._options.inactiveClasses.split(" ")
              ),
              a.triggerEl.setAttribute("aria-expanded", "true"),
              a.targetEl.classList.remove("hidden"),
              (a.active = !0),
              a.iconEl && a.iconEl.classList.add("rotate-180"),
              this._options.onOpen(this, a);
          }),
          (t.prototype.toggle = function (e) {
            var r = this.getItem(e);
            r.active ? this.close(e) : this.open(e),
              this._options.onToggle(this, r);
          }),
          (t.prototype.close = function (e) {
            var r,
              n,
              i = this.getItem(e);
            (r = i.triggerEl.classList).remove.apply(
              r,
              this._options.activeClasses.split(" ")
            ),
              (n = i.triggerEl.classList).add.apply(
                n,
                this._options.inactiveClasses.split(" ")
              ),
              i.targetEl.classList.add("hidden"),
              i.triggerEl.setAttribute("aria-expanded", "false"),
              (i.active = !1),
              i.iconEl && i.iconEl.classList.remove("rotate-180"),
              this._options.onClose(this, i);
          }),
          t
        );
      })();
    function Mb() {
      document.querySelectorAll("[data-accordion]").forEach(function (t) {
        var e = t.getAttribute("data-accordion"),
          r = t.getAttribute("data-active-classes"),
          n = t.getAttribute("data-inactive-classes"),
          i = [];
        t.querySelectorAll("[data-accordion-target]").forEach(function (a) {
          if (a.closest("[data-accordion]") === t) {
            var l = {
              id: a.getAttribute("data-accordion-target"),
              triggerEl: a,
              targetEl: document.querySelector(
                a.getAttribute("data-accordion-target")
              ),
              iconEl: a.querySelector("[data-accordion-icon]"),
              active: a.getAttribute("aria-expanded") === "true",
            };
            i.push(l);
          }
        }),
          new CI(i, {
            alwaysOpen: e === "open",
            activeClasses: r || mg.activeClasses,
            inactiveClasses: n || mg.inactiveClasses,
          });
      });
    }
    typeof window < "u" &&
      ((window.Accordion = CI), (window.initAccordions = Mb));
    var vg =
        (globalThis && globalThis.__assign) ||
        function () {
          return (
            (vg =
              Object.assign ||
              function (t) {
                for (var e, r = 1, n = arguments.length; r < n; r++) {
                  e = arguments[r];
                  for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                }
                return t;
              }),
            vg.apply(this, arguments)
          );
        },
      SI = {
        onCollapse: function () {},
        onExpand: function () {},
        onToggle: function () {},
      },
      EI = (function () {
        function t(e, r, n) {
          e === void 0 && (e = null),
            r === void 0 && (r = null),
            n === void 0 && (n = SI),
            (this._targetEl = e),
            (this._triggerEl = r),
            (this._options = vg(vg({}, SI), n)),
            (this._visible = !1),
            this._init();
        }
        return (
          (t.prototype._init = function () {
            var e = this;
            this._triggerEl &&
              (this._triggerEl.hasAttribute("aria-expanded")
                ? (this._visible =
                    this._triggerEl.getAttribute("aria-expanded") === "true")
                : (this._visible =
                    !this._targetEl.classList.contains("hidden")),
              this._triggerEl.addEventListener("click", function () {
                e.toggle();
              }));
          }),
          (t.prototype.collapse = function () {
            this._targetEl.classList.add("hidden"),
              this._triggerEl &&
                this._triggerEl.setAttribute("aria-expanded", "false"),
              (this._visible = !1),
              this._options.onCollapse(this);
          }),
          (t.prototype.expand = function () {
            this._targetEl.classList.remove("hidden"),
              this._triggerEl &&
                this._triggerEl.setAttribute("aria-expanded", "true"),
              (this._visible = !0),
              this._options.onExpand(this);
          }),
          (t.prototype.toggle = function () {
            this._visible ? this.collapse() : this.expand(),
              this._options.onToggle(this);
          }),
          t
        );
      })();
    function Rb() {
      document.querySelectorAll("[data-collapse-toggle]").forEach(function (t) {
        var e = t.getAttribute("data-collapse-toggle"),
          r = document.getElementById(e);
        r
          ? new EI(r, t)
          : console.error(
              'The target element with id "'.concat(
                e,
                '" does not exist. Please check the data-collapse-toggle attribute.'
              )
            );
      });
    }
    typeof window < "u" &&
      ((window.Collapse = EI), (window.initCollapses = Rb));
    var pl =
        (globalThis && globalThis.__assign) ||
        function () {
          return (
            (pl =
              Object.assign ||
              function (t) {
                for (var e, r = 1, n = arguments.length; r < n; r++) {
                  e = arguments[r];
                  for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                }
                return t;
              }),
            pl.apply(this, arguments)
          );
        },
      yg = {
        defaultPosition: 0,
        indicators: {
          items: [],
          activeClasses: "bg-white dark:bg-gray-800",
          inactiveClasses:
            "bg-white/50 dark:bg-gray-800/50 hover:bg-white dark:hover:bg-gray-800",
        },
        interval: 3e3,
        onNext: function () {},
        onPrev: function () {},
        onChange: function () {},
      },
      II = (function () {
        function t(e, r) {
          e === void 0 && (e = []),
            r === void 0 && (r = yg),
            (this._items = e),
            (this._options = pl(pl(pl({}, yg), r), {
              indicators: pl(pl({}, yg.indicators), r.indicators),
            })),
            (this._activeItem = this.getItem(this._options.defaultPosition)),
            (this._indicators = this._options.indicators.items),
            (this._intervalDuration = this._options.interval),
            (this._intervalInstance = null),
            this._init();
        }
        return (
          (t.prototype._init = function () {
            var e = this;
            this._items.map(function (r) {
              r.el.classList.add(
                "absolute",
                "inset-0",
                "transition-transform",
                "transform"
              );
            }),
              this._getActiveItem()
                ? this.slideTo(this._getActiveItem().position)
                : this.slideTo(0),
              this._indicators.map(function (r, n) {
                r.el.addEventListener("click", function () {
                  e.slideTo(n);
                });
              });
          }),
          (t.prototype.getItem = function (e) {
            return this._items[e];
          }),
          (t.prototype.slideTo = function (e) {
            var r = this._items[e],
              n = {
                left:
                  r.position === 0
                    ? this._items[this._items.length - 1]
                    : this._items[r.position - 1],
                middle: r,
                right:
                  r.position === this._items.length - 1
                    ? this._items[0]
                    : this._items[r.position + 1],
              };
            this._rotate(n),
              this._setActiveItem(r),
              this._intervalInstance && (this.pause(), this.cycle()),
              this._options.onChange(this);
          }),
          (t.prototype.next = function () {
            var e = this._getActiveItem(),
              r = null;
            e.position === this._items.length - 1
              ? (r = this._items[0])
              : (r = this._items[e.position + 1]),
              this.slideTo(r.position),
              this._options.onNext(this);
          }),
          (t.prototype.prev = function () {
            var e = this._getActiveItem(),
              r = null;
            e.position === 0
              ? (r = this._items[this._items.length - 1])
              : (r = this._items[e.position - 1]),
              this.slideTo(r.position),
              this._options.onPrev(this);
          }),
          (t.prototype._rotate = function (e) {
            this._items.map(function (r) {
              r.el.classList.add("hidden");
            }),
              e.left.el.classList.remove(
                "-translate-x-full",
                "translate-x-full",
                "translate-x-0",
                "hidden",
                "z-20"
              ),
              e.left.el.classList.add("-translate-x-full", "z-10"),
              e.middle.el.classList.remove(
                "-translate-x-full",
                "translate-x-full",
                "translate-x-0",
                "hidden",
                "z-10"
              ),
              e.middle.el.classList.add("translate-x-0", "z-20"),
              e.right.el.classList.remove(
                "-translate-x-full",
                "translate-x-full",
                "translate-x-0",
                "hidden",
                "z-20"
              ),
              e.right.el.classList.add("translate-x-full", "z-10");
          }),
          (t.prototype.cycle = function () {
            var e = this;
            typeof window < "u" &&
              (this._intervalInstance = window.setInterval(function () {
                e.next();
              }, this._intervalDuration));
          }),
          (t.prototype.pause = function () {
            clearInterval(this._intervalInstance);
          }),
          (t.prototype._getActiveItem = function () {
            return this._activeItem;
          }),
          (t.prototype._setActiveItem = function (e) {
            var r,
              n,
              i = this;
            this._activeItem = e;
            var a = e.position;
            this._indicators.length &&
              (this._indicators.map(function (l) {
                var u, p;
                l.el.setAttribute("aria-current", "false"),
                  (u = l.el.classList).remove.apply(
                    u,
                    i._options.indicators.activeClasses.split(" ")
                  ),
                  (p = l.el.classList).add.apply(
                    p,
                    i._options.indicators.inactiveClasses.split(" ")
                  );
              }),
              (r = this._indicators[a].el.classList).add.apply(
                r,
                this._options.indicators.activeClasses.split(" ")
              ),
              (n = this._indicators[a].el.classList).remove.apply(
                n,
                this._options.indicators.inactiveClasses.split(" ")
              ),
              this._indicators[a].el.setAttribute("aria-current", "true"));
          }),
          t
        );
      })();
    function Nb() {
      document.querySelectorAll("[data-carousel]").forEach(function (t) {
        var e = t.getAttribute("data-carousel-interval"),
          r = t.getAttribute("data-carousel") === "slide",
          n = [],
          i = 0;
        t.querySelectorAll("[data-carousel-item]").length &&
          Array.from(t.querySelectorAll("[data-carousel-item]")).map(function (
            m,
            v
          ) {
            n.push({ position: v, el: m }),
              m.getAttribute("data-carousel-item") === "active" && (i = v);
          });
        var a = [];
        t.querySelectorAll("[data-carousel-slide-to]").length &&
          Array.from(t.querySelectorAll("[data-carousel-slide-to]")).map(
            function (m) {
              a.push({
                position: parseInt(m.getAttribute("data-carousel-slide-to")),
                el: m,
              });
            }
          );
        var l = new II(n, {
          defaultPosition: i,
          indicators: { items: a },
          interval: e || yg.interval,
        });
        r && l.cycle();
        var u = t.querySelector("[data-carousel-next]"),
          p = t.querySelector("[data-carousel-prev]");
        u &&
          u.addEventListener("click", function () {
            l.next();
          }),
          p &&
            p.addEventListener("click", function () {
              l.prev();
            });
      });
    }
    typeof window < "u" &&
      ((window.Carousel = II), (window.initCarousels = Nb));
    var bg =
        (globalThis && globalThis.__assign) ||
        function () {
          return (
            (bg =
              Object.assign ||
              function (t) {
                for (var e, r = 1, n = arguments.length; r < n; r++) {
                  e = arguments[r];
                  for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                }
                return t;
              }),
            bg.apply(this, arguments)
          );
        },
      TI = {
        transition: "transition-opacity",
        duration: 300,
        timing: "ease-out",
        onHide: function () {},
      },
      PI = (function () {
        function t(e, r, n) {
          e === void 0 && (e = null),
            r === void 0 && (r = null),
            n === void 0 && (n = TI),
            (this._targetEl = e),
            (this._triggerEl = r),
            (this._options = bg(bg({}, TI), n)),
            this._init();
        }
        return (
          (t.prototype._init = function () {
            var e = this;
            this._triggerEl &&
              this._triggerEl.addEventListener("click", function () {
                e.hide();
              });
          }),
          (t.prototype.hide = function () {
            var e = this;
            this._targetEl.classList.add(
              this._options.transition,
              "duration-".concat(this._options.duration),
              this._options.timing,
              "opacity-0"
            ),
              setTimeout(function () {
                e._targetEl.classList.add("hidden");
              }, this._options.duration),
              this._options.onHide(this, this._targetEl);
          }),
          t
        );
      })();
    function Bb() {
      document.querySelectorAll("[data-dismiss-target]").forEach(function (t) {
        var e = t.getAttribute("data-dismiss-target"),
          r = document.querySelector(e);
        r
          ? new PI(r, t)
          : console.error(
              'The dismiss element with id "'.concat(
                e,
                '" does not exist. Please check the data-dismiss-target attribute.'
              )
            );
      });
    }
    typeof window < "u" && ((window.Dismiss = PI), (window.initDismisses = Bb));
    var Zn = "top",
      Ci = "bottom",
      Si = "right",
      Qn = "left",
      Fb = "auto",
      zh = [Zn, Ci, Si, Qn],
      Wc = "start",
      Hh = "end",
      pq = "clippingParents",
      OI = "viewport",
      Uh = "popper",
      gq = "reference",
      LI = zh.reduce(function (t, e) {
        return t.concat([e + "-" + Wc, e + "-" + Hh]);
      }, []),
      MI = [].concat(zh, [Fb]).reduce(function (t, e) {
        return t.concat([e, e + "-" + Wc, e + "-" + Hh]);
      }, []),
      mq = "beforeRead",
      vq = "read",
      yq = "afterRead",
      bq = "beforeMain",
      xq = "main",
      wq = "afterMain",
      kq = "beforeWrite",
      _q = "write",
      Aq = "afterWrite",
      Cq = [mq, vq, yq, bq, xq, wq, kq, _q, Aq];
    function As(t) {
      return t ? (t.nodeName || "").toLowerCase() : null;
    }
    function di(t) {
      if (t == null) return window;
      if (t.toString() !== "[object Window]") {
        var e = t.ownerDocument;
        return (e && e.defaultView) || window;
      }
      return t;
    }
    function gl(t) {
      var e = di(t).Element;
      return t instanceof e || t instanceof Element;
    }
    function Ei(t) {
      var e = di(t).HTMLElement;
      return t instanceof e || t instanceof HTMLElement;
    }
    function Db(t) {
      if (typeof ShadowRoot > "u") return !1;
      var e = di(t).ShadowRoot;
      return t instanceof e || t instanceof ShadowRoot;
    }
    function Sq(t) {
      var e = t.state;
      Object.keys(e.elements).forEach(function (r) {
        var n = e.styles[r] || {},
          i = e.attributes[r] || {},
          a = e.elements[r];
        !Ei(a) ||
          !As(a) ||
          (Object.assign(a.style, n),
          Object.keys(i).forEach(function (l) {
            var u = i[l];
            u === !1
              ? a.removeAttribute(l)
              : a.setAttribute(l, u === !0 ? "" : u);
          }));
      });
    }
    function Eq(t) {
      var e = t.state,
        r = {
          popper: {
            position: e.options.strategy,
            left: "0",
            top: "0",
            margin: "0",
          },
          arrow: { position: "absolute" },
          reference: {},
        };
      return (
        Object.assign(e.elements.popper.style, r.popper),
        (e.styles = r),
        e.elements.arrow && Object.assign(e.elements.arrow.style, r.arrow),
        function () {
          Object.keys(e.elements).forEach(function (n) {
            var i = e.elements[n],
              a = e.attributes[n] || {},
              l = Object.keys(e.styles.hasOwnProperty(n) ? e.styles[n] : r[n]),
              u = l.reduce(function (p, m) {
                return (p[m] = ""), p;
              }, {});
            !Ei(i) ||
              !As(i) ||
              (Object.assign(i.style, u),
              Object.keys(a).forEach(function (p) {
                i.removeAttribute(p);
              }));
          });
        }
      );
    }
    const Iq = {
      name: "applyStyles",
      enabled: !0,
      phase: "write",
      fn: Sq,
      effect: Eq,
      requires: ["computeStyles"],
    };
    function Cs(t) {
      return t.split("-")[0];
    }
    var ml = Math.max,
      xg = Math.min,
      Xc = Math.round;
    function zb() {
      var t = navigator.userAgentData;
      return t != null && t.brands && Array.isArray(t.brands)
        ? t.brands
            .map(function (e) {
              return e.brand + "/" + e.version;
            })
            .join(" ")
        : navigator.userAgent;
    }
    function RI() {
      return !/^((?!chrome|android).)*safari/i.test(zb());
    }
    function jc(t, e, r) {
      e === void 0 && (e = !1), r === void 0 && (r = !1);
      var n = t.getBoundingClientRect(),
        i = 1,
        a = 1;
      e &&
        Ei(t) &&
        ((i = (t.offsetWidth > 0 && Xc(n.width) / t.offsetWidth) || 1),
        (a = (t.offsetHeight > 0 && Xc(n.height) / t.offsetHeight) || 1));
      var l = gl(t) ? di(t) : window,
        u = l.visualViewport,
        p = !RI() && r,
        m = (n.left + (p && u ? u.offsetLeft : 0)) / i,
        v = (n.top + (p && u ? u.offsetTop : 0)) / a,
        w = n.width / i,
        S = n.height / a;
      return {
        width: w,
        height: S,
        top: v,
        right: m + w,
        bottom: v + S,
        left: m,
        x: m,
        y: v,
      };
    }
    function Hb(t) {
      var e = jc(t),
        r = t.offsetWidth,
        n = t.offsetHeight;
      return (
        Math.abs(e.width - r) <= 1 && (r = e.width),
        Math.abs(e.height - n) <= 1 && (n = e.height),
        { x: t.offsetLeft, y: t.offsetTop, width: r, height: n }
      );
    }
    function NI(t, e) {
      var r = e.getRootNode && e.getRootNode();
      if (t.contains(e)) return !0;
      if (r && Db(r)) {
        var n = e;
        do {
          if (n && t.isSameNode(n)) return !0;
          n = n.parentNode || n.host;
        } while (n);
      }
      return !1;
    }
    function ha(t) {
      return di(t).getComputedStyle(t);
    }
    function Tq(t) {
      return ["table", "td", "th"].indexOf(As(t)) >= 0;
    }
    function ao(t) {
      return ((gl(t) ? t.ownerDocument : t.document) || window.document)
        .documentElement;
    }
    function wg(t) {
      return As(t) === "html"
        ? t
        : t.assignedSlot || t.parentNode || (Db(t) ? t.host : null) || ao(t);
    }
    function BI(t) {
      return !Ei(t) || ha(t).position === "fixed" ? null : t.offsetParent;
    }
    function Pq(t) {
      var e = /firefox/i.test(zb()),
        r = /Trident/i.test(zb());
      if (r && Ei(t)) {
        var n = ha(t);
        if (n.position === "fixed") return null;
      }
      var i = wg(t);
      for (
        Db(i) && (i = i.host);
        Ei(i) && ["html", "body"].indexOf(As(i)) < 0;

      ) {
        var a = ha(i);
        if (
          a.transform !== "none" ||
          a.perspective !== "none" ||
          a.contain === "paint" ||
          ["transform", "perspective"].indexOf(a.willChange) !== -1 ||
          (e && a.willChange === "filter") ||
          (e && a.filter && a.filter !== "none")
        )
          return i;
        i = i.parentNode;
      }
      return null;
    }
    function Wh(t) {
      for (
        var e = di(t), r = BI(t);
        r && Tq(r) && ha(r).position === "static";

      )
        r = BI(r);
      return r &&
        (As(r) === "html" || (As(r) === "body" && ha(r).position === "static"))
        ? e
        : r || Pq(t) || e;
    }
    function Ub(t) {
      return ["top", "bottom"].indexOf(t) >= 0 ? "x" : "y";
    }
    function Xh(t, e, r) {
      return ml(t, xg(e, r));
    }
    function Oq(t, e, r) {
      var n = Xh(t, e, r);
      return n > r ? r : n;
    }
    function FI() {
      return { top: 0, right: 0, bottom: 0, left: 0 };
    }
    function DI(t) {
      return Object.assign({}, FI(), t);
    }
    function zI(t, e) {
      return e.reduce(function (r, n) {
        return (r[n] = t), r;
      }, {});
    }
    var Lq = function (t, e) {
      return (
        (t =
          typeof t == "function"
            ? t(Object.assign({}, e.rects, { placement: e.placement }))
            : t),
        DI(typeof t != "number" ? t : zI(t, zh))
      );
    };
    function Mq(t) {
      var e,
        r = t.state,
        n = t.name,
        i = t.options,
        a = r.elements.arrow,
        l = r.modifiersData.popperOffsets,
        u = Cs(r.placement),
        p = Ub(u),
        m = [Qn, Si].indexOf(u) >= 0,
        v = m ? "height" : "width";
      if (!(!a || !l)) {
        var w = Lq(i.padding, r),
          S = Hb(a),
          M = p === "y" ? Zn : Qn,
          D = p === "y" ? Ci : Si,
          z =
            r.rects.reference[v] +
            r.rects.reference[p] -
            l[p] -
            r.rects.popper[v],
          V = l[p] - r.rects.reference[p],
          j = Wh(a),
          B = j ? (p === "y" ? j.clientHeight || 0 : j.clientWidth || 0) : 0,
          ae = z / 2 - V / 2,
          re = w[M],
          K = B - S[v] - w[D],
          fe = B / 2 - S[v] / 2 + ae,
          ye = Xh(re, fe, K),
          pe = p;
        r.modifiersData[n] =
          ((e = {}), (e[pe] = ye), (e.centerOffset = ye - fe), e);
      }
    }
    function Rq(t) {
      var e = t.state,
        r = t.options,
        n = r.element,
        i = n === void 0 ? "[data-popper-arrow]" : n;
      i != null &&
        ((typeof i == "string" &&
          ((i = e.elements.popper.querySelector(i)), !i)) ||
          (NI(e.elements.popper, i) && (e.elements.arrow = i)));
    }
    const Nq = {
      name: "arrow",
      enabled: !0,
      phase: "main",
      fn: Mq,
      effect: Rq,
      requires: ["popperOffsets"],
      requiresIfExists: ["preventOverflow"],
    };
    function Gc(t) {
      return t.split("-")[1];
    }
    var Bq = { top: "auto", right: "auto", bottom: "auto", left: "auto" };
    function Fq(t, e) {
      var r = t.x,
        n = t.y,
        i = e.devicePixelRatio || 1;
      return { x: Xc(r * i) / i || 0, y: Xc(n * i) / i || 0 };
    }
    function HI(t) {
      var e,
        r = t.popper,
        n = t.popperRect,
        i = t.placement,
        a = t.variation,
        l = t.offsets,
        u = t.position,
        p = t.gpuAcceleration,
        m = t.adaptive,
        v = t.roundOffsets,
        w = t.isFixed,
        S = l.x,
        M = S === void 0 ? 0 : S,
        D = l.y,
        z = D === void 0 ? 0 : D,
        V = typeof v == "function" ? v({ x: M, y: z }) : { x: M, y: z };
      (M = V.x), (z = V.y);
      var j = l.hasOwnProperty("x"),
        B = l.hasOwnProperty("y"),
        ae = Qn,
        re = Zn,
        K = window;
      if (m) {
        var fe = Wh(r),
          ye = "clientHeight",
          pe = "clientWidth";
        if (
          (fe === di(r) &&
            ((fe = ao(r)),
            ha(fe).position !== "static" &&
              u === "absolute" &&
              ((ye = "scrollHeight"), (pe = "scrollWidth"))),
          (fe = fe),
          i === Zn || ((i === Qn || i === Si) && a === Hh))
        ) {
          re = Ci;
          var _e =
            w && fe === K && K.visualViewport
              ? K.visualViewport.height
              : fe[ye];
          (z -= _e - n.height), (z *= p ? 1 : -1);
        }
        if (i === Qn || ((i === Zn || i === Ci) && a === Hh)) {
          ae = Si;
          var be =
            w && fe === K && K.visualViewport ? K.visualViewport.width : fe[pe];
          (M -= be - n.width), (M *= p ? 1 : -1);
        }
      }
      var Ce = Object.assign({ position: u }, m && Bq),
        ke = v === !0 ? Fq({ x: M, y: z }, di(r)) : { x: M, y: z };
      if (((M = ke.x), (z = ke.y), p)) {
        var E;
        return Object.assign(
          {},
          Ce,
          ((E = {}),
          (E[re] = B ? "0" : ""),
          (E[ae] = j ? "0" : ""),
          (E.transform =
            (K.devicePixelRatio || 1) <= 1
              ? "translate(" + M + "px, " + z + "px)"
              : "translate3d(" + M + "px, " + z + "px, 0)"),
          E)
        );
      }
      return Object.assign(
        {},
        Ce,
        ((e = {}),
        (e[re] = B ? z + "px" : ""),
        (e[ae] = j ? M + "px" : ""),
        (e.transform = ""),
        e)
      );
    }
    function Dq(t) {
      var e = t.state,
        r = t.options,
        n = r.gpuAcceleration,
        i = n === void 0 ? !0 : n,
        a = r.adaptive,
        l = a === void 0 ? !0 : a,
        u = r.roundOffsets,
        p = u === void 0 ? !0 : u,
        m = {
          placement: Cs(e.placement),
          variation: Gc(e.placement),
          popper: e.elements.popper,
          popperRect: e.rects.popper,
          gpuAcceleration: i,
          isFixed: e.options.strategy === "fixed",
        };
      e.modifiersData.popperOffsets != null &&
        (e.styles.popper = Object.assign(
          {},
          e.styles.popper,
          HI(
            Object.assign({}, m, {
              offsets: e.modifiersData.popperOffsets,
              position: e.options.strategy,
              adaptive: l,
              roundOffsets: p,
            })
          )
        )),
        e.modifiersData.arrow != null &&
          (e.styles.arrow = Object.assign(
            {},
            e.styles.arrow,
            HI(
              Object.assign({}, m, {
                offsets: e.modifiersData.arrow,
                position: "absolute",
                adaptive: !1,
                roundOffsets: p,
              })
            )
          )),
        (e.attributes.popper = Object.assign({}, e.attributes.popper, {
          "data-popper-placement": e.placement,
        }));
    }
    const zq = {
      name: "computeStyles",
      enabled: !0,
      phase: "beforeWrite",
      fn: Dq,
      data: {},
    };
    var kg = { passive: !0 };
    function Hq(t) {
      var e = t.state,
        r = t.instance,
        n = t.options,
        i = n.scroll,
        a = i === void 0 ? !0 : i,
        l = n.resize,
        u = l === void 0 ? !0 : l,
        p = di(e.elements.popper),
        m = [].concat(e.scrollParents.reference, e.scrollParents.popper);
      return (
        a &&
          m.forEach(function (v) {
            v.addEventListener("scroll", r.update, kg);
          }),
        u && p.addEventListener("resize", r.update, kg),
        function () {
          a &&
            m.forEach(function (v) {
              v.removeEventListener("scroll", r.update, kg);
            }),
            u && p.removeEventListener("resize", r.update, kg);
        }
      );
    }
    const Uq = {
      name: "eventListeners",
      enabled: !0,
      phase: "write",
      fn: function () {},
      effect: Hq,
      data: {},
    };
    var Wq = { left: "right", right: "left", bottom: "top", top: "bottom" };
    function _g(t) {
      return t.replace(/left|right|bottom|top/g, function (e) {
        return Wq[e];
      });
    }
    var Xq = { start: "end", end: "start" };
    function UI(t) {
      return t.replace(/start|end/g, function (e) {
        return Xq[e];
      });
    }
    function Wb(t) {
      var e = di(t),
        r = e.pageXOffset,
        n = e.pageYOffset;
      return { scrollLeft: r, scrollTop: n };
    }
    function Xb(t) {
      return jc(ao(t)).left + Wb(t).scrollLeft;
    }
    function jq(t, e) {
      var r = di(t),
        n = ao(t),
        i = r.visualViewport,
        a = n.clientWidth,
        l = n.clientHeight,
        u = 0,
        p = 0;
      if (i) {
        (a = i.width), (l = i.height);
        var m = RI();
        (m || (!m && e === "fixed")) && ((u = i.offsetLeft), (p = i.offsetTop));
      }
      return { width: a, height: l, x: u + Xb(t), y: p };
    }
    function Gq(t) {
      var e,
        r = ao(t),
        n = Wb(t),
        i = (e = t.ownerDocument) == null ? void 0 : e.body,
        a = ml(
          r.scrollWidth,
          r.clientWidth,
          i ? i.scrollWidth : 0,
          i ? i.clientWidth : 0
        ),
        l = ml(
          r.scrollHeight,
          r.clientHeight,
          i ? i.scrollHeight : 0,
          i ? i.clientHeight : 0
        ),
        u = -n.scrollLeft + Xb(t),
        p = -n.scrollTop;
      return (
        ha(i || r).direction === "rtl" &&
          (u += ml(r.clientWidth, i ? i.clientWidth : 0) - a),
        { width: a, height: l, x: u, y: p }
      );
    }
    function jb(t) {
      var e = ha(t),
        r = e.overflow,
        n = e.overflowX,
        i = e.overflowY;
      return /auto|scroll|overlay|hidden/.test(r + i + n);
    }
    function WI(t) {
      return ["html", "body", "#document"].indexOf(As(t)) >= 0
        ? t.ownerDocument.body
        : Ei(t) && jb(t)
        ? t
        : WI(wg(t));
    }
    function jh(t, e) {
      var r;
      e === void 0 && (e = []);
      var n = WI(t),
        i = n === ((r = t.ownerDocument) == null ? void 0 : r.body),
        a = di(n),
        l = i ? [a].concat(a.visualViewport || [], jb(n) ? n : []) : n,
        u = e.concat(l);
      return i ? u : u.concat(jh(wg(l)));
    }
    function Gb(t) {
      return Object.assign({}, t, {
        left: t.x,
        top: t.y,
        right: t.x + t.width,
        bottom: t.y + t.height,
      });
    }
    function Yq(t, e) {
      var r = jc(t, !1, e === "fixed");
      return (
        (r.top = r.top + t.clientTop),
        (r.left = r.left + t.clientLeft),
        (r.bottom = r.top + t.clientHeight),
        (r.right = r.left + t.clientWidth),
        (r.width = t.clientWidth),
        (r.height = t.clientHeight),
        (r.x = r.left),
        (r.y = r.top),
        r
      );
    }
    function XI(t, e, r) {
      return e === OI ? Gb(jq(t, r)) : gl(e) ? Yq(e, r) : Gb(Gq(ao(t)));
    }
    function Vq(t) {
      var e = jh(wg(t)),
        r = ["absolute", "fixed"].indexOf(ha(t).position) >= 0,
        n = r && Ei(t) ? Wh(t) : t;
      return gl(n)
        ? e.filter(function (i) {
            return gl(i) && NI(i, n) && As(i) !== "body";
          })
        : [];
    }
    function qq(t, e, r, n) {
      var i = e === "clippingParents" ? Vq(t) : [].concat(e),
        a = [].concat(i, [r]),
        l = a[0],
        u = a.reduce(function (p, m) {
          var v = XI(t, m, n);
          return (
            (p.top = ml(v.top, p.top)),
            (p.right = xg(v.right, p.right)),
            (p.bottom = xg(v.bottom, p.bottom)),
            (p.left = ml(v.left, p.left)),
            p
          );
        }, XI(t, l, n));
      return (
        (u.width = u.right - u.left),
        (u.height = u.bottom - u.top),
        (u.x = u.left),
        (u.y = u.top),
        u
      );
    }
    function jI(t) {
      var e = t.reference,
        r = t.element,
        n = t.placement,
        i = n ? Cs(n) : null,
        a = n ? Gc(n) : null,
        l = e.x + e.width / 2 - r.width / 2,
        u = e.y + e.height / 2 - r.height / 2,
        p;
      switch (i) {
        case Zn:
          p = { x: l, y: e.y - r.height };
          break;
        case Ci:
          p = { x: l, y: e.y + e.height };
          break;
        case Si:
          p = { x: e.x + e.width, y: u };
          break;
        case Qn:
          p = { x: e.x - r.width, y: u };
          break;
        default:
          p = { x: e.x, y: e.y };
      }
      var m = i ? Ub(i) : null;
      if (m != null) {
        var v = m === "y" ? "height" : "width";
        switch (a) {
          case Wc:
            p[m] = p[m] - (e[v] / 2 - r[v] / 2);
            break;
          case Hh:
            p[m] = p[m] + (e[v] / 2 - r[v] / 2);
            break;
        }
      }
      return p;
    }
    function Gh(t, e) {
      e === void 0 && (e = {});
      var r = e,
        n = r.placement,
        i = n === void 0 ? t.placement : n,
        a = r.strategy,
        l = a === void 0 ? t.strategy : a,
        u = r.boundary,
        p = u === void 0 ? pq : u,
        m = r.rootBoundary,
        v = m === void 0 ? OI : m,
        w = r.elementContext,
        S = w === void 0 ? Uh : w,
        M = r.altBoundary,
        D = M === void 0 ? !1 : M,
        z = r.padding,
        V = z === void 0 ? 0 : z,
        j = DI(typeof V != "number" ? V : zI(V, zh)),
        B = S === Uh ? gq : Uh,
        ae = t.rects.popper,
        re = t.elements[D ? B : S],
        K = qq(
          gl(re) ? re : re.contextElement || ao(t.elements.popper),
          p,
          v,
          l
        ),
        fe = jc(t.elements.reference),
        ye = jI({
          reference: fe,
          element: ae,
          strategy: "absolute",
          placement: i,
        }),
        pe = Gb(Object.assign({}, ae, ye)),
        _e = S === Uh ? pe : fe,
        be = {
          top: K.top - _e.top + j.top,
          bottom: _e.bottom - K.bottom + j.bottom,
          left: K.left - _e.left + j.left,
          right: _e.right - K.right + j.right,
        },
        Ce = t.modifiersData.offset;
      if (S === Uh && Ce) {
        var ke = Ce[i];
        Object.keys(be).forEach(function (E) {
          var P = [Si, Ci].indexOf(E) >= 0 ? 1 : -1,
            L = [Zn, Ci].indexOf(E) >= 0 ? "y" : "x";
          be[E] += ke[L] * P;
        });
      }
      return be;
    }
    function Kq(t, e) {
      e === void 0 && (e = {});
      var r = e,
        n = r.placement,
        i = r.boundary,
        a = r.rootBoundary,
        l = r.padding,
        u = r.flipVariations,
        p = r.allowedAutoPlacements,
        m = p === void 0 ? MI : p,
        v = Gc(n),
        w = v
          ? u
            ? LI
            : LI.filter(function (D) {
                return Gc(D) === v;
              })
          : zh,
        S = w.filter(function (D) {
          return m.indexOf(D) >= 0;
        });
      S.length === 0 && (S = w);
      var M = S.reduce(function (D, z) {
        return (
          (D[z] = Gh(t, {
            placement: z,
            boundary: i,
            rootBoundary: a,
            padding: l,
          })[Cs(z)]),
          D
        );
      }, {});
      return Object.keys(M).sort(function (D, z) {
        return M[D] - M[z];
      });
    }
    function $q(t) {
      if (Cs(t) === Fb) return [];
      var e = _g(t);
      return [UI(t), e, UI(e)];
    }
    function Zq(t) {
      var e = t.state,
        r = t.options,
        n = t.name;
      if (!e.modifiersData[n]._skip) {
        for (
          var i = r.mainAxis,
            a = i === void 0 ? !0 : i,
            l = r.altAxis,
            u = l === void 0 ? !0 : l,
            p = r.fallbackPlacements,
            m = r.padding,
            v = r.boundary,
            w = r.rootBoundary,
            S = r.altBoundary,
            M = r.flipVariations,
            D = M === void 0 ? !0 : M,
            z = r.allowedAutoPlacements,
            V = e.options.placement,
            j = Cs(V),
            B = j === V,
            ae = p || (B || !D ? [_g(V)] : $q(V)),
            re = [V].concat(ae).reduce(function (Me, X) {
              return Me.concat(
                Cs(X) === Fb
                  ? Kq(e, {
                      placement: X,
                      boundary: v,
                      rootBoundary: w,
                      padding: m,
                      flipVariations: D,
                      allowedAutoPlacements: z,
                    })
                  : X
              );
            }, []),
            K = e.rects.reference,
            fe = e.rects.popper,
            ye = new Map(),
            pe = !0,
            _e = re[0],
            be = 0;
          be < re.length;
          be++
        ) {
          var Ce = re[be],
            ke = Cs(Ce),
            E = Gc(Ce) === Wc,
            P = [Zn, Ci].indexOf(ke) >= 0,
            L = P ? "width" : "height",
            U = Gh(e, {
              placement: Ce,
              boundary: v,
              rootBoundary: w,
              altBoundary: S,
              padding: m,
            }),
            Y = P ? (E ? Si : Qn) : E ? Ci : Zn;
          K[L] > fe[L] && (Y = _g(Y));
          var ie = _g(Y),
            le = [];
          if (
            (a && le.push(U[ke] <= 0),
            u && le.push(U[Y] <= 0, U[ie] <= 0),
            le.every(function (Me) {
              return Me;
            }))
          ) {
            (_e = Ce), (pe = !1);
            break;
          }
          ye.set(Ce, le);
        }
        if (pe)
          for (
            var J = D ? 3 : 1,
              T = function (Me) {
                var X = re.find(function (Ee) {
                  var me = ye.get(Ee);
                  if (me)
                    return me.slice(0, Me).every(function (xe) {
                      return xe;
                    });
                });
                if (X) return (_e = X), "break";
              },
              Z = J;
            Z > 0;
            Z--
          ) {
            var Oe = T(Z);
            if (Oe === "break") break;
          }
        e.placement !== _e &&
          ((e.modifiersData[n]._skip = !0), (e.placement = _e), (e.reset = !0));
      }
    }
    const Qq = {
      name: "flip",
      enabled: !0,
      phase: "main",
      fn: Zq,
      requiresIfExists: ["offset"],
      data: { _skip: !1 },
    };
    function GI(t, e, r) {
      return (
        r === void 0 && (r = { x: 0, y: 0 }),
        {
          top: t.top - e.height - r.y,
          right: t.right - e.width + r.x,
          bottom: t.bottom - e.height + r.y,
          left: t.left - e.width - r.x,
        }
      );
    }
    function YI(t) {
      return [Zn, Si, Ci, Qn].some(function (e) {
        return t[e] >= 0;
      });
    }
    function Jq(t) {
      var e = t.state,
        r = t.name,
        n = e.rects.reference,
        i = e.rects.popper,
        a = e.modifiersData.preventOverflow,
        l = Gh(e, { elementContext: "reference" }),
        u = Gh(e, { altBoundary: !0 }),
        p = GI(l, n),
        m = GI(u, i, a),
        v = YI(p),
        w = YI(m);
      (e.modifiersData[r] = {
        referenceClippingOffsets: p,
        popperEscapeOffsets: m,
        isReferenceHidden: v,
        hasPopperEscaped: w,
      }),
        (e.attributes.popper = Object.assign({}, e.attributes.popper, {
          "data-popper-reference-hidden": v,
          "data-popper-escaped": w,
        }));
    }
    const eK = {
      name: "hide",
      enabled: !0,
      phase: "main",
      requiresIfExists: ["preventOverflow"],
      fn: Jq,
    };
    function tK(t, e, r) {
      var n = Cs(t),
        i = [Qn, Zn].indexOf(n) >= 0 ? -1 : 1,
        a =
          typeof r == "function"
            ? r(Object.assign({}, e, { placement: t }))
            : r,
        l = a[0],
        u = a[1];
      return (
        (l = l || 0),
        (u = (u || 0) * i),
        [Qn, Si].indexOf(n) >= 0 ? { x: u, y: l } : { x: l, y: u }
      );
    }
    function rK(t) {
      var e = t.state,
        r = t.options,
        n = t.name,
        i = r.offset,
        a = i === void 0 ? [0, 0] : i,
        l = MI.reduce(function (v, w) {
          return (v[w] = tK(w, e.rects, a)), v;
        }, {}),
        u = l[e.placement],
        p = u.x,
        m = u.y;
      e.modifiersData.popperOffsets != null &&
        ((e.modifiersData.popperOffsets.x += p),
        (e.modifiersData.popperOffsets.y += m)),
        (e.modifiersData[n] = l);
    }
    const nK = {
      name: "offset",
      enabled: !0,
      phase: "main",
      requires: ["popperOffsets"],
      fn: rK,
    };
    function iK(t) {
      var e = t.state,
        r = t.name;
      e.modifiersData[r] = jI({
        reference: e.rects.reference,
        element: e.rects.popper,
        strategy: "absolute",
        placement: e.placement,
      });
    }
    const sK = {
      name: "popperOffsets",
      enabled: !0,
      phase: "read",
      fn: iK,
      data: {},
    };
    function aK(t) {
      return t === "x" ? "y" : "x";
    }
    function oK(t) {
      var e = t.state,
        r = t.options,
        n = t.name,
        i = r.mainAxis,
        a = i === void 0 ? !0 : i,
        l = r.altAxis,
        u = l === void 0 ? !1 : l,
        p = r.boundary,
        m = r.rootBoundary,
        v = r.altBoundary,
        w = r.padding,
        S = r.tether,
        M = S === void 0 ? !0 : S,
        D = r.tetherOffset,
        z = D === void 0 ? 0 : D,
        V = Gh(e, { boundary: p, rootBoundary: m, padding: w, altBoundary: v }),
        j = Cs(e.placement),
        B = Gc(e.placement),
        ae = !B,
        re = Ub(j),
        K = aK(re),
        fe = e.modifiersData.popperOffsets,
        ye = e.rects.reference,
        pe = e.rects.popper,
        _e =
          typeof z == "function"
            ? z(Object.assign({}, e.rects, { placement: e.placement }))
            : z,
        be =
          typeof _e == "number"
            ? { mainAxis: _e, altAxis: _e }
            : Object.assign({ mainAxis: 0, altAxis: 0 }, _e),
        Ce = e.modifiersData.offset
          ? e.modifiersData.offset[e.placement]
          : null,
        ke = { x: 0, y: 0 };
      if (fe) {
        if (a) {
          var E,
            P = re === "y" ? Zn : Qn,
            L = re === "y" ? Ci : Si,
            U = re === "y" ? "height" : "width",
            Y = fe[re],
            ie = Y + V[P],
            le = Y - V[L],
            J = M ? -pe[U] / 2 : 0,
            T = B === Wc ? ye[U] : pe[U],
            Z = B === Wc ? -pe[U] : -ye[U],
            Oe = e.elements.arrow,
            Me = M && Oe ? Hb(Oe) : { width: 0, height: 0 },
            X = e.modifiersData["arrow#persistent"]
              ? e.modifiersData["arrow#persistent"].padding
              : FI(),
            Ee = X[P],
            me = X[L],
            xe = Xh(0, ye[U], Me[U]),
            Se = ae
              ? ye[U] / 2 - J - xe - Ee - be.mainAxis
              : T - xe - Ee - be.mainAxis,
            Ie = ae
              ? -ye[U] / 2 + J + xe + me + be.mainAxis
              : Z + xe + me + be.mainAxis,
            Ne = e.elements.arrow && Wh(e.elements.arrow),
            oe = Ne ? (re === "y" ? Ne.clientTop || 0 : Ne.clientLeft || 0) : 0,
            W = (E = Ce == null ? void 0 : Ce[re]) != null ? E : 0,
            Q = Y + Se - W - oe,
            ge = Y + Ie - W,
            I = Xh(M ? xg(ie, Q) : ie, Y, M ? ml(le, ge) : le);
          (fe[re] = I), (ke[re] = I - Y);
        }
        if (u) {
          var R,
            q = re === "x" ? Zn : Qn,
            ce = re === "x" ? Ci : Si,
            ne = fe[K],
            de = K === "y" ? "height" : "width",
            Te = ne + V[q],
            Re = ne - V[ce],
            Ve = [Zn, Qn].indexOf(j) !== -1,
            Pe = (R = Ce == null ? void 0 : Ce[K]) != null ? R : 0,
            Be = Ve ? Te : ne - ye[de] - pe[de] - Pe + be.altAxis,
            Ze = Ve ? ne + ye[de] + pe[de] - Pe - be.altAxis : Re,
            Je = M && Ve ? Oq(Be, ne, Ze) : Xh(M ? Be : Te, ne, M ? Ze : Re);
          (fe[K] = Je), (ke[K] = Je - ne);
        }
        e.modifiersData[n] = ke;
      }
    }
    const lK = {
      name: "preventOverflow",
      enabled: !0,
      phase: "main",
      fn: oK,
      requiresIfExists: ["offset"],
    };
    function cK(t) {
      return { scrollLeft: t.scrollLeft, scrollTop: t.scrollTop };
    }
    function uK(t) {
      return t === di(t) || !Ei(t) ? Wb(t) : cK(t);
    }
    function hK(t) {
      var e = t.getBoundingClientRect(),
        r = Xc(e.width) / t.offsetWidth || 1,
        n = Xc(e.height) / t.offsetHeight || 1;
      return r !== 1 || n !== 1;
    }
    function dK(t, e, r) {
      r === void 0 && (r = !1);
      var n = Ei(e),
        i = Ei(e) && hK(e),
        a = ao(e),
        l = jc(t, i, r),
        u = { scrollLeft: 0, scrollTop: 0 },
        p = { x: 0, y: 0 };
      return (
        (n || (!n && !r)) &&
          ((As(e) !== "body" || jb(a)) && (u = uK(e)),
          Ei(e)
            ? ((p = jc(e, !0)), (p.x += e.clientLeft), (p.y += e.clientTop))
            : a && (p.x = Xb(a))),
        {
          x: l.left + u.scrollLeft - p.x,
          y: l.top + u.scrollTop - p.y,
          width: l.width,
          height: l.height,
        }
      );
    }
    function fK(t) {
      var e = new Map(),
        r = new Set(),
        n = [];
      t.forEach(function (a) {
        e.set(a.name, a);
      });
      function i(a) {
        r.add(a.name);
        var l = [].concat(a.requires || [], a.requiresIfExists || []);
        l.forEach(function (u) {
          if (!r.has(u)) {
            var p = e.get(u);
            p && i(p);
          }
        }),
          n.push(a);
      }
      return (
        t.forEach(function (a) {
          r.has(a.name) || i(a);
        }),
        n
      );
    }
    function pK(t) {
      var e = fK(t);
      return Cq.reduce(function (r, n) {
        return r.concat(
          e.filter(function (i) {
            return i.phase === n;
          })
        );
      }, []);
    }
    function gK(t) {
      var e;
      return function () {
        return (
          e ||
            (e = new Promise(function (r) {
              Promise.resolve().then(function () {
                (e = void 0), r(t());
              });
            })),
          e
        );
      };
    }
    function mK(t) {
      var e = t.reduce(function (r, n) {
        var i = r[n.name];
        return (
          (r[n.name] = i
            ? Object.assign({}, i, n, {
                options: Object.assign({}, i.options, n.options),
                data: Object.assign({}, i.data, n.data),
              })
            : n),
          r
        );
      }, {});
      return Object.keys(e).map(function (r) {
        return e[r];
      });
    }
    var VI = { placement: "bottom", modifiers: [], strategy: "absolute" };
    function qI() {
      for (var t = arguments.length, e = new Array(t), r = 0; r < t; r++)
        e[r] = arguments[r];
      return !e.some(function (n) {
        return !(n && typeof n.getBoundingClientRect == "function");
      });
    }
    function vK(t) {
      t === void 0 && (t = {});
      var e = t,
        r = e.defaultModifiers,
        n = r === void 0 ? [] : r,
        i = e.defaultOptions,
        a = i === void 0 ? VI : i;
      return function (l, u, p) {
        p === void 0 && (p = a);
        var m = {
            placement: "bottom",
            orderedModifiers: [],
            options: Object.assign({}, VI, a),
            modifiersData: {},
            elements: { reference: l, popper: u },
            attributes: {},
            styles: {},
          },
          v = [],
          w = !1,
          S = {
            state: m,
            setOptions: function (z) {
              var V = typeof z == "function" ? z(m.options) : z;
              D(),
                (m.options = Object.assign({}, a, m.options, V)),
                (m.scrollParents = {
                  reference: gl(l)
                    ? jh(l)
                    : l.contextElement
                    ? jh(l.contextElement)
                    : [],
                  popper: jh(u),
                });
              var j = pK(mK([].concat(n, m.options.modifiers)));
              return (
                (m.orderedModifiers = j.filter(function (B) {
                  return B.enabled;
                })),
                M(),
                S.update()
              );
            },
            forceUpdate: function () {
              if (!w) {
                var z = m.elements,
                  V = z.reference,
                  j = z.popper;
                if (qI(V, j)) {
                  (m.rects = {
                    reference: dK(V, Wh(j), m.options.strategy === "fixed"),
                    popper: Hb(j),
                  }),
                    (m.reset = !1),
                    (m.placement = m.options.placement),
                    m.orderedModifiers.forEach(function (pe) {
                      return (m.modifiersData[pe.name] = Object.assign(
                        {},
                        pe.data
                      ));
                    });
                  for (var B = 0; B < m.orderedModifiers.length; B++) {
                    if (m.reset === !0) {
                      (m.reset = !1), (B = -1);
                      continue;
                    }
                    var ae = m.orderedModifiers[B],
                      re = ae.fn,
                      K = ae.options,
                      fe = K === void 0 ? {} : K,
                      ye = ae.name;
                    typeof re == "function" &&
                      (m =
                        re({ state: m, options: fe, name: ye, instance: S }) ||
                        m);
                  }
                }
              }
            },
            update: gK(function () {
              return new Promise(function (z) {
                S.forceUpdate(), z(m);
              });
            }),
            destroy: function () {
              D(), (w = !0);
            },
          };
        if (!qI(l, u)) return S;
        S.setOptions(p).then(function (z) {
          !w && p.onFirstUpdate && p.onFirstUpdate(z);
        });
        function M() {
          m.orderedModifiers.forEach(function (z) {
            var V = z.name,
              j = z.options,
              B = j === void 0 ? {} : j,
              ae = z.effect;
            if (typeof ae == "function") {
              var re = ae({ state: m, name: V, instance: S, options: B }),
                K = function () {};
              v.push(re || K);
            }
          });
        }
        function D() {
          v.forEach(function (z) {
            return z();
          }),
            (v = []);
        }
        return S;
      };
    }
    var yK = [Uq, sK, zq, Iq, nK, Qq, lK, Nq, eK],
      Yb = vK({ defaultModifiers: yK }),
      oo =
        (globalThis && globalThis.__assign) ||
        function () {
          return (
            (oo =
              Object.assign ||
              function (t) {
                for (var e, r = 1, n = arguments.length; r < n; r++) {
                  e = arguments[r];
                  for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                }
                return t;
              }),
            oo.apply(this, arguments)
          );
        },
      Ag =
        (globalThis && globalThis.__spreadArray) ||
        function (t, e, r) {
          if (r || arguments.length === 2)
            for (var n = 0, i = e.length, a; n < i; n++)
              (a || !(n in e)) &&
                (a || (a = Array.prototype.slice.call(e, 0, n)), (a[n] = e[n]));
          return t.concat(a || Array.prototype.slice.call(e));
        },
      lo = {
        placement: "bottom",
        triggerType: "click",
        offsetSkidding: 0,
        offsetDistance: 10,
        delay: 300,
        ignoreClickOutsideClass: !1,
        onShow: function () {},
        onHide: function () {},
        onToggle: function () {},
      },
      KI = (function () {
        function t(e, r, n) {
          e === void 0 && (e = null),
            r === void 0 && (r = null),
            n === void 0 && (n = lo),
            (this._targetEl = e),
            (this._triggerEl = r),
            (this._options = oo(oo({}, lo), n)),
            (this._popperInstance = this._createPopperInstance()),
            (this._visible = !1),
            this._init();
        }
        return (
          (t.prototype._init = function () {
            this._triggerEl && this._setupEventListeners();
          }),
          (t.prototype._setupEventListeners = function () {
            var e = this,
              r = this._getTriggerEvents();
            this._options.triggerType === "click" &&
              r.showEvents.forEach(function (n) {
                e._triggerEl.addEventListener(n, function () {
                  e.toggle();
                });
              }),
              this._options.triggerType === "hover" &&
                (r.showEvents.forEach(function (n) {
                  e._triggerEl.addEventListener(n, function () {
                    n === "click"
                      ? e.toggle()
                      : setTimeout(function () {
                          e.show();
                        }, e._options.delay);
                  }),
                    e._targetEl.addEventListener(n, function () {
                      e.show();
                    });
                }),
                r.hideEvents.forEach(function (n) {
                  e._triggerEl.addEventListener(n, function () {
                    setTimeout(function () {
                      e._targetEl.matches(":hover") || e.hide();
                    }, e._options.delay);
                  }),
                    e._targetEl.addEventListener(n, function () {
                      setTimeout(function () {
                        e._triggerEl.matches(":hover") || e.hide();
                      }, e._options.delay);
                    });
                }));
          }),
          (t.prototype._createPopperInstance = function () {
            return Yb(this._triggerEl, this._targetEl, {
              placement: this._options.placement,
              modifiers: [
                {
                  name: "offset",
                  options: {
                    offset: [
                      this._options.offsetSkidding,
                      this._options.offsetDistance,
                    ],
                  },
                },
              ],
            });
          }),
          (t.prototype._setupClickOutsideListener = function () {
            var e = this;
            (this._clickOutsideEventListener = function (r) {
              e._handleClickOutside(r, e._targetEl);
            }),
              document.body.addEventListener(
                "click",
                this._clickOutsideEventListener,
                !0
              );
          }),
          (t.prototype._removeClickOutsideListener = function () {
            document.body.removeEventListener(
              "click",
              this._clickOutsideEventListener,
              !0
            );
          }),
          (t.prototype._handleClickOutside = function (e, r) {
            var n = e.target,
              i = this._options.ignoreClickOutsideClass,
              a = !1;
            if (i) {
              var l = document.querySelectorAll(".".concat(i));
              l.forEach(function (u) {
                if (u.contains(n)) {
                  a = !0;
                  return;
                }
              });
            }
            n !== r &&
              !r.contains(n) &&
              !this._triggerEl.contains(n) &&
              !a &&
              this.isVisible() &&
              this.hide();
          }),
          (t.prototype._getTriggerEvents = function () {
            switch (this._options.triggerType) {
              case "hover":
                return {
                  showEvents: ["mouseenter", "click"],
                  hideEvents: ["mouseleave"],
                };
              case "click":
                return { showEvents: ["click"], hideEvents: [] };
              case "none":
                return { showEvents: [], hideEvents: [] };
              default:
                return { showEvents: ["click"], hideEvents: [] };
            }
          }),
          (t.prototype.toggle = function () {
            this.isVisible() ? this.hide() : this.show(),
              this._options.onToggle(this);
          }),
          (t.prototype.isVisible = function () {
            return this._visible;
          }),
          (t.prototype.show = function () {
            this._targetEl.classList.remove("hidden"),
              this._targetEl.classList.add("block"),
              this._popperInstance.setOptions(function (e) {
                return oo(oo({}, e), {
                  modifiers: Ag(
                    Ag([], e.modifiers, !0),
                    [{ name: "eventListeners", enabled: !0 }],
                    !1
                  ),
                });
              }),
              this._setupClickOutsideListener(),
              this._popperInstance.update(),
              (this._visible = !0),
              this._options.onShow(this);
          }),
          (t.prototype.hide = function () {
            this._targetEl.classList.remove("block"),
              this._targetEl.classList.add("hidden"),
              this._popperInstance.setOptions(function (e) {
                return oo(oo({}, e), {
                  modifiers: Ag(
                    Ag([], e.modifiers, !0),
                    [{ name: "eventListeners", enabled: !1 }],
                    !1
                  ),
                });
              }),
              (this._visible = !1),
              this._removeClickOutsideListener(),
              this._options.onHide(this);
          }),
          t
        );
      })();
    function Vb() {
      document.querySelectorAll("[data-dropdown-toggle]").forEach(function (t) {
        var e = t.getAttribute("data-dropdown-toggle"),
          r = document.getElementById(e);
        if (r) {
          var n = t.getAttribute("data-dropdown-placement"),
            i = t.getAttribute("data-dropdown-offset-skidding"),
            a = t.getAttribute("data-dropdown-offset-distance"),
            l = t.getAttribute("data-dropdown-trigger"),
            u = t.getAttribute("data-dropdown-delay"),
            p = t.getAttribute("data-dropdown-ignore-click-outside-class");
          new KI(r, t, {
            placement: n || lo.placement,
            triggerType: l || lo.triggerType,
            offsetSkidding: i ? parseInt(i) : lo.offsetSkidding,
            offsetDistance: a ? parseInt(a) : lo.offsetDistance,
            delay: u ? parseInt(u) : lo.delay,
            ignoreClickOutsideClass: p || lo.ignoreClickOutsideClass,
          });
        } else console.error('The dropdown element with id "'.concat(e, '" does not exist. Please check the data-dropdown-toggle attribute.'));
      });
    }
    typeof window < "u" &&
      ((window.Dropdown = KI), (window.initDropdowns = Vb));
    var Cg =
        (globalThis && globalThis.__assign) ||
        function () {
          return (
            (Cg =
              Object.assign ||
              function (t) {
                for (var e, r = 1, n = arguments.length; r < n; r++) {
                  e = arguments[r];
                  for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                }
                return t;
              }),
            Cg.apply(this, arguments)
          );
        },
      Yc = {
        placement: "center",
        backdropClasses:
          "bg-gray-900 bg-opacity-50 dark:bg-opacity-80 fixed inset-0 z-40",
        backdrop: "dynamic",
        closable: !0,
        onHide: function () {},
        onShow: function () {},
        onToggle: function () {},
      },
      qb = (function () {
        function t(e, r) {
          e === void 0 && (e = null),
            r === void 0 && (r = Yc),
            (this._targetEl = e),
            (this._options = Cg(Cg({}, Yc), r)),
            (this._isHidden = !0),
            (this._backdropEl = null),
            this._init();
        }
        return (
          (t.prototype._init = function () {
            var e = this;
            this._targetEl &&
              this._getPlacementClasses().map(function (r) {
                e._targetEl.classList.add(r);
              });
          }),
          (t.prototype._createBackdrop = function () {
            var e;
            if (this._isHidden) {
              var r = document.createElement("div");
              r.setAttribute("modal-backdrop", ""),
                (e = r.classList).add.apply(
                  e,
                  this._options.backdropClasses.split(" ")
                ),
                document.querySelector("body").append(r),
                (this._backdropEl = r);
            }
          }),
          (t.prototype._destroyBackdropEl = function () {
            this._isHidden ||
              document.querySelector("[modal-backdrop]").remove();
          }),
          (t.prototype._setupModalCloseEventListeners = function () {
            var e = this;
            this._options.backdrop === "dynamic" &&
              ((this._clickOutsideEventListener = function (r) {
                e._handleOutsideClick(r.target);
              }),
              this._targetEl.addEventListener(
                "click",
                this._clickOutsideEventListener,
                !0
              )),
              (this._keydownEventListener = function (r) {
                r.key === "Escape" && e.hide();
              }),
              document.body.addEventListener(
                "keydown",
                this._keydownEventListener,
                !0
              );
          }),
          (t.prototype._removeModalCloseEventListeners = function () {
            this._options.backdrop === "dynamic" &&
              this._targetEl.removeEventListener(
                "click",
                this._clickOutsideEventListener,
                !0
              ),
              document.body.removeEventListener(
                "keydown",
                this._keydownEventListener,
                !0
              );
          }),
          (t.prototype._handleOutsideClick = function (e) {
            (e === this._targetEl ||
              (e === this._backdropEl && this.isVisible())) &&
              this.hide();
          }),
          (t.prototype._getPlacementClasses = function () {
            switch (this._options.placement) {
              case "top-left":
                return ["justify-start", "items-start"];
              case "top-center":
                return ["justify-center", "items-start"];
              case "top-right":
                return ["justify-end", "items-start"];
              case "center-left":
                return ["justify-start", "items-center"];
              case "center":
                return ["justify-center", "items-center"];
              case "center-right":
                return ["justify-end", "items-center"];
              case "bottom-left":
                return ["justify-start", "items-end"];
              case "bottom-center":
                return ["justify-center", "items-end"];
              case "bottom-right":
                return ["justify-end", "items-end"];
              default:
                return ["justify-center", "items-center"];
            }
          }),
          (t.prototype.toggle = function () {
            this._isHidden ? this.show() : this.hide(),
              this._options.onToggle(this);
          }),
          (t.prototype.show = function () {
            this.isHidden &&
              (this._targetEl.classList.add("flex"),
              this._targetEl.classList.remove("hidden"),
              this._targetEl.setAttribute("aria-modal", "true"),
              this._targetEl.setAttribute("role", "dialog"),
              this._targetEl.removeAttribute("aria-hidden"),
              this._createBackdrop(),
              (this._isHidden = !1),
              document.body.classList.add("overflow-hidden"),
              this._options.closable && this._setupModalCloseEventListeners(),
              this._options.onShow(this));
          }),
          (t.prototype.hide = function () {
            this.isVisible &&
              (this._targetEl.classList.add("hidden"),
              this._targetEl.classList.remove("flex"),
              this._targetEl.setAttribute("aria-hidden", "true"),
              this._targetEl.removeAttribute("aria-modal"),
              this._targetEl.removeAttribute("role"),
              this._destroyBackdropEl(),
              (this._isHidden = !0),
              document.body.classList.remove("overflow-hidden"),
              this._options.closable && this._removeModalCloseEventListeners(),
              this._options.onHide(this));
          }),
          (t.prototype.isVisible = function () {
            return !this._isHidden;
          }),
          (t.prototype.isHidden = function () {
            return this._isHidden;
          }),
          t
        );
      })(),
      Sg = function (t, e) {
        return e.some(function (r) {
          return r.id === t;
        })
          ? e.find(function (r) {
              return r.id === t;
            })
          : null;
      };
    function Kb() {
      var t = [];
      document.querySelectorAll("[data-modal-target]").forEach(function (e) {
        var r = e.getAttribute("data-modal-target"),
          n = document.getElementById(r);
        if (n) {
          var i = n.getAttribute("data-modal-placement"),
            a = n.getAttribute("data-modal-backdrop");
          Sg(r, t) ||
            t.push({
              id: r,
              object: new qb(n, {
                placement: i || Yc.placement,
                backdrop: a || Yc.backdrop,
              }),
            });
        } else console.error("Modal with id ".concat(r, " does not exist. Are you sure that the data-modal-target attribute points to the correct modal id?."));
      }),
        document.querySelectorAll("[data-modal-toggle]").forEach(function (e) {
          var r = e.getAttribute("data-modal-toggle"),
            n = document.getElementById(r);
          if (n) {
            var i = n.getAttribute("data-modal-placement"),
              a = n.getAttribute("data-modal-backdrop"),
              l = Sg(r, t);
            l ||
              ((l = {
                id: r,
                object: new qb(n, {
                  placement: i || Yc.placement,
                  backdrop: a || Yc.backdrop,
                }),
              }),
              t.push(l)),
              e.addEventListener("click", function () {
                l.object.toggle();
              });
          } else
            console.error(
              "Modal with id ".concat(
                r,
                " does not exist. Are you sure that the data-modal-toggle attribute points to the correct modal id?"
              )
            );
        }),
        document.querySelectorAll("[data-modal-show]").forEach(function (e) {
          var r = e.getAttribute("data-modal-show"),
            n = document.getElementById(r);
          if (n) {
            var i = Sg(r, t);
            i
              ? e.addEventListener("click", function () {
                  i.object.isHidden && i.object.show();
                })
              : console.error(
                  "Modal with id ".concat(
                    r,
                    " has not been initialized. Please initialize it using the data-modal-target attribute."
                  )
                );
          } else console.error("Modal with id ".concat(r, " does not exist. Are you sure that the data-modal-show attribute points to the correct modal id?"));
        }),
        document.querySelectorAll("[data-modal-hide]").forEach(function (e) {
          var r = e.getAttribute("data-modal-hide"),
            n = document.getElementById(r);
          if (n) {
            var i = Sg(r, t);
            i
              ? e.addEventListener("click", function () {
                  i.object.isVisible && i.object.hide();
                })
              : console.error(
                  "Modal with id ".concat(
                    r,
                    " has not been initialized. Please initialize it using the data-modal-target attribute."
                  )
                );
          } else console.error("Modal with id ".concat(r, " does not exist. Are you sure that the data-modal-hide attribute points to the correct modal id?"));
        });
    }
    typeof window < "u" && ((window.Modal = qb), (window.initModals = Kb));
    var Eg =
        (globalThis && globalThis.__assign) ||
        function () {
          return (
            (Eg =
              Object.assign ||
              function (t) {
                for (var e, r = 1, n = arguments.length; r < n; r++) {
                  e = arguments[r];
                  for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                }
                return t;
              }),
            Eg.apply(this, arguments)
          );
        },
      vl = {
        placement: "left",
        bodyScrolling: !1,
        backdrop: !0,
        edge: !1,
        edgeOffset: "bottom-[60px]",
        backdropClasses:
          "bg-gray-900 bg-opacity-50 dark:bg-opacity-80 fixed inset-0 z-30",
        onShow: function () {},
        onHide: function () {},
        onToggle: function () {},
      },
      $I = (function () {
        function t(e, r) {
          e === void 0 && (e = null),
            r === void 0 && (r = vl),
            (this._targetEl = e),
            (this._options = Eg(Eg({}, vl), r)),
            (this._visible = !1),
            this._init();
        }
        return (
          (t.prototype._init = function () {
            var e = this;
            this._targetEl &&
              (this._targetEl.setAttribute("aria-hidden", "true"),
              this._targetEl.classList.add("transition-transform")),
              this._getPlacementClasses(this._options.placement).base.map(
                function (r) {
                  e._targetEl.classList.add(r);
                }
              ),
              document.addEventListener("keydown", function (r) {
                r.key === "Escape" && e.isVisible() && e.hide();
              });
          }),
          (t.prototype.hide = function () {
            var e = this;
            this._options.edge
              ? (this._getPlacementClasses(
                  this._options.placement + "-edge"
                ).active.map(function (r) {
                  e._targetEl.classList.remove(r);
                }),
                this._getPlacementClasses(
                  this._options.placement + "-edge"
                ).inactive.map(function (r) {
                  e._targetEl.classList.add(r);
                }))
              : (this._getPlacementClasses(this._options.placement).active.map(
                  function (r) {
                    e._targetEl.classList.remove(r);
                  }
                ),
                this._getPlacementClasses(this._options.placement).inactive.map(
                  function (r) {
                    e._targetEl.classList.add(r);
                  }
                )),
              this._targetEl.setAttribute("aria-hidden", "true"),
              this._targetEl.removeAttribute("aria-modal"),
              this._targetEl.removeAttribute("role"),
              this._options.bodyScrolling ||
                document.body.classList.remove("overflow-hidden"),
              this._options.backdrop && this._destroyBackdropEl(),
              (this._visible = !1),
              this._options.onHide(this);
          }),
          (t.prototype.show = function () {
            var e = this;
            this._options.edge
              ? (this._getPlacementClasses(
                  this._options.placement + "-edge"
                ).active.map(function (r) {
                  e._targetEl.classList.add(r);
                }),
                this._getPlacementClasses(
                  this._options.placement + "-edge"
                ).inactive.map(function (r) {
                  e._targetEl.classList.remove(r);
                }))
              : (this._getPlacementClasses(this._options.placement).active.map(
                  function (r) {
                    e._targetEl.classList.add(r);
                  }
                ),
                this._getPlacementClasses(this._options.placement).inactive.map(
                  function (r) {
                    e._targetEl.classList.remove(r);
                  }
                )),
              this._targetEl.setAttribute("aria-modal", "true"),
              this._targetEl.setAttribute("role", "dialog"),
              this._targetEl.removeAttribute("aria-hidden"),
              this._options.bodyScrolling ||
                document.body.classList.add("overflow-hidden"),
              this._options.backdrop && this._createBackdrop(),
              (this._visible = !0),
              this._options.onShow(this);
          }),
          (t.prototype.toggle = function () {
            this.isVisible() ? this.hide() : this.show();
          }),
          (t.prototype._createBackdrop = function () {
            var e,
              r = this;
            if (!this._visible) {
              var n = document.createElement("div");
              n.setAttribute("drawer-backdrop", ""),
                (e = n.classList).add.apply(
                  e,
                  this._options.backdropClasses.split(" ")
                ),
                document.querySelector("body").append(n),
                n.addEventListener("click", function () {
                  r.hide();
                });
            }
          }),
          (t.prototype._destroyBackdropEl = function () {
            this._visible &&
              document.querySelector("[drawer-backdrop]").remove();
          }),
          (t.prototype._getPlacementClasses = function (e) {
            switch (e) {
              case "top":
                return {
                  base: ["top-0", "left-0", "right-0"],
                  active: ["transform-none"],
                  inactive: ["-translate-y-full"],
                };
              case "right":
                return {
                  base: ["right-0", "top-0"],
                  active: ["transform-none"],
                  inactive: ["translate-x-full"],
                };
              case "bottom":
                return {
                  base: ["bottom-0", "left-0", "right-0"],
                  active: ["transform-none"],
                  inactive: ["translate-y-full"],
                };
              case "left":
                return {
                  base: ["left-0", "top-0"],
                  active: ["transform-none"],
                  inactive: ["-translate-x-full"],
                };
              case "bottom-edge":
                return {
                  base: ["left-0", "top-0"],
                  active: ["transform-none"],
                  inactive: ["translate-y-full", this._options.edgeOffset],
                };
              default:
                return {
                  base: ["left-0", "top-0"],
                  active: ["transform-none"],
                  inactive: ["-translate-x-full"],
                };
            }
          }),
          (t.prototype.isHidden = function () {
            return !this._visible;
          }),
          (t.prototype.isVisible = function () {
            return this._visible;
          }),
          t
        );
      })(),
      Ig = function (t, e) {
        if (
          e.some(function (r) {
            return r.id === t;
          })
        )
          return e.find(function (r) {
            return r.id === t;
          });
      };
    function $b() {
      var t = [];
      document.querySelectorAll("[data-drawer-target]").forEach(function (e) {
        var r = e.getAttribute("data-drawer-target"),
          n = document.getElementById(r);
        if (n) {
          var i = e.getAttribute("data-drawer-placement"),
            a = e.getAttribute("data-drawer-body-scrolling"),
            l = e.getAttribute("data-drawer-backdrop"),
            u = e.getAttribute("data-drawer-edge"),
            p = e.getAttribute("data-drawer-edge-offset");
          Ig(r, t) ||
            t.push({
              id: r,
              object: new $I(n, {
                placement: i || vl.placement,
                bodyScrolling: a ? a === "true" : vl.bodyScrolling,
                backdrop: l ? l === "true" : vl.backdrop,
                edge: u ? u === "true" : vl.edge,
                edgeOffset: p || vl.edgeOffset,
              }),
            });
        } else console.error("Drawer with id ".concat(r, " not found. Are you sure that the data-drawer-target attribute points to the correct drawer id?"));
      }),
        document.querySelectorAll("[data-drawer-toggle]").forEach(function (e) {
          var r = e.getAttribute("data-drawer-toggle"),
            n = document.getElementById(r);
          if (n) {
            var i = Ig(r, t);
            i
              ? e.addEventListener("click", function () {
                  i.object.toggle();
                })
              : console.error(
                  "Drawer with id ".concat(
                    r,
                    " has not been initialized. Please initialize it using the data-drawer-target attribute."
                  )
                );
          } else console.error("Drawer with id ".concat(r, " not found. Are you sure that the data-drawer-target attribute points to the correct drawer id?"));
        }),
        document
          .querySelectorAll("[data-drawer-dismiss], [data-drawer-hide]")
          .forEach(function (e) {
            var r = e.getAttribute("data-drawer-dismiss")
                ? e.getAttribute("data-drawer-dismiss")
                : e.getAttribute("data-drawer-hide"),
              n = document.getElementById(r);
            if (n) {
              var i = Ig(r, t);
              i
                ? e.addEventListener("click", function () {
                    i.object.hide();
                  })
                : console.error(
                    "Drawer with id ".concat(
                      r,
                      " has not been initialized. Please initialize it using the data-drawer-target attribute."
                    )
                  );
            } else console.error("Drawer with id ".concat(r, " not found. Are you sure that the data-drawer-target attribute points to the correct drawer id"));
          }),
        document.querySelectorAll("[data-drawer-show]").forEach(function (e) {
          var r = e.getAttribute("data-drawer-show"),
            n = document.getElementById(r);
          if (n) {
            var i = Ig(r, t);
            i
              ? e.addEventListener("click", function () {
                  i.object.show();
                })
              : console.error(
                  "Drawer with id ".concat(
                    r,
                    " has not been initialized. Please initialize it using the data-drawer-target attribute."
                  )
                );
          } else console.error("Drawer with id ".concat(r, " not found. Are you sure that the data-drawer-target attribute points to the correct drawer id?"));
        });
    }
    typeof window < "u" && ((window.Drawer = $I), (window.initDrawers = $b));
    var Tg =
        (globalThis && globalThis.__assign) ||
        function () {
          return (
            (Tg =
              Object.assign ||
              function (t) {
                for (var e, r = 1, n = arguments.length; r < n; r++) {
                  e = arguments[r];
                  for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                }
                return t;
              }),
            Tg.apply(this, arguments)
          );
        },
      ZI = {
        defaultTabId: null,
        activeClasses:
          "text-blue-600 hover:text-blue-600 dark:text-blue-500 dark:hover:text-blue-500 border-blue-600 dark:border-blue-500",
        inactiveClasses:
          "dark:border-transparent text-gray-500 hover:text-gray-600 dark:text-gray-400 border-gray-100 hover:border-gray-300 dark:border-gray-700 dark:hover:text-gray-300",
        onShow: function () {},
      },
      QI = (function () {
        function t(e, r) {
          e === void 0 && (e = []),
            r === void 0 && (r = ZI),
            (this._items = e),
            (this._activeTab = r ? this.getTab(r.defaultTabId) : null),
            (this._options = Tg(Tg({}, ZI), r)),
            this._init();
        }
        return (
          (t.prototype._init = function () {
            var e = this;
            this._items.length &&
              (this._activeTab || this._setActiveTab(this._items[0]),
              this.show(this._activeTab.id, !0),
              this._items.map(function (r) {
                r.triggerEl.addEventListener("click", function () {
                  e.show(r.id);
                });
              }));
          }),
          (t.prototype.getActiveTab = function () {
            return this._activeTab;
          }),
          (t.prototype._setActiveTab = function (e) {
            this._activeTab = e;
          }),
          (t.prototype.getTab = function (e) {
            return this._items.filter(function (r) {
              return r.id === e;
            })[0];
          }),
          (t.prototype.show = function (e, r) {
            var n,
              i,
              a = this;
            r === void 0 && (r = !1);
            var l = this.getTab(e);
            (l === this._activeTab && !r) ||
              (this._items.map(function (u) {
                var p, m;
                u !== l &&
                  ((p = u.triggerEl.classList).remove.apply(
                    p,
                    a._options.activeClasses.split(" ")
                  ),
                  (m = u.triggerEl.classList).add.apply(
                    m,
                    a._options.inactiveClasses.split(" ")
                  ),
                  u.targetEl.classList.add("hidden"),
                  u.triggerEl.setAttribute("aria-selected", "false"));
              }),
              (n = l.triggerEl.classList).add.apply(
                n,
                this._options.activeClasses.split(" ")
              ),
              (i = l.triggerEl.classList).remove.apply(
                i,
                this._options.inactiveClasses.split(" ")
              ),
              l.triggerEl.setAttribute("aria-selected", "true"),
              l.targetEl.classList.remove("hidden"),
              this._setActiveTab(l),
              this._options.onShow(this, l));
          }),
          t
        );
      })();
    function Zb() {
      document.querySelectorAll("[data-tabs-toggle]").forEach(function (t) {
        var e = [],
          r = null;
        t.querySelectorAll('[role="tab"]').forEach(function (n) {
          var i = n.getAttribute("aria-selected") === "true",
            a = {
              id: n.getAttribute("data-tabs-target"),
              triggerEl: n,
              targetEl: document.querySelector(
                n.getAttribute("data-tabs-target")
              ),
            };
          e.push(a), i && (r = a.id);
        }),
          new QI(e, { defaultTabId: r });
      });
    }
    typeof window < "u" && ((window.Tabs = QI), (window.initTabs = Zb));
    var co =
        (globalThis && globalThis.__assign) ||
        function () {
          return (
            (co =
              Object.assign ||
              function (t) {
                for (var e, r = 1, n = arguments.length; r < n; r++) {
                  e = arguments[r];
                  for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                }
                return t;
              }),
            co.apply(this, arguments)
          );
        },
      Pg =
        (globalThis && globalThis.__spreadArray) ||
        function (t, e, r) {
          if (r || arguments.length === 2)
            for (var n = 0, i = e.length, a; n < i; n++)
              (a || !(n in e)) &&
                (a || (a = Array.prototype.slice.call(e, 0, n)), (a[n] = e[n]));
          return t.concat(a || Array.prototype.slice.call(e));
        },
      Og = {
        placement: "top",
        triggerType: "hover",
        onShow: function () {},
        onHide: function () {},
        onToggle: function () {},
      },
      Qb = (function () {
        function t(e, r, n) {
          e === void 0 && (e = null),
            r === void 0 && (r = null),
            n === void 0 && (n = Og),
            (this._targetEl = e),
            (this._triggerEl = r),
            (this._options = co(co({}, Og), n)),
            (this._popperInstance = this._createPopperInstance()),
            (this._visible = !1),
            this._init();
        }
        return (
          (t.prototype._init = function () {
            this._triggerEl && this._setupEventListeners();
          }),
          (t.prototype._setupEventListeners = function () {
            var e = this,
              r = this._getTriggerEvents();
            r.showEvents.forEach(function (n) {
              e._triggerEl.addEventListener(n, function () {
                e.show();
              });
            }),
              r.hideEvents.forEach(function (n) {
                e._triggerEl.addEventListener(n, function () {
                  e.hide();
                });
              });
          }),
          (t.prototype._createPopperInstance = function () {
            return Yb(this._triggerEl, this._targetEl, {
              placement: this._options.placement,
              modifiers: [{ name: "offset", options: { offset: [0, 8] } }],
            });
          }),
          (t.prototype._getTriggerEvents = function () {
            switch (this._options.triggerType) {
              case "hover":
                return {
                  showEvents: ["mouseenter", "focus"],
                  hideEvents: ["mouseleave", "blur"],
                };
              case "click":
                return {
                  showEvents: ["click", "focus"],
                  hideEvents: ["focusout", "blur"],
                };
              case "none":
                return { showEvents: [], hideEvents: [] };
              default:
                return {
                  showEvents: ["mouseenter", "focus"],
                  hideEvents: ["mouseleave", "blur"],
                };
            }
          }),
          (t.prototype._setupKeydownListener = function () {
            var e = this;
            (this._keydownEventListener = function (r) {
              r.key === "Escape" && e.hide();
            }),
              document.body.addEventListener(
                "keydown",
                this._keydownEventListener,
                !0
              );
          }),
          (t.prototype._removeKeydownListener = function () {
            document.body.removeEventListener(
              "keydown",
              this._keydownEventListener,
              !0
            );
          }),
          (t.prototype._setupClickOutsideListener = function () {
            var e = this;
            (this._clickOutsideEventListener = function (r) {
              e._handleClickOutside(r, e._targetEl);
            }),
              document.body.addEventListener(
                "click",
                this._clickOutsideEventListener,
                !0
              );
          }),
          (t.prototype._removeClickOutsideListener = function () {
            document.body.removeEventListener(
              "click",
              this._clickOutsideEventListener,
              !0
            );
          }),
          (t.prototype._handleClickOutside = function (e, r) {
            var n = e.target;
            n !== r &&
              !r.contains(n) &&
              !this._triggerEl.contains(n) &&
              this.isVisible() &&
              this.hide();
          }),
          (t.prototype.isVisible = function () {
            return this._visible;
          }),
          (t.prototype.toggle = function () {
            this.isVisible() ? this.hide() : this.show();
          }),
          (t.prototype.show = function () {
            this._targetEl.classList.remove("opacity-0", "invisible"),
              this._targetEl.classList.add("opacity-100", "visible"),
              this._popperInstance.setOptions(function (e) {
                return co(co({}, e), {
                  modifiers: Pg(
                    Pg([], e.modifiers, !0),
                    [{ name: "eventListeners", enabled: !0 }],
                    !1
                  ),
                });
              }),
              this._setupClickOutsideListener(),
              this._setupKeydownListener(),
              this._popperInstance.update(),
              (this._visible = !0),
              this._options.onShow(this);
          }),
          (t.prototype.hide = function () {
            this._targetEl.classList.remove("opacity-100", "visible"),
              this._targetEl.classList.add("opacity-0", "invisible"),
              this._popperInstance.setOptions(function (e) {
                return co(co({}, e), {
                  modifiers: Pg(
                    Pg([], e.modifiers, !0),
                    [{ name: "eventListeners", enabled: !1 }],
                    !1
                  ),
                });
              }),
              this._removeClickOutsideListener(),
              this._removeKeydownListener(),
              (this._visible = !1),
              this._options.onHide(this);
          }),
          t
        );
      })();
    function Jb() {
      document.querySelectorAll("[data-tooltip-target]").forEach(function (t) {
        var e = t.getAttribute("data-tooltip-target"),
          r = document.getElementById(e);
        if (r) {
          var n = t.getAttribute("data-tooltip-trigger"),
            i = t.getAttribute("data-tooltip-placement");
          new Qb(r, t, {
            placement: i || Og.placement,
            triggerType: n || Og.triggerType,
          });
        } else console.error('The tooltip element with id "'.concat(e, '" does not exist. Please check the data-tooltip-target attribute.'));
      });
    }
    typeof window < "u" && ((window.Tooltip = Qb), (window.initTooltips = Jb));
    var uo =
        (globalThis && globalThis.__assign) ||
        function () {
          return (
            (uo =
              Object.assign ||
              function (t) {
                for (var e, r = 1, n = arguments.length; r < n; r++) {
                  e = arguments[r];
                  for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                }
                return t;
              }),
            uo.apply(this, arguments)
          );
        },
      Lg =
        (globalThis && globalThis.__spreadArray) ||
        function (t, e, r) {
          if (r || arguments.length === 2)
            for (var n = 0, i = e.length, a; n < i; n++)
              (a || !(n in e)) &&
                (a || (a = Array.prototype.slice.call(e, 0, n)), (a[n] = e[n]));
          return t.concat(a || Array.prototype.slice.call(e));
        },
      Yh = {
        placement: "top",
        offset: 10,
        triggerType: "hover",
        onShow: function () {},
        onHide: function () {},
        onToggle: function () {},
      },
      JI = (function () {
        function t(e, r, n) {
          e === void 0 && (e = null),
            r === void 0 && (r = null),
            n === void 0 && (n = Yh),
            (this._targetEl = e),
            (this._triggerEl = r),
            (this._options = uo(uo({}, Yh), n)),
            (this._popperInstance = this._createPopperInstance()),
            (this._visible = !1),
            this._init();
        }
        return (
          (t.prototype._init = function () {
            this._triggerEl && this._setupEventListeners();
          }),
          (t.prototype._setupEventListeners = function () {
            var e = this,
              r = this._getTriggerEvents();
            r.showEvents.forEach(function (n) {
              e._triggerEl.addEventListener(n, function () {
                e.show();
              }),
                e._targetEl.addEventListener(n, function () {
                  e.show();
                });
            }),
              r.hideEvents.forEach(function (n) {
                e._triggerEl.addEventListener(n, function () {
                  setTimeout(function () {
                    e._targetEl.matches(":hover") || e.hide();
                  }, 100);
                }),
                  e._targetEl.addEventListener(n, function () {
                    setTimeout(function () {
                      e._triggerEl.matches(":hover") || e.hide();
                    }, 100);
                  });
              });
          }),
          (t.prototype._createPopperInstance = function () {
            return Yb(this._triggerEl, this._targetEl, {
              placement: this._options.placement,
              modifiers: [
                {
                  name: "offset",
                  options: { offset: [0, this._options.offset] },
                },
              ],
            });
          }),
          (t.prototype._getTriggerEvents = function () {
            switch (this._options.triggerType) {
              case "hover":
                return {
                  showEvents: ["mouseenter", "focus"],
                  hideEvents: ["mouseleave", "blur"],
                };
              case "click":
                return {
                  showEvents: ["click", "focus"],
                  hideEvents: ["focusout", "blur"],
                };
              case "none":
                return { showEvents: [], hideEvents: [] };
              default:
                return {
                  showEvents: ["mouseenter", "focus"],
                  hideEvents: ["mouseleave", "blur"],
                };
            }
          }),
          (t.prototype._setupKeydownListener = function () {
            var e = this;
            (this._keydownEventListener = function (r) {
              r.key === "Escape" && e.hide();
            }),
              document.body.addEventListener(
                "keydown",
                this._keydownEventListener,
                !0
              );
          }),
          (t.prototype._removeKeydownListener = function () {
            document.body.removeEventListener(
              "keydown",
              this._keydownEventListener,
              !0
            );
          }),
          (t.prototype._setupClickOutsideListener = function () {
            var e = this;
            (this._clickOutsideEventListener = function (r) {
              e._handleClickOutside(r, e._targetEl);
            }),
              document.body.addEventListener(
                "click",
                this._clickOutsideEventListener,
                !0
              );
          }),
          (t.prototype._removeClickOutsideListener = function () {
            document.body.removeEventListener(
              "click",
              this._clickOutsideEventListener,
              !0
            );
          }),
          (t.prototype._handleClickOutside = function (e, r) {
            var n = e.target;
            n !== r &&
              !r.contains(n) &&
              !this._triggerEl.contains(n) &&
              this.isVisible() &&
              this.hide();
          }),
          (t.prototype.isVisible = function () {
            return this._visible;
          }),
          (t.prototype.toggle = function () {
            this.isVisible() ? this.hide() : this.show(),
              this._options.onToggle(this);
          }),
          (t.prototype.show = function () {
            this._targetEl.classList.remove("opacity-0", "invisible"),
              this._targetEl.classList.add("opacity-100", "visible"),
              this._popperInstance.setOptions(function (e) {
                return uo(uo({}, e), {
                  modifiers: Lg(
                    Lg([], e.modifiers, !0),
                    [{ name: "eventListeners", enabled: !0 }],
                    !1
                  ),
                });
              }),
              this._setupClickOutsideListener(),
              this._setupKeydownListener(),
              this._popperInstance.update(),
              (this._visible = !0),
              this._options.onShow(this);
          }),
          (t.prototype.hide = function () {
            this._targetEl.classList.remove("opacity-100", "visible"),
              this._targetEl.classList.add("opacity-0", "invisible"),
              this._popperInstance.setOptions(function (e) {
                return uo(uo({}, e), {
                  modifiers: Lg(
                    Lg([], e.modifiers, !0),
                    [{ name: "eventListeners", enabled: !1 }],
                    !1
                  ),
                });
              }),
              this._removeClickOutsideListener(),
              this._removeKeydownListener(),
              (this._visible = !1),
              this._options.onHide(this);
          }),
          t
        );
      })();
    function ex() {
      document.querySelectorAll("[data-popover-target]").forEach(function (t) {
        var e = t.getAttribute("data-popover-target"),
          r = document.getElementById(e);
        if (r) {
          var n = t.getAttribute("data-popover-trigger"),
            i = t.getAttribute("data-popover-placement"),
            a = t.getAttribute("data-popover-offset");
          new JI(r, t, {
            placement: i || Yh.placement,
            offset: a ? parseInt(a) : Yh.offset,
            triggerType: n || Yh.triggerType,
          });
        } else console.error('The popover element with id "'.concat(e, '" does not exist. Please check the data-popover-target attribute.'));
      });
    }
    typeof window < "u" && ((window.Popover = JI), (window.initPopovers = ex));
    var Mg =
        (globalThis && globalThis.__assign) ||
        function () {
          return (
            (Mg =
              Object.assign ||
              function (t) {
                for (var e, r = 1, n = arguments.length; r < n; r++) {
                  e = arguments[r];
                  for (var i in e)
                    Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                }
                return t;
              }),
            Mg.apply(this, arguments)
          );
        },
      tx = {
        triggerType: "hover",
        onShow: function () {},
        onHide: function () {},
        onToggle: function () {},
      },
      eT = (function () {
        function t(e, r, n, i) {
          e === void 0 && (e = null),
            r === void 0 && (r = null),
            n === void 0 && (n = null),
            i === void 0 && (i = tx),
            (this._parentEl = e),
            (this._triggerEl = r),
            (this._targetEl = n),
            (this._options = Mg(Mg({}, tx), i)),
            (this._visible = !1),
            this._init();
        }
        return (
          (t.prototype._init = function () {
            var e = this;
            if (this._triggerEl) {
              var r = this._getTriggerEventTypes(this._options.triggerType);
              r.showEvents.forEach(function (n) {
                e._triggerEl.addEventListener(n, function () {
                  e.show();
                }),
                  e._targetEl.addEventListener(n, function () {
                    e.show();
                  });
              }),
                r.hideEvents.forEach(function (n) {
                  e._parentEl.addEventListener(n, function () {
                    e._parentEl.matches(":hover") || e.hide();
                  });
                });
            }
          }),
          (t.prototype.hide = function () {
            this._targetEl.classList.add("hidden"),
              this._triggerEl &&
                this._triggerEl.setAttribute("aria-expanded", "false"),
              (this._visible = !1),
              this._options.onHide(this);
          }),
          (t.prototype.show = function () {
            this._targetEl.classList.remove("hidden"),
              this._triggerEl &&
                this._triggerEl.setAttribute("aria-expanded", "true"),
              (this._visible = !0),
              this._options.onShow(this);
          }),
          (t.prototype.toggle = function () {
            this._visible ? this.hide() : this.show();
          }),
          (t.prototype.isHidden = function () {
            return !this._visible;
          }),
          (t.prototype.isVisible = function () {
            return this._visible;
          }),
          (t.prototype._getTriggerEventTypes = function (e) {
            switch (e) {
              case "hover":
                return {
                  showEvents: ["mouseenter", "focus"],
                  hideEvents: ["mouseleave", "blur"],
                };
              case "click":
                return {
                  showEvents: ["click", "focus"],
                  hideEvents: ["focusout", "blur"],
                };
              case "none":
                return { showEvents: [], hideEvents: [] };
              default:
                return {
                  showEvents: ["mouseenter", "focus"],
                  hideEvents: ["mouseleave", "blur"],
                };
            }
          }),
          t
        );
      })();
    function rx() {
      document.querySelectorAll("[data-dial-init]").forEach(function (t) {
        var e = t.querySelector("[data-dial-toggle]");
        if (e) {
          var r = e.getAttribute("data-dial-toggle"),
            n = document.getElementById(r);
          if (n) {
            var i = e.getAttribute("data-dial-trigger");
            new eT(t, e, n, { triggerType: i || tx.triggerType });
          } else
            console.error(
              "Dial with id ".concat(
                r,
                " does not exist. Are you sure that the data-dial-toggle attribute points to the correct modal id?"
              )
            );
        } else console.error("Dial with id ".concat(t.id, " does not have a trigger element. Are you sure that the data-dial-toggle attribute exists?"));
      });
    }
    typeof window < "u" && ((window.Dial = eT), (window.initDials = rx));
    function bK() {
      Mb(), Rb(), Nb(), Bb(), Vb(), Kb(), $b(), Zb(), Jb(), ex(), rx();
    }
    typeof window < "u" && (window.initFlowbite = bK);
    var xK = new fq("load", [Mb, Rb, Nb, Bb, Vb, Kb, $b, Zb, Jb, ex, rx]);
    xK.init();
    const wK = {
        id: "ping-tooltip-content",
        class:
          "absolute z-10 invisible inline-block px-3 py-2 text-sm font-medium text-white transition-opacity delay-700 duration-300 bg-neutral-600 rounded-lg shadow-sm opacity-0 tooltip",
        role: "tooltip",
      },
      kK = ve(
        "div",
        { class: "tooltip-arrow", "data-popper-arrow": "" },
        null,
        -1
      ),
      _K = dt({
        __name: "BaseTooltip",
        props: {
          triggerId: {},
          options: {
            default: { placement: "bottom-end", triggerType: "hover" },
          },
        },
        setup(t) {
          const e = t,
            r = We(null),
            n = We(null);
          let i = null;
          return (
            sr(() => {
              (i = document.getElementById("ping-tooltip-content")),
                e.options,
                (n.value = document.getElementById(e.triggerId)),
                (r.value = new Qb(i, n.value, e.options));
            }),
            (a, l) => (je(), et("div", wK, [Oo(a.$slots, "default"), kK]))
          );
        },
      }),
      AK = { class: "w-full text-sm text-left text-gray-400" },
      CK = { class: "text-xs uppercase bg-gray-700 text-gray-400" },
      SK = ve("th", { scope: "col", class: "p-2" }, null, -1),
      EK = { class: "flex" },
      IK = { id: "success-tooltip-trigger" },
      TK = { id: "success-tooltip" },
      PK = { class: "flex items-center" },
      OK = ve("span", { class: "ml-2 text-lg" }, " \u2265 50 %", -1),
      LK = { class: "flex items-center" },
      MK = ve("span", { class: "pt-1.5 ml-2 text-lg" }, Bt("< 50 %"), -1),
      RK = ve("p", null, "Symbol / Name", -1),
      NK = { class: "flex" },
      BK = { class: "flex" },
      FK = ve("p", null, "Buy Tax / Sell Tax", -1),
      DK = { class: "flex" },
      zK = ve(
        "th",
        {
          scope: "col",
          class: "px-3 sm:px-6 py-3 cursor-not-allowed select-none",
        },
        " Checks ",
        -1
      ),
      HK = ve(
        "th",
        {
          scope: "col",
          class: "px-3 sm:px-6 py-3 cursor-not-allowed select-none",
        },
        " Links ",
        -1
      ),
      UK = { key: 0, class: "h-36 border-b bg-gray-800 border-gray-700" },
      WK = { colspan: "8" },
      XK = {
        key: 1,
        class: "flex flex-col items-center justify-center h-full text-gray-400",
      },
      jK = ve("div", { class: "text-2xl font-medium" }, " No calls found ", -1),
      GK = ve("div", { class: "mt-2 text-sm" }, " Try to change filters ", -1),
      YK = [jK, GK],
      VK = { key: 2 },
      qK = { colspan: "8" },
      KK = 10,
      $K = dt({
        __name: "CallsTable",
        props: {
          isLoading: { type: Boolean },
          calls: {},
          sortBy: {},
          sortDirection: {},
        },
        emits: ["update:sort-by"],
        setup(t) {
          const e = t,
            r = We(1),
            n = We(KK),
            i = He(() => {
              const p = (r.value - 1) * n.value,
                m = r.value * n.value;
              return e.calls.slice(p, m);
            }),
            a = He(() => e.calls.length);
          Or(n, () => (r.value = 1)), Or(a, () => (r.value = 1));
          function l(p) {
            r.value = p;
          }
          function u(p) {
            n.value = p;
          }
          return (p, m) => (
            je(),
            et("table", AK, [
              ve("thead", CK, [
                ve("tr", null, [
                  SK,
                  ve(
                    "th",
                    {
                      scope: "col",
                      class:
                        "min-w-40 ms:min-w-48 px-3 sm:px-6 py-3 cursor-pointer select-none",
                      onClick:
                        m[0] ||
                        (m[0] = (v) => p.$emit("update:sort-by", "maxProfit")),
                    },
                    [
                      ve("div", EK, [
                        ve(
                          "p",
                          {
                            class: ot({
                              "text-white": e.sortBy === "maxProfit",
                            }),
                          },
                          " Max profit [%] ",
                          2
                        ),
                        ve("div", IK, [
                          $e(Xe(HA), { class: "h-4 ml-2 cursor-pointer" }),
                        ]),
                        e.sortBy === "maxProfit"
                          ? (je(),
                            jt(
                              Xe(Cf),
                              {
                                key: 0,
                                class: ot([
                                  "w-4 ml-1",
                                  {
                                    "transform rotate-180":
                                      e.sortDirection === Xe(gs).asc,
                                  },
                                ]),
                              },
                              null,
                              8,
                              ["class"]
                            ))
                          : Yr("", !0),
                      ]),
                      $e(
                        _K,
                        {
                          "trigger-id": "success-tooltip-trigger",
                          "content-id": "success-tooltip",
                          options: { placement: "right", triggerType: "hover" },
                        },
                        {
                          default: Ft(() => [
                            ve("div", TK, [
                              ve("div", PK, [
                                $e(Xe(zA), { class: "w-6 text-green-400" }),
                                OK,
                              ]),
                              ve("div", LK, [
                                $e(Xe(DA), { class: "mt-2 w-6 text-red-400" }),
                                MK,
                              ]),
                            ]),
                          ]),
                          _: 1,
                        }
                      ),
                    ]
                  ),
                  ve(
                    "th",
                    {
                      scope: "col",
                      class: "px-3 sm:px-6 py-3 cursor-pointer select-none",
                      onClick:
                        m[1] ||
                        (m[1] = (v) => p.$emit("update:sort-by", "callTime")),
                    },
                    [
                      RK,
                      ve("div", NK, [
                        ve(
                          "p",
                          {
                            class: ot({
                              "text-white": e.sortBy === "callTime",
                            }),
                          },
                          " Called at ",
                          2
                        ),
                        e.sortBy === "callTime"
                          ? (je(),
                            jt(
                              Xe(Cf),
                              {
                                key: 0,
                                class: ot([
                                  "w-4 ml-1",
                                  {
                                    "transform rotate-180":
                                      e.sortDirection === Xe(gs).asc,
                                  },
                                ]),
                              },
                              null,
                              8,
                              ["class"]
                            ))
                          : Yr("", !0),
                      ]),
                    ]
                  ),
                  ve(
                    "th",
                    {
                      scope: "col",
                      class: "px-3 sm:px-6 py-3 cursor-pointer select-none",
                      onClick:
                        m[2] ||
                        (m[2] = (v) => p.$emit("update:sort-by", "marketcap")),
                    },
                    [
                      ve("div", BK, [
                        ve(
                          "p",
                          {
                            class: ot({
                              "text-white": e.sortBy === "marketcap",
                            }),
                          },
                          " Market cap ",
                          2
                        ),
                        e.sortBy === "marketcap"
                          ? (je(),
                            jt(
                              Xe(Cf),
                              {
                                key: 0,
                                class: ot([
                                  "w-4 ml-1",
                                  {
                                    "transform rotate-180":
                                      e.sortDirection === Xe(gs).asc,
                                  },
                                ]),
                              },
                              null,
                              8,
                              ["class"]
                            ))
                          : Yr("", !0),
                      ]),
                      FK,
                    ]
                  ),
                  ve(
                    "th",
                    {
                      scope: "col",
                      class: "px-3 sm:px-6 py-3 cursor-pointer select-none",
                      onClick:
                        m[3] ||
                        (m[3] = (v) =>
                          p.$emit("update:sort-by", "liquidityUSD")),
                    },
                    [
                      ve("div", DK, [
                        ve(
                          "p",
                          {
                            class: ot({
                              "text-white": e.sortBy === "liquidityUSD",
                            }),
                          },
                          " Liquidity ",
                          2
                        ),
                        e.sortBy === "liquidityUSD"
                          ? (je(),
                            jt(
                              Xe(Cf),
                              {
                                key: 0,
                                class: ot([
                                  "w-4 ml-1",
                                  {
                                    "transform rotate-180":
                                      e.sortDirection === Xe(gs).asc,
                                  },
                                ]),
                              },
                              null,
                              8,
                              ["class"]
                            ))
                          : Yr("", !0),
                      ]),
                    ]
                  ),
                  zK,
                  HK,
                ]),
              ]),
              ve("tbody", null, [
                e.isLoading || !e.calls.length
                  ? (je(),
                    et("tr", UK, [
                      ve("td", WK, [
                        e.isLoading
                          ? (je(),
                            jt(
                              i0,
                              {
                                key: 0,
                                size: Xe(Yn).medium,
                                theme: Xe(Bi).dark,
                              },
                              null,
                              8,
                              ["size", "theme"]
                            ))
                          : (je(), et("div", XK, YK)),
                      ]),
                    ]))
                  : (je(!0),
                    et(
                      dr,
                      { key: 1 },
                      Hs(
                        i.value,
                        (v) => (
                          je(),
                          jt(aq, { key: v.id, call: v }, null, 8, ["call"])
                        )
                      ),
                      128
                    )),
                p.calls.length > 10
                  ? (je(),
                    et("tr", VK, [
                      ve("td", qK, [
                        $e(
                          dq,
                          {
                            "current-page": r.value,
                            "items-count": e.calls.length,
                            "is-disabled": !e.calls.length,
                            onPageSizeChanged: u,
                            onPageChanged: l,
                          },
                          null,
                          8,
                          ["current-page", "items-count", "is-disabled"]
                        ),
                      ]),
                    ]))
                  : Yr("", !0),
              ]),
            ])
          );
        },
      }),
      tT = {
        NODE_CLIENT: !1,
        NODE_ADMIN: !1,
        SDK_VERSION: "${JSCORE_VERSION}",
      },
      Ke = function (t, e) {
        if (!t) throw Vc(e);
      },
      Vc = function (t) {
        return new Error(
          "Firebase Database (" +
            tT.SDK_VERSION +
            ") INTERNAL ASSERT FAILED: " +
            t
        );
      },
      rT = function (t) {
        const e = [];
        let r = 0;
        for (let n = 0; n < t.length; n++) {
          let i = t.charCodeAt(n);
          i < 128
            ? (e[r++] = i)
            : i < 2048
            ? ((e[r++] = (i >> 6) | 192), (e[r++] = (i & 63) | 128))
            : (i & 64512) === 55296 &&
              n + 1 < t.length &&
              (t.charCodeAt(n + 1) & 64512) === 56320
            ? ((i = 65536 + ((i & 1023) << 10) + (t.charCodeAt(++n) & 1023)),
              (e[r++] = (i >> 18) | 240),
              (e[r++] = ((i >> 12) & 63) | 128),
              (e[r++] = ((i >> 6) & 63) | 128),
              (e[r++] = (i & 63) | 128))
            : ((e[r++] = (i >> 12) | 224),
              (e[r++] = ((i >> 6) & 63) | 128),
              (e[r++] = (i & 63) | 128));
        }
        return e;
      },
      ZK = function (t) {
        const e = [];
        let r = 0,
          n = 0;
        for (; r < t.length; ) {
          const i = t[r++];
          if (i < 128) e[n++] = String.fromCharCode(i);
          else if (i > 191 && i < 224) {
            const a = t[r++];
            e[n++] = String.fromCharCode(((i & 31) << 6) | (a & 63));
          } else if (i > 239 && i < 365) {
            const a = t[r++],
              l = t[r++],
              u = t[r++],
              p =
                (((i & 7) << 18) |
                  ((a & 63) << 12) |
                  ((l & 63) << 6) |
                  (u & 63)) -
                65536;
            (e[n++] = String.fromCharCode(55296 + (p >> 10))),
              (e[n++] = String.fromCharCode(56320 + (p & 1023)));
          } else {
            const a = t[r++],
              l = t[r++];
            e[n++] = String.fromCharCode(
              ((i & 15) << 12) | ((a & 63) << 6) | (l & 63)
            );
          }
        }
        return e.join("");
      },
      nx = {
        byteToCharMap_: null,
        charToByteMap_: null,
        byteToCharMapWebSafe_: null,
        charToByteMapWebSafe_: null,
        ENCODED_VALS_BASE:
          "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",
        get ENCODED_VALS() {
          return this.ENCODED_VALS_BASE + "+/=";
        },
        get ENCODED_VALS_WEBSAFE() {
          return this.ENCODED_VALS_BASE + "-_.";
        },
        HAS_NATIVE_SUPPORT: typeof atob == "function",
        encodeByteArray(t, e) {
          if (!Array.isArray(t))
            throw Error("encodeByteArray takes an array as a parameter");
          this.init_();
          const r = e ? this.byteToCharMapWebSafe_ : this.byteToCharMap_,
            n = [];
          for (let i = 0; i < t.length; i += 3) {
            const a = t[i],
              l = i + 1 < t.length,
              u = l ? t[i + 1] : 0,
              p = i + 2 < t.length,
              m = p ? t[i + 2] : 0,
              v = a >> 2,
              w = ((a & 3) << 4) | (u >> 4);
            let S = ((u & 15) << 2) | (m >> 6),
              M = m & 63;
            p || ((M = 64), l || (S = 64)), n.push(r[v], r[w], r[S], r[M]);
          }
          return n.join("");
        },
        encodeString(t, e) {
          return this.HAS_NATIVE_SUPPORT && !e
            ? btoa(t)
            : this.encodeByteArray(rT(t), e);
        },
        decodeString(t, e) {
          return this.HAS_NATIVE_SUPPORT && !e
            ? atob(t)
            : ZK(this.decodeStringToByteArray(t, e));
        },
        decodeStringToByteArray(t, e) {
          this.init_();
          const r = e ? this.charToByteMapWebSafe_ : this.charToByteMap_,
            n = [];
          for (let i = 0; i < t.length; ) {
            const a = r[t.charAt(i++)],
              l = i < t.length ? r[t.charAt(i)] : 0;
            ++i;
            const u = i < t.length ? r[t.charAt(i)] : 64;
            ++i;
            const p = i < t.length ? r[t.charAt(i)] : 64;
            if ((++i, a == null || l == null || u == null || p == null))
              throw new QK();
            const m = (a << 2) | (l >> 4);
            if ((n.push(m), u !== 64)) {
              const v = ((l << 4) & 240) | (u >> 2);
              if ((n.push(v), p !== 64)) {
                const w = ((u << 6) & 192) | p;
                n.push(w);
              }
            }
          }
          return n;
        },
        init_() {
          if (!this.byteToCharMap_) {
            (this.byteToCharMap_ = {}),
              (this.charToByteMap_ = {}),
              (this.byteToCharMapWebSafe_ = {}),
              (this.charToByteMapWebSafe_ = {});
            for (let t = 0; t < this.ENCODED_VALS.length; t++)
              (this.byteToCharMap_[t] = this.ENCODED_VALS.charAt(t)),
                (this.charToByteMap_[this.byteToCharMap_[t]] = t),
                (this.byteToCharMapWebSafe_[t] =
                  this.ENCODED_VALS_WEBSAFE.charAt(t)),
                (this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[t]] = t),
                t >= this.ENCODED_VALS_BASE.length &&
                  ((this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(t)] =
                    t),
                  (this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(t)] =
                    t));
          }
        },
      };
    class QK extends Error {
      constructor() {
        super(...arguments), (this.name = "DecodeBase64StringError");
      }
    }
    const nT = function (t) {
        const e = rT(t);
        return nx.encodeByteArray(e, !0);
      },
      Rg = function (t) {
        return nT(t).replace(/\./g, "");
      },
      Ng = function (t) {
        try {
          return nx.decodeString(t, !0);
        } catch (e) {
          console.error("base64Decode failed: ", e);
        }
        return null;
      };
    function JK(t) {
      return iT(void 0, t);
    }
    function iT(t, e) {
      if (!(e instanceof Object)) return e;
      switch (e.constructor) {
        case Date:
          const r = e;
          return new Date(r.getTime());
        case Object:
          t === void 0 && (t = {});
          break;
        case Array:
          t = [];
          break;
        default:
          return e;
      }
      for (const r in e)
        !e.hasOwnProperty(r) || !e$(r) || (t[r] = iT(t[r], e[r]));
      return t;
    }
    function e$(t) {
      return t !== "__proto__";
    }
    function t$() {
      if (typeof self < "u") return self;
      if (typeof window < "u") return window;
      if (typeof Ns < "u") return Ns;
      throw new Error("Unable to locate global object.");
    }
    const r$ = () => t$().__FIREBASE_DEFAULTS__,
      n$ = () => {
        if (typeof Rs > "u" || typeof Rs.env > "u") return;
        const t = {}.__FIREBASE_DEFAULTS__;
        if (t) return JSON.parse(t);
      },
      i$ = () => {
        if (typeof document > "u") return;
        let t;
        try {
          t = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);
        } catch {
          return;
        }
        const e = t && Ng(t[1]);
        return e && JSON.parse(e);
      },
      ix = () => {
        try {
          return r$() || n$() || i$();
        } catch (t) {
          console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${t}`);
          return;
        }
      },
      sT = (t) => {
        var e, r;
        return (r =
          (e = ix()) === null || e === void 0 ? void 0 : e.emulatorHosts) ===
          null || r === void 0
          ? void 0
          : r[t];
      },
      s$ = (t) => {
        const e = sT(t);
        if (!e) return;
        const r = e.lastIndexOf(":");
        if (r <= 0 || r + 1 === e.length)
          throw new Error(
            `Invalid host ${e} with no separate hostname and port!`
          );
        const n = parseInt(e.substring(r + 1), 10);
        return e[0] === "["
          ? [e.substring(1, r - 1), n]
          : [e.substring(0, r), n];
      },
      aT = () => {
        var t;
        return (t = ix()) === null || t === void 0 ? void 0 : t.config;
      },
      oT = (t) => {
        var e;
        return (e = ix()) === null || e === void 0 ? void 0 : e[`_${t}`];
      };
    class Bg {
      constructor() {
        (this.reject = () => {}),
          (this.resolve = () => {}),
          (this.promise = new Promise((e, r) => {
            (this.resolve = e), (this.reject = r);
          }));
      }
      wrapCallback(e) {
        return (r, n) => {
          r ? this.reject(r) : this.resolve(n),
            typeof e == "function" &&
              (this.promise.catch(() => {}), e.length === 1 ? e(r) : e(r, n));
        };
      }
    }
    function a$(t, e) {
      if (t.uid)
        throw new Error(
          'The "uid" field is no longer supported by mockUserToken. Please use "sub" instead for Firebase Auth User ID.'
        );
      const r = { alg: "none", type: "JWT" },
        n = e || "demo-project",
        i = t.iat || 0,
        a = t.sub || t.user_id;
      if (!a)
        throw new Error("mockUserToken must contain 'sub' or 'user_id' field!");
      const l = Object.assign(
          {
            iss: `https://securetoken.google.com/${n}`,
            aud: n,
            iat: i,
            exp: i + 3600,
            auth_time: i,
            sub: a,
            user_id: a,
            firebase: { sign_in_provider: "custom", identities: {} },
          },
          t
        ),
        u = "";
      return [Rg(JSON.stringify(r)), Rg(JSON.stringify(l)), u].join(".");
    }
    function Ln() {
      return typeof navigator < "u" && typeof navigator.userAgent == "string"
        ? navigator.userAgent
        : "";
    }
    function sx() {
      return (
        typeof window < "u" &&
        !!(window.cordova || window.phonegap || window.PhoneGap) &&
        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(Ln())
      );
    }
    Dw = function () {
      const t =
        typeof chrome == "object"
          ? chrome.runtime
          : typeof browser == "object"
          ? browser.runtime
          : void 0;
      return typeof t == "object" && t.id !== void 0;
    };
    function lT() {
      return (
        typeof navigator == "object" && navigator.product === "ReactNative"
      );
    }
    function o$() {
      const t = Ln();
      return t.indexOf("MSIE ") >= 0 || t.indexOf("Trident/") >= 0;
    }
    function cT() {
      return tT.NODE_ADMIN === !0;
    }
    (Fw = function () {
      try {
        return typeof indexedDB == "object";
      } catch {
        return !1;
      }
    }),
      (zw = function () {
        return new Promise((t, e) => {
          try {
            let r = !0;
            const n = "validate-browser-context-for-indexeddb-analytics-module",
              i = self.indexedDB.open(n);
            (i.onsuccess = () => {
              i.result.close(), r || self.indexedDB.deleteDatabase(n), t(!0);
            }),
              (i.onupgradeneeded = () => {
                r = !1;
              }),
              (i.onerror = () => {
                var a;
                e(
                  ((a = i.error) === null || a === void 0
                    ? void 0
                    : a.message) || ""
                );
              });
          } catch (r) {
            e(r);
          }
        });
      }),
      (pL = function () {
        return !(typeof navigator > "u" || !navigator.cookieEnabled);
      });
    const l$ = "FirebaseError";
    (Sa = class extends Error {
      constructor(t, e, r) {
        super(e),
          (this.code = t),
          (this.customData = r),
          (this.name = l$),
          Object.setPrototypeOf(this, Sa.prototype),
          Error.captureStackTrace &&
            Error.captureStackTrace(this, Rl.prototype.create);
      }
    }),
      (Rl = class {
        constructor(t, e, r) {
          (this.service = t), (this.serviceName = e), (this.errors = r);
        }
        create(t, ...e) {
          const r = e[0] || {},
            n = `${this.service}/${t}`,
            i = this.errors[t],
            a = i ? c$(i, r) : "Error",
            l = `${this.serviceName}: ${a} (${n}).`;
          return new Sa(n, l, r);
        }
      });
    function c$(t, e) {
      return t.replace(u$, (r, n) => {
        const i = e[n];
        return i != null ? String(i) : `<${n}?>`;
      });
    }
    const u$ = /\{\$([^}]+)}/g;
    function Vh(t) {
      return JSON.parse(t);
    }
    function fn(t) {
      return JSON.stringify(t);
    }
    const uT = function (t) {
        let e = {},
          r = {},
          n = {},
          i = "";
        try {
          const a = t.split(".");
          (e = Vh(Ng(a[0]) || "")),
            (r = Vh(Ng(a[1]) || "")),
            (i = a[2]),
            (n = r.d || {}),
            delete r.d;
        } catch {}
        return { header: e, claims: r, data: n, signature: i };
      },
      h$ = function (t) {
        const e = uT(t),
          r = e.claims;
        return !!r && typeof r == "object" && r.hasOwnProperty("iat");
      },
      d$ = function (t) {
        const e = uT(t).claims;
        return typeof e == "object" && e.admin === !0;
      };
    function Ss(t, e) {
      return Object.prototype.hasOwnProperty.call(t, e);
    }
    function qc(t, e) {
      if (Object.prototype.hasOwnProperty.call(t, e)) return t[e];
    }
    function ax(t) {
      for (const e in t)
        if (Object.prototype.hasOwnProperty.call(t, e)) return !1;
      return !0;
    }
    function Fg(t, e, r) {
      const n = {};
      for (const i in t)
        Object.prototype.hasOwnProperty.call(t, i) &&
          (n[i] = e.call(r, t[i], i, t));
      return n;
    }
    hu = function (t, e) {
      if (t === e) return !0;
      const r = Object.keys(t),
        n = Object.keys(e);
      for (const i of r) {
        if (!n.includes(i)) return !1;
        const a = t[i],
          l = e[i];
        if (hT(a) && hT(l)) {
          if (!hu(a, l)) return !1;
        } else if (a !== l) return !1;
      }
      for (const i of n) if (!r.includes(i)) return !1;
      return !0;
    };
    function hT(t) {
      return t !== null && typeof t == "object";
    }
    function Kc(t) {
      const e = [];
      for (const [r, n] of Object.entries(t))
        Array.isArray(n)
          ? n.forEach((i) => {
              e.push(encodeURIComponent(r) + "=" + encodeURIComponent(i));
            })
          : e.push(encodeURIComponent(r) + "=" + encodeURIComponent(n));
      return e.length ? "&" + e.join("&") : "";
    }
    class f$ {
      constructor() {
        (this.chain_ = []),
          (this.buf_ = []),
          (this.W_ = []),
          (this.pad_ = []),
          (this.inbuf_ = 0),
          (this.total_ = 0),
          (this.blockSize = 64),
          (this.pad_[0] = 128);
        for (let e = 1; e < this.blockSize; ++e) this.pad_[e] = 0;
        this.reset();
      }
      reset() {
        (this.chain_[0] = 1732584193),
          (this.chain_[1] = 4023233417),
          (this.chain_[2] = 2562383102),
          (this.chain_[3] = 271733878),
          (this.chain_[4] = 3285377520),
          (this.inbuf_ = 0),
          (this.total_ = 0);
      }
      compress_(e, r) {
        r || (r = 0);
        const n = this.W_;
        if (typeof e == "string")
          for (let w = 0; w < 16; w++)
            (n[w] =
              (e.charCodeAt(r) << 24) |
              (e.charCodeAt(r + 1) << 16) |
              (e.charCodeAt(r + 2) << 8) |
              e.charCodeAt(r + 3)),
              (r += 4);
        else
          for (let w = 0; w < 16; w++)
            (n[w] =
              (e[r] << 24) | (e[r + 1] << 16) | (e[r + 2] << 8) | e[r + 3]),
              (r += 4);
        for (let w = 16; w < 80; w++) {
          const S = n[w - 3] ^ n[w - 8] ^ n[w - 14] ^ n[w - 16];
          n[w] = ((S << 1) | (S >>> 31)) & 4294967295;
        }
        let i = this.chain_[0],
          a = this.chain_[1],
          l = this.chain_[2],
          u = this.chain_[3],
          p = this.chain_[4],
          m,
          v;
        for (let w = 0; w < 80; w++) {
          w < 40
            ? w < 20
              ? ((m = u ^ (a & (l ^ u))), (v = 1518500249))
              : ((m = a ^ l ^ u), (v = 1859775393))
            : w < 60
            ? ((m = (a & l) | (u & (a | l))), (v = 2400959708))
            : ((m = a ^ l ^ u), (v = 3395469782));
          const S = (((i << 5) | (i >>> 27)) + m + p + v + n[w]) & 4294967295;
          (p = u),
            (u = l),
            (l = ((a << 30) | (a >>> 2)) & 4294967295),
            (a = i),
            (i = S);
        }
        (this.chain_[0] = (this.chain_[0] + i) & 4294967295),
          (this.chain_[1] = (this.chain_[1] + a) & 4294967295),
          (this.chain_[2] = (this.chain_[2] + l) & 4294967295),
          (this.chain_[3] = (this.chain_[3] + u) & 4294967295),
          (this.chain_[4] = (this.chain_[4] + p) & 4294967295);
      }
      update(e, r) {
        if (e == null) return;
        r === void 0 && (r = e.length);
        const n = r - this.blockSize;
        let i = 0;
        const a = this.buf_;
        let l = this.inbuf_;
        for (; i < r; ) {
          if (l === 0)
            for (; i <= n; ) this.compress_(e, i), (i += this.blockSize);
          if (typeof e == "string") {
            for (; i < r; )
              if (((a[l] = e.charCodeAt(i)), ++l, ++i, l === this.blockSize)) {
                this.compress_(a), (l = 0);
                break;
              }
          } else
            for (; i < r; )
              if (((a[l] = e[i]), ++l, ++i, l === this.blockSize)) {
                this.compress_(a), (l = 0);
                break;
              }
        }
        (this.inbuf_ = l), (this.total_ += r);
      }
      digest() {
        const e = [];
        let r = this.total_ * 8;
        this.inbuf_ < 56
          ? this.update(this.pad_, 56 - this.inbuf_)
          : this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));
        for (let i = this.blockSize - 1; i >= 56; i--)
          (this.buf_[i] = r & 255), (r /= 256);
        this.compress_(this.buf_);
        let n = 0;
        for (let i = 0; i < 5; i++)
          for (let a = 24; a >= 0; a -= 8)
            (e[n] = (this.chain_[i] >> a) & 255), ++n;
        return e;
      }
    }
    function p$(t, e) {
      const r = new g$(t, e);
      return r.subscribe.bind(r);
    }
    class g$ {
      constructor(e, r) {
        (this.observers = []),
          (this.unsubscribes = []),
          (this.observerCount = 0),
          (this.task = Promise.resolve()),
          (this.finalized = !1),
          (this.onNoObservers = r),
          this.task
            .then(() => {
              e(this);
            })
            .catch((n) => {
              this.error(n);
            });
      }
      next(e) {
        this.forEachObserver((r) => {
          r.next(e);
        });
      }
      error(e) {
        this.forEachObserver((r) => {
          r.error(e);
        }),
          this.close(e);
      }
      complete() {
        this.forEachObserver((e) => {
          e.complete();
        }),
          this.close();
      }
      subscribe(e, r, n) {
        let i;
        if (e === void 0 && r === void 0 && n === void 0)
          throw new Error("Missing Observer.");
        m$(e, ["next", "error", "complete"])
          ? (i = e)
          : (i = { next: e, error: r, complete: n }),
          i.next === void 0 && (i.next = ox),
          i.error === void 0 && (i.error = ox),
          i.complete === void 0 && (i.complete = ox);
        const a = this.unsubscribeOne.bind(this, this.observers.length);
        return (
          this.finalized &&
            this.task.then(() => {
              try {
                this.finalError ? i.error(this.finalError) : i.complete();
              } catch {}
            }),
          this.observers.push(i),
          a
        );
      }
      unsubscribeOne(e) {
        this.observers === void 0 ||
          this.observers[e] === void 0 ||
          (delete this.observers[e],
          (this.observerCount -= 1),
          this.observerCount === 0 &&
            this.onNoObservers !== void 0 &&
            this.onNoObservers(this));
      }
      forEachObserver(e) {
        if (!this.finalized)
          for (let r = 0; r < this.observers.length; r++) this.sendOne(r, e);
      }
      sendOne(e, r) {
        this.task.then(() => {
          if (this.observers !== void 0 && this.observers[e] !== void 0)
            try {
              r(this.observers[e]);
            } catch (n) {
              typeof console < "u" && console.error && console.error(n);
            }
        });
      }
      close(e) {
        this.finalized ||
          ((this.finalized = !0),
          e !== void 0 && (this.finalError = e),
          this.task.then(() => {
            (this.observers = void 0), (this.onNoObservers = void 0);
          }));
      }
    }
    function m$(t, e) {
      if (typeof t != "object" || t === null) return !1;
      for (const r of e) if (r in t && typeof t[r] == "function") return !0;
      return !1;
    }
    function ox() {}
    function qh(t, e) {
      return `${t} failed: ${e} argument `;
    }
    const v$ = function (t) {
        const e = [];
        let r = 0;
        for (let n = 0; n < t.length; n++) {
          let i = t.charCodeAt(n);
          if (i >= 55296 && i <= 56319) {
            const a = i - 55296;
            n++, Ke(n < t.length, "Surrogate pair missing trail surrogate.");
            const l = t.charCodeAt(n) - 56320;
            i = 65536 + (a << 10) + l;
          }
          i < 128
            ? (e[r++] = i)
            : i < 2048
            ? ((e[r++] = (i >> 6) | 192), (e[r++] = (i & 63) | 128))
            : i < 65536
            ? ((e[r++] = (i >> 12) | 224),
              (e[r++] = ((i >> 6) & 63) | 128),
              (e[r++] = (i & 63) | 128))
            : ((e[r++] = (i >> 18) | 240),
              (e[r++] = ((i >> 12) & 63) | 128),
              (e[r++] = ((i >> 6) & 63) | 128),
              (e[r++] = (i & 63) | 128));
        }
        return e;
      },
      Dg = function (t) {
        let e = 0;
        for (let r = 0; r < t.length; r++) {
          const n = t.charCodeAt(r);
          n < 128
            ? e++
            : n < 2048
            ? (e += 2)
            : n >= 55296 && n <= 56319
            ? ((e += 4), r++)
            : (e += 3);
        }
        return e;
      },
      y$ = 1e3,
      b$ = 2,
      x$ = 4 * 60 * 60 * 1e3,
      w$ = 0.5;
    (gL = function (t, e = y$, r = b$) {
      const n = e * Math.pow(r, t),
        i = Math.round(w$ * n * (Math.random() - 0.5) * 2);
      return Math.min(x$, n + i);
    }),
      (fi = function (t) {
        return t && t._delegate ? t._delegate : t;
      }),
      (Ca = class {
        constructor(t, e, r) {
          (this.name = t),
            (this.instanceFactory = e),
            (this.type = r),
            (this.multipleInstances = !1),
            (this.serviceProps = {}),
            (this.instantiationMode = "LAZY"),
            (this.onInstanceCreated = null);
        }
        setInstantiationMode(t) {
          return (this.instantiationMode = t), this;
        }
        setMultipleInstances(t) {
          return (this.multipleInstances = t), this;
        }
        setServiceProps(t) {
          return (this.serviceProps = t), this;
        }
        setInstanceCreatedCallback(t) {
          return (this.onInstanceCreated = t), this;
        }
      });
    const yl = "[DEFAULT]";
    class k$ {
      constructor(e, r) {
        (this.name = e),
          (this.container = r),
          (this.component = null),
          (this.instances = new Map()),
          (this.instancesDeferred = new Map()),
          (this.instancesOptions = new Map()),
          (this.onInitCallbacks = new Map());
      }
      get(e) {
        const r = this.normalizeInstanceIdentifier(e);
        if (!this.instancesDeferred.has(r)) {
          const n = new Bg();
          if (
            (this.instancesDeferred.set(r, n),
            this.isInitialized(r) || this.shouldAutoInitialize())
          )
            try {
              const i = this.getOrInitializeService({ instanceIdentifier: r });
              i && n.resolve(i);
            } catch {}
        }
        return this.instancesDeferred.get(r).promise;
      }
      getImmediate(e) {
        var r;
        const n = this.normalizeInstanceIdentifier(
            e == null ? void 0 : e.identifier
          ),
          i =
            (r = e == null ? void 0 : e.optional) !== null && r !== void 0
              ? r
              : !1;
        if (this.isInitialized(n) || this.shouldAutoInitialize())
          try {
            return this.getOrInitializeService({ instanceIdentifier: n });
          } catch (a) {
            if (i) return null;
            throw a;
          }
        else {
          if (i) return null;
          throw Error(`Service ${this.name} is not available`);
        }
      }
      getComponent() {
        return this.component;
      }
      setComponent(e) {
        if (e.name !== this.name)
          throw Error(
            `Mismatching Component ${e.name} for Provider ${this.name}.`
          );
        if (this.component)
          throw Error(`Component for ${this.name} has already been provided`);
        if (((this.component = e), !!this.shouldAutoInitialize())) {
          if (A$(e))
            try {
              this.getOrInitializeService({ instanceIdentifier: yl });
            } catch {}
          for (const [r, n] of this.instancesDeferred.entries()) {
            const i = this.normalizeInstanceIdentifier(r);
            try {
              const a = this.getOrInitializeService({ instanceIdentifier: i });
              n.resolve(a);
            } catch {}
          }
        }
      }
      clearInstance(e = yl) {
        this.instancesDeferred.delete(e),
          this.instancesOptions.delete(e),
          this.instances.delete(e);
      }
      async delete() {
        const e = Array.from(this.instances.values());
        await Promise.all([
          ...e.filter((r) => "INTERNAL" in r).map((r) => r.INTERNAL.delete()),
          ...e.filter((r) => "_delete" in r).map((r) => r._delete()),
        ]);
      }
      isComponentSet() {
        return this.component != null;
      }
      isInitialized(e = yl) {
        return this.instances.has(e);
      }
      getOptions(e = yl) {
        return this.instancesOptions.get(e) || {};
      }
      initialize(e = {}) {
        const { options: r = {} } = e,
          n = this.normalizeInstanceIdentifier(e.instanceIdentifier);
        if (this.isInitialized(n))
          throw Error(`${this.name}(${n}) has already been initialized`);
        if (!this.isComponentSet())
          throw Error(`Component ${this.name} has not been registered yet`);
        const i = this.getOrInitializeService({
          instanceIdentifier: n,
          options: r,
        });
        for (const [a, l] of this.instancesDeferred.entries()) {
          const u = this.normalizeInstanceIdentifier(a);
          n === u && l.resolve(i);
        }
        return i;
      }
      onInit(e, r) {
        var n;
        const i = this.normalizeInstanceIdentifier(r),
          a =
            (n = this.onInitCallbacks.get(i)) !== null && n !== void 0
              ? n
              : new Set();
        a.add(e), this.onInitCallbacks.set(i, a);
        const l = this.instances.get(i);
        return (
          l && e(l, i),
          () => {
            a.delete(e);
          }
        );
      }
      invokeOnInitCallbacks(e, r) {
        const n = this.onInitCallbacks.get(r);
        if (n)
          for (const i of n)
            try {
              i(e, r);
            } catch {}
      }
      getOrInitializeService({ instanceIdentifier: e, options: r = {} }) {
        let n = this.instances.get(e);
        if (
          !n &&
          this.component &&
          ((n = this.component.instanceFactory(this.container, {
            instanceIdentifier: _$(e),
            options: r,
          })),
          this.instances.set(e, n),
          this.instancesOptions.set(e, r),
          this.invokeOnInitCallbacks(n, e),
          this.component.onInstanceCreated)
        )
          try {
            this.component.onInstanceCreated(this.container, e, n);
          } catch {}
        return n || null;
      }
      normalizeInstanceIdentifier(e = yl) {
        return this.component ? (this.component.multipleInstances ? e : yl) : e;
      }
      shouldAutoInitialize() {
        return (
          !!this.component && this.component.instantiationMode !== "EXPLICIT"
        );
      }
    }
    function _$(t) {
      return t === yl ? void 0 : t;
    }
    function A$(t) {
      return t.instantiationMode === "EAGER";
    }
    class C$ {
      constructor(e) {
        (this.name = e), (this.providers = new Map());
      }
      addComponent(e) {
        const r = this.getProvider(e.name);
        if (r.isComponentSet())
          throw new Error(
            `Component ${e.name} has already been registered with ${this.name}`
          );
        r.setComponent(e);
      }
      addOrOverwriteComponent(e) {
        this.getProvider(e.name).isComponentSet() &&
          this.providers.delete(e.name),
          this.addComponent(e);
      }
      getProvider(e) {
        if (this.providers.has(e)) return this.providers.get(e);
        const r = new k$(e, this);
        return this.providers.set(e, r), r;
      }
      getProviders() {
        return Array.from(this.providers.values());
      }
    }
    var or;
    (function (t) {
      (t[(t.DEBUG = 0)] = "DEBUG"),
        (t[(t.VERBOSE = 1)] = "VERBOSE"),
        (t[(t.INFO = 2)] = "INFO"),
        (t[(t.WARN = 3)] = "WARN"),
        (t[(t.ERROR = 4)] = "ERROR"),
        (t[(t.SILENT = 5)] = "SILENT");
    })(or || (or = {}));
    const S$ = {
        debug: or.DEBUG,
        verbose: or.VERBOSE,
        info: or.INFO,
        warn: or.WARN,
        error: or.ERROR,
        silent: or.SILENT,
      },
      E$ = or.INFO,
      I$ = {
        [or.DEBUG]: "log",
        [or.VERBOSE]: "log",
        [or.INFO]: "info",
        [or.WARN]: "warn",
        [or.ERROR]: "error",
      },
      T$ = (t, e, ...r) => {
        if (e < t.logLevel) return;
        const n = new Date().toISOString(),
          i = I$[e];
        if (i) console[i](`[${n}]  ${t.name}:`, ...r);
        else
          throw new Error(
            `Attempted to log a message with an invalid logType (value: ${e})`
          );
      };
    Sd = class {
      constructor(t) {
        (this.name = t),
          (this._logLevel = E$),
          (this._logHandler = T$),
          (this._userLogHandler = null);
      }
      get logLevel() {
        return this._logLevel;
      }
      set logLevel(t) {
        if (!(t in or))
          throw new TypeError(`Invalid value "${t}" assigned to \`logLevel\``);
        this._logLevel = t;
      }
      setLogLevel(t) {
        this._logLevel = typeof t == "string" ? S$[t] : t;
      }
      get logHandler() {
        return this._logHandler;
      }
      set logHandler(t) {
        if (typeof t != "function")
          throw new TypeError(
            "Value assigned to `logHandler` must be a function"
          );
        this._logHandler = t;
      }
      get userLogHandler() {
        return this._userLogHandler;
      }
      set userLogHandler(t) {
        this._userLogHandler = t;
      }
      debug(...t) {
        this._userLogHandler && this._userLogHandler(this, or.DEBUG, ...t),
          this._logHandler(this, or.DEBUG, ...t);
      }
      log(...t) {
        this._userLogHandler && this._userLogHandler(this, or.VERBOSE, ...t),
          this._logHandler(this, or.VERBOSE, ...t);
      }
      info(...t) {
        this._userLogHandler && this._userLogHandler(this, or.INFO, ...t),
          this._logHandler(this, or.INFO, ...t);
      }
      warn(...t) {
        this._userLogHandler && this._userLogHandler(this, or.WARN, ...t),
          this._logHandler(this, or.WARN, ...t);
      }
      error(...t) {
        this._userLogHandler && this._userLogHandler(this, or.ERROR, ...t),
          this._logHandler(this, or.ERROR, ...t);
      }
    };
    const P$ = (t, e) => e.some((r) => t instanceof r);
    let dT, fT;
    function O$() {
      return (
        dT ||
        (dT = [
          IDBDatabase,
          IDBObjectStore,
          IDBIndex,
          IDBCursor,
          IDBTransaction,
        ])
      );
    }
    function L$() {
      return (
        fT ||
        (fT = [
          IDBCursor.prototype.advance,
          IDBCursor.prototype.continue,
          IDBCursor.prototype.continuePrimaryKey,
        ])
      );
    }
    const pT = new WeakMap(),
      lx = new WeakMap(),
      gT = new WeakMap(),
      cx = new WeakMap(),
      ux = new WeakMap();
    function M$(t) {
      const e = new Promise((r, n) => {
        const i = () => {
            t.removeEventListener("success", a),
              t.removeEventListener("error", l);
          },
          a = () => {
            r(ho(t.result)), i();
          },
          l = () => {
            n(t.error), i();
          };
        t.addEventListener("success", a), t.addEventListener("error", l);
      });
      return (
        e
          .then((r) => {
            r instanceof IDBCursor && pT.set(r, t);
          })
          .catch(() => {}),
        ux.set(e, t),
        e
      );
    }
    function R$(t) {
      if (lx.has(t)) return;
      const e = new Promise((r, n) => {
        const i = () => {
            t.removeEventListener("complete", a),
              t.removeEventListener("error", l),
              t.removeEventListener("abort", l);
          },
          a = () => {
            r(), i();
          },
          l = () => {
            n(t.error || new DOMException("AbortError", "AbortError")), i();
          };
        t.addEventListener("complete", a),
          t.addEventListener("error", l),
          t.addEventListener("abort", l);
      });
      lx.set(t, e);
    }
    let hx = {
      get(t, e, r) {
        if (t instanceof IDBTransaction) {
          if (e === "done") return lx.get(t);
          if (e === "objectStoreNames") return t.objectStoreNames || gT.get(t);
          if (e === "store")
            return r.objectStoreNames[1]
              ? void 0
              : r.objectStore(r.objectStoreNames[0]);
        }
        return ho(t[e]);
      },
      set(t, e, r) {
        return (t[e] = r), !0;
      },
      has(t, e) {
        return t instanceof IDBTransaction && (e === "done" || e === "store")
          ? !0
          : e in t;
      },
    };
    function N$(t) {
      hx = t(hx);
    }
    function B$(t) {
      return t === IDBDatabase.prototype.transaction &&
        !("objectStoreNames" in IDBTransaction.prototype)
        ? function (e, ...r) {
            const n = t.call(dx(this), e, ...r);
            return gT.set(n, e.sort ? e.sort() : [e]), ho(n);
          }
        : L$().includes(t)
        ? function (...e) {
            return t.apply(dx(this), e), ho(pT.get(this));
          }
        : function (...e) {
            return ho(t.apply(dx(this), e));
          };
    }
    function F$(t) {
      return typeof t == "function"
        ? B$(t)
        : (t instanceof IDBTransaction && R$(t),
          P$(t, O$()) ? new Proxy(t, hx) : t);
    }
    function ho(t) {
      if (t instanceof IDBRequest) return M$(t);
      if (cx.has(t)) return cx.get(t);
      const e = F$(t);
      return e !== t && (cx.set(t, e), ux.set(e, t)), e;
    }
    const dx = (t) => ux.get(t);
    function D$(
      t,
      e,
      { blocked: r, upgrade: n, blocking: i, terminated: a } = {}
    ) {
      const l = indexedDB.open(t, e),
        u = ho(l);
      return (
        n &&
          l.addEventListener("upgradeneeded", (p) => {
            n(ho(l.result), p.oldVersion, p.newVersion, ho(l.transaction), p);
          }),
        r &&
          l.addEventListener("blocked", (p) =>
            r(p.oldVersion, p.newVersion, p)
          ),
        u
          .then((p) => {
            a && p.addEventListener("close", () => a()),
              i &&
                p.addEventListener("versionchange", (m) =>
                  i(m.oldVersion, m.newVersion, m)
                );
          })
          .catch(() => {}),
        u
      );
    }
    const z$ = ["get", "getKey", "getAll", "getAllKeys", "count"],
      H$ = ["put", "add", "delete", "clear"],
      fx = new Map();
    function mT(t, e) {
      if (!(t instanceof IDBDatabase && !(e in t) && typeof e == "string"))
        return;
      if (fx.get(e)) return fx.get(e);
      const r = e.replace(/FromIndex$/, ""),
        n = e !== r,
        i = H$.includes(r);
      if (
        !(r in (n ? IDBIndex : IDBObjectStore).prototype) ||
        !(i || z$.includes(r))
      )
        return;
      const a = async function (l, ...u) {
        const p = this.transaction(l, i ? "readwrite" : "readonly");
        let m = p.store;
        return (
          n && (m = m.index(u.shift())),
          (await Promise.all([m[r](...u), i && p.done]))[0]
        );
      };
      return fx.set(e, a), a;
    }
    N$((t) => ({
      ...t,
      get: (e, r, n) => mT(e, r) || t.get(e, r, n),
      has: (e, r) => !!mT(e, r) || t.has(e, r),
    }));
    class U$ {
      constructor(e) {
        this.container = e;
      }
      getPlatformInfoString() {
        return this.container
          .getProviders()
          .map((e) => {
            if (W$(e)) {
              const r = e.getImmediate();
              return `${r.library}/${r.version}`;
            } else return null;
          })
          .filter((e) => e)
          .join(" ");
      }
    }
    function W$(t) {
      const e = t.getComponent();
      return (e == null ? void 0 : e.type) === "VERSION";
    }
    const px = "@firebase/app",
      vT = "0.9.17",
      bl = new Sd("@firebase/app"),
      X$ = "@firebase/app-compat",
      j$ = "@firebase/analytics-compat",
      G$ = "@firebase/analytics",
      Y$ = "@firebase/app-check-compat",
      V$ = "@firebase/app-check",
      q$ = "@firebase/auth",
      K$ = "@firebase/auth-compat",
      $$ = "@firebase/database",
      Z$ = "@firebase/database-compat",
      Q$ = "@firebase/functions",
      J$ = "@firebase/functions-compat",
      eZ = "@firebase/installations",
      tZ = "@firebase/installations-compat",
      rZ = "@firebase/messaging",
      nZ = "@firebase/messaging-compat",
      iZ = "@firebase/performance",
      sZ = "@firebase/performance-compat",
      aZ = "@firebase/remote-config",
      oZ = "@firebase/remote-config-compat",
      lZ = "@firebase/storage",
      cZ = "@firebase/storage-compat",
      uZ = "@firebase/firestore",
      hZ = "@firebase/firestore-compat",
      dZ = "firebase",
      fZ = "10.3.0",
      gx = "[DEFAULT]",
      pZ = {
        [px]: "fire-core",
        [X$]: "fire-core-compat",
        [G$]: "fire-analytics",
        [j$]: "fire-analytics-compat",
        [V$]: "fire-app-check",
        [Y$]: "fire-app-check-compat",
        [q$]: "fire-auth",
        [K$]: "fire-auth-compat",
        [$$]: "fire-rtdb",
        [Z$]: "fire-rtdb-compat",
        [Q$]: "fire-fn",
        [J$]: "fire-fn-compat",
        [eZ]: "fire-iid",
        [tZ]: "fire-iid-compat",
        [rZ]: "fire-fcm",
        [nZ]: "fire-fcm-compat",
        [iZ]: "fire-perf",
        [sZ]: "fire-perf-compat",
        [aZ]: "fire-rc",
        [oZ]: "fire-rc-compat",
        [lZ]: "fire-gcs",
        [cZ]: "fire-gcs-compat",
        [uZ]: "fire-fst",
        [hZ]: "fire-fst-compat",
        "fire-js": "fire-js",
        [dZ]: "fire-js-all",
      },
      zg = new Map(),
      mx = new Map();
    function gZ(t, e) {
      try {
        t.container.addComponent(e);
      } catch (r) {
        bl.debug(
          `Component ${e.name} failed to register with FirebaseApp ${t.name}`,
          r
        );
      }
    }
    (Co = function (t) {
      const e = t.name;
      if (mx.has(e))
        return (
          bl.debug(`There were multiple attempts to register component ${e}.`),
          !1
        );
      mx.set(e, t);
      for (const r of zg.values()) gZ(r, t);
      return !0;
    }),
      (Ed = function (t, e) {
        const r = t.container
          .getProvider("heartbeat")
          .getImmediate({ optional: !0 });
        return r && r.triggerHeartbeat(), t.container.getProvider(e);
      });
    const mZ = {
        "no-app":
          "No Firebase App '{$appName}' has been created - call initializeApp() first",
        "bad-app-name": "Illegal App name: '{$appName}",
        "duplicate-app":
          "Firebase App named '{$appName}' already exists with different options or config",
        "app-deleted": "Firebase App named '{$appName}' already deleted",
        "no-options":
          "Need to provide options, when not being deployed to hosting via source.",
        "invalid-app-argument":
          "firebase.{$appName}() takes either no argument or a Firebase App instance.",
        "invalid-log-argument":
          "First argument to `onLog` must be null or a function.",
        "idb-open":
          "Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.",
        "idb-get":
          "Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.",
        "idb-set":
          "Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.",
        "idb-delete":
          "Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.",
      },
      fo = new Rl("app", "Firebase", mZ);
    class vZ {
      constructor(e, r, n) {
        (this._isDeleted = !1),
          (this._options = Object.assign({}, e)),
          (this._config = Object.assign({}, r)),
          (this._name = r.name),
          (this._automaticDataCollectionEnabled =
            r.automaticDataCollectionEnabled),
          (this._container = n),
          this.container.addComponent(new Ca("app", () => this, "PUBLIC"));
      }
      get automaticDataCollectionEnabled() {
        return this.checkDestroyed(), this._automaticDataCollectionEnabled;
      }
      set automaticDataCollectionEnabled(e) {
        this.checkDestroyed(), (this._automaticDataCollectionEnabled = e);
      }
      get name() {
        return this.checkDestroyed(), this._name;
      }
      get options() {
        return this.checkDestroyed(), this._options;
      }
      get config() {
        return this.checkDestroyed(), this._config;
      }
      get container() {
        return this._container;
      }
      get isDeleted() {
        return this._isDeleted;
      }
      set isDeleted(e) {
        this._isDeleted = e;
      }
      checkDestroyed() {
        if (this.isDeleted)
          throw fo.create("app-deleted", { appName: this._name });
      }
    }
    const $c = fZ;
    function yT(t, e = {}) {
      let r = t;
      typeof e != "object" && (e = { name: e });
      const n = Object.assign(
          { name: gx, automaticDataCollectionEnabled: !1 },
          e
        ),
        i = n.name;
      if (typeof i != "string" || !i)
        throw fo.create("bad-app-name", { appName: String(i) });
      if ((r || (r = aT()), !r)) throw fo.create("no-options");
      const a = zg.get(i);
      if (a) {
        if (hu(r, a.options) && hu(n, a.config)) return a;
        throw fo.create("duplicate-app", { appName: i });
      }
      const l = new C$(i);
      for (const p of mx.values()) l.addComponent(p);
      const u = new vZ(r, n, l);
      return zg.set(i, u), u;
    }
    (Am = function (t = gx) {
      const e = zg.get(t);
      if (!e && t === gx && aT()) return yT();
      if (!e) throw fo.create("no-app", { appName: t });
      return e;
    }),
      (Os = function (t, e, r) {
        var n;
        let i = (n = pZ[t]) !== null && n !== void 0 ? n : t;
        r && (i += `-${r}`);
        const a = i.match(/\s|\//),
          l = e.match(/\s|\//);
        if (a || l) {
          const u = [`Unable to register library "${i}" with version "${e}":`];
          a &&
            u.push(
              `library name "${i}" contains illegal characters (whitespace or "/")`
            ),
            a && l && u.push("and"),
            l &&
              u.push(
                `version name "${e}" contains illegal characters (whitespace or "/")`
              ),
            bl.warn(u.join(" "));
          return;
        }
        Co(
          new Ca(`${i}-version`, () => ({ library: i, version: e }), "VERSION")
        );
      });
    const yZ = "firebase-heartbeat-database",
      bZ = 1,
      Kh = "firebase-heartbeat-store";
    let vx = null;
    function bT() {
      return (
        vx ||
          (vx = D$(yZ, bZ, {
            upgrade: (t, e) => {
              switch (e) {
                case 0:
                  t.createObjectStore(Kh);
              }
            },
          }).catch((t) => {
            throw fo.create("idb-open", { originalErrorMessage: t.message });
          })),
        vx
      );
    }
    async function xZ(t) {
      try {
        return await (await bT()).transaction(Kh).objectStore(Kh).get(wT(t));
      } catch (e) {
        if (e instanceof Sa) bl.warn(e.message);
        else {
          const r = fo.create("idb-get", {
            originalErrorMessage: e == null ? void 0 : e.message,
          });
          bl.warn(r.message);
        }
      }
    }
    async function xT(t, e) {
      try {
        const r = (await bT()).transaction(Kh, "readwrite");
        await r.objectStore(Kh).put(e, wT(t)), await r.done;
      } catch (r) {
        if (r instanceof Sa) bl.warn(r.message);
        else {
          const n = fo.create("idb-set", {
            originalErrorMessage: r == null ? void 0 : r.message,
          });
          bl.warn(n.message);
        }
      }
    }
    function wT(t) {
      return `${t.name}!${t.options.appId}`;
    }
    const wZ = 1024,
      kZ = 30 * 24 * 60 * 60 * 1e3;
    class _Z {
      constructor(e) {
        (this.container = e), (this._heartbeatsCache = null);
        const r = this.container.getProvider("app").getImmediate();
        (this._storage = new CZ(r)),
          (this._heartbeatsCachePromise = this._storage
            .read()
            .then((n) => ((this._heartbeatsCache = n), n)));
      }
      async triggerHeartbeat() {
        const e = this.container
            .getProvider("platform-logger")
            .getImmediate()
            .getPlatformInfoString(),
          r = kT();
        if (
          (this._heartbeatsCache === null &&
            (this._heartbeatsCache = await this._heartbeatsCachePromise),
          !(
            this._heartbeatsCache.lastSentHeartbeatDate === r ||
            this._heartbeatsCache.heartbeats.some((n) => n.date === r)
          ))
        )
          return (
            this._heartbeatsCache.heartbeats.push({ date: r, agent: e }),
            (this._heartbeatsCache.heartbeats =
              this._heartbeatsCache.heartbeats.filter((n) => {
                const i = new Date(n.date).valueOf();
                return Date.now() - i <= kZ;
              })),
            this._storage.overwrite(this._heartbeatsCache)
          );
      }
      async getHeartbeatsHeader() {
        if (
          (this._heartbeatsCache === null &&
            (await this._heartbeatsCachePromise),
          this._heartbeatsCache === null ||
            this._heartbeatsCache.heartbeats.length === 0)
        )
          return "";
        const e = kT(),
          { heartbeatsToSend: r, unsentEntries: n } = AZ(
            this._heartbeatsCache.heartbeats
          ),
          i = Rg(JSON.stringify({ version: 2, heartbeats: r }));
        return (
          (this._heartbeatsCache.lastSentHeartbeatDate = e),
          n.length > 0
            ? ((this._heartbeatsCache.heartbeats = n),
              await this._storage.overwrite(this._heartbeatsCache))
            : ((this._heartbeatsCache.heartbeats = []),
              this._storage.overwrite(this._heartbeatsCache)),
          i
        );
      }
    }
    function kT() {
      return new Date().toISOString().substring(0, 10);
    }
    function AZ(t, e = wZ) {
      const r = [];
      let n = t.slice();
      for (const i of t) {
        const a = r.find((l) => l.agent === i.agent);
        if (a) {
          if ((a.dates.push(i.date), _T(r) > e)) {
            a.dates.pop();
            break;
          }
        } else if ((r.push({ agent: i.agent, dates: [i.date] }), _T(r) > e)) {
          r.pop();
          break;
        }
        n = n.slice(1);
      }
      return { heartbeatsToSend: r, unsentEntries: n };
    }
    class CZ {
      constructor(e) {
        (this.app = e),
          (this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck());
      }
      async runIndexedDBEnvironmentCheck() {
        return Fw()
          ? zw()
              .then(() => !0)
              .catch(() => !1)
          : !1;
      }
      async read() {
        return (await this._canUseIndexedDBPromise)
          ? (await xZ(this.app)) || { heartbeats: [] }
          : { heartbeats: [] };
      }
      async overwrite(e) {
        var r;
        if (await this._canUseIndexedDBPromise) {
          const n = await this.read();
          return xT(this.app, {
            lastSentHeartbeatDate:
              (r = e.lastSentHeartbeatDate) !== null && r !== void 0
                ? r
                : n.lastSentHeartbeatDate,
            heartbeats: e.heartbeats,
          });
        } else return;
      }
      async add(e) {
        var r;
        if (await this._canUseIndexedDBPromise) {
          const n = await this.read();
          return xT(this.app, {
            lastSentHeartbeatDate:
              (r = e.lastSentHeartbeatDate) !== null && r !== void 0
                ? r
                : n.lastSentHeartbeatDate,
            heartbeats: [...n.heartbeats, ...e.heartbeats],
          });
        } else return;
      }
    }
    function _T(t) {
      return Rg(JSON.stringify({ version: 2, heartbeats: t })).length;
    }
    function SZ(t) {
      Co(new Ca("platform-logger", (e) => new U$(e), "PRIVATE")),
        Co(new Ca("heartbeat", (e) => new _Z(e), "PRIVATE")),
        Os(px, vT, t),
        Os(px, vT, "esm2017"),
        Os("fire-js", "");
    }
    SZ("");
    const AT = "@firebase/database",
      CT = "1.0.1";
    let ST = "";
    function EZ(t) {
      ST = t;
    }
    class IZ {
      constructor(e) {
        (this.domStorage_ = e), (this.prefix_ = "firebase:");
      }
      set(e, r) {
        r == null
          ? this.domStorage_.removeItem(this.prefixedName_(e))
          : this.domStorage_.setItem(this.prefixedName_(e), fn(r));
      }
      get(e) {
        const r = this.domStorage_.getItem(this.prefixedName_(e));
        return r == null ? null : Vh(r);
      }
      remove(e) {
        this.domStorage_.removeItem(this.prefixedName_(e));
      }
      prefixedName_(e) {
        return this.prefix_ + e;
      }
      toString() {
        return this.domStorage_.toString();
      }
    }
    class TZ {
      constructor() {
        (this.cache_ = {}), (this.isInMemoryStorage = !0);
      }
      set(e, r) {
        r == null ? delete this.cache_[e] : (this.cache_[e] = r);
      }
      get(e) {
        return Ss(this.cache_, e) ? this.cache_[e] : null;
      }
      remove(e) {
        delete this.cache_[e];
      }
    }
    const ET = function (t) {
        try {
          if (typeof window < "u" && typeof window[t] < "u") {
            const e = window[t];
            return (
              e.setItem("firebase:sentinel", "cache"),
              e.removeItem("firebase:sentinel"),
              new IZ(e)
            );
          }
        } catch {}
        return new TZ();
      },
      xl = ET("localStorage"),
      yx = ET("sessionStorage"),
      Zc = new Sd("@firebase/database"),
      PZ = (function () {
        let t = 1;
        return function () {
          return t++;
        };
      })(),
      IT = function (t) {
        const e = v$(t),
          r = new f$();
        r.update(e);
        const n = r.digest();
        return nx.encodeByteArray(n);
      },
      $h = function (...t) {
        let e = "";
        for (let r = 0; r < t.length; r++) {
          const n = t[r];
          Array.isArray(n) ||
          (n && typeof n == "object" && typeof n.length == "number")
            ? (e += $h.apply(null, n))
            : typeof n == "object"
            ? (e += fn(n))
            : (e += n),
            (e += " ");
        }
        return e;
      };
    let wl = null,
      TT = !0;
    const OZ = function (t, e) {
        Ke(
          !e || t === !0 || t === !1,
          "Can't turn on custom loggers persistently."
        ),
          t === !0
            ? ((Zc.logLevel = or.VERBOSE),
              (wl = Zc.log.bind(Zc)),
              e && yx.set("logging_enabled", !0))
            : typeof t == "function"
            ? (wl = t)
            : ((wl = null), yx.remove("logging_enabled"));
      },
      kn = function (...t) {
        if (
          (TT === !0 &&
            ((TT = !1),
            wl === null && yx.get("logging_enabled") === !0 && OZ(!0)),
          wl)
        ) {
          const e = $h.apply(null, t);
          wl(e);
        }
      },
      Zh = function (t) {
        return function (...e) {
          kn(t, ...e);
        };
      },
      bx = function (...t) {
        const e = "FIREBASE INTERNAL ERROR: " + $h(...t);
        Zc.error(e);
      },
      da = function (...t) {
        const e = `FIREBASE FATAL ERROR: ${$h(...t)}`;
        throw (Zc.error(e), new Error(e));
      },
      Jn = function (...t) {
        const e = "FIREBASE WARNING: " + $h(...t);
        Zc.warn(e);
      },
      LZ = function () {
        typeof window < "u" &&
          window.location &&
          window.location.protocol &&
          window.location.protocol.indexOf("https:") !== -1 &&
          Jn(
            "Insecure Firebase access from a secure page. Please use https in calls to new Firebase()."
          );
      },
      xx = function (t) {
        return (
          typeof t == "number" &&
          (t !== t ||
            t === Number.POSITIVE_INFINITY ||
            t === Number.NEGATIVE_INFINITY)
        );
      },
      MZ = function (t) {
        if (document.readyState === "complete") t();
        else {
          let e = !1;
          const r = function () {
            if (!document.body) {
              setTimeout(r, Math.floor(10));
              return;
            }
            e || ((e = !0), t());
          };
          document.addEventListener
            ? (document.addEventListener("DOMContentLoaded", r, !1),
              window.addEventListener("load", r, !1))
            : document.attachEvent &&
              (document.attachEvent("onreadystatechange", () => {
                document.readyState === "complete" && r();
              }),
              window.attachEvent("onload", r));
        }
      },
      kl = "[MIN_NAME]",
      po = "[MAX_NAME]",
      _l = function (t, e) {
        if (t === e) return 0;
        if (t === kl || e === po) return -1;
        if (e === kl || t === po) return 1;
        {
          const r = LT(t),
            n = LT(e);
          return r !== null
            ? n !== null
              ? r - n === 0
                ? t.length - e.length
                : r - n
              : -1
            : n !== null
            ? 1
            : t < e
            ? -1
            : 1;
        }
      },
      RZ = function (t, e) {
        return t === e ? 0 : t < e ? -1 : 1;
      },
      Qh = function (t, e) {
        if (e && t in e) return e[t];
        throw new Error("Missing required key (" + t + ") in object: " + fn(e));
      },
      wx = function (t) {
        if (typeof t != "object" || t === null) return fn(t);
        const e = [];
        for (const n in t) e.push(n);
        e.sort();
        let r = "{";
        for (let n = 0; n < e.length; n++)
          n !== 0 && (r += ","),
            (r += fn(e[n])),
            (r += ":"),
            (r += wx(t[e[n]]));
        return (r += "}"), r;
      },
      PT = function (t, e) {
        const r = t.length;
        if (r <= e) return [t];
        const n = [];
        for (let i = 0; i < r; i += e)
          i + e > r ? n.push(t.substring(i, r)) : n.push(t.substring(i, i + e));
        return n;
      };
    function _n(t, e) {
      for (const r in t) t.hasOwnProperty(r) && e(r, t[r]);
    }
    const OT = function (t) {
        Ke(!xx(t), "Invalid JSON number");
        const e = 11,
          r = 52,
          n = (1 << (e - 1)) - 1;
        let i, a, l, u, p;
        t === 0
          ? ((a = 0), (l = 0), (i = 1 / t === -1 / 0 ? 1 : 0))
          : ((i = t < 0),
            (t = Math.abs(t)),
            t >= Math.pow(2, 1 - n)
              ? ((u = Math.min(Math.floor(Math.log(t) / Math.LN2), n)),
                (a = u + n),
                (l = Math.round(t * Math.pow(2, r - u) - Math.pow(2, r))))
              : ((a = 0), (l = Math.round(t / Math.pow(2, 1 - n - r)))));
        const m = [];
        for (p = r; p; p -= 1) m.push(l % 2 ? 1 : 0), (l = Math.floor(l / 2));
        for (p = e; p; p -= 1) m.push(a % 2 ? 1 : 0), (a = Math.floor(a / 2));
        m.push(i ? 1 : 0), m.reverse();
        const v = m.join("");
        let w = "";
        for (p = 0; p < 64; p += 8) {
          let S = parseInt(v.substr(p, 8), 2).toString(16);
          S.length === 1 && (S = "0" + S), (w = w + S);
        }
        return w.toLowerCase();
      },
      NZ = function () {
        return !!(
          typeof window == "object" &&
          window.chrome &&
          window.chrome.extension &&
          !/^chrome/.test(window.location.href)
        );
      },
      BZ = function () {
        return typeof Windows == "object" && typeof Windows.UI == "object";
      };
    function FZ(t, e) {
      let r = "Unknown Error";
      t === "too_big"
        ? (r =
            "The data requested exceeds the maximum size that can be accessed with a single request.")
        : t === "permission_denied"
        ? (r = "Client doesn't have permission to access the desired data.")
        : t === "unavailable" && (r = "The service is unavailable");
      const n = new Error(t + " at " + e._path.toString() + ": " + r);
      return (n.code = t.toUpperCase()), n;
    }
    const DZ = new RegExp("^-?(0*)\\d{1,10}$"),
      zZ = -2147483648,
      HZ = 2147483647,
      LT = function (t) {
        if (DZ.test(t)) {
          const e = Number(t);
          if (e >= zZ && e <= HZ) return e;
        }
        return null;
      },
      Qc = function (t) {
        try {
          t();
        } catch (e) {
          setTimeout(() => {
            const r = e.stack || "";
            throw (Jn("Exception was thrown by user callback.", r), e);
          }, Math.floor(0));
        }
      },
      UZ = function () {
        return (
          (
            (typeof window == "object" &&
              window.navigator &&
              window.navigator.userAgent) ||
            ""
          ).search(
            /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i
          ) >= 0
        );
      },
      Jh = function (t, e) {
        const r = setTimeout(t, e);
        return (
          typeof r == "number" && typeof Deno < "u" && Deno.unrefTimer
            ? Deno.unrefTimer(r)
            : typeof r == "object" && r.unref && r.unref(),
          r
        );
      };
    class WZ {
      constructor(e, r) {
        (this.appName_ = e),
          (this.appCheckProvider = r),
          (this.appCheck =
            r == null ? void 0 : r.getImmediate({ optional: !0 })),
          this.appCheck ||
            r == null ||
            r.get().then((n) => (this.appCheck = n));
      }
      getToken(e) {
        return this.appCheck
          ? this.appCheck.getToken(e)
          : new Promise((r, n) => {
              setTimeout(() => {
                this.appCheck ? this.getToken(e).then(r, n) : r(null);
              }, 0);
            });
      }
      addTokenChangeListener(e) {
        var r;
        (r = this.appCheckProvider) === null ||
          r === void 0 ||
          r.get().then((n) => n.addTokenListener(e));
      }
      notifyForInvalidToken() {
        Jn(
          `Provided AppCheck credentials for the app named "${this.appName_}" are invalid. This usually indicates your app was not initialized correctly.`
        );
      }
    }
    class XZ {
      constructor(e, r, n) {
        (this.appName_ = e),
          (this.firebaseOptions_ = r),
          (this.authProvider_ = n),
          (this.auth_ = null),
          (this.auth_ = n.getImmediate({ optional: !0 })),
          this.auth_ || n.onInit((i) => (this.auth_ = i));
      }
      getToken(e) {
        return this.auth_
          ? this.auth_
              .getToken(e)
              .catch((r) =>
                r && r.code === "auth/token-not-initialized"
                  ? (kn(
                      "Got auth/token-not-initialized error.  Treating as null token."
                    ),
                    null)
                  : Promise.reject(r)
              )
          : new Promise((r, n) => {
              setTimeout(() => {
                this.auth_ ? this.getToken(e).then(r, n) : r(null);
              }, 0);
            });
      }
      addTokenChangeListener(e) {
        this.auth_
          ? this.auth_.addAuthTokenListener(e)
          : this.authProvider_.get().then((r) => r.addAuthTokenListener(e));
      }
      removeTokenChangeListener(e) {
        this.authProvider_.get().then((r) => r.removeAuthTokenListener(e));
      }
      notifyForInvalidToken() {
        let e =
          'Provided authentication credentials for the app named "' +
          this.appName_ +
          '" are invalid. This usually indicates your app was not initialized correctly. ';
        "credential" in this.firebaseOptions_
          ? (e +=
              'Make sure the "credential" property provided to initializeApp() is authorized to access the specified "databaseURL" and is from the correct project.')
          : "serviceAccount" in this.firebaseOptions_
          ? (e +=
              'Make sure the "serviceAccount" property provided to initializeApp() is authorized to access the specified "databaseURL" and is from the correct project.')
          : (e +=
              'Make sure the "apiKey" and "databaseURL" properties provided to initializeApp() match the values provided for your app at https://console.firebase.google.com/.'),
          Jn(e);
      }
    }
    class Jc {
      constructor(e) {
        this.accessToken = e;
      }
      getToken(e) {
        return Promise.resolve({ accessToken: this.accessToken });
      }
      addTokenChangeListener(e) {
        e(this.accessToken);
      }
      removeTokenChangeListener(e) {}
      notifyForInvalidToken() {}
    }
    Jc.OWNER = "owner";
    const kx = "5",
      MT = "v",
      RT = "s",
      NT = "r",
      BT = "f",
      FT =
        /(console\.firebase|firebase-console-\w+\.corp|firebase\.corp)\.google\.com/,
      DT = "ls",
      zT = "p",
      _x = "ac",
      HT = "websocket",
      UT = "long_polling";
    class WT {
      constructor(e, r, n, i, a = !1, l = "", u = !1, p = !1) {
        (this.secure = r),
          (this.namespace = n),
          (this.webSocketOnly = i),
          (this.nodeAdmin = a),
          (this.persistenceKey = l),
          (this.includeNamespaceInQueryParams = u),
          (this.isUsingEmulator = p),
          (this._host = e.toLowerCase()),
          (this._domain = this._host.substr(this._host.indexOf(".") + 1)),
          (this.internalHost = xl.get("host:" + e) || this._host);
      }
      isCacheableHost() {
        return this.internalHost.substr(0, 2) === "s-";
      }
      isCustomHost() {
        return (
          this._domain !== "firebaseio.com" &&
          this._domain !== "firebaseio-demo.com"
        );
      }
      get host() {
        return this._host;
      }
      set host(e) {
        e !== this.internalHost &&
          ((this.internalHost = e),
          this.isCacheableHost() &&
            xl.set("host:" + this._host, this.internalHost));
      }
      toString() {
        let e = this.toURLString();
        return this.persistenceKey && (e += "<" + this.persistenceKey + ">"), e;
      }
      toURLString() {
        const e = this.secure ? "https://" : "http://",
          r = this.includeNamespaceInQueryParams ? `?ns=${this.namespace}` : "";
        return `${e}${this.host}/${r}`;
      }
    }
    function jZ(t) {
      return (
        t.host !== t.internalHost ||
        t.isCustomHost() ||
        t.includeNamespaceInQueryParams
      );
    }
    function XT(t, e, r) {
      Ke(typeof e == "string", "typeof type must == string"),
        Ke(typeof r == "object", "typeof params must == object");
      let n;
      if (e === HT)
        n = (t.secure ? "wss://" : "ws://") + t.internalHost + "/.ws?";
      else if (e === UT)
        n = (t.secure ? "https://" : "http://") + t.internalHost + "/.lp?";
      else throw new Error("Unknown connection type: " + e);
      jZ(t) && (r.ns = t.namespace);
      const i = [];
      return (
        _n(r, (a, l) => {
          i.push(a + "=" + l);
        }),
        n + i.join("&")
      );
    }
    class GZ {
      constructor() {
        this.counters_ = {};
      }
      incrementCounter(e, r = 1) {
        Ss(this.counters_, e) || (this.counters_[e] = 0),
          (this.counters_[e] += r);
      }
      get() {
        return JK(this.counters_);
      }
    }
    const Ax = {},
      Cx = {};
    function Sx(t) {
      const e = t.toString();
      return Ax[e] || (Ax[e] = new GZ()), Ax[e];
    }
    function YZ(t, e) {
      const r = t.toString();
      return Cx[r] || (Cx[r] = e()), Cx[r];
    }
    class VZ {
      constructor(e) {
        (this.onMessage_ = e),
          (this.pendingResponses = []),
          (this.currentResponseNum = 0),
          (this.closeAfterResponse = -1),
          (this.onClose = null);
      }
      closeAfter(e, r) {
        (this.closeAfterResponse = e),
          (this.onClose = r),
          this.closeAfterResponse < this.currentResponseNum &&
            (this.onClose(), (this.onClose = null));
      }
      handleResponse(e, r) {
        for (
          this.pendingResponses[e] = r;
          this.pendingResponses[this.currentResponseNum];

        ) {
          const n = this.pendingResponses[this.currentResponseNum];
          delete this.pendingResponses[this.currentResponseNum];
          for (let i = 0; i < n.length; ++i)
            n[i] &&
              Qc(() => {
                this.onMessage_(n[i]);
              });
          if (this.currentResponseNum === this.closeAfterResponse) {
            this.onClose && (this.onClose(), (this.onClose = null));
            break;
          }
          this.currentResponseNum++;
        }
      }
    }
    const jT = "start",
      qZ = "close",
      KZ = "pLPCommand",
      $Z = "pRTLPCB",
      GT = "id",
      YT = "pw",
      VT = "ser",
      ZZ = "cb",
      QZ = "seg",
      JZ = "ts",
      eQ = "d",
      tQ = "dframe",
      qT = 1870,
      KT = 30,
      rQ = qT - KT,
      nQ = 25e3,
      iQ = 3e4;
    class eu {
      constructor(e, r, n, i, a, l, u) {
        (this.connId = e),
          (this.repoInfo = r),
          (this.applicationId = n),
          (this.appCheckToken = i),
          (this.authToken = a),
          (this.transportSessionId = l),
          (this.lastSessionId = u),
          (this.bytesSent = 0),
          (this.bytesReceived = 0),
          (this.everConnected_ = !1),
          (this.log_ = Zh(e)),
          (this.stats_ = Sx(r)),
          (this.urlFn = (p) => (
            this.appCheckToken && (p[_x] = this.appCheckToken), XT(r, UT, p)
          ));
      }
      open(e, r) {
        (this.curSegmentNum = 0),
          (this.onDisconnect_ = r),
          (this.myPacketOrderer = new VZ(e)),
          (this.isClosed_ = !1),
          (this.connectTimeoutTimer_ = setTimeout(() => {
            this.log_("Timed out trying to connect."),
              this.onClosed_(),
              (this.connectTimeoutTimer_ = null);
          }, Math.floor(iQ))),
          MZ(() => {
            if (this.isClosed_) return;
            this.scriptTagHolder = new Ex(
              (...a) => {
                const [l, u, p, m, v] = a;
                if ((this.incrementIncomingBytes_(a), !!this.scriptTagHolder))
                  if (
                    (this.connectTimeoutTimer_ &&
                      (clearTimeout(this.connectTimeoutTimer_),
                      (this.connectTimeoutTimer_ = null)),
                    (this.everConnected_ = !0),
                    l === jT)
                  )
                    (this.id = u), (this.password = p);
                  else if (l === qZ)
                    u
                      ? ((this.scriptTagHolder.sendNewPolls = !1),
                        this.myPacketOrderer.closeAfter(u, () => {
                          this.onClosed_();
                        }))
                      : this.onClosed_();
                  else throw new Error("Unrecognized command received: " + l);
              },
              (...a) => {
                const [l, u] = a;
                this.incrementIncomingBytes_(a),
                  this.myPacketOrderer.handleResponse(l, u);
              },
              () => {
                this.onClosed_();
              },
              this.urlFn
            );
            const n = {};
            (n[jT] = "t"),
              (n[VT] = Math.floor(Math.random() * 1e8)),
              this.scriptTagHolder.uniqueCallbackIdentifier &&
                (n[ZZ] = this.scriptTagHolder.uniqueCallbackIdentifier),
              (n[MT] = kx),
              this.transportSessionId && (n[RT] = this.transportSessionId),
              this.lastSessionId && (n[DT] = this.lastSessionId),
              this.applicationId && (n[zT] = this.applicationId),
              this.appCheckToken && (n[_x] = this.appCheckToken),
              typeof location < "u" &&
                location.hostname &&
                FT.test(location.hostname) &&
                (n[NT] = BT);
            const i = this.urlFn(n);
            this.log_("Connecting via long-poll to " + i),
              this.scriptTagHolder.addTag(i, () => {});
          });
      }
      start() {
        this.scriptTagHolder.startLongPoll(this.id, this.password),
          this.addDisconnectPingFrame(this.id, this.password);
      }
      static forceAllow() {
        eu.forceAllow_ = !0;
      }
      static forceDisallow() {
        eu.forceDisallow_ = !0;
      }
      static isAvailable() {
        return eu.forceAllow_
          ? !0
          : !eu.forceDisallow_ &&
              typeof document < "u" &&
              document.createElement != null &&
              !NZ() &&
              !BZ();
      }
      markConnectionHealthy() {}
      shutdown_() {
        (this.isClosed_ = !0),
          this.scriptTagHolder &&
            (this.scriptTagHolder.close(), (this.scriptTagHolder = null)),
          this.myDisconnFrame &&
            (document.body.removeChild(this.myDisconnFrame),
            (this.myDisconnFrame = null)),
          this.connectTimeoutTimer_ &&
            (clearTimeout(this.connectTimeoutTimer_),
            (this.connectTimeoutTimer_ = null));
      }
      onClosed_() {
        this.isClosed_ ||
          (this.log_("Longpoll is closing itself"),
          this.shutdown_(),
          this.onDisconnect_ &&
            (this.onDisconnect_(this.everConnected_),
            (this.onDisconnect_ = null)));
      }
      close() {
        this.isClosed_ ||
          (this.log_("Longpoll is being closed."), this.shutdown_());
      }
      send(e) {
        const r = fn(e);
        (this.bytesSent += r.length),
          this.stats_.incrementCounter("bytes_sent", r.length);
        const n = nT(r),
          i = PT(n, rQ);
        for (let a = 0; a < i.length; a++)
          this.scriptTagHolder.enqueueSegment(
            this.curSegmentNum,
            i.length,
            i[a]
          ),
            this.curSegmentNum++;
      }
      addDisconnectPingFrame(e, r) {
        this.myDisconnFrame = document.createElement("iframe");
        const n = {};
        (n[tQ] = "t"),
          (n[GT] = e),
          (n[YT] = r),
          (this.myDisconnFrame.src = this.urlFn(n)),
          (this.myDisconnFrame.style.display = "none"),
          document.body.appendChild(this.myDisconnFrame);
      }
      incrementIncomingBytes_(e) {
        const r = fn(e).length;
        (this.bytesReceived += r),
          this.stats_.incrementCounter("bytes_received", r);
      }
    }
    class Ex {
      constructor(e, r, n, i) {
        (this.onDisconnect = n),
          (this.urlFn = i),
          (this.outstandingRequests = new Set()),
          (this.pendingSegs = []),
          (this.currentSerial = Math.floor(Math.random() * 1e8)),
          (this.sendNewPolls = !0);
        {
          (this.uniqueCallbackIdentifier = PZ()),
            (window[KZ + this.uniqueCallbackIdentifier] = e),
            (window[$Z + this.uniqueCallbackIdentifier] = r),
            (this.myIFrame = Ex.createIFrame_());
          let a = "";
          this.myIFrame.src &&
            this.myIFrame.src.substr(0, 11) === "javascript:" &&
            (a = '<script>document.domain="' + document.domain + '";</script>');
          const l = "<html><body>" + a + "</body></html>";
          try {
            this.myIFrame.doc.open(),
              this.myIFrame.doc.write(l),
              this.myIFrame.doc.close();
          } catch (u) {
            kn("frame writing exception"), u.stack && kn(u.stack), kn(u);
          }
        }
      }
      static createIFrame_() {
        const e = document.createElement("iframe");
        if (((e.style.display = "none"), document.body)) {
          document.body.appendChild(e);
          try {
            e.contentWindow.document || kn("No IE domain setting required");
          } catch {
            const r = document.domain;
            e.src =
              "javascript:void((function(){document.open();document.domain='" +
              r +
              "';document.close();})())";
          }
        } else
          throw "Document body has not initialized. Wait to initialize Firebase until after the document is ready.";
        return (
          e.contentDocument
            ? (e.doc = e.contentDocument)
            : e.contentWindow
            ? (e.doc = e.contentWindow.document)
            : e.document && (e.doc = e.document),
          e
        );
      }
      close() {
        (this.alive = !1),
          this.myIFrame &&
            ((this.myIFrame.doc.body.textContent = ""),
            setTimeout(() => {
              this.myIFrame !== null &&
                (document.body.removeChild(this.myIFrame),
                (this.myIFrame = null));
            }, Math.floor(0)));
        const e = this.onDisconnect;
        e && ((this.onDisconnect = null), e());
      }
      startLongPoll(e, r) {
        for (
          this.myID = e, this.myPW = r, this.alive = !0;
          this.newRequest_();

        );
      }
      newRequest_() {
        if (
          this.alive &&
          this.sendNewPolls &&
          this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)
        ) {
          this.currentSerial++;
          const e = {};
          (e[GT] = this.myID),
            (e[YT] = this.myPW),
            (e[VT] = this.currentSerial);
          let r = this.urlFn(e),
            n = "",
            i = 0;
          for (
            ;
            this.pendingSegs.length > 0 &&
            this.pendingSegs[0].d.length + KT + n.length <= qT;

          ) {
            const a = this.pendingSegs.shift();
            (n =
              n +
              "&" +
              QZ +
              i +
              "=" +
              a.seg +
              "&" +
              JZ +
              i +
              "=" +
              a.ts +
              "&" +
              eQ +
              i +
              "=" +
              a.d),
              i++;
          }
          return (r = r + n), this.addLongPollTag_(r, this.currentSerial), !0;
        } else return !1;
      }
      enqueueSegment(e, r, n) {
        this.pendingSegs.push({ seg: e, ts: r, d: n }),
          this.alive && this.newRequest_();
      }
      addLongPollTag_(e, r) {
        this.outstandingRequests.add(r);
        const n = () => {
            this.outstandingRequests.delete(r), this.newRequest_();
          },
          i = setTimeout(n, Math.floor(nQ)),
          a = () => {
            clearTimeout(i), n();
          };
        this.addTag(e, a);
      }
      addTag(e, r) {
        setTimeout(() => {
          try {
            if (!this.sendNewPolls) return;
            const n = this.myIFrame.doc.createElement("script");
            (n.type = "text/javascript"),
              (n.async = !0),
              (n.src = e),
              (n.onload = n.onreadystatechange =
                function () {
                  const i = n.readyState;
                  (!i || i === "loaded" || i === "complete") &&
                    ((n.onload = n.onreadystatechange = null),
                    n.parentNode && n.parentNode.removeChild(n),
                    r());
                }),
              (n.onerror = () => {
                kn("Long-poll script failed to load: " + e),
                  (this.sendNewPolls = !1),
                  this.close();
              }),
              this.myIFrame.doc.body.appendChild(n);
          } catch {}
        }, Math.floor(1));
      }
    }
    const sQ = 16384,
      aQ = 45e3;
    let Hg = null;
    typeof MozWebSocket < "u"
      ? (Hg = MozWebSocket)
      : typeof WebSocket < "u" && (Hg = WebSocket);
    class Qi {
      constructor(e, r, n, i, a, l, u) {
        (this.connId = e),
          (this.applicationId = n),
          (this.appCheckToken = i),
          (this.authToken = a),
          (this.keepaliveTimer = null),
          (this.frames = null),
          (this.totalFrames = 0),
          (this.bytesSent = 0),
          (this.bytesReceived = 0),
          (this.log_ = Zh(this.connId)),
          (this.stats_ = Sx(r)),
          (this.connURL = Qi.connectionURL_(r, l, u, i, n)),
          (this.nodeAdmin = r.nodeAdmin);
      }
      static connectionURL_(e, r, n, i, a) {
        const l = {};
        return (
          (l[MT] = kx),
          typeof location < "u" &&
            location.hostname &&
            FT.test(location.hostname) &&
            (l[NT] = BT),
          r && (l[RT] = r),
          n && (l[DT] = n),
          i && (l[_x] = i),
          a && (l[zT] = a),
          XT(e, HT, l)
        );
      }
      open(e, r) {
        (this.onDisconnect = r),
          (this.onMessage = e),
          this.log_("Websocket connecting to " + this.connURL),
          (this.everConnected_ = !1),
          xl.set("previous_websocket_failure", !0);
        try {
          let n;
          cT(), (this.mySock = new Hg(this.connURL, [], n));
        } catch (n) {
          this.log_("Error instantiating WebSocket.");
          const i = n.message || n.data;
          i && this.log_(i), this.onClosed_();
          return;
        }
        (this.mySock.onopen = () => {
          this.log_("Websocket connected."), (this.everConnected_ = !0);
        }),
          (this.mySock.onclose = () => {
            this.log_("Websocket connection was disconnected."),
              (this.mySock = null),
              this.onClosed_();
          }),
          (this.mySock.onmessage = (n) => {
            this.handleIncomingFrame(n);
          }),
          (this.mySock.onerror = (n) => {
            this.log_("WebSocket error.  Closing connection.");
            const i = n.message || n.data;
            i && this.log_(i), this.onClosed_();
          });
      }
      start() {}
      static forceDisallow() {
        Qi.forceDisallow_ = !0;
      }
      static isAvailable() {
        let e = !1;
        if (typeof navigator < "u" && navigator.userAgent) {
          const r = /Android ([0-9]{0,}\.[0-9]{0,})/,
            n = navigator.userAgent.match(r);
          n && n.length > 1 && parseFloat(n[1]) < 4.4 && (e = !0);
        }
        return !e && Hg !== null && !Qi.forceDisallow_;
      }
      static previouslyFailed() {
        return (
          xl.isInMemoryStorage || xl.get("previous_websocket_failure") === !0
        );
      }
      markConnectionHealthy() {
        xl.remove("previous_websocket_failure");
      }
      appendFrame_(e) {
        if ((this.frames.push(e), this.frames.length === this.totalFrames)) {
          const r = this.frames.join("");
          this.frames = null;
          const n = Vh(r);
          this.onMessage(n);
        }
      }
      handleNewFrameCount_(e) {
        (this.totalFrames = e), (this.frames = []);
      }
      extractFrameCount_(e) {
        if (
          (Ke(this.frames === null, "We already have a frame buffer"),
          e.length <= 6)
        ) {
          const r = Number(e);
          if (!isNaN(r)) return this.handleNewFrameCount_(r), null;
        }
        return this.handleNewFrameCount_(1), e;
      }
      handleIncomingFrame(e) {
        if (this.mySock === null) return;
        const r = e.data;
        if (
          ((this.bytesReceived += r.length),
          this.stats_.incrementCounter("bytes_received", r.length),
          this.resetKeepAlive(),
          this.frames !== null)
        )
          this.appendFrame_(r);
        else {
          const n = this.extractFrameCount_(r);
          n !== null && this.appendFrame_(n);
        }
      }
      send(e) {
        this.resetKeepAlive();
        const r = fn(e);
        (this.bytesSent += r.length),
          this.stats_.incrementCounter("bytes_sent", r.length);
        const n = PT(r, sQ);
        n.length > 1 && this.sendString_(String(n.length));
        for (let i = 0; i < n.length; i++) this.sendString_(n[i]);
      }
      shutdown_() {
        (this.isClosed_ = !0),
          this.keepaliveTimer &&
            (clearInterval(this.keepaliveTimer), (this.keepaliveTimer = null)),
          this.mySock && (this.mySock.close(), (this.mySock = null));
      }
      onClosed_() {
        this.isClosed_ ||
          (this.log_("WebSocket is closing itself"),
          this.shutdown_(),
          this.onDisconnect &&
            (this.onDisconnect(this.everConnected_),
            (this.onDisconnect = null)));
      }
      close() {
        this.isClosed_ ||
          (this.log_("WebSocket is being closed"), this.shutdown_());
      }
      resetKeepAlive() {
        clearInterval(this.keepaliveTimer),
          (this.keepaliveTimer = setInterval(() => {
            this.mySock && this.sendString_("0"), this.resetKeepAlive();
          }, Math.floor(aQ)));
      }
      sendString_(e) {
        try {
          this.mySock.send(e);
        } catch (r) {
          this.log_(
            "Exception thrown from WebSocket.send():",
            r.message || r.data,
            "Closing connection."
          ),
            setTimeout(this.onClosed_.bind(this), 0);
        }
      }
    }
    (Qi.responsesRequiredToBeHealthy = 2), (Qi.healthyTimeout = 3e4);
    class ed {
      constructor(e) {
        this.initTransports_(e);
      }
      static get ALL_TRANSPORTS() {
        return [eu, Qi];
      }
      static get IS_TRANSPORT_INITIALIZED() {
        return this.globalTransportInitialized_;
      }
      initTransports_(e) {
        const r = Qi && Qi.isAvailable();
        let n = r && !Qi.previouslyFailed();
        if (
          (e.webSocketOnly &&
            (r ||
              Jn(
                "wss:// URL used, but browser isn't known to support websockets.  Trying anyway."
              ),
            (n = !0)),
          n)
        )
          this.transports_ = [Qi];
        else {
          const i = (this.transports_ = []);
          for (const a of ed.ALL_TRANSPORTS) a && a.isAvailable() && i.push(a);
          ed.globalTransportInitialized_ = !0;
        }
      }
      initialTransport() {
        if (this.transports_.length > 0) return this.transports_[0];
        throw new Error("No transports available");
      }
      upgradeTransport() {
        return this.transports_.length > 1 ? this.transports_[1] : null;
      }
    }
    ed.globalTransportInitialized_ = !1;
    const oQ = 6e4,
      lQ = 5e3,
      cQ = 10 * 1024,
      uQ = 100 * 1024,
      Ix = "t",
      $T = "d",
      hQ = "s",
      ZT = "r",
      dQ = "e",
      QT = "o",
      JT = "a",
      eP = "n",
      tP = "p",
      fQ = "h";
    class pQ {
      constructor(e, r, n, i, a, l, u, p, m, v) {
        (this.id = e),
          (this.repoInfo_ = r),
          (this.applicationId_ = n),
          (this.appCheckToken_ = i),
          (this.authToken_ = a),
          (this.onMessage_ = l),
          (this.onReady_ = u),
          (this.onDisconnect_ = p),
          (this.onKill_ = m),
          (this.lastSessionId = v),
          (this.connectionCount = 0),
          (this.pendingDataMessages = []),
          (this.state_ = 0),
          (this.log_ = Zh("c:" + this.id + ":")),
          (this.transportManager_ = new ed(r)),
          this.log_("Connection created"),
          this.start_();
      }
      start_() {
        const e = this.transportManager_.initialTransport();
        (this.conn_ = new e(
          this.nextTransportId_(),
          this.repoInfo_,
          this.applicationId_,
          this.appCheckToken_,
          this.authToken_,
          null,
          this.lastSessionId
        )),
          (this.primaryResponsesRequired_ =
            e.responsesRequiredToBeHealthy || 0);
        const r = this.connReceiver_(this.conn_),
          n = this.disconnReceiver_(this.conn_);
        (this.tx_ = this.conn_),
          (this.rx_ = this.conn_),
          (this.secondaryConn_ = null),
          (this.isHealthy_ = !1),
          setTimeout(() => {
            this.conn_ && this.conn_.open(r, n);
          }, Math.floor(0));
        const i = e.healthyTimeout || 0;
        i > 0 &&
          (this.healthyTimeout_ = Jh(() => {
            (this.healthyTimeout_ = null),
              this.isHealthy_ ||
                (this.conn_ && this.conn_.bytesReceived > uQ
                  ? (this.log_(
                      "Connection exceeded healthy timeout but has received " +
                        this.conn_.bytesReceived +
                        " bytes.  Marking connection healthy."
                    ),
                    (this.isHealthy_ = !0),
                    this.conn_.markConnectionHealthy())
                  : this.conn_ && this.conn_.bytesSent > cQ
                  ? this.log_(
                      "Connection exceeded healthy timeout but has sent " +
                        this.conn_.bytesSent +
                        " bytes.  Leaving connection alive."
                    )
                  : (this.log_("Closing unhealthy connection after timeout."),
                    this.close()));
          }, Math.floor(i)));
      }
      nextTransportId_() {
        return "c:" + this.id + ":" + this.connectionCount++;
      }
      disconnReceiver_(e) {
        return (r) => {
          e === this.conn_
            ? this.onConnectionLost_(r)
            : e === this.secondaryConn_
            ? (this.log_("Secondary connection lost."),
              this.onSecondaryConnectionLost_())
            : this.log_("closing an old connection");
        };
      }
      connReceiver_(e) {
        return (r) => {
          this.state_ !== 2 &&
            (e === this.rx_
              ? this.onPrimaryMessageReceived_(r)
              : e === this.secondaryConn_
              ? this.onSecondaryMessageReceived_(r)
              : this.log_("message on old connection"));
        };
      }
      sendRequest(e) {
        const r = { t: "d", d: e };
        this.sendData_(r);
      }
      tryCleanupConnection() {
        this.tx_ === this.secondaryConn_ &&
          this.rx_ === this.secondaryConn_ &&
          (this.log_(
            "cleaning up and promoting a connection: " +
              this.secondaryConn_.connId
          ),
          (this.conn_ = this.secondaryConn_),
          (this.secondaryConn_ = null));
      }
      onSecondaryControl_(e) {
        if (Ix in e) {
          const r = e[Ix];
          r === JT
            ? this.upgradeIfSecondaryHealthy_()
            : r === ZT
            ? (this.log_("Got a reset on secondary, closing it"),
              this.secondaryConn_.close(),
              (this.tx_ === this.secondaryConn_ ||
                this.rx_ === this.secondaryConn_) &&
                this.close())
            : r === QT &&
              (this.log_("got pong on secondary."),
              this.secondaryResponsesRequired_--,
              this.upgradeIfSecondaryHealthy_());
        }
      }
      onSecondaryMessageReceived_(e) {
        const r = Qh("t", e),
          n = Qh("d", e);
        if (r === "c") this.onSecondaryControl_(n);
        else if (r === "d") this.pendingDataMessages.push(n);
        else throw new Error("Unknown protocol layer: " + r);
      }
      upgradeIfSecondaryHealthy_() {
        this.secondaryResponsesRequired_ <= 0
          ? (this.log_("Secondary connection is healthy."),
            (this.isHealthy_ = !0),
            this.secondaryConn_.markConnectionHealthy(),
            this.proceedWithUpgrade_())
          : (this.log_("sending ping on secondary."),
            this.secondaryConn_.send({ t: "c", d: { t: tP, d: {} } }));
      }
      proceedWithUpgrade_() {
        this.secondaryConn_.start(),
          this.log_("sending client ack on secondary"),
          this.secondaryConn_.send({ t: "c", d: { t: JT, d: {} } }),
          this.log_("Ending transmission on primary"),
          this.conn_.send({ t: "c", d: { t: eP, d: {} } }),
          (this.tx_ = this.secondaryConn_),
          this.tryCleanupConnection();
      }
      onPrimaryMessageReceived_(e) {
        const r = Qh("t", e),
          n = Qh("d", e);
        r === "c" ? this.onControl_(n) : r === "d" && this.onDataMessage_(n);
      }
      onDataMessage_(e) {
        this.onPrimaryResponse_(), this.onMessage_(e);
      }
      onPrimaryResponse_() {
        this.isHealthy_ ||
          (this.primaryResponsesRequired_--,
          this.primaryResponsesRequired_ <= 0 &&
            (this.log_("Primary connection is healthy."),
            (this.isHealthy_ = !0),
            this.conn_.markConnectionHealthy()));
      }
      onControl_(e) {
        const r = Qh(Ix, e);
        if ($T in e) {
          const n = e[$T];
          if (r === fQ) {
            const i = Object.assign({}, n);
            this.repoInfo_.isUsingEmulator && (i.h = this.repoInfo_.host),
              this.onHandshake_(i);
          } else if (r === eP) {
            this.log_("recvd end transmission on primary"),
              (this.rx_ = this.secondaryConn_);
            for (let i = 0; i < this.pendingDataMessages.length; ++i)
              this.onDataMessage_(this.pendingDataMessages[i]);
            (this.pendingDataMessages = []), this.tryCleanupConnection();
          } else
            r === hQ
              ? this.onConnectionShutdown_(n)
              : r === ZT
              ? this.onReset_(n)
              : r === dQ
              ? bx("Server Error: " + n)
              : r === QT
              ? (this.log_("got pong on primary."),
                this.onPrimaryResponse_(),
                this.sendPingOnPrimaryIfNecessary_())
              : bx("Unknown control packet command: " + r);
        }
      }
      onHandshake_(e) {
        const r = e.ts,
          n = e.v,
          i = e.h;
        (this.sessionId = e.s),
          (this.repoInfo_.host = i),
          this.state_ === 0 &&
            (this.conn_.start(),
            this.onConnectionEstablished_(this.conn_, r),
            kx !== n && Jn("Protocol version mismatch detected"),
            this.tryStartUpgrade_());
      }
      tryStartUpgrade_() {
        const e = this.transportManager_.upgradeTransport();
        e && this.startUpgrade_(e);
      }
      startUpgrade_(e) {
        (this.secondaryConn_ = new e(
          this.nextTransportId_(),
          this.repoInfo_,
          this.applicationId_,
          this.appCheckToken_,
          this.authToken_,
          this.sessionId
        )),
          (this.secondaryResponsesRequired_ =
            e.responsesRequiredToBeHealthy || 0);
        const r = this.connReceiver_(this.secondaryConn_),
          n = this.disconnReceiver_(this.secondaryConn_);
        this.secondaryConn_.open(r, n),
          Jh(() => {
            this.secondaryConn_ &&
              (this.log_("Timed out trying to upgrade."),
              this.secondaryConn_.close());
          }, Math.floor(oQ));
      }
      onReset_(e) {
        this.log_("Reset packet received.  New host: " + e),
          (this.repoInfo_.host = e),
          this.state_ === 1
            ? this.close()
            : (this.closeConnections_(), this.start_());
      }
      onConnectionEstablished_(e, r) {
        this.log_("Realtime connection established."),
          (this.conn_ = e),
          (this.state_ = 1),
          this.onReady_ &&
            (this.onReady_(r, this.sessionId), (this.onReady_ = null)),
          this.primaryResponsesRequired_ === 0
            ? (this.log_("Primary connection is healthy."),
              (this.isHealthy_ = !0))
            : Jh(() => {
                this.sendPingOnPrimaryIfNecessary_();
              }, Math.floor(lQ));
      }
      sendPingOnPrimaryIfNecessary_() {
        !this.isHealthy_ &&
          this.state_ === 1 &&
          (this.log_("sending ping on primary."),
          this.sendData_({ t: "c", d: { t: tP, d: {} } }));
      }
      onSecondaryConnectionLost_() {
        const e = this.secondaryConn_;
        (this.secondaryConn_ = null),
          (this.tx_ === e || this.rx_ === e) && this.close();
      }
      onConnectionLost_(e) {
        (this.conn_ = null),
          !e && this.state_ === 0
            ? (this.log_("Realtime connection failed."),
              this.repoInfo_.isCacheableHost() &&
                (xl.remove("host:" + this.repoInfo_.host),
                (this.repoInfo_.internalHost = this.repoInfo_.host)))
            : this.state_ === 1 && this.log_("Realtime connection lost."),
          this.close();
      }
      onConnectionShutdown_(e) {
        this.log_("Connection shutdown command received. Shutting down..."),
          this.onKill_ && (this.onKill_(e), (this.onKill_ = null)),
          (this.onDisconnect_ = null),
          this.close();
      }
      sendData_(e) {
        if (this.state_ !== 1) throw "Connection is not connected";
        this.tx_.send(e);
      }
      close() {
        this.state_ !== 2 &&
          (this.log_("Closing realtime connection."),
          (this.state_ = 2),
          this.closeConnections_(),
          this.onDisconnect_ &&
            (this.onDisconnect_(), (this.onDisconnect_ = null)));
      }
      closeConnections_() {
        this.log_("Shutting down all connections"),
          this.conn_ && (this.conn_.close(), (this.conn_ = null)),
          this.secondaryConn_ &&
            (this.secondaryConn_.close(), (this.secondaryConn_ = null)),
          this.healthyTimeout_ &&
            (clearTimeout(this.healthyTimeout_), (this.healthyTimeout_ = null));
      }
    }
    class rP {
      put(e, r, n, i) {}
      merge(e, r, n, i) {}
      refreshAuthToken(e) {}
      refreshAppCheckToken(e) {}
      onDisconnectPut(e, r, n) {}
      onDisconnectMerge(e, r, n) {}
      onDisconnectCancel(e, r) {}
      reportStats(e) {}
    }
    class nP {
      constructor(e) {
        (this.allowedEvents_ = e),
          (this.listeners_ = {}),
          Ke(Array.isArray(e) && e.length > 0, "Requires a non-empty array");
      }
      trigger(e, ...r) {
        if (Array.isArray(this.listeners_[e])) {
          const n = [...this.listeners_[e]];
          for (let i = 0; i < n.length; i++)
            n[i].callback.apply(n[i].context, r);
        }
      }
      on(e, r, n) {
        this.validateEventType_(e),
          (this.listeners_[e] = this.listeners_[e] || []),
          this.listeners_[e].push({ callback: r, context: n });
        const i = this.getInitialEvent(e);
        i && r.apply(n, i);
      }
      off(e, r, n) {
        this.validateEventType_(e);
        const i = this.listeners_[e] || [];
        for (let a = 0; a < i.length; a++)
          if (i[a].callback === r && (!n || n === i[a].context)) {
            i.splice(a, 1);
            return;
          }
      }
      validateEventType_(e) {
        Ke(
          this.allowedEvents_.find((r) => r === e),
          "Unknown event: " + e
        );
      }
    }
    class Ug extends nP {
      constructor() {
        super(["online"]),
          (this.online_ = !0),
          typeof window < "u" &&
            typeof window.addEventListener < "u" &&
            !sx() &&
            (window.addEventListener(
              "online",
              () => {
                this.online_ ||
                  ((this.online_ = !0), this.trigger("online", !0));
              },
              !1
            ),
            window.addEventListener(
              "offline",
              () => {
                this.online_ &&
                  ((this.online_ = !1), this.trigger("online", !1));
              },
              !1
            ));
      }
      static getInstance() {
        return new Ug();
      }
      getInitialEvent(e) {
        return Ke(e === "online", "Unknown event type: " + e), [this.online_];
      }
      currentlyOnline() {
        return this.online_;
      }
    }
    const iP = 32,
      sP = 768;
    class nr {
      constructor(e, r) {
        if (r === void 0) {
          this.pieces_ = e.split("/");
          let n = 0;
          for (let i = 0; i < this.pieces_.length; i++)
            this.pieces_[i].length > 0 &&
              ((this.pieces_[n] = this.pieces_[i]), n++);
          (this.pieces_.length = n), (this.pieceNum_ = 0);
        } else (this.pieces_ = e), (this.pieceNum_ = r);
      }
      toString() {
        let e = "";
        for (let r = this.pieceNum_; r < this.pieces_.length; r++)
          this.pieces_[r] !== "" && (e += "/" + this.pieces_[r]);
        return e || "/";
      }
    }
    function $t() {
      return new nr("");
    }
    function Ot(t) {
      return t.pieceNum_ >= t.pieces_.length ? null : t.pieces_[t.pieceNum_];
    }
    function go(t) {
      return t.pieces_.length - t.pieceNum_;
    }
    function Ir(t) {
      let e = t.pieceNum_;
      return e < t.pieces_.length && e++, new nr(t.pieces_, e);
    }
    function Tx(t) {
      return t.pieceNum_ < t.pieces_.length
        ? t.pieces_[t.pieces_.length - 1]
        : null;
    }
    function gQ(t) {
      let e = "";
      for (let r = t.pieceNum_; r < t.pieces_.length; r++)
        t.pieces_[r] !== "" &&
          (e += "/" + encodeURIComponent(String(t.pieces_[r])));
      return e || "/";
    }
    function td(t, e = 0) {
      return t.pieces_.slice(t.pieceNum_ + e);
    }
    function aP(t) {
      if (t.pieceNum_ >= t.pieces_.length) return null;
      const e = [];
      for (let r = t.pieceNum_; r < t.pieces_.length - 1; r++)
        e.push(t.pieces_[r]);
      return new nr(e, 0);
    }
    function qr(t, e) {
      const r = [];
      for (let n = t.pieceNum_; n < t.pieces_.length; n++) r.push(t.pieces_[n]);
      if (e instanceof nr)
        for (let n = e.pieceNum_; n < e.pieces_.length; n++)
          r.push(e.pieces_[n]);
      else {
        const n = e.split("/");
        for (let i = 0; i < n.length; i++) n[i].length > 0 && r.push(n[i]);
      }
      return new nr(r, 0);
    }
    function It(t) {
      return t.pieceNum_ >= t.pieces_.length;
    }
    function ei(t, e) {
      const r = Ot(t),
        n = Ot(e);
      if (r === null) return e;
      if (r === n) return ei(Ir(t), Ir(e));
      throw new Error(
        "INTERNAL ERROR: innerPath (" +
          e +
          ") is not within outerPath (" +
          t +
          ")"
      );
    }
    function mQ(t, e) {
      const r = td(t, 0),
        n = td(e, 0);
      for (let i = 0; i < r.length && i < n.length; i++) {
        const a = _l(r[i], n[i]);
        if (a !== 0) return a;
      }
      return r.length === n.length ? 0 : r.length < n.length ? -1 : 1;
    }
    function Px(t, e) {
      if (go(t) !== go(e)) return !1;
      for (
        let r = t.pieceNum_, n = e.pieceNum_;
        r <= t.pieces_.length;
        r++, n++
      )
        if (t.pieces_[r] !== e.pieces_[n]) return !1;
      return !0;
    }
    function Ii(t, e) {
      let r = t.pieceNum_,
        n = e.pieceNum_;
      if (go(t) > go(e)) return !1;
      for (; r < t.pieces_.length; ) {
        if (t.pieces_[r] !== e.pieces_[n]) return !1;
        ++r, ++n;
      }
      return !0;
    }
    class vQ {
      constructor(e, r) {
        (this.errorPrefix_ = r),
          (this.parts_ = td(e, 0)),
          (this.byteLength_ = Math.max(1, this.parts_.length));
        for (let n = 0; n < this.parts_.length; n++)
          this.byteLength_ += Dg(this.parts_[n]);
        oP(this);
      }
    }
    function yQ(t, e) {
      t.parts_.length > 0 && (t.byteLength_ += 1),
        t.parts_.push(e),
        (t.byteLength_ += Dg(e)),
        oP(t);
    }
    function bQ(t) {
      const e = t.parts_.pop();
      (t.byteLength_ -= Dg(e)), t.parts_.length > 0 && (t.byteLength_ -= 1);
    }
    function oP(t) {
      if (t.byteLength_ > sP)
        throw new Error(
          t.errorPrefix_ +
            "has a key path longer than " +
            sP +
            " bytes (" +
            t.byteLength_ +
            ")."
        );
      if (t.parts_.length > iP)
        throw new Error(
          t.errorPrefix_ +
            "path specified exceeds the maximum depth that can be written (" +
            iP +
            ") or object contains a cycle " +
            Al(t)
        );
    }
    function Al(t) {
      return t.parts_.length === 0
        ? ""
        : "in property '" + t.parts_.join(".") + "'";
    }
    class Ox extends nP {
      constructor() {
        super(["visible"]);
        let e, r;
        typeof document < "u" &&
          typeof document.addEventListener < "u" &&
          (typeof document.hidden < "u"
            ? ((r = "visibilitychange"), (e = "hidden"))
            : typeof document.mozHidden < "u"
            ? ((r = "mozvisibilitychange"), (e = "mozHidden"))
            : typeof document.msHidden < "u"
            ? ((r = "msvisibilitychange"), (e = "msHidden"))
            : typeof document.webkitHidden < "u" &&
              ((r = "webkitvisibilitychange"), (e = "webkitHidden"))),
          (this.visible_ = !0),
          r &&
            document.addEventListener(
              r,
              () => {
                const n = !document[e];
                n !== this.visible_ &&
                  ((this.visible_ = n), this.trigger("visible", n));
              },
              !1
            );
      }
      static getInstance() {
        return new Ox();
      }
      getInitialEvent(e) {
        return Ke(e === "visible", "Unknown event type: " + e), [this.visible_];
      }
    }
    const rd = 1e3,
      xQ = 60 * 5 * 1e3,
      lP = 30 * 1e3,
      wQ = 1.3,
      kQ = 3e4,
      _Q = "server_kill",
      cP = 3;
    class fa extends rP {
      constructor(e, r, n, i, a, l, u, p) {
        if (
          (super(),
          (this.repoInfo_ = e),
          (this.applicationId_ = r),
          (this.onDataUpdate_ = n),
          (this.onConnectStatus_ = i),
          (this.onServerInfoUpdate_ = a),
          (this.authTokenProvider_ = l),
          (this.appCheckTokenProvider_ = u),
          (this.authOverride_ = p),
          (this.id = fa.nextPersistentConnectionId_++),
          (this.log_ = Zh("p:" + this.id + ":")),
          (this.interruptReasons_ = {}),
          (this.listens = new Map()),
          (this.outstandingPuts_ = []),
          (this.outstandingGets_ = []),
          (this.outstandingPutCount_ = 0),
          (this.outstandingGetCount_ = 0),
          (this.onDisconnectRequestQueue_ = []),
          (this.connected_ = !1),
          (this.reconnectDelay_ = rd),
          (this.maxReconnectDelay_ = xQ),
          (this.securityDebugCallback_ = null),
          (this.lastSessionId = null),
          (this.establishConnectionTimer_ = null),
          (this.visible_ = !1),
          (this.requestCBHash_ = {}),
          (this.requestNumber_ = 0),
          (this.realtime_ = null),
          (this.authToken_ = null),
          (this.appCheckToken_ = null),
          (this.forceTokenRefresh_ = !1),
          (this.invalidAuthTokenCount_ = 0),
          (this.invalidAppCheckTokenCount_ = 0),
          (this.firstConnection_ = !0),
          (this.lastConnectionAttemptTime_ = null),
          (this.lastConnectionEstablishedTime_ = null),
          p && !cT())
        )
          throw new Error(
            "Auth override specified in options, but not supported on non Node.js platforms"
          );
        Ox.getInstance().on("visible", this.onVisible_, this),
          e.host.indexOf("fblocal") === -1 &&
            Ug.getInstance().on("online", this.onOnline_, this);
      }
      sendRequest(e, r, n) {
        const i = ++this.requestNumber_,
          a = { r: i, a: e, b: r };
        this.log_(fn(a)),
          Ke(
            this.connected_,
            "sendRequest call when we're not connected not allowed."
          ),
          this.realtime_.sendRequest(a),
          n && (this.requestCBHash_[i] = n);
      }
      get(e) {
        this.initConnection_();
        const r = new Bg(),
          n = {
            action: "g",
            request: { p: e._path.toString(), q: e._queryObject },
            onComplete: (a) => {
              const l = a.d;
              a.s === "ok" ? r.resolve(l) : r.reject(l);
            },
          };
        this.outstandingGets_.push(n), this.outstandingGetCount_++;
        const i = this.outstandingGets_.length - 1;
        return this.connected_ && this.sendGet_(i), r.promise;
      }
      listen(e, r, n, i) {
        this.initConnection_();
        const a = e._queryIdentifier,
          l = e._path.toString();
        this.log_("Listen called for " + l + " " + a),
          this.listens.has(l) || this.listens.set(l, new Map()),
          Ke(
            e._queryParams.isDefault() || !e._queryParams.loadsAllData(),
            "listen() called for non-default but complete query"
          ),
          Ke(
            !this.listens.get(l).has(a),
            "listen() called twice for same path/queryId."
          );
        const u = { onComplete: i, hashFn: r, query: e, tag: n };
        this.listens.get(l).set(a, u), this.connected_ && this.sendListen_(u);
      }
      sendGet_(e) {
        const r = this.outstandingGets_[e];
        this.sendRequest("g", r.request, (n) => {
          delete this.outstandingGets_[e],
            this.outstandingGetCount_--,
            this.outstandingGetCount_ === 0 && (this.outstandingGets_ = []),
            r.onComplete && r.onComplete(n);
        });
      }
      sendListen_(e) {
        const r = e.query,
          n = r._path.toString(),
          i = r._queryIdentifier;
        this.log_("Listen on " + n + " for " + i);
        const a = { p: n },
          l = "q";
        e.tag && ((a.q = r._queryObject), (a.t = e.tag)),
          (a.h = e.hashFn()),
          this.sendRequest(l, a, (u) => {
            const p = u.d,
              m = u.s;
            fa.warnOnListenWarnings_(p, r),
              (this.listens.get(n) && this.listens.get(n).get(i)) === e &&
                (this.log_("listen response", u),
                m !== "ok" && this.removeListen_(n, i),
                e.onComplete && e.onComplete(m, p));
          });
      }
      static warnOnListenWarnings_(e, r) {
        if (e && typeof e == "object" && Ss(e, "w")) {
          const n = qc(e, "w");
          if (Array.isArray(n) && ~n.indexOf("no_index")) {
            const i =
                '".indexOn": "' + r._queryParams.getIndex().toString() + '"',
              a = r._path.toString();
            Jn(
              `Using an unspecified index. Your data will be downloaded and filtered on the client. Consider adding ${i} at ${a} to your security rules for better performance.`
            );
          }
        }
      }
      refreshAuthToken(e) {
        (this.authToken_ = e),
          this.log_("Auth token refreshed"),
          this.authToken_
            ? this.tryAuth()
            : this.connected_ && this.sendRequest("unauth", {}, () => {}),
          this.reduceReconnectDelayIfAdminCredential_(e);
      }
      reduceReconnectDelayIfAdminCredential_(e) {
        ((e && e.length === 40) || d$(e)) &&
          (this.log_(
            "Admin auth credential detected.  Reducing max reconnect time."
          ),
          (this.maxReconnectDelay_ = lP));
      }
      refreshAppCheckToken(e) {
        (this.appCheckToken_ = e),
          this.log_("App check token refreshed"),
          this.appCheckToken_
            ? this.tryAppCheck()
            : this.connected_ && this.sendRequest("unappeck", {}, () => {});
      }
      tryAuth() {
        if (this.connected_ && this.authToken_) {
          const e = this.authToken_,
            r = h$(e) ? "auth" : "gauth",
            n = { cred: e };
          this.authOverride_ === null
            ? (n.noauth = !0)
            : typeof this.authOverride_ == "object" &&
              (n.authvar = this.authOverride_),
            this.sendRequest(r, n, (i) => {
              const a = i.s,
                l = i.d || "error";
              this.authToken_ === e &&
                (a === "ok"
                  ? (this.invalidAuthTokenCount_ = 0)
                  : this.onAuthRevoked_(a, l));
            });
        }
      }
      tryAppCheck() {
        this.connected_ &&
          this.appCheckToken_ &&
          this.sendRequest("appcheck", { token: this.appCheckToken_ }, (e) => {
            const r = e.s,
              n = e.d || "error";
            r === "ok"
              ? (this.invalidAppCheckTokenCount_ = 0)
              : this.onAppCheckRevoked_(r, n);
          });
      }
      unlisten(e, r) {
        const n = e._path.toString(),
          i = e._queryIdentifier;
        this.log_("Unlisten called for " + n + " " + i),
          Ke(
            e._queryParams.isDefault() || !e._queryParams.loadsAllData(),
            "unlisten() called for non-default but complete query"
          ),
          this.removeListen_(n, i) &&
            this.connected_ &&
            this.sendUnlisten_(n, i, e._queryObject, r);
      }
      sendUnlisten_(e, r, n, i) {
        this.log_("Unlisten on " + e + " for " + r);
        const a = { p: e },
          l = "n";
        i && ((a.q = n), (a.t = i)), this.sendRequest(l, a);
      }
      onDisconnectPut(e, r, n) {
        this.initConnection_(),
          this.connected_
            ? this.sendOnDisconnect_("o", e, r, n)
            : this.onDisconnectRequestQueue_.push({
                pathString: e,
                action: "o",
                data: r,
                onComplete: n,
              });
      }
      onDisconnectMerge(e, r, n) {
        this.initConnection_(),
          this.connected_
            ? this.sendOnDisconnect_("om", e, r, n)
            : this.onDisconnectRequestQueue_.push({
                pathString: e,
                action: "om",
                data: r,
                onComplete: n,
              });
      }
      onDisconnectCancel(e, r) {
        this.initConnection_(),
          this.connected_
            ? this.sendOnDisconnect_("oc", e, null, r)
            : this.onDisconnectRequestQueue_.push({
                pathString: e,
                action: "oc",
                data: null,
                onComplete: r,
              });
      }
      sendOnDisconnect_(e, r, n, i) {
        const a = { p: r, d: n };
        this.log_("onDisconnect " + e, a),
          this.sendRequest(e, a, (l) => {
            i &&
              setTimeout(() => {
                i(l.s, l.d);
              }, Math.floor(0));
          });
      }
      put(e, r, n, i) {
        this.putInternal("p", e, r, n, i);
      }
      merge(e, r, n, i) {
        this.putInternal("m", e, r, n, i);
      }
      putInternal(e, r, n, i, a) {
        this.initConnection_();
        const l = { p: r, d: n };
        a !== void 0 && (l.h = a),
          this.outstandingPuts_.push({ action: e, request: l, onComplete: i }),
          this.outstandingPutCount_++;
        const u = this.outstandingPuts_.length - 1;
        this.connected_ ? this.sendPut_(u) : this.log_("Buffering put: " + r);
      }
      sendPut_(e) {
        const r = this.outstandingPuts_[e].action,
          n = this.outstandingPuts_[e].request,
          i = this.outstandingPuts_[e].onComplete;
        (this.outstandingPuts_[e].queued = this.connected_),
          this.sendRequest(r, n, (a) => {
            this.log_(r + " response", a),
              delete this.outstandingPuts_[e],
              this.outstandingPutCount_--,
              this.outstandingPutCount_ === 0 && (this.outstandingPuts_ = []),
              i && i(a.s, a.d);
          });
      }
      reportStats(e) {
        if (this.connected_) {
          const r = { c: e };
          this.log_("reportStats", r),
            this.sendRequest("s", r, (n) => {
              if (n.s !== "ok") {
                const i = n.d;
                this.log_("reportStats", "Error sending stats: " + i);
              }
            });
        }
      }
      onDataMessage_(e) {
        if ("r" in e) {
          this.log_("from server: " + fn(e));
          const r = e.r,
            n = this.requestCBHash_[r];
          n && (delete this.requestCBHash_[r], n(e.b));
        } else {
          if ("error" in e)
            throw "A server-side error has occurred: " + e.error;
          "a" in e && this.onDataPush_(e.a, e.b);
        }
      }
      onDataPush_(e, r) {
        this.log_("handleServerMessage", e, r),
          e === "d"
            ? this.onDataUpdate_(r.p, r.d, !1, r.t)
            : e === "m"
            ? this.onDataUpdate_(r.p, r.d, !0, r.t)
            : e === "c"
            ? this.onListenRevoked_(r.p, r.q)
            : e === "ac"
            ? this.onAuthRevoked_(r.s, r.d)
            : e === "apc"
            ? this.onAppCheckRevoked_(r.s, r.d)
            : e === "sd"
            ? this.onSecurityDebugPacket_(r)
            : bx(
                "Unrecognized action received from server: " +
                  fn(e) +
                  `
Are you using the latest client?`
              );
      }
      onReady_(e, r) {
        this.log_("connection ready"),
          (this.connected_ = !0),
          (this.lastConnectionEstablishedTime_ = new Date().getTime()),
          this.handleTimestamp_(e),
          (this.lastSessionId = r),
          this.firstConnection_ && this.sendConnectStats_(),
          this.restoreState_(),
          (this.firstConnection_ = !1),
          this.onConnectStatus_(!0);
      }
      scheduleConnect_(e) {
        Ke(
          !this.realtime_,
          "Scheduling a connect when we're already connected/ing?"
        ),
          this.establishConnectionTimer_ &&
            clearTimeout(this.establishConnectionTimer_),
          (this.establishConnectionTimer_ = setTimeout(() => {
            (this.establishConnectionTimer_ = null),
              this.establishConnection_();
          }, Math.floor(e)));
      }
      initConnection_() {
        !this.realtime_ && this.firstConnection_ && this.scheduleConnect_(0);
      }
      onVisible_(e) {
        e &&
          !this.visible_ &&
          this.reconnectDelay_ === this.maxReconnectDelay_ &&
          (this.log_("Window became visible.  Reducing delay."),
          (this.reconnectDelay_ = rd),
          this.realtime_ || this.scheduleConnect_(0)),
          (this.visible_ = e);
      }
      onOnline_(e) {
        e
          ? (this.log_("Browser went online."),
            (this.reconnectDelay_ = rd),
            this.realtime_ || this.scheduleConnect_(0))
          : (this.log_("Browser went offline.  Killing connection."),
            this.realtime_ && this.realtime_.close());
      }
      onRealtimeDisconnect_() {
        if (
          (this.log_("data client disconnected"),
          (this.connected_ = !1),
          (this.realtime_ = null),
          this.cancelSentTransactions_(),
          (this.requestCBHash_ = {}),
          this.shouldReconnect_())
        ) {
          this.visible_
            ? this.lastConnectionEstablishedTime_ &&
              (new Date().getTime() - this.lastConnectionEstablishedTime_ >
                kQ && (this.reconnectDelay_ = rd),
              (this.lastConnectionEstablishedTime_ = null))
            : (this.log_("Window isn't visible.  Delaying reconnect."),
              (this.reconnectDelay_ = this.maxReconnectDelay_),
              (this.lastConnectionAttemptTime_ = new Date().getTime()));
          const e = new Date().getTime() - this.lastConnectionAttemptTime_;
          let r = Math.max(0, this.reconnectDelay_ - e);
          (r = Math.random() * r),
            this.log_("Trying to reconnect in " + r + "ms"),
            this.scheduleConnect_(r),
            (this.reconnectDelay_ = Math.min(
              this.maxReconnectDelay_,
              this.reconnectDelay_ * wQ
            ));
        }
        this.onConnectStatus_(!1);
      }
      async establishConnection_() {
        if (this.shouldReconnect_()) {
          this.log_("Making a connection attempt"),
            (this.lastConnectionAttemptTime_ = new Date().getTime()),
            (this.lastConnectionEstablishedTime_ = null);
          const e = this.onDataMessage_.bind(this),
            r = this.onReady_.bind(this),
            n = this.onRealtimeDisconnect_.bind(this),
            i = this.id + ":" + fa.nextConnectionId_++,
            a = this.lastSessionId;
          let l = !1,
            u = null;
          const p = function () {
              u ? u.close() : ((l = !0), n());
            },
            m = function (w) {
              Ke(u, "sendRequest call when we're not connected not allowed."),
                u.sendRequest(w);
            };
          this.realtime_ = { close: p, sendRequest: m };
          const v = this.forceTokenRefresh_;
          this.forceTokenRefresh_ = !1;
          try {
            const [w, S] = await Promise.all([
              this.authTokenProvider_.getToken(v),
              this.appCheckTokenProvider_.getToken(v),
            ]);
            l
              ? kn("getToken() completed but was canceled")
              : (kn("getToken() completed. Creating connection."),
                (this.authToken_ = w && w.accessToken),
                (this.appCheckToken_ = S && S.token),
                (u = new pQ(
                  i,
                  this.repoInfo_,
                  this.applicationId_,
                  this.appCheckToken_,
                  this.authToken_,
                  e,
                  r,
                  n,
                  (M) => {
                    Jn(M + " (" + this.repoInfo_.toString() + ")"),
                      this.interrupt(_Q);
                  },
                  a
                )));
          } catch (w) {
            this.log_("Failed to get token: " + w),
              l || (this.repoInfo_.nodeAdmin && Jn(w), p());
          }
        }
      }
      interrupt(e) {
        kn("Interrupting connection for reason: " + e),
          (this.interruptReasons_[e] = !0),
          this.realtime_
            ? this.realtime_.close()
            : (this.establishConnectionTimer_ &&
                (clearTimeout(this.establishConnectionTimer_),
                (this.establishConnectionTimer_ = null)),
              this.connected_ && this.onRealtimeDisconnect_());
      }
      resume(e) {
        kn("Resuming connection for reason: " + e),
          delete this.interruptReasons_[e],
          ax(this.interruptReasons_) &&
            ((this.reconnectDelay_ = rd),
            this.realtime_ || this.scheduleConnect_(0));
      }
      handleTimestamp_(e) {
        const r = e - new Date().getTime();
        this.onServerInfoUpdate_({ serverTimeOffset: r });
      }
      cancelSentTransactions_() {
        for (let e = 0; e < this.outstandingPuts_.length; e++) {
          const r = this.outstandingPuts_[e];
          r &&
            "h" in r.request &&
            r.queued &&
            (r.onComplete && r.onComplete("disconnect"),
            delete this.outstandingPuts_[e],
            this.outstandingPutCount_--);
        }
        this.outstandingPutCount_ === 0 && (this.outstandingPuts_ = []);
      }
      onListenRevoked_(e, r) {
        let n;
        r ? (n = r.map((a) => wx(a)).join("$")) : (n = "default");
        const i = this.removeListen_(e, n);
        i && i.onComplete && i.onComplete("permission_denied");
      }
      removeListen_(e, r) {
        const n = new nr(e).toString();
        let i;
        if (this.listens.has(n)) {
          const a = this.listens.get(n);
          (i = a.get(r)), a.delete(r), a.size === 0 && this.listens.delete(n);
        } else i = void 0;
        return i;
      }
      onAuthRevoked_(e, r) {
        kn("Auth token revoked: " + e + "/" + r),
          (this.authToken_ = null),
          (this.forceTokenRefresh_ = !0),
          this.realtime_.close(),
          (e === "invalid_token" || e === "permission_denied") &&
            (this.invalidAuthTokenCount_++,
            this.invalidAuthTokenCount_ >= cP &&
              ((this.reconnectDelay_ = lP),
              this.authTokenProvider_.notifyForInvalidToken()));
      }
      onAppCheckRevoked_(e, r) {
        kn("App check token revoked: " + e + "/" + r),
          (this.appCheckToken_ = null),
          (this.forceTokenRefresh_ = !0),
          (e === "invalid_token" || e === "permission_denied") &&
            (this.invalidAppCheckTokenCount_++,
            this.invalidAppCheckTokenCount_ >= cP &&
              this.appCheckTokenProvider_.notifyForInvalidToken());
      }
      onSecurityDebugPacket_(e) {
        this.securityDebugCallback_
          ? this.securityDebugCallback_(e)
          : "msg" in e &&
            console.log(
              "FIREBASE: " +
                e.msg.replace(
                  `
`,
                  `
FIREBASE: `
                )
            );
      }
      restoreState_() {
        this.tryAuth(), this.tryAppCheck();
        for (const e of this.listens.values())
          for (const r of e.values()) this.sendListen_(r);
        for (let e = 0; e < this.outstandingPuts_.length; e++)
          this.outstandingPuts_[e] && this.sendPut_(e);
        for (; this.onDisconnectRequestQueue_.length; ) {
          const e = this.onDisconnectRequestQueue_.shift();
          this.sendOnDisconnect_(e.action, e.pathString, e.data, e.onComplete);
        }
        for (let e = 0; e < this.outstandingGets_.length; e++)
          this.outstandingGets_[e] && this.sendGet_(e);
      }
      sendConnectStats_() {
        const e = {};
        let r = "js";
        (e["sdk." + r + "." + ST.replace(/\./g, "-")] = 1),
          sx()
            ? (e["framework.cordova"] = 1)
            : lT() && (e["framework.reactnative"] = 1),
          this.reportStats(e);
      }
      shouldReconnect_() {
        const e = Ug.getInstance().currentlyOnline();
        return ax(this.interruptReasons_) && e;
      }
    }
    (fa.nextPersistentConnectionId_ = 0), (fa.nextConnectionId_ = 0);
    class Tt {
      constructor(e, r) {
        (this.name = e), (this.node = r);
      }
      static Wrap(e, r) {
        return new Tt(e, r);
      }
    }
    class Wg {
      getCompare() {
        return this.compare.bind(this);
      }
      indexedValueChanged(e, r) {
        const n = new Tt(kl, e),
          i = new Tt(kl, r);
        return this.compare(n, i) !== 0;
      }
      minPost() {
        return Tt.MIN;
      }
    }
    let Xg;
    class uP extends Wg {
      static get __EMPTY_NODE() {
        return Xg;
      }
      static set __EMPTY_NODE(e) {
        Xg = e;
      }
      compare(e, r) {
        return _l(e.name, r.name);
      }
      isDefinedOn(e) {
        throw Vc("KeyIndex.isDefinedOn not expected to be called.");
      }
      indexedValueChanged(e, r) {
        return !1;
      }
      minPost() {
        return Tt.MIN;
      }
      maxPost() {
        return new Tt(po, Xg);
      }
      makePost(e, r) {
        return (
          Ke(
            typeof e == "string",
            "KeyIndex indexValue must always be a string."
          ),
          new Tt(e, Xg)
        );
      }
      toString() {
        return ".key";
      }
    }
    const Cl = new uP();
    class jg {
      constructor(e, r, n, i, a = null) {
        (this.isReverse_ = i),
          (this.resultGenerator_ = a),
          (this.nodeStack_ = []);
        let l = 1;
        for (; !e.isEmpty(); )
          if (((e = e), (l = r ? n(e.key, r) : 1), i && (l *= -1), l < 0))
            this.isReverse_ ? (e = e.left) : (e = e.right);
          else if (l === 0) {
            this.nodeStack_.push(e);
            break;
          } else
            this.nodeStack_.push(e),
              this.isReverse_ ? (e = e.right) : (e = e.left);
      }
      getNext() {
        if (this.nodeStack_.length === 0) return null;
        let e = this.nodeStack_.pop(),
          r;
        if (
          (this.resultGenerator_
            ? (r = this.resultGenerator_(e.key, e.value))
            : (r = { key: e.key, value: e.value }),
          this.isReverse_)
        )
          for (e = e.left; !e.isEmpty(); )
            this.nodeStack_.push(e), (e = e.right);
        else
          for (e = e.right; !e.isEmpty(); )
            this.nodeStack_.push(e), (e = e.left);
        return r;
      }
      hasNext() {
        return this.nodeStack_.length > 0;
      }
      peek() {
        if (this.nodeStack_.length === 0) return null;
        const e = this.nodeStack_[this.nodeStack_.length - 1];
        return this.resultGenerator_
          ? this.resultGenerator_(e.key, e.value)
          : { key: e.key, value: e.value };
      }
    }
    class pn {
      constructor(e, r, n, i, a) {
        (this.key = e),
          (this.value = r),
          (this.color = n ?? pn.RED),
          (this.left = i ?? ti.EMPTY_NODE),
          (this.right = a ?? ti.EMPTY_NODE);
      }
      copy(e, r, n, i, a) {
        return new pn(
          e ?? this.key,
          r ?? this.value,
          n ?? this.color,
          i ?? this.left,
          a ?? this.right
        );
      }
      count() {
        return this.left.count() + 1 + this.right.count();
      }
      isEmpty() {
        return !1;
      }
      inorderTraversal(e) {
        return (
          this.left.inorderTraversal(e) ||
          !!e(this.key, this.value) ||
          this.right.inorderTraversal(e)
        );
      }
      reverseTraversal(e) {
        return (
          this.right.reverseTraversal(e) ||
          e(this.key, this.value) ||
          this.left.reverseTraversal(e)
        );
      }
      min_() {
        return this.left.isEmpty() ? this : this.left.min_();
      }
      minKey() {
        return this.min_().key;
      }
      maxKey() {
        return this.right.isEmpty() ? this.key : this.right.maxKey();
      }
      insert(e, r, n) {
        let i = this;
        const a = n(e, i.key);
        return (
          a < 0
            ? (i = i.copy(null, null, null, i.left.insert(e, r, n), null))
            : a === 0
            ? (i = i.copy(null, r, null, null, null))
            : (i = i.copy(null, null, null, null, i.right.insert(e, r, n))),
          i.fixUp_()
        );
      }
      removeMin_() {
        if (this.left.isEmpty()) return ti.EMPTY_NODE;
        let e = this;
        return (
          !e.left.isRed_() && !e.left.left.isRed_() && (e = e.moveRedLeft_()),
          (e = e.copy(null, null, null, e.left.removeMin_(), null)),
          e.fixUp_()
        );
      }
      remove(e, r) {
        let n, i;
        if (((n = this), r(e, n.key) < 0))
          !n.left.isEmpty() &&
            !n.left.isRed_() &&
            !n.left.left.isRed_() &&
            (n = n.moveRedLeft_()),
            (n = n.copy(null, null, null, n.left.remove(e, r), null));
        else {
          if (
            (n.left.isRed_() && (n = n.rotateRight_()),
            !n.right.isEmpty() &&
              !n.right.isRed_() &&
              !n.right.left.isRed_() &&
              (n = n.moveRedRight_()),
            r(e, n.key) === 0)
          ) {
            if (n.right.isEmpty()) return ti.EMPTY_NODE;
            (i = n.right.min_()),
              (n = n.copy(i.key, i.value, null, null, n.right.removeMin_()));
          }
          n = n.copy(null, null, null, null, n.right.remove(e, r));
        }
        return n.fixUp_();
      }
      isRed_() {
        return this.color;
      }
      fixUp_() {
        let e = this;
        return (
          e.right.isRed_() && !e.left.isRed_() && (e = e.rotateLeft_()),
          e.left.isRed_() && e.left.left.isRed_() && (e = e.rotateRight_()),
          e.left.isRed_() && e.right.isRed_() && (e = e.colorFlip_()),
          e
        );
      }
      moveRedLeft_() {
        let e = this.colorFlip_();
        return (
          e.right.left.isRed_() &&
            ((e = e.copy(null, null, null, null, e.right.rotateRight_())),
            (e = e.rotateLeft_()),
            (e = e.colorFlip_())),
          e
        );
      }
      moveRedRight_() {
        let e = this.colorFlip_();
        return (
          e.left.left.isRed_() &&
            ((e = e.rotateRight_()), (e = e.colorFlip_())),
          e
        );
      }
      rotateLeft_() {
        const e = this.copy(null, null, pn.RED, null, this.right.left);
        return this.right.copy(null, null, this.color, e, null);
      }
      rotateRight_() {
        const e = this.copy(null, null, pn.RED, this.left.right, null);
        return this.left.copy(null, null, this.color, null, e);
      }
      colorFlip_() {
        const e = this.left.copy(null, null, !this.left.color, null, null),
          r = this.right.copy(null, null, !this.right.color, null, null);
        return this.copy(null, null, !this.color, e, r);
      }
      checkMaxDepth_() {
        const e = this.check_();
        return Math.pow(2, e) <= this.count() + 1;
      }
      check_() {
        if (this.isRed_() && this.left.isRed_())
          throw new Error(
            "Red node has red child(" + this.key + "," + this.value + ")"
          );
        if (this.right.isRed_())
          throw new Error(
            "Right child of (" + this.key + "," + this.value + ") is red"
          );
        const e = this.left.check_();
        if (e !== this.right.check_()) throw new Error("Black depths differ");
        return e + (this.isRed_() ? 0 : 1);
      }
    }
    (pn.RED = !0), (pn.BLACK = !1);
    class AQ {
      copy(e, r, n, i, a) {
        return this;
      }
      insert(e, r, n) {
        return new pn(e, r, null);
      }
      remove(e, r) {
        return this;
      }
      count() {
        return 0;
      }
      isEmpty() {
        return !0;
      }
      inorderTraversal(e) {
        return !1;
      }
      reverseTraversal(e) {
        return !1;
      }
      minKey() {
        return null;
      }
      maxKey() {
        return null;
      }
      check_() {
        return 0;
      }
      isRed_() {
        return !1;
      }
    }
    class ti {
      constructor(e, r = ti.EMPTY_NODE) {
        (this.comparator_ = e), (this.root_ = r);
      }
      insert(e, r) {
        return new ti(
          this.comparator_,
          this.root_
            .insert(e, r, this.comparator_)
            .copy(null, null, pn.BLACK, null, null)
        );
      }
      remove(e) {
        return new ti(
          this.comparator_,
          this.root_
            .remove(e, this.comparator_)
            .copy(null, null, pn.BLACK, null, null)
        );
      }
      get(e) {
        let r,
          n = this.root_;
        for (; !n.isEmpty(); ) {
          if (((r = this.comparator_(e, n.key)), r === 0)) return n.value;
          r < 0 ? (n = n.left) : r > 0 && (n = n.right);
        }
        return null;
      }
      getPredecessorKey(e) {
        let r,
          n = this.root_,
          i = null;
        for (; !n.isEmpty(); )
          if (((r = this.comparator_(e, n.key)), r === 0)) {
            if (n.left.isEmpty()) return i ? i.key : null;
            for (n = n.left; !n.right.isEmpty(); ) n = n.right;
            return n.key;
          } else r < 0 ? (n = n.left) : r > 0 && ((i = n), (n = n.right));
        throw new Error(
          "Attempted to find predecessor key for a nonexistent key.  What gives?"
        );
      }
      isEmpty() {
        return this.root_.isEmpty();
      }
      count() {
        return this.root_.count();
      }
      minKey() {
        return this.root_.minKey();
      }
      maxKey() {
        return this.root_.maxKey();
      }
      inorderTraversal(e) {
        return this.root_.inorderTraversal(e);
      }
      reverseTraversal(e) {
        return this.root_.reverseTraversal(e);
      }
      getIterator(e) {
        return new jg(this.root_, null, this.comparator_, !1, e);
      }
      getIteratorFrom(e, r) {
        return new jg(this.root_, e, this.comparator_, !1, r);
      }
      getReverseIteratorFrom(e, r) {
        return new jg(this.root_, e, this.comparator_, !0, r);
      }
      getReverseIterator(e) {
        return new jg(this.root_, null, this.comparator_, !0, e);
      }
    }
    ti.EMPTY_NODE = new AQ();
    function CQ(t, e) {
      return _l(t.name, e.name);
    }
    function Lx(t, e) {
      return _l(t, e);
    }
    let Mx;
    function SQ(t) {
      Mx = t;
    }
    const hP = function (t) {
        return typeof t == "number" ? "number:" + OT(t) : "string:" + t;
      },
      dP = function (t) {
        if (t.isLeafNode()) {
          const e = t.val();
          Ke(
            typeof e == "string" ||
              typeof e == "number" ||
              (typeof e == "object" && Ss(e, ".sv")),
            "Priority must be a string or number."
          );
        } else Ke(t === Mx || t.isEmpty(), "priority of unexpected type.");
        Ke(
          t === Mx || t.getPriority().isEmpty(),
          "Priority nodes can't have a priority of their own."
        );
      };
    let fP;
    class gn {
      constructor(e, r = gn.__childrenNodeConstructor.EMPTY_NODE) {
        (this.value_ = e),
          (this.priorityNode_ = r),
          (this.lazyHash_ = null),
          Ke(
            this.value_ !== void 0 && this.value_ !== null,
            "LeafNode shouldn't be created with null/undefined value."
          ),
          dP(this.priorityNode_);
      }
      static set __childrenNodeConstructor(e) {
        fP = e;
      }
      static get __childrenNodeConstructor() {
        return fP;
      }
      isLeafNode() {
        return !0;
      }
      getPriority() {
        return this.priorityNode_;
      }
      updatePriority(e) {
        return new gn(this.value_, e);
      }
      getImmediateChild(e) {
        return e === ".priority"
          ? this.priorityNode_
          : gn.__childrenNodeConstructor.EMPTY_NODE;
      }
      getChild(e) {
        return It(e)
          ? this
          : Ot(e) === ".priority"
          ? this.priorityNode_
          : gn.__childrenNodeConstructor.EMPTY_NODE;
      }
      hasChild() {
        return !1;
      }
      getPredecessorChildName(e, r) {
        return null;
      }
      updateImmediateChild(e, r) {
        return e === ".priority"
          ? this.updatePriority(r)
          : r.isEmpty() && e !== ".priority"
          ? this
          : gn.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(
              e,
              r
            ).updatePriority(this.priorityNode_);
      }
      updateChild(e, r) {
        const n = Ot(e);
        return n === null
          ? r
          : r.isEmpty() && n !== ".priority"
          ? this
          : (Ke(
              n !== ".priority" || go(e) === 1,
              ".priority must be the last token in a path"
            ),
            this.updateImmediateChild(
              n,
              gn.__childrenNodeConstructor.EMPTY_NODE.updateChild(Ir(e), r)
            ));
      }
      isEmpty() {
        return !1;
      }
      numChildren() {
        return 0;
      }
      forEachChild(e, r) {
        return !1;
      }
      val(e) {
        return e && !this.getPriority().isEmpty()
          ? { ".value": this.getValue(), ".priority": this.getPriority().val() }
          : this.getValue();
      }
      hash() {
        if (this.lazyHash_ === null) {
          let e = "";
          this.priorityNode_.isEmpty() ||
            (e += "priority:" + hP(this.priorityNode_.val()) + ":");
          const r = typeof this.value_;
          (e += r + ":"),
            r === "number" ? (e += OT(this.value_)) : (e += this.value_),
            (this.lazyHash_ = IT(e));
        }
        return this.lazyHash_;
      }
      getValue() {
        return this.value_;
      }
      compareTo(e) {
        return e === gn.__childrenNodeConstructor.EMPTY_NODE
          ? 1
          : e instanceof gn.__childrenNodeConstructor
          ? -1
          : (Ke(e.isLeafNode(), "Unknown node type"),
            this.compareToLeafNode_(e));
      }
      compareToLeafNode_(e) {
        const r = typeof e.value_,
          n = typeof this.value_,
          i = gn.VALUE_TYPE_ORDER.indexOf(r),
          a = gn.VALUE_TYPE_ORDER.indexOf(n);
        return (
          Ke(i >= 0, "Unknown leaf type: " + r),
          Ke(a >= 0, "Unknown leaf type: " + n),
          i === a
            ? n === "object"
              ? 0
              : this.value_ < e.value_
              ? -1
              : this.value_ === e.value_
              ? 0
              : 1
            : a - i
        );
      }
      withIndex() {
        return this;
      }
      isIndexed() {
        return !0;
      }
      equals(e) {
        if (e === this) return !0;
        if (e.isLeafNode()) {
          const r = e;
          return (
            this.value_ === r.value_ &&
            this.priorityNode_.equals(r.priorityNode_)
          );
        } else return !1;
      }
    }
    gn.VALUE_TYPE_ORDER = ["object", "boolean", "number", "string"];
    let pP, gP;
    function EQ(t) {
      pP = t;
    }
    function IQ(t) {
      gP = t;
    }
    class TQ extends Wg {
      compare(e, r) {
        const n = e.node.getPriority(),
          i = r.node.getPriority(),
          a = n.compareTo(i);
        return a === 0 ? _l(e.name, r.name) : a;
      }
      isDefinedOn(e) {
        return !e.getPriority().isEmpty();
      }
      indexedValueChanged(e, r) {
        return !e.getPriority().equals(r.getPriority());
      }
      minPost() {
        return Tt.MIN;
      }
      maxPost() {
        return new Tt(po, new gn("[PRIORITY-POST]", gP));
      }
      makePost(e, r) {
        const n = pP(e);
        return new Tt(r, new gn("[PRIORITY-POST]", n));
      }
      toString() {
        return ".priority";
      }
    }
    const jr = new TQ(),
      PQ = Math.log(2);
    class OQ {
      constructor(e) {
        const r = (a) => parseInt(Math.log(a) / PQ, 10),
          n = (a) => parseInt(Array(a + 1).join("1"), 2);
        (this.count = r(e + 1)), (this.current_ = this.count - 1);
        const i = n(this.count);
        this.bits_ = (e + 1) & i;
      }
      nextBitIsOne() {
        const e = !(this.bits_ & (1 << this.current_));
        return this.current_--, e;
      }
    }
    const Gg = function (t, e, r, n) {
      t.sort(e);
      const i = function (p, m) {
          const v = m - p;
          let w, S;
          if (v === 0) return null;
          if (v === 1)
            return (
              (w = t[p]),
              (S = r ? r(w) : w),
              new pn(S, w.node, pn.BLACK, null, null)
            );
          {
            const M = parseInt(v / 2, 10) + p,
              D = i(p, M),
              z = i(M + 1, m);
            return (
              (w = t[M]), (S = r ? r(w) : w), new pn(S, w.node, pn.BLACK, D, z)
            );
          }
        },
        a = function (p) {
          let m = null,
            v = null,
            w = t.length;
          const S = function (D, z) {
              const V = w - D,
                j = w;
              w -= D;
              const B = i(V + 1, j),
                ae = t[V],
                re = r ? r(ae) : ae;
              M(new pn(re, ae.node, z, null, B));
            },
            M = function (D) {
              m ? ((m.left = D), (m = D)) : ((v = D), (m = D));
            };
          for (let D = 0; D < p.count; ++D) {
            const z = p.nextBitIsOne(),
              V = Math.pow(2, p.count - (D + 1));
            z ? S(V, pn.BLACK) : (S(V, pn.BLACK), S(V, pn.RED));
          }
          return v;
        },
        l = new OQ(t.length),
        u = a(l);
      return new ti(n || e, u);
    };
    let Rx;
    const tu = {};
    class pa {
      constructor(e, r) {
        (this.indexes_ = e), (this.indexSet_ = r);
      }
      static get Default() {
        return (
          Ke(tu && jr, "ChildrenNode.ts has not been loaded"),
          (Rx = Rx || new pa({ ".priority": tu }, { ".priority": jr })),
          Rx
        );
      }
      get(e) {
        const r = qc(this.indexes_, e);
        if (!r) throw new Error("No index defined for " + e);
        return r instanceof ti ? r : null;
      }
      hasIndex(e) {
        return Ss(this.indexSet_, e.toString());
      }
      addIndex(e, r) {
        Ke(
          e !== Cl,
          "KeyIndex always exists and isn't meant to be added to the IndexMap."
        );
        const n = [];
        let i = !1;
        const a = r.getIterator(Tt.Wrap);
        let l = a.getNext();
        for (; l; )
          (i = i || e.isDefinedOn(l.node)), n.push(l), (l = a.getNext());
        let u;
        i ? (u = Gg(n, e.getCompare())) : (u = tu);
        const p = e.toString(),
          m = Object.assign({}, this.indexSet_);
        m[p] = e;
        const v = Object.assign({}, this.indexes_);
        return (v[p] = u), new pa(v, m);
      }
      addToIndexes(e, r) {
        const n = Fg(this.indexes_, (i, a) => {
          const l = qc(this.indexSet_, a);
          if ((Ke(l, "Missing index implementation for " + a), i === tu))
            if (l.isDefinedOn(e.node)) {
              const u = [],
                p = r.getIterator(Tt.Wrap);
              let m = p.getNext();
              for (; m; ) m.name !== e.name && u.push(m), (m = p.getNext());
              return u.push(e), Gg(u, l.getCompare());
            } else return tu;
          else {
            const u = r.get(e.name);
            let p = i;
            return u && (p = p.remove(new Tt(e.name, u))), p.insert(e, e.node);
          }
        });
        return new pa(n, this.indexSet_);
      }
      removeFromIndexes(e, r) {
        const n = Fg(this.indexes_, (i) => {
          if (i === tu) return i;
          {
            const a = r.get(e.name);
            return a ? i.remove(new Tt(e.name, a)) : i;
          }
        });
        return new pa(n, this.indexSet_);
      }
    }
    let nd;
    class ht {
      constructor(e, r, n) {
        (this.children_ = e),
          (this.priorityNode_ = r),
          (this.indexMap_ = n),
          (this.lazyHash_ = null),
          this.priorityNode_ && dP(this.priorityNode_),
          this.children_.isEmpty() &&
            Ke(
              !this.priorityNode_ || this.priorityNode_.isEmpty(),
              "An empty node cannot have a priority"
            );
      }
      static get EMPTY_NODE() {
        return nd || (nd = new ht(new ti(Lx), null, pa.Default));
      }
      isLeafNode() {
        return !1;
      }
      getPriority() {
        return this.priorityNode_ || nd;
      }
      updatePriority(e) {
        return this.children_.isEmpty()
          ? this
          : new ht(this.children_, e, this.indexMap_);
      }
      getImmediateChild(e) {
        if (e === ".priority") return this.getPriority();
        {
          const r = this.children_.get(e);
          return r === null ? nd : r;
        }
      }
      getChild(e) {
        const r = Ot(e);
        return r === null ? this : this.getImmediateChild(r).getChild(Ir(e));
      }
      hasChild(e) {
        return this.children_.get(e) !== null;
      }
      updateImmediateChild(e, r) {
        if (
          (Ke(r, "We should always be passing snapshot nodes"),
          e === ".priority")
        )
          return this.updatePriority(r);
        {
          const n = new Tt(e, r);
          let i, a;
          r.isEmpty()
            ? ((i = this.children_.remove(e)),
              (a = this.indexMap_.removeFromIndexes(n, this.children_)))
            : ((i = this.children_.insert(e, r)),
              (a = this.indexMap_.addToIndexes(n, this.children_)));
          const l = i.isEmpty() ? nd : this.priorityNode_;
          return new ht(i, l, a);
        }
      }
      updateChild(e, r) {
        const n = Ot(e);
        if (n === null) return r;
        {
          Ke(
            Ot(e) !== ".priority" || go(e) === 1,
            ".priority must be the last token in a path"
          );
          const i = this.getImmediateChild(n).updateChild(Ir(e), r);
          return this.updateImmediateChild(n, i);
        }
      }
      isEmpty() {
        return this.children_.isEmpty();
      }
      numChildren() {
        return this.children_.count();
      }
      val(e) {
        if (this.isEmpty()) return null;
        const r = {};
        let n = 0,
          i = 0,
          a = !0;
        if (
          (this.forEachChild(jr, (l, u) => {
            (r[l] = u.val(e)),
              n++,
              a && ht.INTEGER_REGEXP_.test(l)
                ? (i = Math.max(i, Number(l)))
                : (a = !1);
          }),
          !e && a && i < 2 * n)
        ) {
          const l = [];
          for (const u in r) l[u] = r[u];
          return l;
        } else
          return (
            e &&
              !this.getPriority().isEmpty() &&
              (r[".priority"] = this.getPriority().val()),
            r
          );
      }
      hash() {
        if (this.lazyHash_ === null) {
          let e = "";
          this.getPriority().isEmpty() ||
            (e += "priority:" + hP(this.getPriority().val()) + ":"),
            this.forEachChild(jr, (r, n) => {
              const i = n.hash();
              i !== "" && (e += ":" + r + ":" + i);
            }),
            (this.lazyHash_ = e === "" ? "" : IT(e));
        }
        return this.lazyHash_;
      }
      getPredecessorChildName(e, r, n) {
        const i = this.resolveIndex_(n);
        if (i) {
          const a = i.getPredecessorKey(new Tt(e, r));
          return a ? a.name : null;
        } else return this.children_.getPredecessorKey(e);
      }
      getFirstChildName(e) {
        const r = this.resolveIndex_(e);
        if (r) {
          const n = r.minKey();
          return n && n.name;
        } else return this.children_.minKey();
      }
      getFirstChild(e) {
        const r = this.getFirstChildName(e);
        return r ? new Tt(r, this.children_.get(r)) : null;
      }
      getLastChildName(e) {
        const r = this.resolveIndex_(e);
        if (r) {
          const n = r.maxKey();
          return n && n.name;
        } else return this.children_.maxKey();
      }
      getLastChild(e) {
        const r = this.getLastChildName(e);
        return r ? new Tt(r, this.children_.get(r)) : null;
      }
      forEachChild(e, r) {
        const n = this.resolveIndex_(e);
        return n
          ? n.inorderTraversal((i) => r(i.name, i.node))
          : this.children_.inorderTraversal(r);
      }
      getIterator(e) {
        return this.getIteratorFrom(e.minPost(), e);
      }
      getIteratorFrom(e, r) {
        const n = this.resolveIndex_(r);
        if (n) return n.getIteratorFrom(e, (i) => i);
        {
          const i = this.children_.getIteratorFrom(e.name, Tt.Wrap);
          let a = i.peek();
          for (; a != null && r.compare(a, e) < 0; )
            i.getNext(), (a = i.peek());
          return i;
        }
      }
      getReverseIterator(e) {
        return this.getReverseIteratorFrom(e.maxPost(), e);
      }
      getReverseIteratorFrom(e, r) {
        const n = this.resolveIndex_(r);
        if (n) return n.getReverseIteratorFrom(e, (i) => i);
        {
          const i = this.children_.getReverseIteratorFrom(e.name, Tt.Wrap);
          let a = i.peek();
          for (; a != null && r.compare(a, e) > 0; )
            i.getNext(), (a = i.peek());
          return i;
        }
      }
      compareTo(e) {
        return this.isEmpty()
          ? e.isEmpty()
            ? 0
            : -1
          : e.isLeafNode() || e.isEmpty()
          ? 1
          : e === id
          ? -1
          : 0;
      }
      withIndex(e) {
        if (e === Cl || this.indexMap_.hasIndex(e)) return this;
        {
          const r = this.indexMap_.addIndex(e, this.children_);
          return new ht(this.children_, this.priorityNode_, r);
        }
      }
      isIndexed(e) {
        return e === Cl || this.indexMap_.hasIndex(e);
      }
      equals(e) {
        if (e === this) return !0;
        if (e.isLeafNode()) return !1;
        {
          const r = e;
          if (this.getPriority().equals(r.getPriority()))
            if (this.children_.count() === r.children_.count()) {
              const n = this.getIterator(jr),
                i = r.getIterator(jr);
              let a = n.getNext(),
                l = i.getNext();
              for (; a && l; ) {
                if (a.name !== l.name || !a.node.equals(l.node)) return !1;
                (a = n.getNext()), (l = i.getNext());
              }
              return a === null && l === null;
            } else return !1;
          else return !1;
        }
      }
      resolveIndex_(e) {
        return e === Cl ? null : this.indexMap_.get(e.toString());
      }
    }
    ht.INTEGER_REGEXP_ = /^(0|[1-9]\d*)$/;
    class LQ extends ht {
      constructor() {
        super(new ti(Lx), ht.EMPTY_NODE, pa.Default);
      }
      compareTo(e) {
        return e === this ? 0 : 1;
      }
      equals(e) {
        return e === this;
      }
      getPriority() {
        return this;
      }
      getImmediateChild(e) {
        return ht.EMPTY_NODE;
      }
      isEmpty() {
        return !1;
      }
    }
    const id = new LQ();
    Object.defineProperties(Tt, {
      MIN: { value: new Tt(kl, ht.EMPTY_NODE) },
      MAX: { value: new Tt(po, id) },
    }),
      (uP.__EMPTY_NODE = ht.EMPTY_NODE),
      (gn.__childrenNodeConstructor = ht),
      SQ(id),
      IQ(id);
    const MQ = !0;
    function An(t, e = null) {
      if (t === null) return ht.EMPTY_NODE;
      if (
        (typeof t == "object" && ".priority" in t && (e = t[".priority"]),
        Ke(
          e === null ||
            typeof e == "string" ||
            typeof e == "number" ||
            (typeof e == "object" && ".sv" in e),
          "Invalid priority type found: " + typeof e
        ),
        typeof t == "object" &&
          ".value" in t &&
          t[".value"] !== null &&
          (t = t[".value"]),
        typeof t != "object" || ".sv" in t)
      ) {
        const r = t;
        return new gn(r, An(e));
      }
      if (!(t instanceof Array) && MQ) {
        const r = [];
        let n = !1;
        if (
          (_n(t, (a, l) => {
            if (a.substring(0, 1) !== ".") {
              const u = An(l);
              u.isEmpty() ||
                ((n = n || !u.getPriority().isEmpty()), r.push(new Tt(a, u)));
            }
          }),
          r.length === 0)
        )
          return ht.EMPTY_NODE;
        const i = Gg(r, CQ, (a) => a.name, Lx);
        if (n) {
          const a = Gg(r, jr.getCompare());
          return new ht(
            i,
            An(e),
            new pa({ ".priority": a }, { ".priority": jr })
          );
        } else return new ht(i, An(e), pa.Default);
      } else {
        let r = ht.EMPTY_NODE;
        return (
          _n(t, (n, i) => {
            if (Ss(t, n) && n.substring(0, 1) !== ".") {
              const a = An(i);
              (a.isLeafNode() || !a.isEmpty()) &&
                (r = r.updateImmediateChild(n, a));
            }
          }),
          r.updatePriority(An(e))
        );
      }
    }
    EQ(An);
    class Nx extends Wg {
      constructor(e) {
        super(),
          (this.indexPath_ = e),
          Ke(
            !It(e) && Ot(e) !== ".priority",
            "Can't create PathIndex with empty path or .priority key"
          );
      }
      extractChild(e) {
        return e.getChild(this.indexPath_);
      }
      isDefinedOn(e) {
        return !e.getChild(this.indexPath_).isEmpty();
      }
      compare(e, r) {
        const n = this.extractChild(e.node),
          i = this.extractChild(r.node),
          a = n.compareTo(i);
        return a === 0 ? _l(e.name, r.name) : a;
      }
      makePost(e, r) {
        const n = An(e),
          i = ht.EMPTY_NODE.updateChild(this.indexPath_, n);
        return new Tt(r, i);
      }
      maxPost() {
        const e = ht.EMPTY_NODE.updateChild(this.indexPath_, id);
        return new Tt(po, e);
      }
      toString() {
        return td(this.indexPath_, 0).join("/");
      }
    }
    class RQ extends Wg {
      compare(e, r) {
        const n = e.node.compareTo(r.node);
        return n === 0 ? _l(e.name, r.name) : n;
      }
      isDefinedOn(e) {
        return !0;
      }
      indexedValueChanged(e, r) {
        return !e.equals(r);
      }
      minPost() {
        return Tt.MIN;
      }
      maxPost() {
        return Tt.MAX;
      }
      makePost(e, r) {
        const n = An(e);
        return new Tt(r, n);
      }
      toString() {
        return ".value";
      }
    }
    const mP = new RQ();
    function vP(t) {
      return { type: "value", snapshotNode: t };
    }
    function ru(t, e) {
      return { type: "child_added", snapshotNode: e, childName: t };
    }
    function sd(t, e) {
      return { type: "child_removed", snapshotNode: e, childName: t };
    }
    function ad(t, e, r) {
      return {
        type: "child_changed",
        snapshotNode: e,
        childName: t,
        oldSnap: r,
      };
    }
    function NQ(t, e) {
      return { type: "child_moved", snapshotNode: e, childName: t };
    }
    class Bx {
      constructor(e) {
        this.index_ = e;
      }
      updateChild(e, r, n, i, a, l) {
        Ke(
          e.isIndexed(this.index_),
          "A node must be indexed if only a child is updated"
        );
        const u = e.getImmediateChild(r);
        return (u.getChild(i).equals(n.getChild(i)) &&
          u.isEmpty() === n.isEmpty()) ||
          (l != null &&
            (n.isEmpty()
              ? e.hasChild(r)
                ? l.trackChildChange(sd(r, u))
                : Ke(
                    e.isLeafNode(),
                    "A child remove without an old child only makes sense on a leaf node"
                  )
              : u.isEmpty()
              ? l.trackChildChange(ru(r, n))
              : l.trackChildChange(ad(r, n, u))),
          e.isLeafNode() && n.isEmpty())
          ? e
          : e.updateImmediateChild(r, n).withIndex(this.index_);
      }
      updateFullNode(e, r, n) {
        return (
          n != null &&
            (e.isLeafNode() ||
              e.forEachChild(jr, (i, a) => {
                r.hasChild(i) || n.trackChildChange(sd(i, a));
              }),
            r.isLeafNode() ||
              r.forEachChild(jr, (i, a) => {
                if (e.hasChild(i)) {
                  const l = e.getImmediateChild(i);
                  l.equals(a) || n.trackChildChange(ad(i, a, l));
                } else n.trackChildChange(ru(i, a));
              })),
          r.withIndex(this.index_)
        );
      }
      updatePriority(e, r) {
        return e.isEmpty() ? ht.EMPTY_NODE : e.updatePriority(r);
      }
      filtersNodes() {
        return !1;
      }
      getIndexedFilter() {
        return this;
      }
      getIndex() {
        return this.index_;
      }
    }
    class od {
      constructor(e) {
        (this.indexedFilter_ = new Bx(e.getIndex())),
          (this.index_ = e.getIndex()),
          (this.startPost_ = od.getStartPost_(e)),
          (this.endPost_ = od.getEndPost_(e)),
          (this.startIsInclusive_ = !e.startAfterSet_),
          (this.endIsInclusive_ = !e.endBeforeSet_);
      }
      getStartPost() {
        return this.startPost_;
      }
      getEndPost() {
        return this.endPost_;
      }
      matches(e) {
        const r = this.startIsInclusive_
            ? this.index_.compare(this.getStartPost(), e) <= 0
            : this.index_.compare(this.getStartPost(), e) < 0,
          n = this.endIsInclusive_
            ? this.index_.compare(e, this.getEndPost()) <= 0
            : this.index_.compare(e, this.getEndPost()) < 0;
        return r && n;
      }
      updateChild(e, r, n, i, a, l) {
        return (
          this.matches(new Tt(r, n)) || (n = ht.EMPTY_NODE),
          this.indexedFilter_.updateChild(e, r, n, i, a, l)
        );
      }
      updateFullNode(e, r, n) {
        r.isLeafNode() && (r = ht.EMPTY_NODE);
        let i = r.withIndex(this.index_);
        i = i.updatePriority(ht.EMPTY_NODE);
        const a = this;
        return (
          r.forEachChild(jr, (l, u) => {
            a.matches(new Tt(l, u)) ||
              (i = i.updateImmediateChild(l, ht.EMPTY_NODE));
          }),
          this.indexedFilter_.updateFullNode(e, i, n)
        );
      }
      updatePriority(e, r) {
        return e;
      }
      filtersNodes() {
        return !0;
      }
      getIndexedFilter() {
        return this.indexedFilter_;
      }
      getIndex() {
        return this.index_;
      }
      static getStartPost_(e) {
        if (e.hasStart()) {
          const r = e.getIndexStartName();
          return e.getIndex().makePost(e.getIndexStartValue(), r);
        } else return e.getIndex().minPost();
      }
      static getEndPost_(e) {
        if (e.hasEnd()) {
          const r = e.getIndexEndName();
          return e.getIndex().makePost(e.getIndexEndValue(), r);
        } else return e.getIndex().maxPost();
      }
    }
    class BQ {
      constructor(e) {
        (this.withinDirectionalStart = (r) =>
          this.reverse_ ? this.withinEndPost(r) : this.withinStartPost(r)),
          (this.withinDirectionalEnd = (r) =>
            this.reverse_ ? this.withinStartPost(r) : this.withinEndPost(r)),
          (this.withinStartPost = (r) => {
            const n = this.index_.compare(this.rangedFilter_.getStartPost(), r);
            return this.startIsInclusive_ ? n <= 0 : n < 0;
          }),
          (this.withinEndPost = (r) => {
            const n = this.index_.compare(r, this.rangedFilter_.getEndPost());
            return this.endIsInclusive_ ? n <= 0 : n < 0;
          }),
          (this.rangedFilter_ = new od(e)),
          (this.index_ = e.getIndex()),
          (this.limit_ = e.getLimit()),
          (this.reverse_ = !e.isViewFromLeft()),
          (this.startIsInclusive_ = !e.startAfterSet_),
          (this.endIsInclusive_ = !e.endBeforeSet_);
      }
      updateChild(e, r, n, i, a, l) {
        return (
          this.rangedFilter_.matches(new Tt(r, n)) || (n = ht.EMPTY_NODE),
          e.getImmediateChild(r).equals(n)
            ? e
            : e.numChildren() < this.limit_
            ? this.rangedFilter_
                .getIndexedFilter()
                .updateChild(e, r, n, i, a, l)
            : this.fullLimitUpdateChild_(e, r, n, a, l)
        );
      }
      updateFullNode(e, r, n) {
        let i;
        if (r.isLeafNode() || r.isEmpty())
          i = ht.EMPTY_NODE.withIndex(this.index_);
        else if (
          this.limit_ * 2 < r.numChildren() &&
          r.isIndexed(this.index_)
        ) {
          i = ht.EMPTY_NODE.withIndex(this.index_);
          let a;
          this.reverse_
            ? (a = r.getReverseIteratorFrom(
                this.rangedFilter_.getEndPost(),
                this.index_
              ))
            : (a = r.getIteratorFrom(
                this.rangedFilter_.getStartPost(),
                this.index_
              ));
          let l = 0;
          for (; a.hasNext() && l < this.limit_; ) {
            const u = a.getNext();
            if (this.withinDirectionalStart(u))
              if (this.withinDirectionalEnd(u))
                (i = i.updateImmediateChild(u.name, u.node)), l++;
              else break;
            else continue;
          }
        } else {
          (i = r.withIndex(this.index_)), (i = i.updatePriority(ht.EMPTY_NODE));
          let a;
          this.reverse_
            ? (a = i.getReverseIterator(this.index_))
            : (a = i.getIterator(this.index_));
          let l = 0;
          for (; a.hasNext(); ) {
            const u = a.getNext();
            l < this.limit_ &&
            this.withinDirectionalStart(u) &&
            this.withinDirectionalEnd(u)
              ? l++
              : (i = i.updateImmediateChild(u.name, ht.EMPTY_NODE));
          }
        }
        return this.rangedFilter_.getIndexedFilter().updateFullNode(e, i, n);
      }
      updatePriority(e, r) {
        return e;
      }
      filtersNodes() {
        return !0;
      }
      getIndexedFilter() {
        return this.rangedFilter_.getIndexedFilter();
      }
      getIndex() {
        return this.index_;
      }
      fullLimitUpdateChild_(e, r, n, i, a) {
        let l;
        if (this.reverse_) {
          const w = this.index_.getCompare();
          l = (S, M) => w(M, S);
        } else l = this.index_.getCompare();
        const u = e;
        Ke(u.numChildren() === this.limit_, "");
        const p = new Tt(r, n),
          m = this.reverse_
            ? u.getFirstChild(this.index_)
            : u.getLastChild(this.index_),
          v = this.rangedFilter_.matches(p);
        if (u.hasChild(r)) {
          const w = u.getImmediateChild(r);
          let S = i.getChildAfterChild(this.index_, m, this.reverse_);
          for (; S != null && (S.name === r || u.hasChild(S.name)); )
            S = i.getChildAfterChild(this.index_, S, this.reverse_);
          const M = S == null ? 1 : l(S, p);
          if (v && !n.isEmpty() && M >= 0)
            return (
              a == null || a.trackChildChange(ad(r, n, w)),
              u.updateImmediateChild(r, n)
            );
          {
            a == null || a.trackChildChange(sd(r, w));
            const D = u.updateImmediateChild(r, ht.EMPTY_NODE);
            return S != null && this.rangedFilter_.matches(S)
              ? (a == null || a.trackChildChange(ru(S.name, S.node)),
                D.updateImmediateChild(S.name, S.node))
              : D;
          }
        } else
          return n.isEmpty()
            ? e
            : v && l(m, p) >= 0
            ? (a != null &&
                (a.trackChildChange(sd(m.name, m.node)),
                a.trackChildChange(ru(r, n))),
              u
                .updateImmediateChild(r, n)
                .updateImmediateChild(m.name, ht.EMPTY_NODE))
            : e;
      }
    }
    class Fx {
      constructor() {
        (this.limitSet_ = !1),
          (this.startSet_ = !1),
          (this.startNameSet_ = !1),
          (this.startAfterSet_ = !1),
          (this.endSet_ = !1),
          (this.endNameSet_ = !1),
          (this.endBeforeSet_ = !1),
          (this.limit_ = 0),
          (this.viewFrom_ = ""),
          (this.indexStartValue_ = null),
          (this.indexStartName_ = ""),
          (this.indexEndValue_ = null),
          (this.indexEndName_ = ""),
          (this.index_ = jr);
      }
      hasStart() {
        return this.startSet_;
      }
      isViewFromLeft() {
        return this.viewFrom_ === "" ? this.startSet_ : this.viewFrom_ === "l";
      }
      getIndexStartValue() {
        return (
          Ke(this.startSet_, "Only valid if start has been set"),
          this.indexStartValue_
        );
      }
      getIndexStartName() {
        return (
          Ke(this.startSet_, "Only valid if start has been set"),
          this.startNameSet_ ? this.indexStartName_ : kl
        );
      }
      hasEnd() {
        return this.endSet_;
      }
      getIndexEndValue() {
        return (
          Ke(this.endSet_, "Only valid if end has been set"),
          this.indexEndValue_
        );
      }
      getIndexEndName() {
        return (
          Ke(this.endSet_, "Only valid if end has been set"),
          this.endNameSet_ ? this.indexEndName_ : po
        );
      }
      hasLimit() {
        return this.limitSet_;
      }
      hasAnchoredLimit() {
        return this.limitSet_ && this.viewFrom_ !== "";
      }
      getLimit() {
        return (
          Ke(this.limitSet_, "Only valid if limit has been set"), this.limit_
        );
      }
      getIndex() {
        return this.index_;
      }
      loadsAllData() {
        return !(this.startSet_ || this.endSet_ || this.limitSet_);
      }
      isDefault() {
        return this.loadsAllData() && this.index_ === jr;
      }
      copy() {
        const e = new Fx();
        return (
          (e.limitSet_ = this.limitSet_),
          (e.limit_ = this.limit_),
          (e.startSet_ = this.startSet_),
          (e.startAfterSet_ = this.startAfterSet_),
          (e.indexStartValue_ = this.indexStartValue_),
          (e.startNameSet_ = this.startNameSet_),
          (e.indexStartName_ = this.indexStartName_),
          (e.endSet_ = this.endSet_),
          (e.endBeforeSet_ = this.endBeforeSet_),
          (e.indexEndValue_ = this.indexEndValue_),
          (e.endNameSet_ = this.endNameSet_),
          (e.indexEndName_ = this.indexEndName_),
          (e.index_ = this.index_),
          (e.viewFrom_ = this.viewFrom_),
          e
        );
      }
    }
    function FQ(t) {
      return t.loadsAllData()
        ? new Bx(t.getIndex())
        : t.hasLimit()
        ? new BQ(t)
        : new od(t);
    }
    function DQ(t, e, r) {
      const n = t.copy();
      return (
        (n.endSet_ = !0),
        e === void 0 && (e = null),
        (n.indexEndValue_ = e),
        r !== void 0
          ? ((n.endNameSet_ = !0), (n.indexEndName_ = r))
          : ((n.endNameSet_ = !1), (n.indexEndName_ = "")),
        n
      );
    }
    function zQ(t, e) {
      const r = t.copy();
      return (r.index_ = e), r;
    }
    function yP(t) {
      const e = {};
      if (t.isDefault()) return e;
      let r;
      if (
        (t.index_ === jr
          ? (r = "$priority")
          : t.index_ === mP
          ? (r = "$value")
          : t.index_ === Cl
          ? (r = "$key")
          : (Ke(t.index_ instanceof Nx, "Unrecognized index type!"),
            (r = t.index_.toString())),
        (e.orderBy = fn(r)),
        t.startSet_)
      ) {
        const n = t.startAfterSet_ ? "startAfter" : "startAt";
        (e[n] = fn(t.indexStartValue_)),
          t.startNameSet_ && (e[n] += "," + fn(t.indexStartName_));
      }
      if (t.endSet_) {
        const n = t.endBeforeSet_ ? "endBefore" : "endAt";
        (e[n] = fn(t.indexEndValue_)),
          t.endNameSet_ && (e[n] += "," + fn(t.indexEndName_));
      }
      return (
        t.limitSet_ &&
          (t.isViewFromLeft()
            ? (e.limitToFirst = t.limit_)
            : (e.limitToLast = t.limit_)),
        e
      );
    }
    function bP(t) {
      const e = {};
      if (
        (t.startSet_ &&
          ((e.sp = t.indexStartValue_),
          t.startNameSet_ && (e.sn = t.indexStartName_),
          (e.sin = !t.startAfterSet_)),
        t.endSet_ &&
          ((e.ep = t.indexEndValue_),
          t.endNameSet_ && (e.en = t.indexEndName_),
          (e.ein = !t.endBeforeSet_)),
        t.limitSet_)
      ) {
        e.l = t.limit_;
        let r = t.viewFrom_;
        r === "" && (t.isViewFromLeft() ? (r = "l") : (r = "r")), (e.vf = r);
      }
      return t.index_ !== jr && (e.i = t.index_.toString()), e;
    }
    class Yg extends rP {
      constructor(e, r, n, i) {
        super(),
          (this.repoInfo_ = e),
          (this.onDataUpdate_ = r),
          (this.authTokenProvider_ = n),
          (this.appCheckTokenProvider_ = i),
          (this.log_ = Zh("p:rest:")),
          (this.listens_ = {});
      }
      reportStats(e) {
        throw new Error("Method not implemented.");
      }
      static getListenId_(e, r) {
        return r !== void 0
          ? "tag$" + r
          : (Ke(
              e._queryParams.isDefault(),
              "should have a tag if it's not a default query."
            ),
            e._path.toString());
      }
      listen(e, r, n, i) {
        const a = e._path.toString();
        this.log_("Listen called for " + a + " " + e._queryIdentifier);
        const l = Yg.getListenId_(e, n),
          u = {};
        this.listens_[l] = u;
        const p = yP(e._queryParams);
        this.restRequest_(a + ".json", p, (m, v) => {
          let w = v;
          if (
            (m === 404 && ((w = null), (m = null)),
            m === null && this.onDataUpdate_(a, w, !1, n),
            qc(this.listens_, l) === u)
          ) {
            let S;
            m
              ? m === 401
                ? (S = "permission_denied")
                : (S = "rest_error:" + m)
              : (S = "ok"),
              i(S, null);
          }
        });
      }
      unlisten(e, r) {
        const n = Yg.getListenId_(e, r);
        delete this.listens_[n];
      }
      get(e) {
        const r = yP(e._queryParams),
          n = e._path.toString(),
          i = new Bg();
        return (
          this.restRequest_(n + ".json", r, (a, l) => {
            let u = l;
            a === 404 && ((u = null), (a = null)),
              a === null
                ? (this.onDataUpdate_(n, u, !1, null), i.resolve(u))
                : i.reject(new Error(u));
          }),
          i.promise
        );
      }
      refreshAuthToken(e) {}
      restRequest_(e, r = {}, n) {
        return (
          (r.format = "export"),
          Promise.all([
            this.authTokenProvider_.getToken(!1),
            this.appCheckTokenProvider_.getToken(!1),
          ]).then(([i, a]) => {
            i && i.accessToken && (r.auth = i.accessToken),
              a && a.token && (r.ac = a.token);
            const l =
              (this.repoInfo_.secure ? "https://" : "http://") +
              this.repoInfo_.host +
              e +
              "?ns=" +
              this.repoInfo_.namespace +
              Kc(r);
            this.log_("Sending REST request for " + l);
            const u = new XMLHttpRequest();
            (u.onreadystatechange = () => {
              if (n && u.readyState === 4) {
                this.log_(
                  "REST Response for " + l + " received. status:",
                  u.status,
                  "response:",
                  u.responseText
                );
                let p = null;
                if (u.status >= 200 && u.status < 300) {
                  try {
                    p = Vh(u.responseText);
                  } catch {
                    Jn(
                      "Failed to parse JSON response for " +
                        l +
                        ": " +
                        u.responseText
                    );
                  }
                  n(null, p);
                } else
                  u.status !== 401 &&
                    u.status !== 404 &&
                    Jn(
                      "Got unsuccessful REST response for " +
                        l +
                        " Status: " +
                        u.status
                    ),
                    n(u.status);
                n = null;
              }
            }),
              u.open("GET", l, !0),
              u.send();
          })
        );
      }
    }
    class HQ {
      constructor() {
        this.rootNode_ = ht.EMPTY_NODE;
      }
      getNode(e) {
        return this.rootNode_.getChild(e);
      }
      updateSnapshot(e, r) {
        this.rootNode_ = this.rootNode_.updateChild(e, r);
      }
    }
    function Vg() {
      return { value: null, children: new Map() };
    }
    function xP(t, e, r) {
      if (It(e)) (t.value = r), t.children.clear();
      else if (t.value !== null) t.value = t.value.updateChild(e, r);
      else {
        const n = Ot(e);
        t.children.has(n) || t.children.set(n, Vg());
        const i = t.children.get(n);
        (e = Ir(e)), xP(i, e, r);
      }
    }
    function Dx(t, e, r) {
      t.value !== null
        ? r(e, t.value)
        : UQ(t, (n, i) => {
            const a = new nr(e.toString() + "/" + n);
            Dx(i, a, r);
          });
    }
    function UQ(t, e) {
      t.children.forEach((r, n) => {
        e(n, r);
      });
    }
    class WQ {
      constructor(e) {
        (this.collection_ = e), (this.last_ = null);
      }
      get() {
        const e = this.collection_.get(),
          r = Object.assign({}, e);
        return (
          this.last_ &&
            _n(this.last_, (n, i) => {
              r[n] = r[n] - i;
            }),
          (this.last_ = e),
          r
        );
      }
    }
    const wP = 10 * 1e3,
      XQ = 30 * 1e3,
      jQ = 5 * 60 * 1e3;
    class GQ {
      constructor(e, r) {
        (this.server_ = r),
          (this.statsToReport_ = {}),
          (this.statsListener_ = new WQ(e));
        const n = wP + (XQ - wP) * Math.random();
        Jh(this.reportStats_.bind(this), Math.floor(n));
      }
      reportStats_() {
        const e = this.statsListener_.get(),
          r = {};
        let n = !1;
        _n(e, (i, a) => {
          a > 0 && Ss(this.statsToReport_, i) && ((r[i] = a), (n = !0));
        }),
          n && this.server_.reportStats(r),
          Jh(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * jQ));
      }
    }
    var Ji;
    (function (t) {
      (t[(t.OVERWRITE = 0)] = "OVERWRITE"),
        (t[(t.MERGE = 1)] = "MERGE"),
        (t[(t.ACK_USER_WRITE = 2)] = "ACK_USER_WRITE"),
        (t[(t.LISTEN_COMPLETE = 3)] = "LISTEN_COMPLETE");
    })(Ji || (Ji = {}));
    function zx() {
      return { fromUser: !0, fromServer: !1, queryId: null, tagged: !1 };
    }
    function Hx() {
      return { fromUser: !1, fromServer: !0, queryId: null, tagged: !1 };
    }
    function Ux(t) {
      return { fromUser: !1, fromServer: !0, queryId: t, tagged: !0 };
    }
    class qg {
      constructor(e, r, n) {
        (this.path = e),
          (this.affectedTree = r),
          (this.revert = n),
          (this.type = Ji.ACK_USER_WRITE),
          (this.source = zx());
      }
      operationForChild(e) {
        if (It(this.path)) {
          if (this.affectedTree.value != null)
            return (
              Ke(
                this.affectedTree.children.isEmpty(),
                "affectedTree should not have overlapping affected paths."
              ),
              this
            );
          {
            const r = this.affectedTree.subtree(new nr(e));
            return new qg($t(), r, this.revert);
          }
        } else
          return (
            Ke(
              Ot(this.path) === e,
              "operationForChild called for unrelated child."
            ),
            new qg(Ir(this.path), this.affectedTree, this.revert)
          );
      }
    }
    class ld {
      constructor(e, r) {
        (this.source = e), (this.path = r), (this.type = Ji.LISTEN_COMPLETE);
      }
      operationForChild(e) {
        return It(this.path)
          ? new ld(this.source, $t())
          : new ld(this.source, Ir(this.path));
      }
    }
    class Sl {
      constructor(e, r, n) {
        (this.source = e),
          (this.path = r),
          (this.snap = n),
          (this.type = Ji.OVERWRITE);
      }
      operationForChild(e) {
        return It(this.path)
          ? new Sl(this.source, $t(), this.snap.getImmediateChild(e))
          : new Sl(this.source, Ir(this.path), this.snap);
      }
    }
    class nu {
      constructor(e, r, n) {
        (this.source = e),
          (this.path = r),
          (this.children = n),
          (this.type = Ji.MERGE);
      }
      operationForChild(e) {
        if (It(this.path)) {
          const r = this.children.subtree(new nr(e));
          return r.isEmpty()
            ? null
            : r.value
            ? new Sl(this.source, $t(), r.value)
            : new nu(this.source, $t(), r);
        } else
          return (
            Ke(
              Ot(this.path) === e,
              "Can't get a merge for a child not on the path of the operation"
            ),
            new nu(this.source, Ir(this.path), this.children)
          );
      }
      toString() {
        return (
          "Operation(" +
          this.path +
          ": " +
          this.source.toString() +
          " merge: " +
          this.children.toString() +
          ")"
        );
      }
    }
    class El {
      constructor(e, r, n) {
        (this.node_ = e), (this.fullyInitialized_ = r), (this.filtered_ = n);
      }
      isFullyInitialized() {
        return this.fullyInitialized_;
      }
      isFiltered() {
        return this.filtered_;
      }
      isCompleteForPath(e) {
        if (It(e)) return this.isFullyInitialized() && !this.filtered_;
        const r = Ot(e);
        return this.isCompleteForChild(r);
      }
      isCompleteForChild(e) {
        return (
          (this.isFullyInitialized() && !this.filtered_) ||
          this.node_.hasChild(e)
        );
      }
      getNode() {
        return this.node_;
      }
    }
    class YQ {
      constructor(e) {
        (this.query_ = e), (this.index_ = this.query_._queryParams.getIndex());
      }
    }
    function VQ(t, e, r, n) {
      const i = [],
        a = [];
      return (
        e.forEach((l) => {
          l.type === "child_changed" &&
            t.index_.indexedValueChanged(l.oldSnap, l.snapshotNode) &&
            a.push(NQ(l.childName, l.snapshotNode));
        }),
        cd(t, i, "child_removed", e, n, r),
        cd(t, i, "child_added", e, n, r),
        cd(t, i, "child_moved", a, n, r),
        cd(t, i, "child_changed", e, n, r),
        cd(t, i, "value", e, n, r),
        i
      );
    }
    function cd(t, e, r, n, i, a) {
      const l = n.filter((u) => u.type === r);
      l.sort((u, p) => KQ(t, u, p)),
        l.forEach((u) => {
          const p = qQ(t, u, a);
          i.forEach((m) => {
            m.respondsTo(u.type) && e.push(m.createEvent(p, t.query_));
          });
        });
    }
    function qQ(t, e, r) {
      return (
        e.type === "value" ||
          e.type === "child_removed" ||
          (e.prevName = r.getPredecessorChildName(
            e.childName,
            e.snapshotNode,
            t.index_
          )),
        e
      );
    }
    function KQ(t, e, r) {
      if (e.childName == null || r.childName == null)
        throw Vc("Should only compare child_ events.");
      const n = new Tt(e.childName, e.snapshotNode),
        i = new Tt(r.childName, r.snapshotNode);
      return t.index_.compare(n, i);
    }
    function Kg(t, e) {
      return { eventCache: t, serverCache: e };
    }
    function ud(t, e, r, n) {
      return Kg(new El(e, r, n), t.serverCache);
    }
    function kP(t, e, r, n) {
      return Kg(t.eventCache, new El(e, r, n));
    }
    function Wx(t) {
      return t.eventCache.isFullyInitialized() ? t.eventCache.getNode() : null;
    }
    function Il(t) {
      return t.serverCache.isFullyInitialized()
        ? t.serverCache.getNode()
        : null;
    }
    let Xx;
    const $Q = () => (Xx || (Xx = new ti(RZ)), Xx);
    class Tr {
      constructor(e, r = $Q()) {
        (this.value = e), (this.children = r);
      }
      static fromObject(e) {
        let r = new Tr(null);
        return (
          _n(e, (n, i) => {
            r = r.set(new nr(n), i);
          }),
          r
        );
      }
      isEmpty() {
        return this.value === null && this.children.isEmpty();
      }
      findRootMostMatchingPathAndValue(e, r) {
        if (this.value != null && r(this.value))
          return { path: $t(), value: this.value };
        if (It(e)) return null;
        {
          const n = Ot(e),
            i = this.children.get(n);
          if (i !== null) {
            const a = i.findRootMostMatchingPathAndValue(Ir(e), r);
            return a != null
              ? { path: qr(new nr(n), a.path), value: a.value }
              : null;
          } else return null;
        }
      }
      findRootMostValueAndPath(e) {
        return this.findRootMostMatchingPathAndValue(e, () => !0);
      }
      subtree(e) {
        if (It(e)) return this;
        {
          const r = Ot(e),
            n = this.children.get(r);
          return n !== null ? n.subtree(Ir(e)) : new Tr(null);
        }
      }
      set(e, r) {
        if (It(e)) return new Tr(r, this.children);
        {
          const n = Ot(e),
            i = (this.children.get(n) || new Tr(null)).set(Ir(e), r),
            a = this.children.insert(n, i);
          return new Tr(this.value, a);
        }
      }
      remove(e) {
        if (It(e))
          return this.children.isEmpty()
            ? new Tr(null)
            : new Tr(null, this.children);
        {
          const r = Ot(e),
            n = this.children.get(r);
          if (n) {
            const i = n.remove(Ir(e));
            let a;
            return (
              i.isEmpty()
                ? (a = this.children.remove(r))
                : (a = this.children.insert(r, i)),
              this.value === null && a.isEmpty()
                ? new Tr(null)
                : new Tr(this.value, a)
            );
          } else return this;
        }
      }
      get(e) {
        if (It(e)) return this.value;
        {
          const r = Ot(e),
            n = this.children.get(r);
          return n ? n.get(Ir(e)) : null;
        }
      }
      setTree(e, r) {
        if (It(e)) return r;
        {
          const n = Ot(e),
            i = (this.children.get(n) || new Tr(null)).setTree(Ir(e), r);
          let a;
          return (
            i.isEmpty()
              ? (a = this.children.remove(n))
              : (a = this.children.insert(n, i)),
            new Tr(this.value, a)
          );
        }
      }
      fold(e) {
        return this.fold_($t(), e);
      }
      fold_(e, r) {
        const n = {};
        return (
          this.children.inorderTraversal((i, a) => {
            n[i] = a.fold_(qr(e, i), r);
          }),
          r(e, this.value, n)
        );
      }
      findOnPath(e, r) {
        return this.findOnPath_(e, $t(), r);
      }
      findOnPath_(e, r, n) {
        const i = this.value ? n(r, this.value) : !1;
        if (i) return i;
        if (It(e)) return null;
        {
          const a = Ot(e),
            l = this.children.get(a);
          return l ? l.findOnPath_(Ir(e), qr(r, a), n) : null;
        }
      }
      foreachOnPath(e, r) {
        return this.foreachOnPath_(e, $t(), r);
      }
      foreachOnPath_(e, r, n) {
        if (It(e)) return this;
        {
          this.value && n(r, this.value);
          const i = Ot(e),
            a = this.children.get(i);
          return a ? a.foreachOnPath_(Ir(e), qr(r, i), n) : new Tr(null);
        }
      }
      foreach(e) {
        this.foreach_($t(), e);
      }
      foreach_(e, r) {
        this.children.inorderTraversal((n, i) => {
          i.foreach_(qr(e, n), r);
        }),
          this.value && r(e, this.value);
      }
      foreachChild(e) {
        this.children.inorderTraversal((r, n) => {
          n.value && e(r, n.value);
        });
      }
    }
    class es {
      constructor(e) {
        this.writeTree_ = e;
      }
      static empty() {
        return new es(new Tr(null));
      }
    }
    function hd(t, e, r) {
      if (It(e)) return new es(new Tr(r));
      {
        const n = t.writeTree_.findRootMostValueAndPath(e);
        if (n != null) {
          const i = n.path;
          let a = n.value;
          const l = ei(i, e);
          return (a = a.updateChild(l, r)), new es(t.writeTree_.set(i, a));
        } else {
          const i = new Tr(r),
            a = t.writeTree_.setTree(e, i);
          return new es(a);
        }
      }
    }
    function jx(t, e, r) {
      let n = t;
      return (
        _n(r, (i, a) => {
          n = hd(n, qr(e, i), a);
        }),
        n
      );
    }
    function _P(t, e) {
      if (It(e)) return es.empty();
      {
        const r = t.writeTree_.setTree(e, new Tr(null));
        return new es(r);
      }
    }
    function Gx(t, e) {
      return Tl(t, e) != null;
    }
    function Tl(t, e) {
      const r = t.writeTree_.findRootMostValueAndPath(e);
      return r != null
        ? t.writeTree_.get(r.path).getChild(ei(r.path, e))
        : null;
    }
    function AP(t) {
      const e = [],
        r = t.writeTree_.value;
      return (
        r != null
          ? r.isLeafNode() ||
            r.forEachChild(jr, (n, i) => {
              e.push(new Tt(n, i));
            })
          : t.writeTree_.children.inorderTraversal((n, i) => {
              i.value != null && e.push(new Tt(n, i.value));
            }),
        e
      );
    }
    function mo(t, e) {
      if (It(e)) return t;
      {
        const r = Tl(t, e);
        return r != null ? new es(new Tr(r)) : new es(t.writeTree_.subtree(e));
      }
    }
    function Yx(t) {
      return t.writeTree_.isEmpty();
    }
    function iu(t, e) {
      return CP($t(), t.writeTree_, e);
    }
    function CP(t, e, r) {
      if (e.value != null) return r.updateChild(t, e.value);
      {
        let n = null;
        return (
          e.children.inorderTraversal((i, a) => {
            i === ".priority"
              ? (Ke(
                  a.value !== null,
                  "Priority writes must always be leaf nodes"
                ),
                (n = a.value))
              : (r = CP(qr(t, i), a, r));
          }),
          !r.getChild(t).isEmpty() &&
            n !== null &&
            (r = r.updateChild(qr(t, ".priority"), n)),
          r
        );
      }
    }
    function Vx(t, e) {
      return PP(e, t);
    }
    function ZQ(t, e, r, n, i) {
      Ke(n > t.lastWriteId, "Stacking an older write on top of newer ones"),
        i === void 0 && (i = !0),
        t.allWrites.push({ path: e, snap: r, writeId: n, visible: i }),
        i && (t.visibleWrites = hd(t.visibleWrites, e, r)),
        (t.lastWriteId = n);
    }
    function QQ(t, e, r, n) {
      Ke(n > t.lastWriteId, "Stacking an older merge on top of newer ones"),
        t.allWrites.push({ path: e, children: r, writeId: n, visible: !0 }),
        (t.visibleWrites = jx(t.visibleWrites, e, r)),
        (t.lastWriteId = n);
    }
    function JQ(t, e) {
      for (let r = 0; r < t.allWrites.length; r++) {
        const n = t.allWrites[r];
        if (n.writeId === e) return n;
      }
      return null;
    }
    function eJ(t, e) {
      const r = t.allWrites.findIndex((u) => u.writeId === e);
      Ke(r >= 0, "removeWrite called with nonexistent writeId.");
      const n = t.allWrites[r];
      t.allWrites.splice(r, 1);
      let i = n.visible,
        a = !1,
        l = t.allWrites.length - 1;
      for (; i && l >= 0; ) {
        const u = t.allWrites[l];
        u.visible &&
          (l >= r && tJ(u, n.path) ? (i = !1) : Ii(n.path, u.path) && (a = !0)),
          l--;
      }
      if (i) {
        if (a) return rJ(t), !0;
        if (n.snap) t.visibleWrites = _P(t.visibleWrites, n.path);
        else {
          const u = n.children;
          _n(u, (p) => {
            t.visibleWrites = _P(t.visibleWrites, qr(n.path, p));
          });
        }
        return !0;
      } else return !1;
    }
    function tJ(t, e) {
      if (t.snap) return Ii(t.path, e);
      for (const r in t.children)
        if (t.children.hasOwnProperty(r) && Ii(qr(t.path, r), e)) return !0;
      return !1;
    }
    function rJ(t) {
      (t.visibleWrites = SP(t.allWrites, nJ, $t())),
        t.allWrites.length > 0
          ? (t.lastWriteId = t.allWrites[t.allWrites.length - 1].writeId)
          : (t.lastWriteId = -1);
    }
    function nJ(t) {
      return t.visible;
    }
    function SP(t, e, r) {
      let n = es.empty();
      for (let i = 0; i < t.length; ++i) {
        const a = t[i];
        if (e(a)) {
          const l = a.path;
          let u;
          if (a.snap)
            Ii(r, l)
              ? ((u = ei(r, l)), (n = hd(n, u, a.snap)))
              : Ii(l, r) &&
                ((u = ei(l, r)), (n = hd(n, $t(), a.snap.getChild(u))));
          else if (a.children) {
            if (Ii(r, l)) (u = ei(r, l)), (n = jx(n, u, a.children));
            else if (Ii(l, r))
              if (((u = ei(l, r)), It(u))) n = jx(n, $t(), a.children);
              else {
                const p = qc(a.children, Ot(u));
                if (p) {
                  const m = p.getChild(Ir(u));
                  n = hd(n, $t(), m);
                }
              }
          } else throw Vc("WriteRecord should have .snap or .children");
        }
      }
      return n;
    }
    function EP(t, e, r, n, i) {
      if (!n && !i) {
        const a = Tl(t.visibleWrites, e);
        if (a != null) return a;
        {
          const l = mo(t.visibleWrites, e);
          if (Yx(l)) return r;
          if (r == null && !Gx(l, $t())) return null;
          {
            const u = r || ht.EMPTY_NODE;
            return iu(l, u);
          }
        }
      } else {
        const a = mo(t.visibleWrites, e);
        if (!i && Yx(a)) return r;
        if (!i && r == null && !Gx(a, $t())) return null;
        {
          const l = function (m) {
              return (
                (m.visible || i) &&
                (!n || !~n.indexOf(m.writeId)) &&
                (Ii(m.path, e) || Ii(e, m.path))
              );
            },
            u = SP(t.allWrites, l, e),
            p = r || ht.EMPTY_NODE;
          return iu(u, p);
        }
      }
    }
    function iJ(t, e, r) {
      let n = ht.EMPTY_NODE;
      const i = Tl(t.visibleWrites, e);
      if (i)
        return (
          i.isLeafNode() ||
            i.forEachChild(jr, (a, l) => {
              n = n.updateImmediateChild(a, l);
            }),
          n
        );
      if (r) {
        const a = mo(t.visibleWrites, e);
        return (
          r.forEachChild(jr, (l, u) => {
            const p = iu(mo(a, new nr(l)), u);
            n = n.updateImmediateChild(l, p);
          }),
          AP(a).forEach((l) => {
            n = n.updateImmediateChild(l.name, l.node);
          }),
          n
        );
      } else {
        const a = mo(t.visibleWrites, e);
        return (
          AP(a).forEach((l) => {
            n = n.updateImmediateChild(l.name, l.node);
          }),
          n
        );
      }
    }
    function sJ(t, e, r, n, i) {
      Ke(n || i, "Either existingEventSnap or existingServerSnap must exist");
      const a = qr(e, r);
      if (Gx(t.visibleWrites, a)) return null;
      {
        const l = mo(t.visibleWrites, a);
        return Yx(l) ? i.getChild(r) : iu(l, i.getChild(r));
      }
    }
    function aJ(t, e, r, n) {
      const i = qr(e, r),
        a = Tl(t.visibleWrites, i);
      if (a != null) return a;
      if (n.isCompleteForChild(r)) {
        const l = mo(t.visibleWrites, i);
        return iu(l, n.getNode().getImmediateChild(r));
      } else return null;
    }
    function oJ(t, e) {
      return Tl(t.visibleWrites, e);
    }
    function lJ(t, e, r, n, i, a, l) {
      let u;
      const p = mo(t.visibleWrites, e),
        m = Tl(p, $t());
      if (m != null) u = m;
      else if (r != null) u = iu(p, r);
      else return [];
      if (((u = u.withIndex(l)), !u.isEmpty() && !u.isLeafNode())) {
        const v = [],
          w = l.getCompare(),
          S = a ? u.getReverseIteratorFrom(n, l) : u.getIteratorFrom(n, l);
        let M = S.getNext();
        for (; M && v.length < i; )
          w(M, n) !== 0 && v.push(M), (M = S.getNext());
        return v;
      } else return [];
    }
    function cJ() {
      return { visibleWrites: es.empty(), allWrites: [], lastWriteId: -1 };
    }
    function $g(t, e, r, n) {
      return EP(t.writeTree, t.treePath, e, r, n);
    }
    function qx(t, e) {
      return iJ(t.writeTree, t.treePath, e);
    }
    function IP(t, e, r, n) {
      return sJ(t.writeTree, t.treePath, e, r, n);
    }
    function Zg(t, e) {
      return oJ(t.writeTree, qr(t.treePath, e));
    }
    function uJ(t, e, r, n, i, a) {
      return lJ(t.writeTree, t.treePath, e, r, n, i, a);
    }
    function Kx(t, e, r) {
      return aJ(t.writeTree, t.treePath, e, r);
    }
    function TP(t, e) {
      return PP(qr(t.treePath, e), t.writeTree);
    }
    function PP(t, e) {
      return { treePath: t, writeTree: e };
    }
    class hJ {
      constructor() {
        this.changeMap = new Map();
      }
      trackChildChange(e) {
        const r = e.type,
          n = e.childName;
        Ke(
          r === "child_added" || r === "child_changed" || r === "child_removed",
          "Only child changes supported for tracking"
        ),
          Ke(
            n !== ".priority",
            "Only non-priority child changes can be tracked."
          );
        const i = this.changeMap.get(n);
        if (i) {
          const a = i.type;
          if (r === "child_added" && a === "child_removed")
            this.changeMap.set(n, ad(n, e.snapshotNode, i.snapshotNode));
          else if (r === "child_removed" && a === "child_added")
            this.changeMap.delete(n);
          else if (r === "child_removed" && a === "child_changed")
            this.changeMap.set(n, sd(n, i.oldSnap));
          else if (r === "child_changed" && a === "child_added")
            this.changeMap.set(n, ru(n, e.snapshotNode));
          else if (r === "child_changed" && a === "child_changed")
            this.changeMap.set(n, ad(n, e.snapshotNode, i.oldSnap));
          else
            throw Vc(
              "Illegal combination of changes: " + e + " occurred after " + i
            );
        } else this.changeMap.set(n, e);
      }
      getChanges() {
        return Array.from(this.changeMap.values());
      }
    }
    class dJ {
      getCompleteChild(e) {
        return null;
      }
      getChildAfterChild(e, r, n) {
        return null;
      }
    }
    const OP = new dJ();
    class $x {
      constructor(e, r, n = null) {
        (this.writes_ = e),
          (this.viewCache_ = r),
          (this.optCompleteServerCache_ = n);
      }
      getCompleteChild(e) {
        const r = this.viewCache_.eventCache;
        if (r.isCompleteForChild(e)) return r.getNode().getImmediateChild(e);
        {
          const n =
            this.optCompleteServerCache_ != null
              ? new El(this.optCompleteServerCache_, !0, !1)
              : this.viewCache_.serverCache;
          return Kx(this.writes_, e, n);
        }
      }
      getChildAfterChild(e, r, n) {
        const i =
            this.optCompleteServerCache_ != null
              ? this.optCompleteServerCache_
              : Il(this.viewCache_),
          a = uJ(this.writes_, i, r, 1, n, e);
        return a.length === 0 ? null : a[0];
      }
    }
    function fJ(t) {
      return { filter: t };
    }
    function pJ(t, e) {
      Ke(
        e.eventCache.getNode().isIndexed(t.filter.getIndex()),
        "Event snap not indexed"
      ),
        Ke(
          e.serverCache.getNode().isIndexed(t.filter.getIndex()),
          "Server snap not indexed"
        );
    }
    function gJ(t, e, r, n, i) {
      const a = new hJ();
      let l, u;
      if (r.type === Ji.OVERWRITE) {
        const m = r;
        m.source.fromUser
          ? (l = Zx(t, e, m.path, m.snap, n, i, a))
          : (Ke(m.source.fromServer, "Unknown source."),
            (u =
              m.source.tagged || (e.serverCache.isFiltered() && !It(m.path))),
            (l = Qg(t, e, m.path, m.snap, n, i, u, a)));
      } else if (r.type === Ji.MERGE) {
        const m = r;
        m.source.fromUser
          ? (l = vJ(t, e, m.path, m.children, n, i, a))
          : (Ke(m.source.fromServer, "Unknown source."),
            (u = m.source.tagged || e.serverCache.isFiltered()),
            (l = Qx(t, e, m.path, m.children, n, i, u, a)));
      } else if (r.type === Ji.ACK_USER_WRITE) {
        const m = r;
        m.revert
          ? (l = xJ(t, e, m.path, n, i, a))
          : (l = yJ(t, e, m.path, m.affectedTree, n, i, a));
      } else if (r.type === Ji.LISTEN_COMPLETE) l = bJ(t, e, r.path, n, a);
      else throw Vc("Unknown operation type: " + r.type);
      const p = a.getChanges();
      return mJ(e, l, p), { viewCache: l, changes: p };
    }
    function mJ(t, e, r) {
      const n = e.eventCache;
      if (n.isFullyInitialized()) {
        const i = n.getNode().isLeafNode() || n.getNode().isEmpty(),
          a = Wx(t);
        (r.length > 0 ||
          !t.eventCache.isFullyInitialized() ||
          (i && !n.getNode().equals(a)) ||
          !n.getNode().getPriority().equals(a.getPriority())) &&
          r.push(vP(Wx(e)));
      }
    }
    function LP(t, e, r, n, i, a) {
      const l = e.eventCache;
      if (Zg(n, r) != null) return e;
      {
        let u, p;
        if (It(r))
          if (
            (Ke(
              e.serverCache.isFullyInitialized(),
              "If change path is empty, we must have complete server data"
            ),
            e.serverCache.isFiltered())
          ) {
            const m = Il(e),
              v = m instanceof ht ? m : ht.EMPTY_NODE,
              w = qx(n, v);
            u = t.filter.updateFullNode(e.eventCache.getNode(), w, a);
          } else {
            const m = $g(n, Il(e));
            u = t.filter.updateFullNode(e.eventCache.getNode(), m, a);
          }
        else {
          const m = Ot(r);
          if (m === ".priority") {
            Ke(
              go(r) === 1,
              "Can't have a priority with additional path components"
            );
            const v = l.getNode();
            p = e.serverCache.getNode();
            const w = IP(n, r, v, p);
            w != null ? (u = t.filter.updatePriority(v, w)) : (u = l.getNode());
          } else {
            const v = Ir(r);
            let w;
            if (l.isCompleteForChild(m)) {
              p = e.serverCache.getNode();
              const S = IP(n, r, l.getNode(), p);
              S != null
                ? (w = l.getNode().getImmediateChild(m).updateChild(v, S))
                : (w = l.getNode().getImmediateChild(m));
            } else w = Kx(n, m, e.serverCache);
            w != null
              ? (u = t.filter.updateChild(l.getNode(), m, w, v, i, a))
              : (u = l.getNode());
          }
        }
        return ud(
          e,
          u,
          l.isFullyInitialized() || It(r),
          t.filter.filtersNodes()
        );
      }
    }
    function Qg(t, e, r, n, i, a, l, u) {
      const p = e.serverCache;
      let m;
      const v = l ? t.filter : t.filter.getIndexedFilter();
      if (It(r)) m = v.updateFullNode(p.getNode(), n, null);
      else if (v.filtersNodes() && !p.isFiltered()) {
        const M = p.getNode().updateChild(r, n);
        m = v.updateFullNode(p.getNode(), M, null);
      } else {
        const M = Ot(r);
        if (!p.isCompleteForPath(r) && go(r) > 1) return e;
        const D = Ir(r),
          z = p.getNode().getImmediateChild(M).updateChild(D, n);
        M === ".priority"
          ? (m = v.updatePriority(p.getNode(), z))
          : (m = v.updateChild(p.getNode(), M, z, D, OP, null));
      }
      const w = kP(e, m, p.isFullyInitialized() || It(r), v.filtersNodes()),
        S = new $x(i, w, a);
      return LP(t, w, r, i, S, u);
    }
    function Zx(t, e, r, n, i, a, l) {
      const u = e.eventCache;
      let p, m;
      const v = new $x(i, e, a);
      if (It(r))
        (m = t.filter.updateFullNode(e.eventCache.getNode(), n, l)),
          (p = ud(e, m, !0, t.filter.filtersNodes()));
      else {
        const w = Ot(r);
        if (w === ".priority")
          (m = t.filter.updatePriority(e.eventCache.getNode(), n)),
            (p = ud(e, m, u.isFullyInitialized(), u.isFiltered()));
        else {
          const S = Ir(r),
            M = u.getNode().getImmediateChild(w);
          let D;
          if (It(S)) D = n;
          else {
            const z = v.getCompleteChild(w);
            z != null
              ? Tx(S) === ".priority" && z.getChild(aP(S)).isEmpty()
                ? (D = z)
                : (D = z.updateChild(S, n))
              : (D = ht.EMPTY_NODE);
          }
          if (M.equals(D)) p = e;
          else {
            const z = t.filter.updateChild(u.getNode(), w, D, S, v, l);
            p = ud(e, z, u.isFullyInitialized(), t.filter.filtersNodes());
          }
        }
      }
      return p;
    }
    function MP(t, e) {
      return t.eventCache.isCompleteForChild(e);
    }
    function vJ(t, e, r, n, i, a, l) {
      let u = e;
      return (
        n.foreach((p, m) => {
          const v = qr(r, p);
          MP(e, Ot(v)) && (u = Zx(t, u, v, m, i, a, l));
        }),
        n.foreach((p, m) => {
          const v = qr(r, p);
          MP(e, Ot(v)) || (u = Zx(t, u, v, m, i, a, l));
        }),
        u
      );
    }
    function RP(t, e, r) {
      return (
        r.foreach((n, i) => {
          e = e.updateChild(n, i);
        }),
        e
      );
    }
    function Qx(t, e, r, n, i, a, l, u) {
      if (
        e.serverCache.getNode().isEmpty() &&
        !e.serverCache.isFullyInitialized()
      )
        return e;
      let p = e,
        m;
      It(r) ? (m = n) : (m = new Tr(null).setTree(r, n));
      const v = e.serverCache.getNode();
      return (
        m.children.inorderTraversal((w, S) => {
          if (v.hasChild(w)) {
            const M = e.serverCache.getNode().getImmediateChild(w),
              D = RP(t, M, S);
            p = Qg(t, p, new nr(w), D, i, a, l, u);
          }
        }),
        m.children.inorderTraversal((w, S) => {
          const M = !e.serverCache.isCompleteForChild(w) && S.value === null;
          if (!v.hasChild(w) && !M) {
            const D = e.serverCache.getNode().getImmediateChild(w),
              z = RP(t, D, S);
            p = Qg(t, p, new nr(w), z, i, a, l, u);
          }
        }),
        p
      );
    }
    function yJ(t, e, r, n, i, a, l) {
      if (Zg(i, r) != null) return e;
      const u = e.serverCache.isFiltered(),
        p = e.serverCache;
      if (n.value != null) {
        if ((It(r) && p.isFullyInitialized()) || p.isCompleteForPath(r))
          return Qg(t, e, r, p.getNode().getChild(r), i, a, u, l);
        if (It(r)) {
          let m = new Tr(null);
          return (
            p.getNode().forEachChild(Cl, (v, w) => {
              m = m.set(new nr(v), w);
            }),
            Qx(t, e, r, m, i, a, u, l)
          );
        } else return e;
      } else {
        let m = new Tr(null);
        return (
          n.foreach((v, w) => {
            const S = qr(r, v);
            p.isCompleteForPath(S) && (m = m.set(v, p.getNode().getChild(S)));
          }),
          Qx(t, e, r, m, i, a, u, l)
        );
      }
    }
    function bJ(t, e, r, n, i) {
      const a = e.serverCache,
        l = kP(e, a.getNode(), a.isFullyInitialized() || It(r), a.isFiltered());
      return LP(t, l, r, n, OP, i);
    }
    function xJ(t, e, r, n, i, a) {
      let l;
      if (Zg(n, r) != null) return e;
      {
        const u = new $x(n, e, i),
          p = e.eventCache.getNode();
        let m;
        if (It(r) || Ot(r) === ".priority") {
          let v;
          if (e.serverCache.isFullyInitialized()) v = $g(n, Il(e));
          else {
            const w = e.serverCache.getNode();
            Ke(
              w instanceof ht,
              "serverChildren would be complete if leaf node"
            ),
              (v = qx(n, w));
          }
          (v = v), (m = t.filter.updateFullNode(p, v, a));
        } else {
          const v = Ot(r);
          let w = Kx(n, v, e.serverCache);
          w == null &&
            e.serverCache.isCompleteForChild(v) &&
            (w = p.getImmediateChild(v)),
            w != null
              ? (m = t.filter.updateChild(p, v, w, Ir(r), u, a))
              : e.eventCache.getNode().hasChild(v)
              ? (m = t.filter.updateChild(p, v, ht.EMPTY_NODE, Ir(r), u, a))
              : (m = p),
            m.isEmpty() &&
              e.serverCache.isFullyInitialized() &&
              ((l = $g(n, Il(e))),
              l.isLeafNode() && (m = t.filter.updateFullNode(m, l, a)));
        }
        return (
          (l = e.serverCache.isFullyInitialized() || Zg(n, $t()) != null),
          ud(e, m, l, t.filter.filtersNodes())
        );
      }
    }
    class wJ {
      constructor(e, r) {
        (this.query_ = e), (this.eventRegistrations_ = []);
        const n = this.query_._queryParams,
          i = new Bx(n.getIndex()),
          a = FQ(n);
        this.processor_ = fJ(a);
        const l = r.serverCache,
          u = r.eventCache,
          p = i.updateFullNode(ht.EMPTY_NODE, l.getNode(), null),
          m = a.updateFullNode(ht.EMPTY_NODE, u.getNode(), null),
          v = new El(p, l.isFullyInitialized(), i.filtersNodes()),
          w = new El(m, u.isFullyInitialized(), a.filtersNodes());
        (this.viewCache_ = Kg(w, v)),
          (this.eventGenerator_ = new YQ(this.query_));
      }
      get query() {
        return this.query_;
      }
    }
    function kJ(t) {
      return t.viewCache_.serverCache.getNode();
    }
    function _J(t, e) {
      const r = Il(t.viewCache_);
      return r &&
        (t.query._queryParams.loadsAllData() ||
          (!It(e) && !r.getImmediateChild(Ot(e)).isEmpty()))
        ? r.getChild(e)
        : null;
    }
    function NP(t) {
      return t.eventRegistrations_.length === 0;
    }
    function AJ(t, e) {
      t.eventRegistrations_.push(e);
    }
    function BP(t, e, r) {
      const n = [];
      if (r) {
        Ke(e == null, "A cancel should cancel all event registrations.");
        const i = t.query._path;
        t.eventRegistrations_.forEach((a) => {
          const l = a.createCancelEvent(r, i);
          l && n.push(l);
        });
      }
      if (e) {
        let i = [];
        for (let a = 0; a < t.eventRegistrations_.length; ++a) {
          const l = t.eventRegistrations_[a];
          if (!l.matches(e)) i.push(l);
          else if (e.hasAnyCallback()) {
            i = i.concat(t.eventRegistrations_.slice(a + 1));
            break;
          }
        }
        t.eventRegistrations_ = i;
      } else t.eventRegistrations_ = [];
      return n;
    }
    function FP(t, e, r, n) {
      e.type === Ji.MERGE &&
        e.source.queryId !== null &&
        (Ke(
          Il(t.viewCache_),
          "We should always have a full cache before handling merges"
        ),
        Ke(
          Wx(t.viewCache_),
          "Missing event cache, even though we have a server cache"
        ));
      const i = t.viewCache_,
        a = gJ(t.processor_, i, e, r, n);
      return (
        pJ(t.processor_, a.viewCache),
        Ke(
          a.viewCache.serverCache.isFullyInitialized() ||
            !i.serverCache.isFullyInitialized(),
          "Once a server snap is complete, it should never go back"
        ),
        (t.viewCache_ = a.viewCache),
        DP(t, a.changes, a.viewCache.eventCache.getNode(), null)
      );
    }
    function CJ(t, e) {
      const r = t.viewCache_.eventCache,
        n = [];
      return (
        r.getNode().isLeafNode() ||
          r.getNode().forEachChild(jr, (i, a) => {
            n.push(ru(i, a));
          }),
        r.isFullyInitialized() && n.push(vP(r.getNode())),
        DP(t, n, r.getNode(), e)
      );
    }
    function DP(t, e, r, n) {
      const i = n ? [n] : t.eventRegistrations_;
      return VQ(t.eventGenerator_, e, r, i);
    }
    let Jg;
    class SJ {
      constructor() {
        this.views = new Map();
      }
    }
    function EJ(t) {
      Ke(!Jg, "__referenceConstructor has already been defined"), (Jg = t);
    }
    function IJ() {
      return Ke(Jg, "Reference.ts has not been loaded"), Jg;
    }
    function TJ(t) {
      return t.views.size === 0;
    }
    function Jx(t, e, r, n) {
      const i = e.source.queryId;
      if (i !== null) {
        const a = t.views.get(i);
        return (
          Ke(a != null, "SyncTree gave us an op for an invalid query."),
          FP(a, e, r, n)
        );
      } else {
        let a = [];
        for (const l of t.views.values()) a = a.concat(FP(l, e, r, n));
        return a;
      }
    }
    function PJ(t, e, r, n, i) {
      const a = e._queryIdentifier,
        l = t.views.get(a);
      if (!l) {
        let u = $g(r, i ? n : null),
          p = !1;
        u
          ? (p = !0)
          : n instanceof ht
          ? ((u = qx(r, n)), (p = !1))
          : ((u = ht.EMPTY_NODE), (p = !1));
        const m = Kg(new El(u, p, !1), new El(n, i, !1));
        return new wJ(e, m);
      }
      return l;
    }
    function OJ(t, e, r, n, i, a) {
      const l = PJ(t, e, n, i, a);
      return (
        t.views.has(e._queryIdentifier) || t.views.set(e._queryIdentifier, l),
        AJ(l, r),
        CJ(l, r)
      );
    }
    function LJ(t, e, r, n) {
      const i = e._queryIdentifier,
        a = [];
      let l = [];
      const u = vo(t);
      if (i === "default")
        for (const [p, m] of t.views.entries())
          (l = l.concat(BP(m, r, n))),
            NP(m) &&
              (t.views.delete(p),
              m.query._queryParams.loadsAllData() || a.push(m.query));
      else {
        const p = t.views.get(i);
        p &&
          ((l = l.concat(BP(p, r, n))),
          NP(p) &&
            (t.views.delete(i),
            p.query._queryParams.loadsAllData() || a.push(p.query)));
      }
      return (
        u && !vo(t) && a.push(new (IJ())(e._repo, e._path)),
        { removed: a, events: l }
      );
    }
    function zP(t) {
      const e = [];
      for (const r of t.views.values())
        r.query._queryParams.loadsAllData() || e.push(r);
      return e;
    }
    function su(t, e) {
      let r = null;
      for (const n of t.views.values()) r = r || _J(n, e);
      return r;
    }
    function HP(t, e) {
      if (e._queryParams.loadsAllData()) return em(t);
      {
        const r = e._queryIdentifier;
        return t.views.get(r);
      }
    }
    function UP(t, e) {
      return HP(t, e) != null;
    }
    function vo(t) {
      return em(t) != null;
    }
    function em(t) {
      for (const e of t.views.values())
        if (e.query._queryParams.loadsAllData()) return e;
      return null;
    }
    let tm;
    function MJ(t) {
      Ke(!tm, "__referenceConstructor has already been defined"), (tm = t);
    }
    function RJ() {
      return Ke(tm, "Reference.ts has not been loaded"), tm;
    }
    let NJ = 1;
    class WP {
      constructor(e) {
        (this.listenProvider_ = e),
          (this.syncPointTree_ = new Tr(null)),
          (this.pendingWriteTree_ = cJ()),
          (this.tagToQueryMap = new Map()),
          (this.queryToTagMap = new Map());
      }
    }
    function BJ(t, e, r, n, i) {
      return (
        ZQ(t.pendingWriteTree_, e, r, n, i), i ? au(t, new Sl(zx(), e, r)) : []
      );
    }
    function FJ(t, e, r, n) {
      QQ(t.pendingWriteTree_, e, r, n);
      const i = Tr.fromObject(r);
      return au(t, new nu(zx(), e, i));
    }
    function Pl(t, e, r = !1) {
      const n = JQ(t.pendingWriteTree_, e);
      if (eJ(t.pendingWriteTree_, e)) {
        let i = new Tr(null);
        return (
          n.snap != null
            ? (i = i.set($t(), !0))
            : _n(n.children, (a) => {
                i = i.set(new nr(a), !0);
              }),
          au(t, new qg(n.path, i, r))
        );
      } else return [];
    }
    function rm(t, e, r) {
      return au(t, new Sl(Hx(), e, r));
    }
    function DJ(t, e, r) {
      const n = Tr.fromObject(r);
      return au(t, new nu(Hx(), e, n));
    }
    function zJ(t, e) {
      return au(t, new ld(Hx(), e));
    }
    function HJ(t, e, r) {
      const n = tw(t, r);
      if (n) {
        const i = rw(n),
          a = i.path,
          l = i.queryId,
          u = ei(a, e),
          p = new ld(Ux(l), u);
        return nw(t, a, p);
      } else return [];
    }
    function ew(t, e, r, n, i = !1) {
      const a = e._path,
        l = t.syncPointTree_.get(a);
      let u = [];
      if (l && (e._queryIdentifier === "default" || UP(l, e))) {
        const p = LJ(l, e, r, n);
        TJ(l) && (t.syncPointTree_ = t.syncPointTree_.remove(a));
        const m = p.removed;
        if (((u = p.events), !i)) {
          const v = m.findIndex((S) => S._queryParams.loadsAllData()) !== -1,
            w = t.syncPointTree_.findOnPath(a, (S, M) => vo(M));
          if (v && !w) {
            const S = t.syncPointTree_.subtree(a);
            if (!S.isEmpty()) {
              const M = XJ(S);
              for (let D = 0; D < M.length; ++D) {
                const z = M[D],
                  V = z.query,
                  j = VP(t, z);
                t.listenProvider_.startListening(
                  dd(V),
                  nm(t, V),
                  j.hashFn,
                  j.onComplete
                );
              }
            }
          }
          !w &&
            m.length > 0 &&
            !n &&
            (v
              ? t.listenProvider_.stopListening(dd(e), null)
              : m.forEach((S) => {
                  const M = t.queryToTagMap.get(im(S));
                  t.listenProvider_.stopListening(dd(S), M);
                }));
        }
        jJ(t, m);
      }
      return u;
    }
    function UJ(t, e, r, n) {
      const i = tw(t, n);
      if (i != null) {
        const a = rw(i),
          l = a.path,
          u = a.queryId,
          p = ei(l, e),
          m = new Sl(Ux(u), p, r);
        return nw(t, l, m);
      } else return [];
    }
    function WJ(t, e, r, n) {
      const i = tw(t, n);
      if (i) {
        const a = rw(i),
          l = a.path,
          u = a.queryId,
          p = ei(l, e),
          m = Tr.fromObject(r),
          v = new nu(Ux(u), p, m);
        return nw(t, l, v);
      } else return [];
    }
    function XP(t, e, r, n = !1) {
      const i = e._path;
      let a = null,
        l = !1;
      t.syncPointTree_.foreachOnPath(i, (S, M) => {
        const D = ei(S, i);
        (a = a || su(M, D)), (l = l || vo(M));
      });
      let u = t.syncPointTree_.get(i);
      u
        ? ((l = l || vo(u)), (a = a || su(u, $t())))
        : ((u = new SJ()), (t.syncPointTree_ = t.syncPointTree_.set(i, u)));
      let p;
      a != null
        ? (p = !0)
        : ((p = !1),
          (a = ht.EMPTY_NODE),
          t.syncPointTree_.subtree(i).foreachChild((S, M) => {
            const D = su(M, $t());
            D && (a = a.updateImmediateChild(S, D));
          }));
      const m = UP(u, e);
      if (!m && !e._queryParams.loadsAllData()) {
        const S = im(e);
        Ke(!t.queryToTagMap.has(S), "View does not exist, but we have a tag");
        const M = GJ();
        t.queryToTagMap.set(S, M), t.tagToQueryMap.set(M, S);
      }
      const v = Vx(t.pendingWriteTree_, i);
      let w = OJ(u, e, r, v, a, p);
      if (!m && !l && !n) {
        const S = HP(u, e);
        w = w.concat(YJ(t, e, S));
      }
      return w;
    }
    function jP(t, e, r) {
      const n = t.pendingWriteTree_,
        i = t.syncPointTree_.findOnPath(e, (a, l) => {
          const u = ei(a, e),
            p = su(l, u);
          if (p) return p;
        });
      return EP(n, e, i, r, !0);
    }
    function au(t, e) {
      return GP(e, t.syncPointTree_, null, Vx(t.pendingWriteTree_, $t()));
    }
    function GP(t, e, r, n) {
      if (It(t.path)) return YP(t, e, r, n);
      {
        const i = e.get($t());
        r == null && i != null && (r = su(i, $t()));
        let a = [];
        const l = Ot(t.path),
          u = t.operationForChild(l),
          p = e.children.get(l);
        if (p && u) {
          const m = r ? r.getImmediateChild(l) : null,
            v = TP(n, l);
          a = a.concat(GP(u, p, m, v));
        }
        return i && (a = a.concat(Jx(i, t, n, r))), a;
      }
    }
    function YP(t, e, r, n) {
      const i = e.get($t());
      r == null && i != null && (r = su(i, $t()));
      let a = [];
      return (
        e.children.inorderTraversal((l, u) => {
          const p = r ? r.getImmediateChild(l) : null,
            m = TP(n, l),
            v = t.operationForChild(l);
          v && (a = a.concat(YP(v, u, p, m)));
        }),
        i && (a = a.concat(Jx(i, t, n, r))),
        a
      );
    }
    function VP(t, e) {
      const r = e.query,
        n = nm(t, r);
      return {
        hashFn: () => (kJ(e) || ht.EMPTY_NODE).hash(),
        onComplete: (i) => {
          if (i === "ok") return n ? HJ(t, r._path, n) : zJ(t, r._path);
          {
            const a = FZ(i, r);
            return ew(t, r, null, a);
          }
        },
      };
    }
    function nm(t, e) {
      const r = im(e);
      return t.queryToTagMap.get(r);
    }
    function im(t) {
      return t._path.toString() + "$" + t._queryIdentifier;
    }
    function tw(t, e) {
      return t.tagToQueryMap.get(e);
    }
    function rw(t) {
      const e = t.indexOf("$");
      return (
        Ke(e !== -1 && e < t.length - 1, "Bad queryKey."),
        { queryId: t.substr(e + 1), path: new nr(t.substr(0, e)) }
      );
    }
    function nw(t, e, r) {
      const n = t.syncPointTree_.get(e);
      Ke(n, "Missing sync point for query tag that we're tracking");
      const i = Vx(t.pendingWriteTree_, e);
      return Jx(n, r, i, null);
    }
    function XJ(t) {
      return t.fold((e, r, n) => {
        if (r && vo(r)) return [em(r)];
        {
          let i = [];
          return (
            r && (i = zP(r)),
            _n(n, (a, l) => {
              i = i.concat(l);
            }),
            i
          );
        }
      });
    }
    function dd(t) {
      return t._queryParams.loadsAllData() && !t._queryParams.isDefault()
        ? new (RJ())(t._repo, t._path)
        : t;
    }
    function jJ(t, e) {
      for (let r = 0; r < e.length; ++r) {
        const n = e[r];
        if (!n._queryParams.loadsAllData()) {
          const i = im(n),
            a = t.queryToTagMap.get(i);
          t.queryToTagMap.delete(i), t.tagToQueryMap.delete(a);
        }
      }
    }
    function GJ() {
      return NJ++;
    }
    function YJ(t, e, r) {
      const n = e._path,
        i = nm(t, e),
        a = VP(t, r),
        l = t.listenProvider_.startListening(dd(e), i, a.hashFn, a.onComplete),
        u = t.syncPointTree_.subtree(n);
      if (i)
        Ke(!vo(u.value), "If we're adding a query, it shouldn't be shadowed");
      else {
        const p = u.fold((m, v, w) => {
          if (!It(m) && v && vo(v)) return [em(v).query];
          {
            let S = [];
            return (
              v && (S = S.concat(zP(v).map((M) => M.query))),
              _n(w, (M, D) => {
                S = S.concat(D);
              }),
              S
            );
          }
        });
        for (let m = 0; m < p.length; ++m) {
          const v = p[m];
          t.listenProvider_.stopListening(dd(v), nm(t, v));
        }
      }
      return l;
    }
    class iw {
      constructor(e) {
        this.node_ = e;
      }
      getImmediateChild(e) {
        const r = this.node_.getImmediateChild(e);
        return new iw(r);
      }
      node() {
        return this.node_;
      }
    }
    class sw {
      constructor(e, r) {
        (this.syncTree_ = e), (this.path_ = r);
      }
      getImmediateChild(e) {
        const r = qr(this.path_, e);
        return new sw(this.syncTree_, r);
      }
      node() {
        return jP(this.syncTree_, this.path_);
      }
    }
    const VJ = function (t) {
        return (
          (t = t || {}), (t.timestamp = t.timestamp || new Date().getTime()), t
        );
      },
      qP = function (t, e, r) {
        if (!t || typeof t != "object") return t;
        if (
          (Ke(".sv" in t, "Unexpected leaf node or priority contents"),
          typeof t[".sv"] == "string")
        )
          return qJ(t[".sv"], e, r);
        if (typeof t[".sv"] == "object") return KJ(t[".sv"], e);
        Ke(!1, "Unexpected server value: " + JSON.stringify(t, null, 2));
      },
      qJ = function (t, e, r) {
        switch (t) {
          case "timestamp":
            return r.timestamp;
          default:
            Ke(!1, "Unexpected server value: " + t);
        }
      },
      KJ = function (t, e, r) {
        t.hasOwnProperty("increment") ||
          Ke(!1, "Unexpected server value: " + JSON.stringify(t, null, 2));
        const n = t.increment;
        typeof n != "number" && Ke(!1, "Unexpected increment value: " + n);
        const i = e.node();
        if (
          (Ke(
            i !== null && typeof i < "u",
            "Expected ChildrenNode.EMPTY_NODE for nulls"
          ),
          !i.isLeafNode())
        )
          return n;
        const a = i.getValue();
        return typeof a != "number" ? n : a + n;
      },
      KP = function (t, e, r, n) {
        return aw(e, new sw(r, t), n);
      },
      $J = function (t, e, r) {
        return aw(t, new iw(e), r);
      };
    function aw(t, e, r) {
      const n = t.getPriority().val(),
        i = qP(n, e.getImmediateChild(".priority"), r);
      let a;
      if (t.isLeafNode()) {
        const l = t,
          u = qP(l.getValue(), e, r);
        return u !== l.getValue() || i !== l.getPriority().val()
          ? new gn(u, An(i))
          : t;
      } else {
        const l = t;
        return (
          (a = l),
          i !== l.getPriority().val() && (a = a.updatePriority(new gn(i))),
          l.forEachChild(jr, (u, p) => {
            const m = aw(p, e.getImmediateChild(u), r);
            m !== p && (a = a.updateImmediateChild(u, m));
          }),
          a
        );
      }
    }
    class ow {
      constructor(e = "", r = null, n = { children: {}, childCount: 0 }) {
        (this.name = e), (this.parent = r), (this.node = n);
      }
    }
    function lw(t, e) {
      let r = e instanceof nr ? e : new nr(e),
        n = t,
        i = Ot(r);
      for (; i !== null; ) {
        const a = qc(n.node.children, i) || { children: {}, childCount: 0 };
        (n = new ow(i, n, a)), (r = Ir(r)), (i = Ot(r));
      }
      return n;
    }
    function ou(t) {
      return t.node.value;
    }
    function $P(t, e) {
      (t.node.value = e), cw(t);
    }
    function ZP(t) {
      return t.node.childCount > 0;
    }
    function ZJ(t) {
      return ou(t) === void 0 && !ZP(t);
    }
    function sm(t, e) {
      _n(t.node.children, (r, n) => {
        e(new ow(r, t, n));
      });
    }
    function QP(t, e, r, n) {
      r && !n && e(t),
        sm(t, (i) => {
          QP(i, e, !0, n);
        }),
        r && n && e(t);
    }
    function QJ(t, e, r) {
      let n = r ? t : t.parent;
      for (; n !== null; ) {
        if (e(n)) return !0;
        n = n.parent;
      }
      return !1;
    }
    function fd(t) {
      return new nr(t.parent === null ? t.name : fd(t.parent) + "/" + t.name);
    }
    function cw(t) {
      t.parent !== null && JJ(t.parent, t.name, t);
    }
    function JJ(t, e, r) {
      const n = ZJ(r),
        i = Ss(t.node.children, e);
      n && i
        ? (delete t.node.children[e], t.node.childCount--, cw(t))
        : !n &&
          !i &&
          ((t.node.children[e] = r.node), t.node.childCount++, cw(t));
    }
    const eee = /[\[\].#$\/\u0000-\u001F\u007F]/,
      tee = /[\[\].#$\u0000-\u001F\u007F]/,
      uw = 10 * 1024 * 1024,
      am = function (t) {
        return typeof t == "string" && t.length !== 0 && !eee.test(t);
      },
      JP = function (t) {
        return typeof t == "string" && t.length !== 0 && !tee.test(t);
      },
      ree = function (t) {
        return t && (t = t.replace(/^\/*\.info(\/|$)/, "/")), JP(t);
      },
      hw = function (t) {
        return (
          t === null ||
          typeof t == "string" ||
          (typeof t == "number" && !xx(t)) ||
          (t && typeof t == "object" && Ss(t, ".sv"))
        );
      },
      nee = function (t, e, r, n) {
        (n && e === void 0) || om(qh(t, "value"), e, r);
      },
      om = function (t, e, r) {
        const n = r instanceof nr ? new vQ(r, t) : r;
        if (e === void 0) throw new Error(t + "contains undefined " + Al(n));
        if (typeof e == "function")
          throw new Error(
            t +
              "contains a function " +
              Al(n) +
              " with contents = " +
              e.toString()
          );
        if (xx(e))
          throw new Error(t + "contains " + e.toString() + " " + Al(n));
        if (typeof e == "string" && e.length > uw / 3 && Dg(e) > uw)
          throw new Error(
            t +
              "contains a string greater than " +
              uw +
              " utf8 bytes " +
              Al(n) +
              " ('" +
              e.substring(0, 50) +
              "...')"
          );
        if (e && typeof e == "object") {
          let i = !1,
            a = !1;
          if (
            (_n(e, (l, u) => {
              if (l === ".value") i = !0;
              else if (l !== ".priority" && l !== ".sv" && ((a = !0), !am(l)))
                throw new Error(
                  t +
                    " contains an invalid key (" +
                    l +
                    ") " +
                    Al(n) +
                    `.  Keys must be non-empty strings and can't contain ".", "#", "$", "/", "[", or "]"`
                );
              yQ(n, l), om(t, u, n), bQ(n);
            }),
            i && a)
          )
            throw new Error(
              t +
                ' contains ".value" child ' +
                Al(n) +
                " in addition to actual children."
            );
        }
      },
      iee = function (t, e) {
        let r, n;
        for (r = 0; r < e.length; r++) {
          n = e[r];
          const a = td(n);
          for (let l = 0; l < a.length; l++)
            if (!(a[l] === ".priority" && l === a.length - 1) && !am(a[l]))
              throw new Error(
                t +
                  "contains an invalid key (" +
                  a[l] +
                  ") in path " +
                  n.toString() +
                  `. Keys must be non-empty strings and can't contain ".", "#", "$", "/", "[", or "]"`
              );
        }
        e.sort(mQ);
        let i = null;
        for (r = 0; r < e.length; r++) {
          if (((n = e[r]), i !== null && Ii(i, n)))
            throw new Error(
              t +
                "contains a path " +
                i.toString() +
                " that is ancestor of another path " +
                n.toString()
            );
          i = n;
        }
      },
      see = function (t, e, r, n) {
        if (n && e === void 0) return;
        const i = qh(t, "values");
        if (!(e && typeof e == "object") || Array.isArray(e))
          throw new Error(
            i + " must be an object containing the children to replace."
          );
        const a = [];
        _n(e, (l, u) => {
          const p = new nr(l);
          if ((om(i, u, qr(r, p)), Tx(p) === ".priority" && !hw(u)))
            throw new Error(
              i +
                "contains an invalid value for '" +
                p.toString() +
                "', which must be a valid Firebase priority (a string, finite number, server value, or null)."
            );
          a.push(p);
        }),
          iee(i, a);
      },
      aee = function (t, e, r, n) {
        if (!(n && r === void 0) && !am(r))
          throw new Error(
            qh(t, e) +
              'was an invalid key = "' +
              r +
              `".  Firebase keys must be non-empty strings and can't contain ".", "#", "$", "/", "[", or "]").`
          );
      },
      dw = function (t, e, r, n) {
        if (!(n && r === void 0) && !JP(r))
          throw new Error(
            qh(t, e) +
              'was an invalid path = "' +
              r +
              `". Paths must be non-empty strings and can't contain ".", "#", "$", "[", or "]"`
          );
      },
      oee = function (t, e, r, n) {
        r && (r = r.replace(/^\/*\.info(\/|$)/, "/")), dw(t, e, r, n);
      },
      lee = function (t, e) {
        const r = e.path.toString();
        if (
          typeof e.repoInfo.host != "string" ||
          e.repoInfo.host.length === 0 ||
          (!am(e.repoInfo.namespace) &&
            e.repoInfo.host.split(":")[0] !== "localhost") ||
          (r.length !== 0 && !ree(r))
        )
          throw new Error(
            qh(t, "url") +
              `must be a valid firebase URL and the path can't contain ".", "#", "$", "[", or "]".`
          );
      };
    class cee {
      constructor() {
        (this.eventLists_ = []), (this.recursionDepth_ = 0);
      }
    }
    function fw(t, e) {
      let r = null;
      for (let n = 0; n < e.length; n++) {
        const i = e[n],
          a = i.getPath();
        r !== null && !Px(a, r.path) && (t.eventLists_.push(r), (r = null)),
          r === null && (r = { events: [], path: a }),
          r.events.push(i);
      }
      r && t.eventLists_.push(r);
    }
    function eO(t, e, r) {
      fw(t, r), tO(t, (n) => Px(n, e));
    }
    function ga(t, e, r) {
      fw(t, r), tO(t, (n) => Ii(n, e) || Ii(e, n));
    }
    function tO(t, e) {
      t.recursionDepth_++;
      let r = !0;
      for (let n = 0; n < t.eventLists_.length; n++) {
        const i = t.eventLists_[n];
        if (i) {
          const a = i.path;
          e(a) ? (uee(t.eventLists_[n]), (t.eventLists_[n] = null)) : (r = !1);
        }
      }
      r && (t.eventLists_ = []), t.recursionDepth_--;
    }
    function uee(t) {
      for (let e = 0; e < t.events.length; e++) {
        const r = t.events[e];
        if (r !== null) {
          t.events[e] = null;
          const n = r.getEventRunner();
          wl && kn("event: " + r.toString()), Qc(n);
        }
      }
    }
    const hee = "repo_interrupt",
      dee = 25;
    class fee {
      constructor(e, r, n, i) {
        (this.repoInfo_ = e),
          (this.forceRestClient_ = r),
          (this.authTokenProvider_ = n),
          (this.appCheckProvider_ = i),
          (this.dataUpdateCount = 0),
          (this.statsListener_ = null),
          (this.eventQueue_ = new cee()),
          (this.nextWriteId_ = 1),
          (this.interceptServerDataCallback_ = null),
          (this.onDisconnect_ = Vg()),
          (this.transactionQueueTree_ = new ow()),
          (this.persistentConnection_ = null),
          (this.key = this.repoInfo_.toURLString());
      }
      toString() {
        return (
          (this.repoInfo_.secure ? "https://" : "http://") + this.repoInfo_.host
        );
      }
    }
    function pee(t, e, r) {
      if (((t.stats_ = Sx(t.repoInfo_)), t.forceRestClient_ || UZ()))
        (t.server_ = new Yg(
          t.repoInfo_,
          (n, i, a, l) => {
            rO(t, n, i, a, l);
          },
          t.authTokenProvider_,
          t.appCheckProvider_
        )),
          setTimeout(() => nO(t, !0), 0);
      else {
        if (typeof r < "u" && r !== null) {
          if (typeof r != "object")
            throw new Error(
              "Only objects are supported for option databaseAuthVariableOverride"
            );
          try {
            fn(r);
          } catch (n) {
            throw new Error("Invalid authOverride provided: " + n);
          }
        }
        (t.persistentConnection_ = new fa(
          t.repoInfo_,
          e,
          (n, i, a, l) => {
            rO(t, n, i, a, l);
          },
          (n) => {
            nO(t, n);
          },
          (n) => {
            mee(t, n);
          },
          t.authTokenProvider_,
          t.appCheckProvider_,
          r
        )),
          (t.server_ = t.persistentConnection_);
      }
      t.authTokenProvider_.addTokenChangeListener((n) => {
        t.server_.refreshAuthToken(n);
      }),
        t.appCheckProvider_.addTokenChangeListener((n) => {
          t.server_.refreshAppCheckToken(n.token);
        }),
        (t.statsReporter_ = YZ(t.repoInfo_, () => new GQ(t.stats_, t.server_))),
        (t.infoData_ = new HQ()),
        (t.infoSyncTree_ = new WP({
          startListening: (n, i, a, l) => {
            let u = [];
            const p = t.infoData_.getNode(n._path);
            return (
              p.isEmpty() ||
                ((u = rm(t.infoSyncTree_, n._path, p)),
                setTimeout(() => {
                  l("ok");
                }, 0)),
              u
            );
          },
          stopListening: () => {},
        })),
        gw(t, "connected", !1),
        (t.serverSyncTree_ = new WP({
          startListening: (n, i, a, l) => (
            t.server_.listen(n, a, i, (u, p) => {
              const m = l(u, p);
              ga(t.eventQueue_, n._path, m);
            }),
            []
          ),
          stopListening: (n, i) => {
            t.server_.unlisten(n, i);
          },
        }));
    }
    function gee(t) {
      const e =
        t.infoData_.getNode(new nr(".info/serverTimeOffset")).val() || 0;
      return new Date().getTime() + e;
    }
    function pw(t) {
      return VJ({ timestamp: gee(t) });
    }
    function rO(t, e, r, n, i) {
      t.dataUpdateCount++;
      const a = new nr(e);
      r = t.interceptServerDataCallback_
        ? t.interceptServerDataCallback_(e, r)
        : r;
      let l = [];
      if (i)
        if (n) {
          const p = Fg(r, (m) => An(m));
          l = WJ(t.serverSyncTree_, a, p, i);
        } else {
          const p = An(r);
          l = UJ(t.serverSyncTree_, a, p, i);
        }
      else if (n) {
        const p = Fg(r, (m) => An(m));
        l = DJ(t.serverSyncTree_, a, p);
      } else {
        const p = An(r);
        l = rm(t.serverSyncTree_, a, p);
      }
      let u = a;
      l.length > 0 && (u = pd(t, a)), ga(t.eventQueue_, u, l);
    }
    function nO(t, e) {
      gw(t, "connected", e), e === !1 && yee(t);
    }
    function mee(t, e) {
      _n(e, (r, n) => {
        gw(t, r, n);
      });
    }
    function gw(t, e, r) {
      const n = new nr("/.info/" + e),
        i = An(r);
      t.infoData_.updateSnapshot(n, i);
      const a = rm(t.infoSyncTree_, n, i);
      ga(t.eventQueue_, n, a);
    }
    function iO(t) {
      return t.nextWriteId_++;
    }
    function vee(t, e, r, n) {
      mw(t, "update", { path: e.toString(), value: r });
      let i = !0;
      const a = pw(t),
        l = {};
      if (
        (_n(r, (u, p) => {
          (i = !1), (l[u] = KP(qr(e, u), An(p), t.serverSyncTree_, a));
        }),
        i)
      )
        kn("update() called with empty data.  Don't do anything."),
          aO(t, n, "ok", void 0);
      else {
        const u = iO(t),
          p = FJ(t.serverSyncTree_, e, l, u);
        fw(t.eventQueue_, p),
          t.server_.merge(e.toString(), r, (m, v) => {
            const w = m === "ok";
            w || Jn("update at " + e + " failed: " + m);
            const S = Pl(t.serverSyncTree_, u, !w),
              M = S.length > 0 ? pd(t, e) : e;
            ga(t.eventQueue_, M, S), aO(t, n, m, v);
          }),
          _n(r, (m) => {
            const v = hO(t, qr(e, m));
            pd(t, v);
          }),
          ga(t.eventQueue_, e, []);
      }
    }
    function yee(t) {
      mw(t, "onDisconnectEvents");
      const e = pw(t),
        r = Vg();
      Dx(t.onDisconnect_, $t(), (i, a) => {
        const l = KP(i, a, t.serverSyncTree_, e);
        xP(r, i, l);
      });
      let n = [];
      Dx(r, $t(), (i, a) => {
        n = n.concat(rm(t.serverSyncTree_, i, a));
        const l = hO(t, i);
        pd(t, l);
      }),
        (t.onDisconnect_ = Vg()),
        ga(t.eventQueue_, $t(), n);
    }
    function bee(t, e, r) {
      let n;
      Ot(e._path) === ".info"
        ? (n = XP(t.infoSyncTree_, e, r))
        : (n = XP(t.serverSyncTree_, e, r)),
        eO(t.eventQueue_, e._path, n);
    }
    function sO(t, e, r) {
      let n;
      Ot(e._path) === ".info"
        ? (n = ew(t.infoSyncTree_, e, r))
        : (n = ew(t.serverSyncTree_, e, r)),
        eO(t.eventQueue_, e._path, n);
    }
    function xee(t) {
      t.persistentConnection_ && t.persistentConnection_.interrupt(hee);
    }
    function mw(t, ...e) {
      let r = "";
      t.persistentConnection_ && (r = t.persistentConnection_.id + ":"),
        kn(r, ...e);
    }
    function aO(t, e, r, n) {
      e &&
        Qc(() => {
          if (r === "ok") e(null);
          else {
            const i = (r || "error").toUpperCase();
            let a = i;
            n && (a += ": " + n);
            const l = new Error(a);
            (l.code = i), e(l);
          }
        });
    }
    function oO(t, e, r) {
      return jP(t.serverSyncTree_, e, r) || ht.EMPTY_NODE;
    }
    function vw(t, e = t.transactionQueueTree_) {
      if ((e || lm(t, e), ou(e))) {
        const r = cO(t, e);
        Ke(r.length > 0, "Sending zero length transaction queue"),
          r.every((n) => n.status === 0) && wee(t, fd(e), r);
      } else
        ZP(e) &&
          sm(e, (r) => {
            vw(t, r);
          });
    }
    function wee(t, e, r) {
      const n = r.map((m) => m.currentWriteId),
        i = oO(t, e, n);
      let a = i;
      const l = i.hash();
      for (let m = 0; m < r.length; m++) {
        const v = r[m];
        Ke(
          v.status === 0,
          "tryToSendTransactionQueue_: items in queue should all be run."
        ),
          (v.status = 1),
          v.retryCount++;
        const w = ei(e, v.path);
        a = a.updateChild(w, v.currentOutputSnapshotRaw);
      }
      const u = a.val(!0),
        p = e;
      t.server_.put(
        p.toString(),
        u,
        (m) => {
          mw(t, "transaction put response", { path: p.toString(), status: m });
          let v = [];
          if (m === "ok") {
            const w = [];
            for (let S = 0; S < r.length; S++)
              (r[S].status = 2),
                (v = v.concat(Pl(t.serverSyncTree_, r[S].currentWriteId))),
                r[S].onComplete &&
                  w.push(() =>
                    r[S].onComplete(
                      null,
                      !0,
                      r[S].currentOutputSnapshotResolved
                    )
                  ),
                r[S].unwatcher();
            lm(t, lw(t.transactionQueueTree_, e)),
              vw(t, t.transactionQueueTree_),
              ga(t.eventQueue_, e, v);
            for (let S = 0; S < w.length; S++) Qc(w[S]);
          } else {
            if (m === "datastale")
              for (let w = 0; w < r.length; w++)
                r[w].status === 3 ? (r[w].status = 4) : (r[w].status = 0);
            else {
              Jn("transaction at " + p.toString() + " failed: " + m);
              for (let w = 0; w < r.length; w++)
                (r[w].status = 4), (r[w].abortReason = m);
            }
            pd(t, e);
          }
        },
        l
      );
    }
    function pd(t, e) {
      const r = lO(t, e),
        n = fd(r),
        i = cO(t, r);
      return kee(t, i, n), n;
    }
    function kee(t, e, r) {
      if (e.length === 0) return;
      const n = [];
      let i = [];
      const a = e.filter((l) => l.status === 0).map((l) => l.currentWriteId);
      for (let l = 0; l < e.length; l++) {
        const u = e[l],
          p = ei(r, u.path);
        let m = !1,
          v;
        if (
          (Ke(
            p !== null,
            "rerunTransactionsUnderNode_: relativePath should not be null."
          ),
          u.status === 4)
        )
          (m = !0),
            (v = u.abortReason),
            (i = i.concat(Pl(t.serverSyncTree_, u.currentWriteId, !0)));
        else if (u.status === 0)
          if (u.retryCount >= dee)
            (m = !0),
              (v = "maxretry"),
              (i = i.concat(Pl(t.serverSyncTree_, u.currentWriteId, !0)));
          else {
            const w = oO(t, u.path, a);
            u.currentInputSnapshot = w;
            const S = e[l].update(w.val());
            if (S !== void 0) {
              om("transaction failed: Data returned ", S, u.path);
              let M = An(S);
              (typeof S == "object" && S != null && Ss(S, ".priority")) ||
                (M = M.updatePriority(w.getPriority()));
              const D = u.currentWriteId,
                z = pw(t),
                V = $J(M, w, z);
              (u.currentOutputSnapshotRaw = M),
                (u.currentOutputSnapshotResolved = V),
                (u.currentWriteId = iO(t)),
                a.splice(a.indexOf(D), 1),
                (i = i.concat(
                  BJ(
                    t.serverSyncTree_,
                    u.path,
                    V,
                    u.currentWriteId,
                    u.applyLocally
                  )
                )),
                (i = i.concat(Pl(t.serverSyncTree_, D, !0)));
            } else
              (m = !0),
                (v = "nodata"),
                (i = i.concat(Pl(t.serverSyncTree_, u.currentWriteId, !0)));
          }
        ga(t.eventQueue_, r, i),
          (i = []),
          m &&
            ((e[l].status = 2),
            (function (w) {
              setTimeout(w, Math.floor(0));
            })(e[l].unwatcher),
            e[l].onComplete &&
              (v === "nodata"
                ? n.push(() =>
                    e[l].onComplete(null, !1, e[l].currentInputSnapshot)
                  )
                : n.push(() => e[l].onComplete(new Error(v), !1, null))));
      }
      lm(t, t.transactionQueueTree_);
      for (let l = 0; l < n.length; l++) Qc(n[l]);
      vw(t, t.transactionQueueTree_);
    }
    function lO(t, e) {
      let r,
        n = t.transactionQueueTree_;
      for (r = Ot(e); r !== null && ou(n) === void 0; )
        (n = lw(n, r)), (e = Ir(e)), (r = Ot(e));
      return n;
    }
    function cO(t, e) {
      const r = [];
      return uO(t, e, r), r.sort((n, i) => n.order - i.order), r;
    }
    function uO(t, e, r) {
      const n = ou(e);
      if (n) for (let i = 0; i < n.length; i++) r.push(n[i]);
      sm(e, (i) => {
        uO(t, i, r);
      });
    }
    function lm(t, e) {
      const r = ou(e);
      if (r) {
        let n = 0;
        for (let i = 0; i < r.length; i++)
          r[i].status !== 2 && ((r[n] = r[i]), n++);
        (r.length = n), $P(e, r.length > 0 ? r : void 0);
      }
      sm(e, (n) => {
        lm(t, n);
      });
    }
    function hO(t, e) {
      const r = fd(lO(t, e)),
        n = lw(t.transactionQueueTree_, e);
      return (
        QJ(n, (i) => {
          yw(t, i);
        }),
        yw(t, n),
        QP(n, (i) => {
          yw(t, i);
        }),
        r
      );
    }
    function yw(t, e) {
      const r = ou(e);
      if (r) {
        const n = [];
        let i = [],
          a = -1;
        for (let l = 0; l < r.length; l++)
          r[l].status === 3 ||
            (r[l].status === 1
              ? (Ke(
                  a === l - 1,
                  "All SENT items should be at beginning of queue."
                ),
                (a = l),
                (r[l].status = 3),
                (r[l].abortReason = "set"))
              : (Ke(
                  r[l].status === 0,
                  "Unexpected transaction status in abort"
                ),
                r[l].unwatcher(),
                (i = i.concat(Pl(t.serverSyncTree_, r[l].currentWriteId, !0))),
                r[l].onComplete &&
                  n.push(
                    r[l].onComplete.bind(null, new Error("set"), !1, null)
                  )));
        a === -1 ? $P(e, void 0) : (r.length = a + 1),
          ga(t.eventQueue_, fd(e), i);
        for (let l = 0; l < n.length; l++) Qc(n[l]);
      }
    }
    function _ee(t) {
      let e = "";
      const r = t.split("/");
      for (let n = 0; n < r.length; n++)
        if (r[n].length > 0) {
          let i = r[n];
          try {
            i = decodeURIComponent(i.replace(/\+/g, " "));
          } catch {}
          e += "/" + i;
        }
      return e;
    }
    function Aee(t) {
      const e = {};
      t.charAt(0) === "?" && (t = t.substring(1));
      for (const r of t.split("&")) {
        if (r.length === 0) continue;
        const n = r.split("=");
        n.length === 2
          ? (e[decodeURIComponent(n[0])] = decodeURIComponent(n[1]))
          : Jn(`Invalid query segment '${r}' in query '${t}'`);
      }
      return e;
    }
    const dO = function (t, e) {
        const r = Cee(t),
          n = r.namespace;
        r.domain === "firebase.com" &&
          da(
            r.host +
              " is no longer supported. Please use <YOUR FIREBASE>.firebaseio.com instead"
          ),
          (!n || n === "undefined") &&
            r.domain !== "localhost" &&
            da(
              "Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com"
            ),
          r.secure || LZ();
        const i = r.scheme === "ws" || r.scheme === "wss";
        return {
          repoInfo: new WT(r.host, r.secure, n, i, e, "", n !== r.subdomain),
          path: new nr(r.pathString),
        };
      },
      Cee = function (t) {
        let e = "",
          r = "",
          n = "",
          i = "",
          a = "",
          l = !0,
          u = "https",
          p = 443;
        if (typeof t == "string") {
          let m = t.indexOf("//");
          m >= 0 && ((u = t.substring(0, m - 1)), (t = t.substring(m + 2)));
          let v = t.indexOf("/");
          v === -1 && (v = t.length);
          let w = t.indexOf("?");
          w === -1 && (w = t.length),
            (e = t.substring(0, Math.min(v, w))),
            v < w && (i = _ee(t.substring(v, w)));
          const S = Aee(t.substring(Math.min(t.length, w)));
          (m = e.indexOf(":")),
            m >= 0
              ? ((l = u === "https" || u === "wss"),
                (p = parseInt(e.substring(m + 1), 10)))
              : (m = e.length);
          const M = e.slice(0, m);
          if (M.toLowerCase() === "localhost") r = "localhost";
          else if (M.split(".").length <= 2) r = M;
          else {
            const D = e.indexOf(".");
            (n = e.substring(0, D).toLowerCase()),
              (r = e.substring(D + 1)),
              (a = n);
          }
          "ns" in S && (a = S.ns);
        }
        return {
          host: e,
          port: p,
          domain: r,
          subdomain: n,
          secure: l,
          scheme: u,
          pathString: i,
          namespace: a,
        };
      };
    class fO {
      constructor(e, r, n, i) {
        (this.eventType = e),
          (this.eventRegistration = r),
          (this.snapshot = n),
          (this.prevName = i);
      }
      getPath() {
        const e = this.snapshot.ref;
        return this.eventType === "value" ? e._path : e.parent._path;
      }
      getEventType() {
        return this.eventType;
      }
      getEventRunner() {
        return this.eventRegistration.getEventRunner(this);
      }
      toString() {
        return (
          this.getPath().toString() +
          ":" +
          this.eventType +
          ":" +
          fn(this.snapshot.exportVal())
        );
      }
    }
    class pO {
      constructor(e, r, n) {
        (this.eventRegistration = e), (this.error = r), (this.path = n);
      }
      getPath() {
        return this.path;
      }
      getEventType() {
        return "cancel";
      }
      getEventRunner() {
        return this.eventRegistration.getEventRunner(this);
      }
      toString() {
        return this.path.toString() + ":cancel";
      }
    }
    class See {
      constructor(e, r) {
        (this.snapshotCallback = e), (this.cancelCallback = r);
      }
      onValue(e, r) {
        this.snapshotCallback.call(null, e, r);
      }
      onCancel(e) {
        return (
          Ke(
            this.hasCancelCallback,
            "Raising a cancel event on a listener with no cancel callback"
          ),
          this.cancelCallback.call(null, e)
        );
      }
      get hasCancelCallback() {
        return !!this.cancelCallback;
      }
      matches(e) {
        return (
          this.snapshotCallback === e.snapshotCallback ||
          (this.snapshotCallback.userCallback !== void 0 &&
            this.snapshotCallback.userCallback ===
              e.snapshotCallback.userCallback &&
            this.snapshotCallback.context === e.snapshotCallback.context)
        );
      }
    }
    class gd {
      constructor(e, r, n, i) {
        (this._repo = e),
          (this._path = r),
          (this._queryParams = n),
          (this._orderByCalled = i);
      }
      get key() {
        return It(this._path) ? null : Tx(this._path);
      }
      get ref() {
        return new ma(this._repo, this._path);
      }
      get _queryIdentifier() {
        const e = bP(this._queryParams),
          r = wx(e);
        return r === "{}" ? "default" : r;
      }
      get _queryObject() {
        return bP(this._queryParams);
      }
      isEqual(e) {
        if (((e = fi(e)), !(e instanceof gd))) return !1;
        const r = this._repo === e._repo,
          n = Px(this._path, e._path),
          i = this._queryIdentifier === e._queryIdentifier;
        return r && n && i;
      }
      toJSON() {
        return this.toString();
      }
      toString() {
        return this._repo.toString() + gQ(this._path);
      }
    }
    function Eee(t, e) {
      if (t._orderByCalled === !0)
        throw new Error(e + ": You can't combine multiple orderBy calls.");
    }
    function gO(t) {
      let e = null,
        r = null;
      if (
        (t.hasStart() && (e = t.getIndexStartValue()),
        t.hasEnd() && (r = t.getIndexEndValue()),
        t.getIndex() === Cl)
      ) {
        const n =
            "Query: When ordering by key, you may only pass one argument to startAt(), endAt(), or equalTo().",
          i =
            "Query: When ordering by key, the argument passed to startAt(), startAfter(), endAt(), endBefore(), or equalTo() must be a string.";
        if (t.hasStart()) {
          if (t.getIndexStartName() !== kl) throw new Error(n);
          if (typeof e != "string") throw new Error(i);
        }
        if (t.hasEnd()) {
          if (t.getIndexEndName() !== po) throw new Error(n);
          if (typeof r != "string") throw new Error(i);
        }
      } else if (t.getIndex() === jr) {
        if ((e != null && !hw(e)) || (r != null && !hw(r)))
          throw new Error(
            "Query: When ordering by priority, the first argument passed to startAt(), startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value (null, a number, or a string)."
          );
      } else if (
        (Ke(
          t.getIndex() instanceof Nx || t.getIndex() === mP,
          "unknown index type."
        ),
        (e != null && typeof e == "object") ||
          (r != null && typeof r == "object"))
      )
        throw new Error(
          "Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or equalTo() cannot be an object."
        );
    }
    function Iee(t) {
      if (t.hasStart() && t.hasEnd() && t.hasLimit() && !t.hasAnchoredLimit())
        throw new Error(
          "Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use limitToFirst() or limitToLast() instead."
        );
    }
    class ma extends gd {
      constructor(e, r) {
        super(e, r, new Fx(), !1);
      }
      get parent() {
        const e = aP(this._path);
        return e === null ? null : new ma(this._repo, e);
      }
      get root() {
        let e = this;
        for (; e.parent !== null; ) e = e.parent;
        return e;
      }
    }
    class md {
      constructor(e, r, n) {
        (this._node = e), (this.ref = r), (this._index = n);
      }
      get priority() {
        return this._node.getPriority().val();
      }
      get key() {
        return this.ref.key;
      }
      get size() {
        return this._node.numChildren();
      }
      child(e) {
        const r = new nr(e),
          n = cm(this.ref, e);
        return new md(this._node.getChild(r), n, jr);
      }
      exists() {
        return !this._node.isEmpty();
      }
      exportVal() {
        return this._node.val(!0);
      }
      forEach(e) {
        return this._node.isLeafNode()
          ? !1
          : !!this._node.forEachChild(this._index, (r, n) =>
              e(new md(n, cm(this.ref, r), jr))
            );
      }
      hasChild(e) {
        const r = new nr(e);
        return !this._node.getChild(r).isEmpty();
      }
      hasChildren() {
        return this._node.isLeafNode() ? !1 : !this._node.isEmpty();
      }
      toJSON() {
        return this.exportVal();
      }
      val() {
        return this._node.val();
      }
    }
    function bw(t, e) {
      return (
        (t = fi(t)),
        t._checkNotDeleted("ref"),
        e !== void 0 ? cm(t._root, e) : t._root
      );
    }
    function cm(t, e) {
      return (
        (t = fi(t)),
        Ot(t._path) === null
          ? oee("child", "path", e, !1)
          : dw("child", "path", e, !1),
        new ma(t._repo, qr(t._path, e))
      );
    }
    function Tee(t, e) {
      see("update", e, t._path, !1);
      const r = new Bg();
      return (
        vee(
          t._repo,
          t._path,
          e,
          r.wrapCallback(() => {})
        ),
        r.promise
      );
    }
    class xw {
      constructor(e) {
        this.callbackContext = e;
      }
      respondsTo(e) {
        return e === "value";
      }
      createEvent(e, r) {
        const n = r._queryParams.getIndex();
        return new fO(
          "value",
          this,
          new md(e.snapshotNode, new ma(r._repo, r._path), n)
        );
      }
      getEventRunner(e) {
        return e.getEventType() === "cancel"
          ? () => this.callbackContext.onCancel(e.error)
          : () => this.callbackContext.onValue(e.snapshot, null);
      }
      createCancelEvent(e, r) {
        return this.callbackContext.hasCancelCallback
          ? new pO(this, e, r)
          : null;
      }
      matches(e) {
        return e instanceof xw
          ? !e.callbackContext || !this.callbackContext
            ? !0
            : e.callbackContext.matches(this.callbackContext)
          : !1;
      }
      hasAnyCallback() {
        return this.callbackContext !== null;
      }
    }
    class ww {
      constructor(e, r) {
        (this.eventType = e), (this.callbackContext = r);
      }
      respondsTo(e) {
        let r = e === "children_added" ? "child_added" : e;
        return (
          (r = r === "children_removed" ? "child_removed" : r),
          this.eventType === r
        );
      }
      createCancelEvent(e, r) {
        return this.callbackContext.hasCancelCallback
          ? new pO(this, e, r)
          : null;
      }
      createEvent(e, r) {
        Ke(e.childName != null, "Child events should have a childName.");
        const n = cm(new ma(r._repo, r._path), e.childName),
          i = r._queryParams.getIndex();
        return new fO(e.type, this, new md(e.snapshotNode, n, i), e.prevName);
      }
      getEventRunner(e) {
        return e.getEventType() === "cancel"
          ? () => this.callbackContext.onCancel(e.error)
          : () => this.callbackContext.onValue(e.snapshot, e.prevName);
      }
      matches(e) {
        return e instanceof ww
          ? this.eventType === e.eventType &&
              (!this.callbackContext ||
                !e.callbackContext ||
                this.callbackContext.matches(e.callbackContext))
          : !1;
      }
      hasAnyCallback() {
        return !!this.callbackContext;
      }
    }
    function mO(t, e, r, n, i) {
      let a;
      if (
        (typeof n == "object" && ((a = void 0), (i = n)),
        typeof n == "function" && (a = n),
        i && i.onlyOnce)
      ) {
        const p = r,
          m = (v, w) => {
            sO(t._repo, t, u), p(v, w);
          };
        (m.userCallback = r.userCallback), (m.context = r.context), (r = m);
      }
      const l = new See(r, a || void 0),
        u = e === "value" ? new xw(l) : new ww(e, l);
      return bee(t._repo, t, u), () => sO(t._repo, t, u);
    }
    function Pee(t, e, r, n) {
      return mO(t, "value", e, r, n);
    }
    function Oee(t, e, r, n) {
      return mO(t, "child_changed", e, r, n);
    }
    class vO {}
    class Lee extends vO {
      constructor(e, r) {
        super(), (this._value = e), (this._key = r);
      }
      _apply(e) {
        nee("endAt", this._value, e._path, !0);
        const r = DQ(e._queryParams, this._value, this._key);
        if ((Iee(r), gO(r), e._queryParams.hasEnd()))
          throw new Error(
            "endAt: Starting point was already set (by another call to endAt, endBefore or equalTo)."
          );
        return new gd(e._repo, e._path, r, e._orderByCalled);
      }
    }
    function Mee(t, e) {
      return aee("endAt", "key", e, !0), new Lee(t, e);
    }
    class Ree extends vO {
      constructor(e) {
        super(), (this._path = e);
      }
      _apply(e) {
        Eee(e, "orderByChild");
        const r = new nr(this._path);
        if (It(r))
          throw new Error(
            "orderByChild: cannot pass in empty path. Use orderByValue() instead."
          );
        const n = new Nx(r),
          i = zQ(e._queryParams, n);
        return gO(i), new gd(e._repo, e._path, i, !0);
      }
    }
    function yO(t) {
      if (t === "$key")
        throw new Error(
          'orderByChild: "$key" is invalid.  Use orderByKey() instead.'
        );
      if (t === "$priority")
        throw new Error(
          'orderByChild: "$priority" is invalid.  Use orderByPriority() instead.'
        );
      if (t === "$value")
        throw new Error(
          'orderByChild: "$value" is invalid.  Use orderByValue() instead.'
        );
      return dw("orderByChild", "path", t, !1), new Ree(t);
    }
    function bO(t, ...e) {
      let r = fi(t);
      for (const n of e) r = n._apply(r);
      return r;
    }
    EJ(ma), MJ(ma);
    const Nee = "FIREBASE_DATABASE_EMULATOR_HOST",
      kw = {};
    let Bee = !1;
    function Fee(t, e, r, n) {
      (t.repoInfo_ = new WT(
        `${e}:${r}`,
        !1,
        t.repoInfo_.namespace,
        t.repoInfo_.webSocketOnly,
        t.repoInfo_.nodeAdmin,
        t.repoInfo_.persistenceKey,
        t.repoInfo_.includeNamespaceInQueryParams,
        !0
      )),
        n && (t.authTokenProvider_ = n);
    }
    function Dee(t, e, r, n, i) {
      let a = n || t.options.databaseURL;
      a === void 0 &&
        (t.options.projectId ||
          da(
            "Can't determine Firebase Database URL. Be sure to include  a Project ID when calling firebase.initializeApp()."
          ),
        kn("Using default host for project ", t.options.projectId),
        (a = `${t.options.projectId}-default-rtdb.firebaseio.com`));
      let l = dO(a, i),
        u = l.repoInfo,
        p,
        m;
      typeof Rs < "u" && Rs.env && (m = Rs.env[Nee]),
        m
          ? ((p = !0),
            (a = `http://${m}?ns=${u.namespace}`),
            (l = dO(a, i)),
            (u = l.repoInfo))
          : (p = !l.repoInfo.secure);
      const v = i && p ? new Jc(Jc.OWNER) : new XZ(t.name, t.options, e);
      lee("Invalid Firebase Database URL", l),
        It(l.path) ||
          da(
            "Database URL must point to the root of a Firebase Database (not including a child path)."
          );
      const w = Hee(u, t, v, new WZ(t.name, r));
      return new Uee(w, t);
    }
    function zee(t, e) {
      const r = kw[e];
      (!r || r[t.key] !== t) &&
        da(`Database ${e}(${t.repoInfo_}) has already been deleted.`),
        xee(t),
        delete r[t.key];
    }
    function Hee(t, e, r, n) {
      let i = kw[e.name];
      i || ((i = {}), (kw[e.name] = i));
      let a = i[t.toURLString()];
      return (
        a &&
          da(
            "Database initialized multiple times. Please make sure the format of the database URL matches with each database() call."
          ),
        (a = new fee(t, Bee, r, n)),
        (i[t.toURLString()] = a),
        a
      );
    }
    class Uee {
      constructor(e, r) {
        (this._repoInternal = e),
          (this.app = r),
          (this.type = "database"),
          (this._instanceStarted = !1);
      }
      get _repo() {
        return (
          this._instanceStarted ||
            (pee(
              this._repoInternal,
              this.app.options.appId,
              this.app.options.databaseAuthVariableOverride
            ),
            (this._instanceStarted = !0)),
          this._repoInternal
        );
      }
      get _root() {
        return (
          this._rootInternal || (this._rootInternal = new ma(this._repo, $t())),
          this._rootInternal
        );
      }
      _delete() {
        return (
          this._rootInternal !== null &&
            (zee(this._repo, this.app.name),
            (this._repoInternal = null),
            (this._rootInternal = null)),
          Promise.resolve()
        );
      }
      _checkNotDeleted(e) {
        this._rootInternal === null &&
          da("Cannot call " + e + " on a deleted database.");
      }
    }
    function xO(t = Am(), e) {
      const r = Ed(t, "database").getImmediate({ identifier: e });
      if (!r._instanceStarted) {
        const n = s$("database");
        n && Wee(r, ...n);
      }
      return r;
    }
    function Wee(t, e, r, n = {}) {
      (t = fi(t)),
        t._checkNotDeleted("useEmulator"),
        t._instanceStarted &&
          da(
            "Cannot call useEmulator() after instance has already been initialized."
          );
      const i = t._repoInternal;
      let a;
      if (i.repoInfo_.nodeAdmin)
        n.mockUserToken &&
          da(
            'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the "firebase" package instead of "firebase-admin".'
          ),
          (a = new Jc(Jc.OWNER));
      else if (n.mockUserToken) {
        const l =
          typeof n.mockUserToken == "string"
            ? n.mockUserToken
            : a$(n.mockUserToken, t.app.options.projectId);
        a = new Jc(l);
      }
      Fee(i, e, r, a);
    }
    function Xee(t) {
      EZ($c),
        Co(
          new Ca(
            "database",
            (e, { instanceIdentifier: r }) => {
              const n = e.getProvider("app").getImmediate(),
                i = e.getProvider("auth-internal"),
                a = e.getProvider("app-check-internal");
              return Dee(n, i, a, r);
            },
            "PUBLIC"
          ).setMultipleInstances(!0)
        ),
        Os(AT, CT, t),
        Os(AT, CT, "esm2017");
    }
    (fa.prototype.simpleListen = function (t, e) {
      this.sendRequest("q", { p: t }, e);
    }),
      (fa.prototype.echo = function (t, e) {
        this.sendRequest("echo", { d: t }, e);
      }),
      Xee();
    function jee(t) {
      if (t.length === 0 || !t[0]) return {};
      const e = {},
        r = Object.keys(t[0]).filter((n) => {
          var i;
          return typeof ((i = t[0]) == null ? void 0 : i[n]) == "number"
            ? ((e[n] = 0), !0)
            : !1;
        });
      return t.reduce(
        (n, i) => (
          r.forEach((a) => {
            n[a] += Number(i[a]);
          }),
          n
        ),
        e
      );
    }
    var vd = ((t) => (
      (t[(t.string = 0)] = "string"), (t[(t.number = 1)] = "number"), t
    ))(vd || {});
    function Gee({ data: t, criteria: e }) {
      const r = We(""),
        n = We(!1);
      function i({ value: u, isActive: p }) {
        (n.value = p), (r.value = u);
      }
      const a = He(() => e.filter((u) => u.minLength <= r.value.length)),
        l = He(() => {
          if (n.value && r.value) {
            let u = new Set([]);
            return (
              a.value.forEach((p) => {
                u = new Set([
                  ...u,
                  ...t.value.filter((m) => {
                    var v;
                    return p.type === 1
                      ? Number(`${m[p.key]}`.split(".")[0]) ===
                          Number(r.value.replace(/,/g, "").split(".")[0])
                      : p.exact
                      ? m[p.key] === r.value
                      : (v = m[p.key]) == null
                      ? void 0
                      : v.toLowerCase().includes(r.value.toLowerCase());
                  }),
                ]);
              }),
              [...u]
            );
          } else return [...t.value];
        });
      return { setSearch: i, searchValue: r, foundData: l };
    }
    const Yee = { class: "base-filter" },
      Vee = ["value", "placeholder"],
      qee = dt({
        __name: "BaseSearchInput",
        props: {
          value: {},
          placeholder: { default: "Search" },
          isDisabled: { type: Boolean, default: !1 },
          debounce: { default: 500 },
          minLength: { default: 3 },
        },
        emits: ["update"],
        setup(t, { emit: e }) {
          const r = t,
            n = We(null),
            i = (l) => {
              l.target.value.length >= r.minLength
                ? (n.value && clearTimeout(n.value),
                  (n.value = setTimeout(() => {
                    e("update", { value: l.target.value, isActive: !0 }),
                      clearTimeout(n.value);
                  }, r.debounce)))
                : e("update", { value: l.target.value, isActive: !1 });
            },
            a = () => {
              e("update", { value: "", isActive: !0 });
            };
          return (l, u) => (
            je(),
            et("div", Yee, [
              ve(
                "div",
                {
                  class: ot({ "opacity-50 pointer-events-none": l.isDisabled }),
                },
                [
                  ve(
                    "input",
                    {
                      type: "text",
                      id: "table-search",
                      class:
                        "block p-2 pl-10 text-sm rounded-lg w-80 bg-gray-700 placeholder-gray-400 text-gray-300 focus:outline-none focus:ring-project-primary",
                      value: l.value,
                      placeholder: l.placeholder,
                      onInput: i,
                    },
                    null,
                    40,
                    Vee
                  ),
                  l.value
                    ? (je(),
                      jt(Xe(Lb), {
                        key: 0,
                        class:
                          "absolute top-2 right-2 w-6 text-gray-400 cursor-pointer",
                        onClick: a,
                      }))
                    : Yr("", !0),
                ],
                2
              ),
            ])
          );
        },
      });
    function _w(t, e) {
      var r = {};
      for (var n in t)
        Object.prototype.hasOwnProperty.call(t, n) &&
          e.indexOf(n) < 0 &&
          (r[n] = t[n]);
      if (t != null && typeof Object.getOwnPropertySymbols == "function")
        for (var i = 0, n = Object.getOwnPropertySymbols(t); i < n.length; i++)
          e.indexOf(n[i]) < 0 &&
            Object.prototype.propertyIsEnumerable.call(t, n[i]) &&
            (r[n[i]] = t[n[i]]);
      return r;
    }
    function wO() {
      return {
        "dependent-sdk-initialized-before-auth":
          "Another Firebase SDK was initialized and is trying to use Auth before Auth is initialized. Please be sure to call `initializeAuth` or `getAuth` before starting any other Firebase SDK.",
      };
    }
    const Kee = wO,
      kO = new Rl("auth", "Firebase", wO()),
      um = new Sd("@firebase/auth");
    function $ee(t, ...e) {
      um.logLevel <= or.WARN && um.warn(`Auth (${$c}): ${t}`, ...e);
    }
    function hm(t, ...e) {
      um.logLevel <= or.ERROR && um.error(`Auth (${$c}): ${t}`, ...e);
    }
    function va(t, ...e) {
      throw Aw(t, ...e);
    }
    function Es(t, ...e) {
      return Aw(t, ...e);
    }
    function Zee(t, e, r) {
      const n = Object.assign(Object.assign({}, Kee()), { [e]: r });
      return new Rl("auth", "Firebase", n).create(e, { appName: t.name });
    }
    function Aw(t, ...e) {
      if (typeof t != "string") {
        const r = e[0],
          n = [...e.slice(1)];
        return n[0] && (n[0].appName = t.name), t._errorFactory.create(r, ...n);
      }
      return kO.create(t, ...e);
    }
    function mt(t, e, ...r) {
      if (!t) throw Aw(e, ...r);
    }
    function ya(t) {
      const e = "INTERNAL ASSERTION FAILED: " + t;
      throw (hm(e), new Error(e));
    }
    function ba(t, e) {
      t || ya(e);
    }
    function Cw() {
      var t;
      return (
        (typeof self < "u" &&
          ((t = self.location) === null || t === void 0 ? void 0 : t.href)) ||
        ""
      );
    }
    function Qee() {
      return _O() === "http:" || _O() === "https:";
    }
    function _O() {
      var t;
      return (
        (typeof self < "u" &&
          ((t = self.location) === null || t === void 0
            ? void 0
            : t.protocol)) ||
        null
      );
    }
    function Jee() {
      return typeof navigator < "u" &&
        navigator &&
        "onLine" in navigator &&
        typeof navigator.onLine == "boolean" &&
        (Qee() || Dw() || "connection" in navigator)
        ? navigator.onLine
        : !0;
    }
    function ete() {
      if (typeof navigator > "u") return null;
      const t = navigator;
      return (t.languages && t.languages[0]) || t.language || null;
    }
    class yd {
      constructor(e, r) {
        (this.shortDelay = e),
          (this.longDelay = r),
          ba(r > e, "Short delay should be less than long delay!"),
          (this.isMobile = sx() || lT());
      }
      get() {
        return Jee()
          ? this.isMobile
            ? this.longDelay
            : this.shortDelay
          : Math.min(5e3, this.shortDelay);
      }
    }
    function Sw(t, e) {
      ba(t.emulator, "Emulator should always be set here");
      const { url: r } = t.emulator;
      return e ? `${r}${e.startsWith("/") ? e.slice(1) : e}` : r;
    }
    class AO {
      static initialize(e, r, n) {
        (this.fetchImpl = e),
          r && (this.headersImpl = r),
          n && (this.responseImpl = n);
      }
      static fetch() {
        if (this.fetchImpl) return this.fetchImpl;
        if (typeof self < "u" && "fetch" in self) return self.fetch;
        ya(
          "Could not find fetch implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill"
        );
      }
      static headers() {
        if (this.headersImpl) return this.headersImpl;
        if (typeof self < "u" && "Headers" in self) return self.Headers;
        ya(
          "Could not find Headers implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill"
        );
      }
      static response() {
        if (this.responseImpl) return this.responseImpl;
        if (typeof self < "u" && "Response" in self) return self.Response;
        ya(
          "Could not find Response implementation, make sure you call FetchProvider.initialize() with an appropriate polyfill"
        );
      }
    }
    const tte = {
        CREDENTIAL_MISMATCH: "custom-token-mismatch",
        MISSING_CUSTOM_TOKEN: "internal-error",
        INVALID_IDENTIFIER: "invalid-email",
        MISSING_CONTINUE_URI: "internal-error",
        INVALID_PASSWORD: "wrong-password",
        MISSING_PASSWORD: "missing-password",
        EMAIL_EXISTS: "email-already-in-use",
        PASSWORD_LOGIN_DISABLED: "operation-not-allowed",
        INVALID_IDP_RESPONSE: "invalid-credential",
        INVALID_PENDING_TOKEN: "invalid-credential",
        FEDERATED_USER_ID_ALREADY_LINKED: "credential-already-in-use",
        MISSING_REQ_TYPE: "internal-error",
        EMAIL_NOT_FOUND: "user-not-found",
        RESET_PASSWORD_EXCEED_LIMIT: "too-many-requests",
        EXPIRED_OOB_CODE: "expired-action-code",
        INVALID_OOB_CODE: "invalid-action-code",
        MISSING_OOB_CODE: "internal-error",
        CREDENTIAL_TOO_OLD_LOGIN_AGAIN: "requires-recent-login",
        INVALID_ID_TOKEN: "invalid-user-token",
        TOKEN_EXPIRED: "user-token-expired",
        USER_NOT_FOUND: "user-token-expired",
        TOO_MANY_ATTEMPTS_TRY_LATER: "too-many-requests",
        PASSWORD_DOES_NOT_MEET_REQUIREMENTS:
          "password-does-not-meet-requirements",
        INVALID_CODE: "invalid-verification-code",
        INVALID_SESSION_INFO: "invalid-verification-id",
        INVALID_TEMPORARY_PROOF: "invalid-credential",
        MISSING_SESSION_INFO: "missing-verification-id",
        SESSION_EXPIRED: "code-expired",
        MISSING_ANDROID_PACKAGE_NAME: "missing-android-pkg-name",
        UNAUTHORIZED_DOMAIN: "unauthorized-continue-uri",
        INVALID_OAUTH_CLIENT_ID: "invalid-oauth-client-id",
        ADMIN_ONLY_OPERATION: "admin-restricted-operation",
        INVALID_MFA_PENDING_CREDENTIAL: "invalid-multi-factor-session",
        MFA_ENROLLMENT_NOT_FOUND: "multi-factor-info-not-found",
        MISSING_MFA_ENROLLMENT_ID: "missing-multi-factor-info",
        MISSING_MFA_PENDING_CREDENTIAL: "missing-multi-factor-session",
        SECOND_FACTOR_EXISTS: "second-factor-already-in-use",
        SECOND_FACTOR_LIMIT_EXCEEDED: "maximum-second-factor-count-exceeded",
        BLOCKING_FUNCTION_ERROR_RESPONSE: "internal-error",
        RECAPTCHA_NOT_ENABLED: "recaptcha-not-enabled",
        MISSING_RECAPTCHA_TOKEN: "missing-recaptcha-token",
        INVALID_RECAPTCHA_TOKEN: "invalid-recaptcha-token",
        INVALID_RECAPTCHA_ACTION: "invalid-recaptcha-action",
        MISSING_CLIENT_TYPE: "missing-client-type",
        MISSING_RECAPTCHA_VERSION: "missing-recaptcha-version",
        INVALID_RECAPTCHA_VERSION: "invalid-recaptcha-version",
        INVALID_REQ_TYPE: "invalid-req-type",
      },
      rte = new yd(3e4, 6e4);
    function Ew(t, e) {
      return t.tenantId && !e.tenantId
        ? Object.assign(Object.assign({}, e), { tenantId: t.tenantId })
        : e;
    }
    async function bd(t, e, r, n, i = {}) {
      return CO(t, i, async () => {
        let a = {},
          l = {};
        n && (e === "GET" ? (l = n) : (a = { body: JSON.stringify(n) }));
        const u = Kc(Object.assign({ key: t.config.apiKey }, l)).slice(1),
          p = await t._getAdditionalHeaders();
        return (
          (p["Content-Type"] = "application/json"),
          t.languageCode && (p["X-Firebase-Locale"] = t.languageCode),
          AO.fetch()(
            EO(t, t.config.apiHost, r, u),
            Object.assign(
              { method: e, headers: p, referrerPolicy: "no-referrer" },
              a
            )
          )
        );
      });
    }
    async function CO(t, e, r) {
      t._canInitEmulator = !1;
      const n = Object.assign(Object.assign({}, tte), e);
      try {
        const i = new nte(t),
          a = await Promise.race([r(), i.promise]);
        i.clearNetworkTimeout();
        const l = await a.json();
        if ("needConfirmation" in l)
          throw dm(t, "account-exists-with-different-credential", l);
        if (a.ok && !("errorMessage" in l)) return l;
        {
          const u = a.ok ? l.errorMessage : l.error.message,
            [p, m] = u.split(" : ");
          if (p === "FEDERATED_USER_ID_ALREADY_LINKED")
            throw dm(t, "credential-already-in-use", l);
          if (p === "EMAIL_EXISTS") throw dm(t, "email-already-in-use", l);
          if (p === "USER_DISABLED") throw dm(t, "user-disabled", l);
          const v = n[p] || p.toLowerCase().replace(/[_\s]+/g, "-");
          if (m) throw Zee(t, v, m);
          va(t, v);
        }
      } catch (i) {
        if (i instanceof Sa) throw i;
        va(t, "network-request-failed", { message: String(i) });
      }
    }
    async function SO(t, e, r, n, i = {}) {
      const a = await bd(t, e, r, n, i);
      return (
        "mfaPendingCredential" in a &&
          va(t, "multi-factor-auth-required", { _serverResponse: a }),
        a
      );
    }
    function EO(t, e, r, n) {
      const i = `${e}${r}?${n}`;
      return t.config.emulator
        ? Sw(t.config, i)
        : `${t.config.apiScheme}://${i}`;
    }
    class nte {
      constructor(e) {
        (this.auth = e),
          (this.timer = null),
          (this.promise = new Promise((r, n) => {
            this.timer = setTimeout(
              () => n(Es(this.auth, "network-request-failed")),
              rte.get()
            );
          }));
      }
      clearNetworkTimeout() {
        clearTimeout(this.timer);
      }
    }
    function dm(t, e, r) {
      const n = { appName: t.name };
      r.email && (n.email = r.email),
        r.phoneNumber && (n.phoneNumber = r.phoneNumber);
      const i = Es(t, e, n);
      return (i.customData._tokenResponse = r), i;
    }
    async function ite(t, e) {
      return bd(t, "POST", "/v1/accounts:delete", e);
    }
    async function ste(t, e) {
      return bd(t, "POST", "/v1/accounts:lookup", e);
    }
    function xd(t) {
      if (t)
        try {
          const e = new Date(Number(t));
          if (!isNaN(e.getTime())) return e.toUTCString();
        } catch {}
    }
    async function ate(t, e = !1) {
      const r = fi(t),
        n = await r.getIdToken(e),
        i = Tw(n);
      mt(i && i.exp && i.auth_time && i.iat, r.auth, "internal-error");
      const a = typeof i.firebase == "object" ? i.firebase : void 0,
        l = a == null ? void 0 : a.sign_in_provider;
      return {
        claims: i,
        token: n,
        authTime: xd(Iw(i.auth_time)),
        issuedAtTime: xd(Iw(i.iat)),
        expirationTime: xd(Iw(i.exp)),
        signInProvider: l || null,
        signInSecondFactor:
          (a == null ? void 0 : a.sign_in_second_factor) || null,
      };
    }
    function Iw(t) {
      return Number(t) * 1e3;
    }
    function Tw(t) {
      const [e, r, n] = t.split(".");
      if (e === void 0 || r === void 0 || n === void 0)
        return hm("JWT malformed, contained fewer than 3 sections"), null;
      try {
        const i = Ng(r);
        return i
          ? JSON.parse(i)
          : (hm("Failed to decode base64 JWT payload"), null);
      } catch (i) {
        return (
          hm(
            "Caught error parsing JWT payload as JSON",
            i == null ? void 0 : i.toString()
          ),
          null
        );
      }
    }
    function ote(t) {
      const e = Tw(t);
      return (
        mt(e, "internal-error"),
        mt(typeof e.exp < "u", "internal-error"),
        mt(typeof e.iat < "u", "internal-error"),
        Number(e.exp) - Number(e.iat)
      );
    }
    async function wd(t, e, r = !1) {
      if (r) return e;
      try {
        return await e;
      } catch (n) {
        throw (
          (n instanceof Sa &&
            lte(n) &&
            t.auth.currentUser === t &&
            (await t.auth.signOut()),
          n)
        );
      }
    }
    function lte({ code: t }) {
      return t === "auth/user-disabled" || t === "auth/user-token-expired";
    }
    class cte {
      constructor(e) {
        (this.user = e),
          (this.isRunning = !1),
          (this.timerId = null),
          (this.errorBackoff = 3e4);
      }
      _start() {
        this.isRunning || ((this.isRunning = !0), this.schedule());
      }
      _stop() {
        this.isRunning &&
          ((this.isRunning = !1),
          this.timerId !== null && clearTimeout(this.timerId));
      }
      getInterval(e) {
        var r;
        if (e) {
          const n = this.errorBackoff;
          return (this.errorBackoff = Math.min(this.errorBackoff * 2, 96e4)), n;
        } else {
          this.errorBackoff = 3e4;
          const n =
            ((r = this.user.stsTokenManager.expirationTime) !== null &&
            r !== void 0
              ? r
              : 0) -
            Date.now() -
            3e5;
          return Math.max(0, n);
        }
      }
      schedule(e = !1) {
        if (!this.isRunning) return;
        const r = this.getInterval(e);
        this.timerId = setTimeout(async () => {
          await this.iteration();
        }, r);
      }
      async iteration() {
        try {
          await this.user.getIdToken(!0);
        } catch (e) {
          (e == null ? void 0 : e.code) === "auth/network-request-failed" &&
            this.schedule(!0);
          return;
        }
        this.schedule();
      }
    }
    class IO {
      constructor(e, r) {
        (this.createdAt = e), (this.lastLoginAt = r), this._initializeTime();
      }
      _initializeTime() {
        (this.lastSignInTime = xd(this.lastLoginAt)),
          (this.creationTime = xd(this.createdAt));
      }
      _copy(e) {
        (this.createdAt = e.createdAt),
          (this.lastLoginAt = e.lastLoginAt),
          this._initializeTime();
      }
      toJSON() {
        return { createdAt: this.createdAt, lastLoginAt: this.lastLoginAt };
      }
    }
    async function fm(t) {
      var e;
      const r = t.auth,
        n = await t.getIdToken(),
        i = await wd(t, ste(r, { idToken: n }));
      mt(i == null ? void 0 : i.users.length, r, "internal-error");
      const a = i.users[0];
      t._notifyReloadListener(a);
      const l =
          !((e = a.providerUserInfo) === null || e === void 0) && e.length
            ? dte(a.providerUserInfo)
            : [],
        u = hte(t.providerData, l),
        p = t.isAnonymous,
        m = !(t.email && a.passwordHash) && !(u != null && u.length),
        v = p ? m : !1,
        w = {
          uid: a.localId,
          displayName: a.displayName || null,
          photoURL: a.photoUrl || null,
          email: a.email || null,
          emailVerified: a.emailVerified || !1,
          phoneNumber: a.phoneNumber || null,
          tenantId: a.tenantId || null,
          providerData: u,
          metadata: new IO(a.createdAt, a.lastLoginAt),
          isAnonymous: v,
        };
      Object.assign(t, w);
    }
    async function ute(t) {
      const e = fi(t);
      await fm(e),
        await e.auth._persistUserIfCurrent(e),
        e.auth._notifyListenersIfCurrent(e);
    }
    function hte(t, e) {
      return [
        ...t.filter((r) => !e.some((n) => n.providerId === r.providerId)),
        ...e,
      ];
    }
    function dte(t) {
      return t.map((e) => {
        var { providerId: r } = e,
          n = _w(e, ["providerId"]);
        return {
          providerId: r,
          uid: n.rawId || "",
          displayName: n.displayName || null,
          email: n.email || null,
          phoneNumber: n.phoneNumber || null,
          photoURL: n.photoUrl || null,
        };
      });
    }
    async function fte(t, e) {
      const r = await CO(t, {}, async () => {
        const n = Kc({ grant_type: "refresh_token", refresh_token: e }).slice(
            1
          ),
          { tokenApiHost: i, apiKey: a } = t.config,
          l = EO(t, i, "/v1/token", `key=${a}`),
          u = await t._getAdditionalHeaders();
        return (
          (u["Content-Type"] = "application/x-www-form-urlencoded"),
          AO.fetch()(l, { method: "POST", headers: u, body: n })
        );
      });
      return {
        accessToken: r.access_token,
        expiresIn: r.expires_in,
        refreshToken: r.refresh_token,
      };
    }
    class kd {
      constructor() {
        (this.refreshToken = null),
          (this.accessToken = null),
          (this.expirationTime = null);
      }
      get isExpired() {
        return !this.expirationTime || Date.now() > this.expirationTime - 3e4;
      }
      updateFromServerResponse(e) {
        mt(e.idToken, "internal-error"),
          mt(typeof e.idToken < "u", "internal-error"),
          mt(typeof e.refreshToken < "u", "internal-error");
        const r =
          "expiresIn" in e && typeof e.expiresIn < "u"
            ? Number(e.expiresIn)
            : ote(e.idToken);
        this.updateTokensAndExpiration(e.idToken, e.refreshToken, r);
      }
      async getToken(e, r = !1) {
        return (
          mt(!this.accessToken || this.refreshToken, e, "user-token-expired"),
          !r && this.accessToken && !this.isExpired
            ? this.accessToken
            : this.refreshToken
            ? (await this.refresh(e, this.refreshToken), this.accessToken)
            : null
        );
      }
      clearRefreshToken() {
        this.refreshToken = null;
      }
      async refresh(e, r) {
        const {
          accessToken: n,
          refreshToken: i,
          expiresIn: a,
        } = await fte(e, r);
        this.updateTokensAndExpiration(n, i, Number(a));
      }
      updateTokensAndExpiration(e, r, n) {
        (this.refreshToken = r || null),
          (this.accessToken = e || null),
          (this.expirationTime = Date.now() + n * 1e3);
      }
      static fromJSON(e, r) {
        const { refreshToken: n, accessToken: i, expirationTime: a } = r,
          l = new kd();
        return (
          n &&
            (mt(typeof n == "string", "internal-error", { appName: e }),
            (l.refreshToken = n)),
          i &&
            (mt(typeof i == "string", "internal-error", { appName: e }),
            (l.accessToken = i)),
          a &&
            (mt(typeof a == "number", "internal-error", { appName: e }),
            (l.expirationTime = a)),
          l
        );
      }
      toJSON() {
        return {
          refreshToken: this.refreshToken,
          accessToken: this.accessToken,
          expirationTime: this.expirationTime,
        };
      }
      _assign(e) {
        (this.accessToken = e.accessToken),
          (this.refreshToken = e.refreshToken),
          (this.expirationTime = e.expirationTime);
      }
      _clone() {
        return Object.assign(new kd(), this.toJSON());
      }
      _performRefresh() {
        return ya("not implemented");
      }
    }
    function yo(t, e) {
      mt(typeof t == "string" || typeof t > "u", "internal-error", {
        appName: e,
      });
    }
    class Ol {
      constructor(e) {
        var { uid: r, auth: n, stsTokenManager: i } = e,
          a = _w(e, ["uid", "auth", "stsTokenManager"]);
        (this.providerId = "firebase"),
          (this.proactiveRefresh = new cte(this)),
          (this.reloadUserInfo = null),
          (this.reloadListener = null),
          (this.uid = r),
          (this.auth = n),
          (this.stsTokenManager = i),
          (this.accessToken = i.accessToken),
          (this.displayName = a.displayName || null),
          (this.email = a.email || null),
          (this.emailVerified = a.emailVerified || !1),
          (this.phoneNumber = a.phoneNumber || null),
          (this.photoURL = a.photoURL || null),
          (this.isAnonymous = a.isAnonymous || !1),
          (this.tenantId = a.tenantId || null),
          (this.providerData = a.providerData ? [...a.providerData] : []),
          (this.metadata = new IO(
            a.createdAt || void 0,
            a.lastLoginAt || void 0
          ));
      }
      async getIdToken(e) {
        const r = await wd(this, this.stsTokenManager.getToken(this.auth, e));
        return (
          mt(r, this.auth, "internal-error"),
          this.accessToken !== r &&
            ((this.accessToken = r),
            await this.auth._persistUserIfCurrent(this),
            this.auth._notifyListenersIfCurrent(this)),
          r
        );
      }
      getIdTokenResult(e) {
        return ate(this, e);
      }
      reload() {
        return ute(this);
      }
      _assign(e) {
        this !== e &&
          (mt(this.uid === e.uid, this.auth, "internal-error"),
          (this.displayName = e.displayName),
          (this.photoURL = e.photoURL),
          (this.email = e.email),
          (this.emailVerified = e.emailVerified),
          (this.phoneNumber = e.phoneNumber),
          (this.isAnonymous = e.isAnonymous),
          (this.tenantId = e.tenantId),
          (this.providerData = e.providerData.map((r) => Object.assign({}, r))),
          this.metadata._copy(e.metadata),
          this.stsTokenManager._assign(e.stsTokenManager));
      }
      _clone(e) {
        const r = new Ol(
          Object.assign(Object.assign({}, this), {
            auth: e,
            stsTokenManager: this.stsTokenManager._clone(),
          })
        );
        return r.metadata._copy(this.metadata), r;
      }
      _onReload(e) {
        mt(!this.reloadListener, this.auth, "internal-error"),
          (this.reloadListener = e),
          this.reloadUserInfo &&
            (this._notifyReloadListener(this.reloadUserInfo),
            (this.reloadUserInfo = null));
      }
      _notifyReloadListener(e) {
        this.reloadListener
          ? this.reloadListener(e)
          : (this.reloadUserInfo = e);
      }
      _startProactiveRefresh() {
        this.proactiveRefresh._start();
      }
      _stopProactiveRefresh() {
        this.proactiveRefresh._stop();
      }
      async _updateTokensIfNecessary(e, r = !1) {
        let n = !1;
        e.idToken &&
          e.idToken !== this.stsTokenManager.accessToken &&
          (this.stsTokenManager.updateFromServerResponse(e), (n = !0)),
          r && (await fm(this)),
          await this.auth._persistUserIfCurrent(this),
          n && this.auth._notifyListenersIfCurrent(this);
      }
      async delete() {
        const e = await this.getIdToken();
        return (
          await wd(this, ite(this.auth, { idToken: e })),
          this.stsTokenManager.clearRefreshToken(),
          this.auth.signOut()
        );
      }
      toJSON() {
        return Object.assign(
          Object.assign(
            {
              uid: this.uid,
              email: this.email || void 0,
              emailVerified: this.emailVerified,
              displayName: this.displayName || void 0,
              isAnonymous: this.isAnonymous,
              photoURL: this.photoURL || void 0,
              phoneNumber: this.phoneNumber || void 0,
              tenantId: this.tenantId || void 0,
              providerData: this.providerData.map((e) => Object.assign({}, e)),
              stsTokenManager: this.stsTokenManager.toJSON(),
              _redirectEventId: this._redirectEventId,
            },
            this.metadata.toJSON()
          ),
          { apiKey: this.auth.config.apiKey, appName: this.auth.name }
        );
      }
      get refreshToken() {
        return this.stsTokenManager.refreshToken || "";
      }
      static _fromJSON(e, r) {
        var n, i, a, l, u, p, m, v;
        const w = (n = r.displayName) !== null && n !== void 0 ? n : void 0,
          S = (i = r.email) !== null && i !== void 0 ? i : void 0,
          M = (a = r.phoneNumber) !== null && a !== void 0 ? a : void 0,
          D = (l = r.photoURL) !== null && l !== void 0 ? l : void 0,
          z = (u = r.tenantId) !== null && u !== void 0 ? u : void 0,
          V = (p = r._redirectEventId) !== null && p !== void 0 ? p : void 0,
          j = (m = r.createdAt) !== null && m !== void 0 ? m : void 0,
          B = (v = r.lastLoginAt) !== null && v !== void 0 ? v : void 0,
          {
            uid: ae,
            emailVerified: re,
            isAnonymous: K,
            providerData: fe,
            stsTokenManager: ye,
          } = r;
        mt(ae && ye, e, "internal-error");
        const pe = kd.fromJSON(this.name, ye);
        mt(typeof ae == "string", e, "internal-error"),
          yo(w, e.name),
          yo(S, e.name),
          mt(typeof re == "boolean", e, "internal-error"),
          mt(typeof K == "boolean", e, "internal-error"),
          yo(M, e.name),
          yo(D, e.name),
          yo(z, e.name),
          yo(V, e.name),
          yo(j, e.name),
          yo(B, e.name);
        const _e = new Ol({
          uid: ae,
          auth: e,
          email: S,
          emailVerified: re,
          displayName: w,
          isAnonymous: K,
          photoURL: D,
          phoneNumber: M,
          tenantId: z,
          stsTokenManager: pe,
          createdAt: j,
          lastLoginAt: B,
        });
        return (
          fe &&
            Array.isArray(fe) &&
            (_e.providerData = fe.map((be) => Object.assign({}, be))),
          V && (_e._redirectEventId = V),
          _e
        );
      }
      static async _fromIdTokenResponse(e, r, n = !1) {
        const i = new kd();
        i.updateFromServerResponse(r);
        const a = new Ol({
          uid: r.localId,
          auth: e,
          stsTokenManager: i,
          isAnonymous: n,
        });
        return await fm(a), a;
      }
    }
    const TO = new Map();
    function xa(t) {
      ba(t instanceof Function, "Expected a class definition");
      let e = TO.get(t);
      return e
        ? (ba(e instanceof t, "Instance stored in cache mismatched with class"),
          e)
        : ((e = new t()), TO.set(t, e), e);
    }
    class PO {
      constructor() {
        (this.type = "NONE"), (this.storage = {});
      }
      async _isAvailable() {
        return !0;
      }
      async _set(e, r) {
        this.storage[e] = r;
      }
      async _get(e) {
        const r = this.storage[e];
        return r === void 0 ? null : r;
      }
      async _remove(e) {
        delete this.storage[e];
      }
      _addListener(e, r) {}
      _removeListener(e, r) {}
    }
    PO.type = "NONE";
    const OO = PO;
    function pm(t, e, r) {
      return `firebase:${t}:${e}:${r}`;
    }
    class lu {
      constructor(e, r, n) {
        (this.persistence = e), (this.auth = r), (this.userKey = n);
        const { config: i, name: a } = this.auth;
        (this.fullUserKey = pm(this.userKey, i.apiKey, a)),
          (this.fullPersistenceKey = pm("persistence", i.apiKey, a)),
          (this.boundEventHandler = r._onStorageEvent.bind(r)),
          this.persistence._addListener(
            this.fullUserKey,
            this.boundEventHandler
          );
      }
      setCurrentUser(e) {
        return this.persistence._set(this.fullUserKey, e.toJSON());
      }
      async getCurrentUser() {
        const e = await this.persistence._get(this.fullUserKey);
        return e ? Ol._fromJSON(this.auth, e) : null;
      }
      removeCurrentUser() {
        return this.persistence._remove(this.fullUserKey);
      }
      savePersistenceForRedirect() {
        return this.persistence._set(
          this.fullPersistenceKey,
          this.persistence.type
        );
      }
      async setPersistence(e) {
        if (this.persistence === e) return;
        const r = await this.getCurrentUser();
        if ((await this.removeCurrentUser(), (this.persistence = e), r))
          return this.setCurrentUser(r);
      }
      delete() {
        this.persistence._removeListener(
          this.fullUserKey,
          this.boundEventHandler
        );
      }
      static async create(e, r, n = "authUser") {
        if (!r.length) return new lu(xa(OO), e, n);
        const i = (
          await Promise.all(
            r.map(async (m) => {
              if (await m._isAvailable()) return m;
            })
          )
        ).filter((m) => m);
        let a = i[0] || xa(OO);
        const l = pm(n, e.config.apiKey, e.name);
        let u = null;
        for (const m of r)
          try {
            const v = await m._get(l);
            if (v) {
              const w = Ol._fromJSON(e, v);
              m !== a && (u = w), (a = m);
              break;
            }
          } catch {}
        const p = i.filter((m) => m._shouldAllowMigration);
        return !a._shouldAllowMigration || !p.length
          ? new lu(a, e, n)
          : ((a = p[0]),
            u && (await a._set(l, u.toJSON())),
            await Promise.all(
              r.map(async (m) => {
                if (m !== a)
                  try {
                    await m._remove(l);
                  } catch {}
              })
            ),
            new lu(a, e, n));
      }
    }
    function LO(t) {
      const e = t.toLowerCase();
      if (e.includes("opera/") || e.includes("opr/") || e.includes("opios/"))
        return "Opera";
      if (NO(e)) return "IEMobile";
      if (e.includes("msie") || e.includes("trident/")) return "IE";
      if (e.includes("edge/")) return "Edge";
      if (MO(e)) return "Firefox";
      if (e.includes("silk/")) return "Silk";
      if (FO(e)) return "Blackberry";
      if (DO(e)) return "Webos";
      if (Pw(e)) return "Safari";
      if ((e.includes("chrome/") || RO(e)) && !e.includes("edge/"))
        return "Chrome";
      if (BO(e)) return "Android";
      {
        const r = /([a-zA-Z\d\.]+)\/[a-zA-Z\d\.]*$/,
          n = t.match(r);
        if ((n == null ? void 0 : n.length) === 2) return n[1];
      }
      return "Other";
    }
    function MO(t = Ln()) {
      return /firefox\//i.test(t);
    }
    function Pw(t = Ln()) {
      const e = t.toLowerCase();
      return (
        e.includes("safari/") &&
        !e.includes("chrome/") &&
        !e.includes("crios/") &&
        !e.includes("android")
      );
    }
    function RO(t = Ln()) {
      return /crios\//i.test(t);
    }
    function NO(t = Ln()) {
      return /iemobile/i.test(t);
    }
    function BO(t = Ln()) {
      return /android/i.test(t);
    }
    function FO(t = Ln()) {
      return /blackberry/i.test(t);
    }
    function DO(t = Ln()) {
      return /webos/i.test(t);
    }
    function gm(t = Ln()) {
      return (
        /iphone|ipad|ipod/i.test(t) ||
        (/macintosh/i.test(t) && /mobile/i.test(t))
      );
    }
    function pte(t = Ln()) {
      var e;
      return (
        gm(t) &&
        !!(!((e = window.navigator) === null || e === void 0) && e.standalone)
      );
    }
    function gte() {
      return o$() && document.documentMode === 10;
    }
    function zO(t = Ln()) {
      return (
        gm(t) || BO(t) || DO(t) || FO(t) || /windows phone/i.test(t) || NO(t)
      );
    }
    function mte() {
      try {
        return !!(window && window !== window.top);
      } catch {
        return !1;
      }
    }
    function HO(t, e = []) {
      let r;
      switch (t) {
        case "Browser":
          r = LO(Ln());
          break;
        case "Worker":
          r = `${LO(Ln())}-${t}`;
          break;
        default:
          r = t;
      }
      const n = e.length ? e.join(",") : "FirebaseCore-web";
      return `${r}/JsCore/${$c}/${n}`;
    }
    class vte {
      constructor(e) {
        (this.auth = e), (this.queue = []);
      }
      pushCallback(e, r) {
        const n = (a) =>
          new Promise((l, u) => {
            try {
              const p = e(a);
              l(p);
            } catch (p) {
              u(p);
            }
          });
        (n.onAbort = r), this.queue.push(n);
        const i = this.queue.length - 1;
        return () => {
          this.queue[i] = () => Promise.resolve();
        };
      }
      async runMiddleware(e) {
        if (this.auth.currentUser === e) return;
        const r = [];
        try {
          for (const n of this.queue)
            await n(e), n.onAbort && r.push(n.onAbort);
        } catch (n) {
          r.reverse();
          for (const i of r)
            try {
              i();
            } catch {}
          throw this.auth._errorFactory.create("login-blocked", {
            originalMessage: n == null ? void 0 : n.message,
          });
        }
      }
    }
    async function yte(t, e = {}) {
      return bd(t, "GET", "/v2/passwordPolicy", Ew(t, e));
    }
    const bte = 6;
    class xte {
      constructor(e) {
        var r, n, i, a;
        const l = e.customStrengthOptions;
        (this.customStrengthOptions = {}),
          (this.customStrengthOptions.minPasswordLength =
            (r = l.minPasswordLength) !== null && r !== void 0 ? r : bte),
          l.maxPasswordLength &&
            (this.customStrengthOptions.maxPasswordLength =
              l.maxPasswordLength),
          l.containsLowercaseCharacter !== void 0 &&
            (this.customStrengthOptions.containsLowercaseLetter =
              l.containsLowercaseCharacter),
          l.containsUppercaseCharacter !== void 0 &&
            (this.customStrengthOptions.containsUppercaseLetter =
              l.containsUppercaseCharacter),
          l.containsNumericCharacter !== void 0 &&
            (this.customStrengthOptions.containsNumericCharacter =
              l.containsNumericCharacter),
          l.containsNonAlphanumericCharacter !== void 0 &&
            (this.customStrengthOptions.containsNonAlphanumericCharacter =
              l.containsNonAlphanumericCharacter),
          (this.enforcementState = e.enforcementState),
          this.enforcementState === "ENFORCEMENT_STATE_UNSPECIFIED" &&
            (this.enforcementState = "OFF"),
          (this.allowedNonAlphanumericCharacters =
            (i =
              (n = e.allowedNonAlphanumericCharacters) === null || n === void 0
                ? void 0
                : n.join("")) !== null && i !== void 0
              ? i
              : ""),
          (this.forceUpgradeOnSignin =
            (a = e.forceUpgradeOnSignin) !== null && a !== void 0 ? a : !1),
          (this.schemaVersion = e.schemaVersion);
      }
      validatePassword(e) {
        var r, n, i, a, l, u;
        const p = { isValid: !0, passwordPolicy: this };
        return (
          this.validatePasswordLengthOptions(e, p),
          this.validatePasswordCharacterOptions(e, p),
          p.isValid &&
            (p.isValid =
              (r = p.meetsMinPasswordLength) !== null && r !== void 0 ? r : !0),
          p.isValid &&
            (p.isValid =
              (n = p.meetsMaxPasswordLength) !== null && n !== void 0 ? n : !0),
          p.isValid &&
            (p.isValid =
              (i = p.containsLowercaseLetter) !== null && i !== void 0
                ? i
                : !0),
          p.isValid &&
            (p.isValid =
              (a = p.containsUppercaseLetter) !== null && a !== void 0
                ? a
                : !0),
          p.isValid &&
            (p.isValid =
              (l = p.containsNumericCharacter) !== null && l !== void 0
                ? l
                : !0),
          p.isValid &&
            (p.isValid =
              (u = p.containsNonAlphanumericCharacter) !== null && u !== void 0
                ? u
                : !0),
          p
        );
      }
      validatePasswordLengthOptions(e, r) {
        const n = this.customStrengthOptions.minPasswordLength,
          i = this.customStrengthOptions.maxPasswordLength;
        n && (r.meetsMinPasswordLength = e.length >= n),
          i && (r.meetsMaxPasswordLength = e.length <= i);
      }
      validatePasswordCharacterOptions(e, r) {
        this.updatePasswordCharacterOptionsStatuses(r, !1, !1, !1, !1);
        let n;
        for (let i = 0; i < e.length; i++)
          (n = e.charAt(i)),
            this.updatePasswordCharacterOptionsStatuses(
              r,
              n >= "a" && n <= "z",
              n >= "A" && n <= "Z",
              n >= "0" && n <= "9",
              this.allowedNonAlphanumericCharacters.includes(n)
            );
      }
      updatePasswordCharacterOptionsStatuses(e, r, n, i, a) {
        this.customStrengthOptions.containsLowercaseLetter &&
          (e.containsLowercaseLetter || (e.containsLowercaseLetter = r)),
          this.customStrengthOptions.containsUppercaseLetter &&
            (e.containsUppercaseLetter || (e.containsUppercaseLetter = n)),
          this.customStrengthOptions.containsNumericCharacter &&
            (e.containsNumericCharacter || (e.containsNumericCharacter = i)),
          this.customStrengthOptions.containsNonAlphanumericCharacter &&
            (e.containsNonAlphanumericCharacter ||
              (e.containsNonAlphanumericCharacter = a));
      }
    }
    class wte {
      constructor(e, r, n, i) {
        (this.app = e),
          (this.heartbeatServiceProvider = r),
          (this.appCheckServiceProvider = n),
          (this.config = i),
          (this.currentUser = null),
          (this.emulatorConfig = null),
          (this.operations = Promise.resolve()),
          (this.authStateSubscription = new UO(this)),
          (this.idTokenSubscription = new UO(this)),
          (this.beforeStateQueue = new vte(this)),
          (this.redirectUser = null),
          (this.isProactiveRefreshEnabled = !1),
          (this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION = 1),
          (this._canInitEmulator = !0),
          (this._isInitialized = !1),
          (this._deleted = !1),
          (this._initializationPromise = null),
          (this._popupRedirectResolver = null),
          (this._errorFactory = kO),
          (this._agentRecaptchaConfig = null),
          (this._tenantRecaptchaConfigs = {}),
          (this._projectPasswordPolicy = null),
          (this._tenantPasswordPolicies = {}),
          (this.lastNotifiedUid = void 0),
          (this.languageCode = null),
          (this.tenantId = null),
          (this.settings = { appVerificationDisabledForTesting: !1 }),
          (this.frameworks = []),
          (this.name = e.name),
          (this.clientVersion = i.sdkClientVersion);
      }
      _initializeWithPersistence(e, r) {
        return (
          r && (this._popupRedirectResolver = xa(r)),
          (this._initializationPromise = this.queue(async () => {
            var n, i;
            if (
              !this._deleted &&
              ((this.persistenceManager = await lu.create(this, e)),
              !this._deleted)
            ) {
              if (
                !((n = this._popupRedirectResolver) === null || n === void 0) &&
                n._shouldInitProactively
              )
                try {
                  await this._popupRedirectResolver._initialize(this);
                } catch {}
              await this.initializeCurrentUser(r),
                (this.lastNotifiedUid =
                  ((i = this.currentUser) === null || i === void 0
                    ? void 0
                    : i.uid) || null),
                !this._deleted && (this._isInitialized = !0);
            }
          })),
          this._initializationPromise
        );
      }
      async _onStorageEvent() {
        if (this._deleted) return;
        const e = await this.assertedPersistence.getCurrentUser();
        if (!(!this.currentUser && !e)) {
          if (this.currentUser && e && this.currentUser.uid === e.uid) {
            this._currentUser._assign(e), await this.currentUser.getIdToken();
            return;
          }
          await this._updateCurrentUser(e, !0);
        }
      }
      async initializeCurrentUser(e) {
        var r;
        const n = await this.assertedPersistence.getCurrentUser();
        let i = n,
          a = !1;
        if (e && this.config.authDomain) {
          await this.getOrInitRedirectPersistenceManager();
          const l =
              (r = this.redirectUser) === null || r === void 0
                ? void 0
                : r._redirectEventId,
            u = i == null ? void 0 : i._redirectEventId,
            p = await this.tryRedirectSignIn(e);
          (!l || l === u) && p != null && p.user && ((i = p.user), (a = !0));
        }
        if (!i) return this.directlySetCurrentUser(null);
        if (!i._redirectEventId) {
          if (a)
            try {
              await this.beforeStateQueue.runMiddleware(i);
            } catch (l) {
              (i = n),
                this._popupRedirectResolver._overrideRedirectResult(this, () =>
                  Promise.reject(l)
                );
            }
          return i
            ? this.reloadAndSetCurrentUserOrClear(i)
            : this.directlySetCurrentUser(null);
        }
        return (
          mt(this._popupRedirectResolver, this, "argument-error"),
          await this.getOrInitRedirectPersistenceManager(),
          this.redirectUser &&
          this.redirectUser._redirectEventId === i._redirectEventId
            ? this.directlySetCurrentUser(i)
            : this.reloadAndSetCurrentUserOrClear(i)
        );
      }
      async tryRedirectSignIn(e) {
        let r = null;
        try {
          r = await this._popupRedirectResolver._completeRedirectFn(
            this,
            e,
            !0
          );
        } catch {
          await this._setRedirectUser(null);
        }
        return r;
      }
      async reloadAndSetCurrentUserOrClear(e) {
        try {
          await fm(e);
        } catch (r) {
          if ((r == null ? void 0 : r.code) !== "auth/network-request-failed")
            return this.directlySetCurrentUser(null);
        }
        return this.directlySetCurrentUser(e);
      }
      useDeviceLanguage() {
        this.languageCode = ete();
      }
      async _delete() {
        this._deleted = !0;
      }
      async updateCurrentUser(e) {
        const r = e ? fi(e) : null;
        return (
          r &&
            mt(
              r.auth.config.apiKey === this.config.apiKey,
              this,
              "invalid-user-token"
            ),
          this._updateCurrentUser(r && r._clone(this))
        );
      }
      async _updateCurrentUser(e, r = !1) {
        if (!this._deleted)
          return (
            e && mt(this.tenantId === e.tenantId, this, "tenant-id-mismatch"),
            r || (await this.beforeStateQueue.runMiddleware(e)),
            this.queue(async () => {
              await this.directlySetCurrentUser(e), this.notifyAuthListeners();
            })
          );
      }
      async signOut() {
        return (
          await this.beforeStateQueue.runMiddleware(null),
          (this.redirectPersistenceManager || this._popupRedirectResolver) &&
            (await this._setRedirectUser(null)),
          this._updateCurrentUser(null, !0)
        );
      }
      setPersistence(e) {
        return this.queue(async () => {
          await this.assertedPersistence.setPersistence(xa(e));
        });
      }
      _getRecaptchaConfig() {
        return this.tenantId == null
          ? this._agentRecaptchaConfig
          : this._tenantRecaptchaConfigs[this.tenantId];
      }
      async validatePassword(e) {
        this._getPasswordPolicyInternal() ||
          (await this._updatePasswordPolicy());
        const r = this._getPasswordPolicyInternal();
        return r.schemaVersion !== this.EXPECTED_PASSWORD_POLICY_SCHEMA_VERSION
          ? Promise.reject(
              this._errorFactory.create(
                "unsupported-password-policy-schema-version",
                {}
              )
            )
          : r.validatePassword(e);
      }
      _getPasswordPolicyInternal() {
        return this.tenantId === null
          ? this._projectPasswordPolicy
          : this._tenantPasswordPolicies[this.tenantId];
      }
      async _updatePasswordPolicy() {
        const e = await yte(this),
          r = new xte(e);
        this.tenantId === null
          ? (this._projectPasswordPolicy = r)
          : (this._tenantPasswordPolicies[this.tenantId] = r);
      }
      _getPersistence() {
        return this.assertedPersistence.persistence.type;
      }
      _updateErrorMap(e) {
        this._errorFactory = new Rl("auth", "Firebase", e());
      }
      onAuthStateChanged(e, r, n) {
        return this.registerStateListener(this.authStateSubscription, e, r, n);
      }
      beforeAuthStateChanged(e, r) {
        return this.beforeStateQueue.pushCallback(e, r);
      }
      onIdTokenChanged(e, r, n) {
        return this.registerStateListener(this.idTokenSubscription, e, r, n);
      }
      authStateReady() {
        return new Promise((e, r) => {
          if (this.currentUser) e();
          else {
            const n = this.onAuthStateChanged(() => {
              n(), e();
            }, r);
          }
        });
      }
      toJSON() {
        var e;
        return {
          apiKey: this.config.apiKey,
          authDomain: this.config.authDomain,
          appName: this.name,
          currentUser:
            (e = this._currentUser) === null || e === void 0
              ? void 0
              : e.toJSON(),
        };
      }
      async _setRedirectUser(e, r) {
        const n = await this.getOrInitRedirectPersistenceManager(r);
        return e === null ? n.removeCurrentUser() : n.setCurrentUser(e);
      }
      async getOrInitRedirectPersistenceManager(e) {
        if (!this.redirectPersistenceManager) {
          const r = (e && xa(e)) || this._popupRedirectResolver;
          mt(r, this, "argument-error"),
            (this.redirectPersistenceManager = await lu.create(
              this,
              [xa(r._redirectPersistence)],
              "redirectUser"
            )),
            (this.redirectUser =
              await this.redirectPersistenceManager.getCurrentUser());
        }
        return this.redirectPersistenceManager;
      }
      async _redirectUserForId(e) {
        var r, n;
        return (
          this._isInitialized && (await this.queue(async () => {})),
          ((r = this._currentUser) === null || r === void 0
            ? void 0
            : r._redirectEventId) === e
            ? this._currentUser
            : ((n = this.redirectUser) === null || n === void 0
                ? void 0
                : n._redirectEventId) === e
            ? this.redirectUser
            : null
        );
      }
      async _persistUserIfCurrent(e) {
        if (e === this.currentUser)
          return this.queue(async () => this.directlySetCurrentUser(e));
      }
      _notifyListenersIfCurrent(e) {
        e === this.currentUser && this.notifyAuthListeners();
      }
      _key() {
        return `${this.config.authDomain}:${this.config.apiKey}:${this.name}`;
      }
      _startProactiveRefresh() {
        (this.isProactiveRefreshEnabled = !0),
          this.currentUser && this._currentUser._startProactiveRefresh();
      }
      _stopProactiveRefresh() {
        (this.isProactiveRefreshEnabled = !1),
          this.currentUser && this._currentUser._stopProactiveRefresh();
      }
      get _currentUser() {
        return this.currentUser;
      }
      notifyAuthListeners() {
        var e, r;
        if (!this._isInitialized) return;
        this.idTokenSubscription.next(this.currentUser);
        const n =
          (r =
            (e = this.currentUser) === null || e === void 0
              ? void 0
              : e.uid) !== null && r !== void 0
            ? r
            : null;
        this.lastNotifiedUid !== n &&
          ((this.lastNotifiedUid = n),
          this.authStateSubscription.next(this.currentUser));
      }
      registerStateListener(e, r, n, i) {
        if (this._deleted) return () => {};
        const a = typeof r == "function" ? r : r.next.bind(r);
        let l = !1;
        const u = this._isInitialized
          ? Promise.resolve()
          : this._initializationPromise;
        if (
          (mt(u, this, "internal-error"),
          u.then(() => {
            l || a(this.currentUser);
          }),
          typeof r == "function")
        ) {
          const p = e.addObserver(r, n, i);
          return () => {
            (l = !0), p();
          };
        } else {
          const p = e.addObserver(r);
          return () => {
            (l = !0), p();
          };
        }
      }
      async directlySetCurrentUser(e) {
        this.currentUser &&
          this.currentUser !== e &&
          this._currentUser._stopProactiveRefresh(),
          e && this.isProactiveRefreshEnabled && e._startProactiveRefresh(),
          (this.currentUser = e),
          e
            ? await this.assertedPersistence.setCurrentUser(e)
            : await this.assertedPersistence.removeCurrentUser();
      }
      queue(e) {
        return (this.operations = this.operations.then(e, e)), this.operations;
      }
      get assertedPersistence() {
        return (
          mt(this.persistenceManager, this, "internal-error"),
          this.persistenceManager
        );
      }
      _logFramework(e) {
        !e ||
          this.frameworks.includes(e) ||
          (this.frameworks.push(e),
          this.frameworks.sort(),
          (this.clientVersion = HO(
            this.config.clientPlatform,
            this._getFrameworks()
          )));
      }
      _getFrameworks() {
        return this.frameworks;
      }
      async _getAdditionalHeaders() {
        var e;
        const r = { "X-Client-Version": this.clientVersion };
        this.app.options.appId &&
          (r["X-Firebase-gmpid"] = this.app.options.appId);
        const n = await ((e = this.heartbeatServiceProvider.getImmediate({
          optional: !0,
        })) === null || e === void 0
          ? void 0
          : e.getHeartbeatsHeader());
        n && (r["X-Firebase-Client"] = n);
        const i = await this._getAppCheckToken();
        return i && (r["X-Firebase-AppCheck"] = i), r;
      }
      async _getAppCheckToken() {
        var e;
        const r = await ((e = this.appCheckServiceProvider.getImmediate({
          optional: !0,
        })) === null || e === void 0
          ? void 0
          : e.getToken());
        return (
          r != null &&
            r.error &&
            $ee(`Error while retrieving App Check token: ${r.error}`),
          r == null ? void 0 : r.token
        );
      }
    }
    function mm(t) {
      return fi(t);
    }
    class UO {
      constructor(e) {
        (this.auth = e),
          (this.observer = null),
          (this.addObserver = p$((r) => (this.observer = r)));
      }
      get next() {
        return (
          mt(this.observer, this.auth, "internal-error"),
          this.observer.next.bind(this.observer)
        );
      }
    }
    function kte() {
      var t, e;
      return (e =
        (t = document.getElementsByTagName("head")) === null || t === void 0
          ? void 0
          : t[0]) !== null && e !== void 0
        ? e
        : document;
    }
    function _te(t) {
      return new Promise((e, r) => {
        const n = document.createElement("script");
        n.setAttribute("src", t),
          (n.onload = e),
          (n.onerror = (i) => {
            const a = Es("internal-error");
            (a.customData = i), r(a);
          }),
          (n.type = "text/javascript"),
          (n.charset = "UTF-8"),
          kte().appendChild(n);
      });
    }
    function Ate(t) {
      return `__${t}${Math.floor(Math.random() * 1e6)}`;
    }
    function Cte(t, e) {
      const r = Ed(t, "auth");
      if (r.isInitialized()) {
        const n = r.getImmediate(),
          i = r.getOptions();
        if (hu(i, e ?? {})) return n;
        va(n, "already-initialized");
      }
      return r.initialize({ options: e });
    }
    function Ste(t, e) {
      const r = (e == null ? void 0 : e.persistence) || [],
        n = (Array.isArray(r) ? r : [r]).map(xa);
      e != null && e.errorMap && t._updateErrorMap(e.errorMap),
        t._initializeWithPersistence(
          n,
          e == null ? void 0 : e.popupRedirectResolver
        );
    }
    function Ete(t, e, r) {
      const n = mm(t);
      mt(n._canInitEmulator, n, "emulator-config-failed"),
        mt(/^https?:\/\//.test(e), n, "invalid-emulator-scheme");
      const i = !!(r != null && r.disableWarnings),
        a = WO(e),
        { host: l, port: u } = Ite(e),
        p = u === null ? "" : `:${u}`;
      (n.config.emulator = { url: `${a}//${l}${p}/` }),
        (n.settings.appVerificationDisabledForTesting = !0),
        (n.emulatorConfig = Object.freeze({
          host: l,
          port: u,
          protocol: a.replace(":", ""),
          options: Object.freeze({ disableWarnings: i }),
        })),
        i || Tte();
    }
    function WO(t) {
      const e = t.indexOf(":");
      return e < 0 ? "" : t.substr(0, e + 1);
    }
    function Ite(t) {
      const e = WO(t),
        r = /(\/\/)?([^?#/]+)/.exec(t.substr(e.length));
      if (!r) return { host: "", port: null };
      const n = r[2].split("@").pop() || "",
        i = /^(\[[^\]]+\])(:|$)/.exec(n);
      if (i) {
        const a = i[1];
        return { host: a, port: XO(n.substr(a.length + 1)) };
      } else {
        const [a, l] = n.split(":");
        return { host: a, port: XO(l) };
      }
    }
    function XO(t) {
      if (!t) return null;
      const e = Number(t);
      return isNaN(e) ? null : e;
    }
    function Tte() {
      function t() {
        const e = document.createElement("p"),
          r = e.style;
        // (e.innerText =
        //   "Running in emulator mode. Do not use with production credentials."),
        //   (r.position = "fixed"),
        //   (r.width = "100%"),
        //   (r.backgroundColor = "#ffffff"),
        //   (r.border = ".1em solid #000000"),
        //   (r.color = "#b50000"),
        //   (r.bottom = "0px"),
        //   (r.left = "0px"),
        //   (r.margin = "0px"),
        //   (r.zIndex = "10000"),
        //   (r.textAlign = "center"),
        //   e.classList.add("firebase-emulator-warning"),
          document.body.appendChild(e);
      }
      typeof console < "u" &&
        typeof console.info == "function" &&
        console.info(
          "WARNING: You are using the Auth Emulator, which is intended for local testing only.  Do not use with production credentials."
        ),
        typeof window < "u" &&
          typeof document < "u" &&
          (document.readyState === "loading"
            ? window.addEventListener("DOMContentLoaded", t)
            : t());
    }
    class jO {
      constructor(e, r) {
        (this.providerId = e), (this.signInMethod = r);
      }
      toJSON() {
        return ya("not implemented");
      }
      _getIdTokenResponse(e) {
        return ya("not implemented");
      }
      _linkToIdToken(e, r) {
        return ya("not implemented");
      }
      _getReauthenticationResolver(e) {
        return ya("not implemented");
      }
    }
    async function cu(t, e) {
      return SO(t, "POST", "/v1/accounts:signInWithIdp", Ew(t, e));
    }
    const Pte = "http://localhost";
    class Ll extends jO {
      constructor() {
        super(...arguments), (this.pendingToken = null);
      }
      static _fromParams(e) {
        const r = new Ll(e.providerId, e.signInMethod);
        return (
          e.idToken || e.accessToken
            ? (e.idToken && (r.idToken = e.idToken),
              e.accessToken && (r.accessToken = e.accessToken),
              e.nonce && !e.pendingToken && (r.nonce = e.nonce),
              e.pendingToken && (r.pendingToken = e.pendingToken))
            : e.oauthToken && e.oauthTokenSecret
            ? ((r.accessToken = e.oauthToken), (r.secret = e.oauthTokenSecret))
            : va("argument-error"),
          r
        );
      }
      toJSON() {
        return {
          idToken: this.idToken,
          accessToken: this.accessToken,
          secret: this.secret,
          nonce: this.nonce,
          pendingToken: this.pendingToken,
          providerId: this.providerId,
          signInMethod: this.signInMethod,
        };
      }
      static fromJSON(e) {
        const r = typeof e == "string" ? JSON.parse(e) : e,
          { providerId: n, signInMethod: i } = r,
          a = _w(r, ["providerId", "signInMethod"]);
        if (!n || !i) return null;
        const l = new Ll(n, i);
        return (
          (l.idToken = a.idToken || void 0),
          (l.accessToken = a.accessToken || void 0),
          (l.secret = a.secret),
          (l.nonce = a.nonce),
          (l.pendingToken = a.pendingToken || null),
          l
        );
      }
      _getIdTokenResponse(e) {
        const r = this.buildRequest();
        return cu(e, r);
      }
      _linkToIdToken(e, r) {
        const n = this.buildRequest();
        return (n.idToken = r), cu(e, n);
      }
      _getReauthenticationResolver(e) {
        const r = this.buildRequest();
        return (r.autoCreate = !1), cu(e, r);
      }
      buildRequest() {
        const e = { requestUri: Pte, returnSecureToken: !0 };
        if (this.pendingToken) e.pendingToken = this.pendingToken;
        else {
          const r = {};
          this.idToken && (r.id_token = this.idToken),
            this.accessToken && (r.access_token = this.accessToken),
            this.secret && (r.oauth_token_secret = this.secret),
            (r.providerId = this.providerId),
            this.nonce && !this.pendingToken && (r.nonce = this.nonce),
            (e.postBody = Kc(r));
        }
        return e;
      }
    }
    class GO {
      constructor(e) {
        (this.providerId = e),
          (this.defaultLanguageCode = null),
          (this.customParameters = {});
      }
      setDefaultLanguage(e) {
        this.defaultLanguageCode = e;
      }
      setCustomParameters(e) {
        return (this.customParameters = e), this;
      }
      getCustomParameters() {
        return this.customParameters;
      }
    }
    class _d extends GO {
      constructor() {
        super(...arguments), (this.scopes = []);
      }
      addScope(e) {
        return this.scopes.includes(e) || this.scopes.push(e), this;
      }
      getScopes() {
        return [...this.scopes];
      }
    }
    class bo extends _d {
      constructor() {
        super("facebook.com");
      }
      static credential(e) {
        return Ll._fromParams({
          providerId: bo.PROVIDER_ID,
          signInMethod: bo.FACEBOOK_SIGN_IN_METHOD,
          accessToken: e,
        });
      }
      static credentialFromResult(e) {
        return bo.credentialFromTaggedObject(e);
      }
      static credentialFromError(e) {
        return bo.credentialFromTaggedObject(e.customData || {});
      }
      static credentialFromTaggedObject({ _tokenResponse: e }) {
        if (!e || !("oauthAccessToken" in e) || !e.oauthAccessToken)
          return null;
        try {
          return bo.credential(e.oauthAccessToken);
        } catch {
          return null;
        }
      }
    }
    (bo.FACEBOOK_SIGN_IN_METHOD = "facebook.com"),
      (bo.PROVIDER_ID = "facebook.com");
    class xo extends _d {
      constructor() {
        super("google.com"), this.addScope("profile");
      }
      static credential(e, r) {
        return Ll._fromParams({
          providerId: xo.PROVIDER_ID,
          signInMethod: xo.GOOGLE_SIGN_IN_METHOD,
          idToken: e,
          accessToken: r,
        });
      }
      static credentialFromResult(e) {
        return xo.credentialFromTaggedObject(e);
      }
      static credentialFromError(e) {
        return xo.credentialFromTaggedObject(e.customData || {});
      }
      static credentialFromTaggedObject({ _tokenResponse: e }) {
        if (!e) return null;
        const { oauthIdToken: r, oauthAccessToken: n } = e;
        if (!r && !n) return null;
        try {
          return xo.credential(r, n);
        } catch {
          return null;
        }
      }
    }
    (xo.GOOGLE_SIGN_IN_METHOD = "google.com"), (xo.PROVIDER_ID = "google.com");
    class wo extends _d {
      constructor() {
        super("github.com");
      }
      static credential(e) {
        return Ll._fromParams({
          providerId: wo.PROVIDER_ID,
          signInMethod: wo.GITHUB_SIGN_IN_METHOD,
          accessToken: e,
        });
      }
      static credentialFromResult(e) {
        return wo.credentialFromTaggedObject(e);
      }
      static credentialFromError(e) {
        return wo.credentialFromTaggedObject(e.customData || {});
      }
      static credentialFromTaggedObject({ _tokenResponse: e }) {
        if (!e || !("oauthAccessToken" in e) || !e.oauthAccessToken)
          return null;
        try {
          return wo.credential(e.oauthAccessToken);
        } catch {
          return null;
        }
      }
    }
    (wo.GITHUB_SIGN_IN_METHOD = "github.com"), (wo.PROVIDER_ID = "github.com");
    class ko extends _d {
      constructor() {
        super("twitter.com");
      }
      static credential(e, r) {
        return Ll._fromParams({
          providerId: ko.PROVIDER_ID,
          signInMethod: ko.TWITTER_SIGN_IN_METHOD,
          oauthToken: e,
          oauthTokenSecret: r,
        });
      }
      static credentialFromResult(e) {
        return ko.credentialFromTaggedObject(e);
      }
      static credentialFromError(e) {
        return ko.credentialFromTaggedObject(e.customData || {});
      }
      static credentialFromTaggedObject({ _tokenResponse: e }) {
        if (!e) return null;
        const { oauthAccessToken: r, oauthTokenSecret: n } = e;
        if (!r || !n) return null;
        try {
          return ko.credential(r, n);
        } catch {
          return null;
        }
      }
    }
    (ko.TWITTER_SIGN_IN_METHOD = "twitter.com"),
      (ko.PROVIDER_ID = "twitter.com");
    async function Ote(t, e) {
      return SO(t, "POST", "/v1/accounts:signUp", Ew(t, e));
    }
    class _o {
      constructor(e) {
        (this.user = e.user),
          (this.providerId = e.providerId),
          (this._tokenResponse = e._tokenResponse),
          (this.operationType = e.operationType);
      }
      static async _fromIdTokenResponse(e, r, n, i = !1) {
        const a = await Ol._fromIdTokenResponse(e, n, i),
          l = YO(n);
        return new _o({
          user: a,
          providerId: l,
          _tokenResponse: n,
          operationType: r,
        });
      }
      static async _forOperation(e, r, n) {
        await e._updateTokensIfNecessary(n, !0);
        const i = YO(n);
        return new _o({
          user: e,
          providerId: i,
          _tokenResponse: n,
          operationType: r,
        });
      }
    }
    function YO(t) {
      return t.providerId ? t.providerId : "phoneNumber" in t ? "phone" : null;
    }
    async function Lte(t) {
      var e;
      const r = mm(t);
      if (
        (await r._initializationPromise,
        !((e = r.currentUser) === null || e === void 0) && e.isAnonymous)
      )
        return new _o({
          user: r.currentUser,
          providerId: null,
          operationType: "signIn",
        });
      const n = await Ote(r, { returnSecureToken: !0 }),
        i = await _o._fromIdTokenResponse(r, "signIn", n, !0);
      return await r._updateCurrentUser(i.user), i;
    }
    class vm extends Sa {
      constructor(e, r, n, i) {
        var a;
        super(r.code, r.message),
          (this.operationType = n),
          (this.user = i),
          Object.setPrototypeOf(this, vm.prototype),
          (this.customData = {
            appName: e.name,
            tenantId: (a = e.tenantId) !== null && a !== void 0 ? a : void 0,
            _serverResponse: r.customData._serverResponse,
            operationType: n,
          });
      }
      static _fromErrorAndOperation(e, r, n, i) {
        return new vm(e, r, n, i);
      }
    }
    function VO(t, e, r, n) {
      return (
        e === "reauthenticate"
          ? r._getReauthenticationResolver(t)
          : r._getIdTokenResponse(t)
      ).catch((i) => {
        throw i.code === "auth/multi-factor-auth-required"
          ? vm._fromErrorAndOperation(t, i, e, n)
          : i;
      });
    }
    async function Mte(t, e, r = !1) {
      const n = await wd(t, e._linkToIdToken(t.auth, await t.getIdToken()), r);
      return _o._forOperation(t, "link", n);
    }
    async function Rte(t, e, r = !1) {
      const { auth: n } = t,
        i = "reauthenticate";
      try {
        const a = await wd(t, VO(n, i, e, t), r);
        mt(a.idToken, n, "internal-error");
        const l = Tw(a.idToken);
        mt(l, n, "internal-error");
        const { sub: u } = l;
        return mt(t.uid === u, n, "user-mismatch"), _o._forOperation(t, i, a);
      } catch (a) {
        throw (
          ((a == null ? void 0 : a.code) === "auth/user-not-found" &&
            va(n, "user-mismatch"),
          a)
        );
      }
    }
    async function Nte(t, e, r = !1) {
      const n = "signIn",
        i = await VO(t, n, e),
        a = await _o._fromIdTokenResponse(t, n, i);
      return r || (await t._updateCurrentUser(a.user)), a;
    }
    function Bte(t, e, r, n) {
      return fi(t).onIdTokenChanged(e, r, n);
    }
    function Fte(t, e, r) {
      return fi(t).beforeAuthStateChanged(e, r);
    }
    const ym = "__sak";
    class qO {
      constructor(e, r) {
        (this.storageRetriever = e), (this.type = r);
      }
      _isAvailable() {
        try {
          return this.storage
            ? (this.storage.setItem(ym, "1"),
              this.storage.removeItem(ym),
              Promise.resolve(!0))
            : Promise.resolve(!1);
        } catch {
          return Promise.resolve(!1);
        }
      }
      _set(e, r) {
        return this.storage.setItem(e, JSON.stringify(r)), Promise.resolve();
      }
      _get(e) {
        const r = this.storage.getItem(e);
        return Promise.resolve(r ? JSON.parse(r) : null);
      }
      _remove(e) {
        return this.storage.removeItem(e), Promise.resolve();
      }
      get storage() {
        return this.storageRetriever();
      }
    }
    function Dte() {
      const t = Ln();
      return Pw(t) || gm(t);
    }
    const zte = 1e3,
      Hte = 10;
    class KO extends qO {
      constructor() {
        super(() => window.localStorage, "LOCAL"),
          (this.boundEventHandler = (e, r) => this.onStorageEvent(e, r)),
          (this.listeners = {}),
          (this.localCache = {}),
          (this.pollTimer = null),
          (this.safariLocalStorageNotSynced = Dte() && mte()),
          (this.fallbackToPolling = zO()),
          (this._shouldAllowMigration = !0);
      }
      forAllChangedKeys(e) {
        for (const r of Object.keys(this.listeners)) {
          const n = this.storage.getItem(r),
            i = this.localCache[r];
          n !== i && e(r, i, n);
        }
      }
      onStorageEvent(e, r = !1) {
        if (!e.key) {
          this.forAllChangedKeys((l, u, p) => {
            this.notifyListeners(l, p);
          });
          return;
        }
        const n = e.key;
        if (
          (r ? this.detachListener() : this.stopPolling(),
          this.safariLocalStorageNotSynced)
        ) {
          const l = this.storage.getItem(n);
          if (e.newValue !== l)
            e.newValue !== null
              ? this.storage.setItem(n, e.newValue)
              : this.storage.removeItem(n);
          else if (this.localCache[n] === e.newValue && !r) return;
        }
        const i = () => {
            const l = this.storage.getItem(n);
            (!r && this.localCache[n] === l) || this.notifyListeners(n, l);
          },
          a = this.storage.getItem(n);
        gte() && a !== e.newValue && e.newValue !== e.oldValue
          ? setTimeout(i, Hte)
          : i();
      }
      notifyListeners(e, r) {
        this.localCache[e] = r;
        const n = this.listeners[e];
        if (n) for (const i of Array.from(n)) i(r && JSON.parse(r));
      }
      startPolling() {
        this.stopPolling(),
          (this.pollTimer = setInterval(() => {
            this.forAllChangedKeys((e, r, n) => {
              this.onStorageEvent(
                new StorageEvent("storage", {
                  key: e,
                  oldValue: r,
                  newValue: n,
                }),
                !0
              );
            });
          }, zte));
      }
      stopPolling() {
        this.pollTimer &&
          (clearInterval(this.pollTimer), (this.pollTimer = null));
      }
      attachListener() {
        window.addEventListener("storage", this.boundEventHandler);
      }
      detachListener() {
        window.removeEventListener("storage", this.boundEventHandler);
      }
      _addListener(e, r) {
        Object.keys(this.listeners).length === 0 &&
          (this.fallbackToPolling
            ? this.startPolling()
            : this.attachListener()),
          this.listeners[e] ||
            ((this.listeners[e] = new Set()),
            (this.localCache[e] = this.storage.getItem(e))),
          this.listeners[e].add(r);
      }
      _removeListener(e, r) {
        this.listeners[e] &&
          (this.listeners[e].delete(r),
          this.listeners[e].size === 0 && delete this.listeners[e]),
          Object.keys(this.listeners).length === 0 &&
            (this.detachListener(), this.stopPolling());
      }
      async _set(e, r) {
        await super._set(e, r), (this.localCache[e] = JSON.stringify(r));
      }
      async _get(e) {
        const r = await super._get(e);
        return (this.localCache[e] = JSON.stringify(r)), r;
      }
      async _remove(e) {
        await super._remove(e), delete this.localCache[e];
      }
    }
    KO.type = "LOCAL";
    const Ute = KO;
    class $O extends qO {
      constructor() {
        super(() => window.sessionStorage, "SESSION");
      }
      _addListener(e, r) {}
      _removeListener(e, r) {}
    }
    $O.type = "SESSION";
    const ZO = $O;
    function Wte(t) {
      return Promise.all(
        t.map(async (e) => {
          try {
            return { fulfilled: !0, value: await e };
          } catch (r) {
            return { fulfilled: !1, reason: r };
          }
        })
      );
    }
    class bm {
      constructor(e) {
        (this.eventTarget = e),
          (this.handlersMap = {}),
          (this.boundEventHandler = this.handleEvent.bind(this));
      }
      static _getInstance(e) {
        const r = this.receivers.find((i) => i.isListeningto(e));
        if (r) return r;
        const n = new bm(e);
        return this.receivers.push(n), n;
      }
      isListeningto(e) {
        return this.eventTarget === e;
      }
      async handleEvent(e) {
        const r = e,
          { eventId: n, eventType: i, data: a } = r.data,
          l = this.handlersMap[i];
        if (!(l != null && l.size)) return;
        r.ports[0].postMessage({ status: "ack", eventId: n, eventType: i });
        const u = Array.from(l).map(async (m) => m(r.origin, a)),
          p = await Wte(u);
        r.ports[0].postMessage({
          status: "done",
          eventId: n,
          eventType: i,
          response: p,
        });
      }
      _subscribe(e, r) {
        Object.keys(this.handlersMap).length === 0 &&
          this.eventTarget.addEventListener("message", this.boundEventHandler),
          this.handlersMap[e] || (this.handlersMap[e] = new Set()),
          this.handlersMap[e].add(r);
      }
      _unsubscribe(e, r) {
        this.handlersMap[e] && r && this.handlersMap[e].delete(r),
          (!r || this.handlersMap[e].size === 0) && delete this.handlersMap[e],
          Object.keys(this.handlersMap).length === 0 &&
            this.eventTarget.removeEventListener(
              "message",
              this.boundEventHandler
            );
      }
    }
    bm.receivers = [];
    function Ow(t = "", e = 10) {
      let r = "";
      for (let n = 0; n < e; n++) r += Math.floor(Math.random() * 10);
      return t + r;
    }
    class Xte {
      constructor(e) {
        (this.target = e), (this.handlers = new Set());
      }
      removeMessageHandler(e) {
        e.messageChannel &&
          (e.messageChannel.port1.removeEventListener("message", e.onMessage),
          e.messageChannel.port1.close()),
          this.handlers.delete(e);
      }
      async _send(e, r, n = 50) {
        const i = typeof MessageChannel < "u" ? new MessageChannel() : null;
        if (!i) throw new Error("connection_unavailable");
        let a, l;
        return new Promise((u, p) => {
          const m = Ow("", 20);
          i.port1.start();
          const v = setTimeout(() => {
            p(new Error("unsupported_event"));
          }, n);
          (l = {
            messageChannel: i,
            onMessage(w) {
              const S = w;
              if (S.data.eventId === m)
                switch (S.data.status) {
                  case "ack":
                    clearTimeout(v),
                      (a = setTimeout(() => {
                        p(new Error("timeout"));
                      }, 3e3));
                    break;
                  case "done":
                    clearTimeout(a), u(S.data.response);
                    break;
                  default:
                    clearTimeout(v),
                      clearTimeout(a),
                      p(new Error("invalid_response"));
                    break;
                }
            },
          }),
            this.handlers.add(l),
            i.port1.addEventListener("message", l.onMessage),
            this.target.postMessage({ eventType: e, eventId: m, data: r }, [
              i.port2,
            ]);
        }).finally(() => {
          l && this.removeMessageHandler(l);
        });
      }
    }
    function Is() {
      return window;
    }
    function jte(t) {
      Is().location.href = t;
    }
    function QO() {
      return (
        typeof Is().WorkerGlobalScope < "u" &&
        typeof Is().importScripts == "function"
      );
    }
    async function Gte() {
      if (!(navigator != null && navigator.serviceWorker)) return null;
      try {
        return (await navigator.serviceWorker.ready).active;
      } catch {
        return null;
      }
    }
    function Yte() {
      var t;
      return (
        ((t = navigator == null ? void 0 : navigator.serviceWorker) === null ||
        t === void 0
          ? void 0
          : t.controller) || null
      );
    }
    function Vte() {
      return QO() ? self : null;
    }
    const JO = "firebaseLocalStorageDb",
      qte = 1,
      xm = "firebaseLocalStorage",
      eL = "fbase_key";
    class Ad {
      constructor(e) {
        this.request = e;
      }
      toPromise() {
        return new Promise((e, r) => {
          this.request.addEventListener("success", () => {
            e(this.request.result);
          }),
            this.request.addEventListener("error", () => {
              r(this.request.error);
            });
        });
      }
    }
    function wm(t, e) {
      return t.transaction([xm], e ? "readwrite" : "readonly").objectStore(xm);
    }
    function Kte() {
      const t = indexedDB.deleteDatabase(JO);
      return new Ad(t).toPromise();
    }
    function Lw() {
      const t = indexedDB.open(JO, qte);
      return new Promise((e, r) => {
        t.addEventListener("error", () => {
          r(t.error);
        }),
          t.addEventListener("upgradeneeded", () => {
            const n = t.result;
            try {
              n.createObjectStore(xm, { keyPath: eL });
            } catch (i) {
              r(i);
            }
          }),
          t.addEventListener("success", async () => {
            const n = t.result;
            n.objectStoreNames.contains(xm)
              ? e(n)
              : (n.close(), await Kte(), e(await Lw()));
          });
      });
    }
    async function tL(t, e, r) {
      const n = wm(t, !0).put({ [eL]: e, value: r });
      return new Ad(n).toPromise();
    }
    async function $te(t, e) {
      const r = wm(t, !1).get(e),
        n = await new Ad(r).toPromise();
      return n === void 0 ? null : n.value;
    }
    function rL(t, e) {
      const r = wm(t, !0).delete(e);
      return new Ad(r).toPromise();
    }
    const Zte = 800,
      Qte = 3;
    class nL {
      constructor() {
        (this.type = "LOCAL"),
          (this._shouldAllowMigration = !0),
          (this.listeners = {}),
          (this.localCache = {}),
          (this.pollTimer = null),
          (this.pendingWrites = 0),
          (this.receiver = null),
          (this.sender = null),
          (this.serviceWorkerReceiverAvailable = !1),
          (this.activeServiceWorker = null),
          (this._workerInitializationPromise =
            this.initializeServiceWorkerMessaging().then(
              () => {},
              () => {}
            ));
      }
      async _openDb() {
        return this.db ? this.db : ((this.db = await Lw()), this.db);
      }
      async _withRetries(e) {
        let r = 0;
        for (;;)
          try {
            const n = await this._openDb();
            return await e(n);
          } catch (n) {
            if (r++ > Qte) throw n;
            this.db && (this.db.close(), (this.db = void 0));
          }
      }
      async initializeServiceWorkerMessaging() {
        return QO() ? this.initializeReceiver() : this.initializeSender();
      }
      async initializeReceiver() {
        (this.receiver = bm._getInstance(Vte())),
          this.receiver._subscribe("keyChanged", async (e, r) => ({
            keyProcessed: (await this._poll()).includes(r.key),
          })),
          this.receiver._subscribe("ping", async (e, r) => ["keyChanged"]);
      }
      async initializeSender() {
        var e, r;
        if (
          ((this.activeServiceWorker = await Gte()), !this.activeServiceWorker)
        )
          return;
        this.sender = new Xte(this.activeServiceWorker);
        const n = await this.sender._send("ping", {}, 800);
        n &&
          !((e = n[0]) === null || e === void 0) &&
          e.fulfilled &&
          !((r = n[0]) === null || r === void 0) &&
          r.value.includes("keyChanged") &&
          (this.serviceWorkerReceiverAvailable = !0);
      }
      async notifyServiceWorker(e) {
        if (
          !(
            !this.sender ||
            !this.activeServiceWorker ||
            Yte() !== this.activeServiceWorker
          )
        )
          try {
            await this.sender._send(
              "keyChanged",
              { key: e },
              this.serviceWorkerReceiverAvailable ? 800 : 50
            );
          } catch {}
      }
      async _isAvailable() {
        try {
          if (!indexedDB) return !1;
          const e = await Lw();
          return await tL(e, ym, "1"), await rL(e, ym), !0;
        } catch {}
        return !1;
      }
      async _withPendingWrite(e) {
        this.pendingWrites++;
        try {
          await e();
        } finally {
          this.pendingWrites--;
        }
      }
      async _set(e, r) {
        return this._withPendingWrite(
          async () => (
            await this._withRetries((n) => tL(n, e, r)),
            (this.localCache[e] = r),
            this.notifyServiceWorker(e)
          )
        );
      }
      async _get(e) {
        const r = await this._withRetries((n) => $te(n, e));
        return (this.localCache[e] = r), r;
      }
      async _remove(e) {
        return this._withPendingWrite(
          async () => (
            await this._withRetries((r) => rL(r, e)),
            delete this.localCache[e],
            this.notifyServiceWorker(e)
          )
        );
      }
      async _poll() {
        const e = await this._withRetries((i) => {
          const a = wm(i, !1).getAll();
          return new Ad(a).toPromise();
        });
        if (!e) return [];
        if (this.pendingWrites !== 0) return [];
        const r = [],
          n = new Set();
        for (const { fbase_key: i, value: a } of e)
          n.add(i),
            JSON.stringify(this.localCache[i]) !== JSON.stringify(a) &&
              (this.notifyListeners(i, a), r.push(i));
        for (const i of Object.keys(this.localCache))
          this.localCache[i] &&
            !n.has(i) &&
            (this.notifyListeners(i, null), r.push(i));
        return r;
      }
      notifyListeners(e, r) {
        this.localCache[e] = r;
        const n = this.listeners[e];
        if (n) for (const i of Array.from(n)) i(r);
      }
      startPolling() {
        this.stopPolling(),
          (this.pollTimer = setInterval(async () => this._poll(), Zte));
      }
      stopPolling() {
        this.pollTimer &&
          (clearInterval(this.pollTimer), (this.pollTimer = null));
      }
      _addListener(e, r) {
        Object.keys(this.listeners).length === 0 && this.startPolling(),
          this.listeners[e] || ((this.listeners[e] = new Set()), this._get(e)),
          this.listeners[e].add(r);
      }
      _removeListener(e, r) {
        this.listeners[e] &&
          (this.listeners[e].delete(r),
          this.listeners[e].size === 0 && delete this.listeners[e]),
          Object.keys(this.listeners).length === 0 && this.stopPolling();
      }
    }
    nL.type = "LOCAL";
    const Jte = nL;
    new yd(3e4, 6e4);
    function ere(t, e) {
      return e
        ? xa(e)
        : (mt(t._popupRedirectResolver, t, "argument-error"),
          t._popupRedirectResolver);
    }
    class Mw extends jO {
      constructor(e) {
        super("custom", "custom"), (this.params = e);
      }
      _getIdTokenResponse(e) {
        return cu(e, this._buildIdpRequest());
      }
      _linkToIdToken(e, r) {
        return cu(e, this._buildIdpRequest(r));
      }
      _getReauthenticationResolver(e) {
        return cu(e, this._buildIdpRequest());
      }
      _buildIdpRequest(e) {
        const r = {
          requestUri: this.params.requestUri,
          sessionId: this.params.sessionId,
          postBody: this.params.postBody,
          tenantId: this.params.tenantId,
          pendingToken: this.params.pendingToken,
          returnSecureToken: !0,
          returnIdpCredential: !0,
        };
        return e && (r.idToken = e), r;
      }
    }
    function tre(t) {
      return Nte(t.auth, new Mw(t), t.bypassAuthState);
    }
    function rre(t) {
      const { auth: e, user: r } = t;
      return mt(r, e, "internal-error"), Rte(r, new Mw(t), t.bypassAuthState);
    }
    async function nre(t) {
      const { auth: e, user: r } = t;
      return mt(r, e, "internal-error"), Mte(r, new Mw(t), t.bypassAuthState);
    }
    class iL {
      constructor(e, r, n, i, a = !1) {
        (this.auth = e),
          (this.resolver = n),
          (this.user = i),
          (this.bypassAuthState = a),
          (this.pendingPromise = null),
          (this.eventManager = null),
          (this.filter = Array.isArray(r) ? r : [r]);
      }
      execute() {
        return new Promise(async (e, r) => {
          this.pendingPromise = { resolve: e, reject: r };
          try {
            (this.eventManager = await this.resolver._initialize(this.auth)),
              await this.onExecution(),
              this.eventManager.registerConsumer(this);
          } catch (n) {
            this.reject(n);
          }
        });
      }
      async onAuthEvent(e) {
        const {
          urlResponse: r,
          sessionId: n,
          postBody: i,
          tenantId: a,
          error: l,
          type: u,
        } = e;
        if (l) {
          this.reject(l);
          return;
        }
        const p = {
          auth: this.auth,
          requestUri: r,
          sessionId: n,
          tenantId: a || void 0,
          postBody: i || void 0,
          user: this.user,
          bypassAuthState: this.bypassAuthState,
        };
        try {
          this.resolve(await this.getIdpTask(u)(p));
        } catch (m) {
          this.reject(m);
        }
      }
      onError(e) {
        this.reject(e);
      }
      getIdpTask(e) {
        switch (e) {
          case "signInViaPopup":
          case "signInViaRedirect":
            return tre;
          case "linkViaPopup":
          case "linkViaRedirect":
            return nre;
          case "reauthViaPopup":
          case "reauthViaRedirect":
            return rre;
          default:
            va(this.auth, "internal-error");
        }
      }
      resolve(e) {
        ba(this.pendingPromise, "Pending promise was never set"),
          this.pendingPromise.resolve(e),
          this.unregisterAndCleanUp();
      }
      reject(e) {
        ba(this.pendingPromise, "Pending promise was never set"),
          this.pendingPromise.reject(e),
          this.unregisterAndCleanUp();
      }
      unregisterAndCleanUp() {
        this.eventManager && this.eventManager.unregisterConsumer(this),
          (this.pendingPromise = null),
          this.cleanUp();
      }
    }
    const ire = new yd(2e3, 1e4);
    class uu extends iL {
      constructor(e, r, n, i, a) {
        super(e, r, i, a),
          (this.provider = n),
          (this.authWindow = null),
          (this.pollId = null),
          uu.currentPopupAction && uu.currentPopupAction.cancel(),
          (uu.currentPopupAction = this);
      }
      async executeNotNull() {
        const e = await this.execute();
        return mt(e, this.auth, "internal-error"), e;
      }
      async onExecution() {
        ba(this.filter.length === 1, "Popup operations only handle one event");
        const e = Ow();
        (this.authWindow = await this.resolver._openPopup(
          this.auth,
          this.provider,
          this.filter[0],
          e
        )),
          (this.authWindow.associatedEvent = e),
          this.resolver._originValidation(this.auth).catch((r) => {
            this.reject(r);
          }),
          this.resolver._isIframeWebStorageSupported(this.auth, (r) => {
            r || this.reject(Es(this.auth, "web-storage-unsupported"));
          }),
          this.pollUserCancellation();
      }
      get eventId() {
        var e;
        return (
          ((e = this.authWindow) === null || e === void 0
            ? void 0
            : e.associatedEvent) || null
        );
      }
      cancel() {
        this.reject(Es(this.auth, "cancelled-popup-request"));
      }
      cleanUp() {
        this.authWindow && this.authWindow.close(),
          this.pollId && window.clearTimeout(this.pollId),
          (this.authWindow = null),
          (this.pollId = null),
          (uu.currentPopupAction = null);
      }
      pollUserCancellation() {
        const e = () => {
          var r, n;
          if (
            !(
              (n =
                (r = this.authWindow) === null || r === void 0
                  ? void 0
                  : r.window) === null || n === void 0
            ) &&
            n.closed
          ) {
            this.pollId = window.setTimeout(() => {
              (this.pollId = null),
                this.reject(Es(this.auth, "popup-closed-by-user"));
            }, 8e3);
            return;
          }
          this.pollId = window.setTimeout(e, ire.get());
        };
        e();
      }
    }
    uu.currentPopupAction = null;
    const sre = "pendingRedirect",
      km = new Map();
    class are extends iL {
      constructor(e, r, n = !1) {
        super(
          e,
          [
            "signInViaRedirect",
            "linkViaRedirect",
            "reauthViaRedirect",
            "unknown",
          ],
          r,
          void 0,
          n
        ),
          (this.eventId = null);
      }
      async execute() {
        let e = km.get(this.auth._key());
        if (!e) {
          try {
            const r = (await ore(this.resolver, this.auth))
              ? await super.execute()
              : null;
            e = () => Promise.resolve(r);
          } catch (r) {
            e = () => Promise.reject(r);
          }
          km.set(this.auth._key(), e);
        }
        return (
          this.bypassAuthState ||
            km.set(this.auth._key(), () => Promise.resolve(null)),
          e()
        );
      }
      async onAuthEvent(e) {
        if (e.type === "signInViaRedirect") return super.onAuthEvent(e);
        if (e.type === "unknown") {
          this.resolve(null);
          return;
        }
        if (e.eventId) {
          const r = await this.auth._redirectUserForId(e.eventId);
          if (r) return (this.user = r), super.onAuthEvent(e);
          this.resolve(null);
        }
      }
      async onExecution() {}
      cleanUp() {}
    }
    async function ore(t, e) {
      const r = ure(e),
        n = cre(t);
      if (!(await n._isAvailable())) return !1;
      const i = (await n._get(r)) === "true";
      return await n._remove(r), i;
    }
    function lre(t, e) {
      km.set(t._key(), e);
    }
    function cre(t) {
      return xa(t._redirectPersistence);
    }
    function ure(t) {
      return pm(sre, t.config.apiKey, t.name);
    }
    async function hre(t, e, r = !1) {
      const n = mm(t),
        i = ere(n, e),
        a = await new are(n, i, r).execute();
      return (
        a &&
          !r &&
          (delete a.user._redirectEventId,
          await n._persistUserIfCurrent(a.user),
          await n._setRedirectUser(null, e)),
        a
      );
    }
    const dre = 10 * 60 * 1e3;
    class fre {
      constructor(e) {
        (this.auth = e),
          (this.cachedEventUids = new Set()),
          (this.consumers = new Set()),
          (this.queuedRedirectEvent = null),
          (this.hasHandledPotentialRedirect = !1),
          (this.lastProcessedEventTime = Date.now());
      }
      registerConsumer(e) {
        this.consumers.add(e),
          this.queuedRedirectEvent &&
            this.isEventForConsumer(this.queuedRedirectEvent, e) &&
            (this.sendToConsumer(this.queuedRedirectEvent, e),
            this.saveEventToCache(this.queuedRedirectEvent),
            (this.queuedRedirectEvent = null));
      }
      unregisterConsumer(e) {
        this.consumers.delete(e);
      }
      onEvent(e) {
        if (this.hasEventBeenHandled(e)) return !1;
        let r = !1;
        return (
          this.consumers.forEach((n) => {
            this.isEventForConsumer(e, n) &&
              ((r = !0), this.sendToConsumer(e, n), this.saveEventToCache(e));
          }),
          this.hasHandledPotentialRedirect ||
            !pre(e) ||
            ((this.hasHandledPotentialRedirect = !0),
            r || ((this.queuedRedirectEvent = e), (r = !0))),
          r
        );
      }
      sendToConsumer(e, r) {
        var n;
        if (e.error && !aL(e)) {
          const i =
            ((n = e.error.code) === null || n === void 0
              ? void 0
              : n.split("auth/")[1]) || "internal-error";
          r.onError(Es(this.auth, i));
        } else r.onAuthEvent(e);
      }
      isEventForConsumer(e, r) {
        const n =
          r.eventId === null || (!!e.eventId && e.eventId === r.eventId);
        return r.filter.includes(e.type) && n;
      }
      hasEventBeenHandled(e) {
        return (
          Date.now() - this.lastProcessedEventTime >= dre &&
            this.cachedEventUids.clear(),
          this.cachedEventUids.has(sL(e))
        );
      }
      saveEventToCache(e) {
        this.cachedEventUids.add(sL(e)),
          (this.lastProcessedEventTime = Date.now());
      }
    }
    function sL(t) {
      return [t.type, t.eventId, t.sessionId, t.tenantId]
        .filter((e) => e)
        .join("-");
    }
    function aL({ type: t, error: e }) {
      return (
        t === "unknown" &&
        (e == null ? void 0 : e.code) === "auth/no-auth-event"
      );
    }
    function pre(t) {
      switch (t.type) {
        case "signInViaRedirect":
        case "linkViaRedirect":
        case "reauthViaRedirect":
          return !0;
        case "unknown":
          return aL(t);
        default:
          return !1;
      }
    }
    async function gre(t, e = {}) {
      return bd(t, "GET", "/v1/projects", e);
    }
    const mre = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,
      vre = /^https?/;
    async function yre(t) {
      if (t.config.emulator) return;
      const { authorizedDomains: e } = await gre(t);
      for (const r of e)
        try {
          if (bre(r)) return;
        } catch {}
      va(t, "unauthorized-domain");
    }
    function bre(t) {
      const e = Cw(),
        { protocol: r, hostname: n } = new URL(e);
      if (t.startsWith("chrome-extension://")) {
        const a = new URL(t);
        return a.hostname === "" && n === ""
          ? r === "chrome-extension:" &&
              t.replace("chrome-extension://", "") ===
                e.replace("chrome-extension://", "")
          : r === "chrome-extension:" && a.hostname === n;
      }
      if (!vre.test(r)) return !1;
      if (mre.test(t)) return n === t;
      const i = t.replace(/\./g, "\\.");
      return new RegExp("^(.+\\." + i + "|" + i + ")$", "i").test(n);
    }
    const xre = new yd(3e4, 6e4);
    function oL() {
      const t = Is().___jsl;
      if (t != null && t.H) {
        for (const e of Object.keys(t.H))
          if (
            ((t.H[e].r = t.H[e].r || []),
            (t.H[e].L = t.H[e].L || []),
            (t.H[e].r = [...t.H[e].L]),
            t.CP)
          )
            for (let r = 0; r < t.CP.length; r++) t.CP[r] = null;
      }
    }
    function wre(t) {
      return new Promise((e, r) => {
        var n, i, a;
        function l() {
          oL(),
            gapi.load("gapi.iframes", {
              callback: () => {
                e(gapi.iframes.getContext());
              },
              ontimeout: () => {
                oL(), r(Es(t, "network-request-failed"));
              },
              timeout: xre.get(),
            });
        }
        if (
          !(
            (i =
              (n = Is().gapi) === null || n === void 0 ? void 0 : n.iframes) ===
              null || i === void 0
          ) &&
          i.Iframe
        )
          e(gapi.iframes.getContext());
        else if (!((a = Is().gapi) === null || a === void 0) && a.load) l();
        else {
          const u = Ate("iframefcb");
          return (
            (Is()[u] = () => {
              gapi.load ? l() : r(Es(t, "network-request-failed"));
            }),
            _te(`https://apis.google.com/js/api.js?onload=${u}`).catch((p) =>
              r(p)
            )
          );
        }
      }).catch((e) => {
        throw ((_m = null), e);
      });
    }
    let _m = null;
    function kre(t) {
      return (_m = _m || wre(t)), _m;
    }
    const _re = new yd(5e3, 15e3),
      Are = "__/auth/iframe",
      Cre = "emulator/auth/iframe",
      Sre = {
        style: {
          position: "absolute",
          top: "-100px",
          width: "1px",
          height: "1px",
        },
        "aria-hidden": "true",
        tabindex: "-1",
      },
      Ere = new Map([
        ["identitytoolkit.googleapis.com", "p"],
        ["staging-identitytoolkit.sandbox.googleapis.com", "s"],
        ["test-identitytoolkit.sandbox.googleapis.com", "t"],
      ]);
    function Ire(t) {
      const e = t.config;
      mt(e.authDomain, t, "auth-domain-config-required");
      const r = e.emulator
          ? Sw(e, Cre)
          : `https://${t.config.authDomain}/${Are}`,
        n = { apiKey: e.apiKey, appName: t.name, v: $c },
        i = Ere.get(t.config.apiHost);
      i && (n.eid = i);
      const a = t._getFrameworks();
      return a.length && (n.fw = a.join(",")), `${r}?${Kc(n).slice(1)}`;
    }
    async function Tre(t) {
      const e = await kre(t),
        r = Is().gapi;
      return (
        mt(r, t, "internal-error"),
        e.open(
          {
            where: document.body,
            url: Ire(t),
            messageHandlersFilter: r.iframes.CROSS_ORIGIN_IFRAMES_FILTER,
            attributes: Sre,
            dontclear: !0,
          },
          (n) =>
            new Promise(async (i, a) => {
              await n.restyle({ setHideOnLeave: !1 });
              const l = Es(t, "network-request-failed"),
                u = Is().setTimeout(() => {
                  a(l);
                }, _re.get());
              function p() {
                Is().clearTimeout(u), i(n);
              }
              n.ping(p).then(p, () => {
                a(l);
              });
            })
        )
      );
    }
    const Pre = {
        location: "yes",
        resizable: "yes",
        statusbar: "yes",
        toolbar: "no",
      },
      Ore = 500,
      Lre = 600,
      Mre = "_blank",
      Rre = "http://localhost";
    class lL {
      constructor(e) {
        (this.window = e), (this.associatedEvent = null);
      }
      close() {
        if (this.window)
          try {
            this.window.close();
          } catch {}
      }
    }
    function Nre(t, e, r, n = Ore, i = Lre) {
      const a = Math.max((window.screen.availHeight - i) / 2, 0).toString(),
        l = Math.max((window.screen.availWidth - n) / 2, 0).toString();
      let u = "";
      const p = Object.assign(Object.assign({}, Pre), {
          width: n.toString(),
          height: i.toString(),
          top: a,
          left: l,
        }),
        m = Ln().toLowerCase();
      r && (u = RO(m) ? Mre : r),
        MO(m) && ((e = e || Rre), (p.scrollbars = "yes"));
      const v = Object.entries(p).reduce((S, [M, D]) => `${S}${M}=${D},`, "");
      if (pte(m) && u !== "_self") return Bre(e || "", u), new lL(null);
      const w = window.open(e || "", u, v);
      mt(w, t, "popup-blocked");
      try {
        w.focus();
      } catch {}
      return new lL(w);
    }
    function Bre(t, e) {
      const r = document.createElement("a");
      (r.href = t), (r.target = e);
      const n = document.createEvent("MouseEvent");
      n.initMouseEvent(
        "click",
        !0,
        !0,
        window,
        1,
        0,
        0,
        0,
        0,
        !1,
        !1,
        !1,
        !1,
        1,
        null
      ),
        r.dispatchEvent(n);
    }
    const Fre = "__/auth/handler",
      Dre = "emulator/auth/handler",
      zre = encodeURIComponent("fac");
    async function cL(t, e, r, n, i, a) {
      mt(t.config.authDomain, t, "auth-domain-config-required"),
        mt(t.config.apiKey, t, "invalid-api-key");
      const l = {
        apiKey: t.config.apiKey,
        appName: t.name,
        authType: r,
        redirectUrl: n,
        v: $c,
        eventId: i,
      };
      if (e instanceof GO) {
        e.setDefaultLanguage(t.languageCode),
          (l.providerId = e.providerId || ""),
          ax(e.getCustomParameters()) ||
            (l.customParameters = JSON.stringify(e.getCustomParameters()));
        for (const [v, w] of Object.entries(a || {})) l[v] = w;
      }
      if (e instanceof _d) {
        const v = e.getScopes().filter((w) => w !== "");
        v.length > 0 && (l.scopes = v.join(","));
      }
      t.tenantId && (l.tid = t.tenantId);
      const u = l;
      for (const v of Object.keys(u)) u[v] === void 0 && delete u[v];
      const p = await t._getAppCheckToken(),
        m = p ? `#${zre}=${encodeURIComponent(p)}` : "";
      return `${Hre(t)}?${Kc(u).slice(1)}${m}`;
    }
    function Hre({ config: t }) {
      return t.emulator ? Sw(t, Dre) : `https://${t.authDomain}/${Fre}`;
    }
    const Rw = "webStorageSupport";
    class Ure {
      constructor() {
        (this.eventManagers = {}),
          (this.iframes = {}),
          (this.originValidationPromises = {}),
          (this._redirectPersistence = ZO),
          (this._completeRedirectFn = hre),
          (this._overrideRedirectResult = lre);
      }
      async _openPopup(e, r, n, i) {
        var a;
        ba(
          (a = this.eventManagers[e._key()]) === null || a === void 0
            ? void 0
            : a.manager,
          "_initialize() not called before _openPopup()"
        );
        const l = await cL(e, r, n, Cw(), i);
        return Nre(e, l, Ow());
      }
      async _openRedirect(e, r, n, i) {
        await this._originValidation(e);
        const a = await cL(e, r, n, Cw(), i);
        return jte(a), new Promise(() => {});
      }
      _initialize(e) {
        const r = e._key();
        if (this.eventManagers[r]) {
          const { manager: i, promise: a } = this.eventManagers[r];
          return i
            ? Promise.resolve(i)
            : (ba(a, "If manager is not set, promise should be"), a);
        }
        const n = this.initAndGetManager(e);
        return (
          (this.eventManagers[r] = { promise: n }),
          n.catch(() => {
            delete this.eventManagers[r];
          }),
          n
        );
      }
      async initAndGetManager(e) {
        const r = await Tre(e),
          n = new fre(e);
        return (
          r.register(
            "authEvent",
            (i) => (
              mt(i == null ? void 0 : i.authEvent, e, "invalid-auth-event"),
              { status: n.onEvent(i.authEvent) ? "ACK" : "ERROR" }
            ),
            gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER
          ),
          (this.eventManagers[e._key()] = { manager: n }),
          (this.iframes[e._key()] = r),
          n
        );
      }
      _isIframeWebStorageSupported(e, r) {
        this.iframes[e._key()].send(
          Rw,
          { type: Rw },
          (n) => {
            var i;
            const a =
              (i = n == null ? void 0 : n[0]) === null || i === void 0
                ? void 0
                : i[Rw];
            a !== void 0 && r(!!a), va(e, "internal-error");
          },
          gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER
        );
      }
      _originValidation(e) {
        const r = e._key();
        return (
          this.originValidationPromises[r] ||
            (this.originValidationPromises[r] = yre(e)),
          this.originValidationPromises[r]
        );
      }
      get _shouldInitProactively() {
        return zO() || Pw() || gm();
      }
    }
    const Wre = Ure;
    var uL = "@firebase/auth",
      hL = "1.3.0";
    class Xre {
      constructor(e) {
        (this.auth = e), (this.internalListeners = new Map());
      }
      getUid() {
        var e;
        return (
          this.assertAuthConfigured(),
          ((e = this.auth.currentUser) === null || e === void 0
            ? void 0
            : e.uid) || null
        );
      }
      async getToken(e) {
        return (
          this.assertAuthConfigured(),
          await this.auth._initializationPromise,
          this.auth.currentUser
            ? { accessToken: await this.auth.currentUser.getIdToken(e) }
            : null
        );
      }
      addAuthTokenListener(e) {
        if ((this.assertAuthConfigured(), this.internalListeners.has(e)))
          return;
        const r = this.auth.onIdTokenChanged((n) => {
          e((n == null ? void 0 : n.stsTokenManager.accessToken) || null);
        });
        this.internalListeners.set(e, r), this.updateProactiveRefresh();
      }
      removeAuthTokenListener(e) {
        this.assertAuthConfigured();
        const r = this.internalListeners.get(e);
        r &&
          (this.internalListeners.delete(e),
          r(),
          this.updateProactiveRefresh());
      }
      assertAuthConfigured() {
        mt(
          this.auth._initializationPromise,
          "dependent-sdk-initialized-before-auth"
        );
      }
      updateProactiveRefresh() {
        this.internalListeners.size > 0
          ? this.auth._startProactiveRefresh()
          : this.auth._stopProactiveRefresh();
      }
    }
    function jre(t) {
      switch (t) {
        case "Node":
          return "node";
        case "ReactNative":
          return "rn";
        case "Worker":
          return "webworker";
        case "Cordova":
          return "cordova";
        default:
          return;
      }
    }
    function Gre(t) {
      Co(
        new Ca(
          "auth",
          (e, { options: r }) => {
            const n = e.getProvider("app").getImmediate(),
              i = e.getProvider("heartbeat"),
              a = e.getProvider("app-check-internal"),
              { apiKey: l, authDomain: u } = n.options;
            mt(l && !l.includes(":"), "invalid-api-key", { appName: n.name });
            const p = {
                apiKey: l,
                authDomain: u,
                clientPlatform: t,
                apiHost: "identitytoolkit.googleapis.com",
                tokenApiHost: "securetoken.googleapis.com",
                apiScheme: "https",
                sdkClientVersion: HO(t),
              },
              m = new wte(n, i, a, p);
            return Ste(m, r), m;
          },
          "PUBLIC"
        )
          .setInstantiationMode("EXPLICIT")
          .setInstanceCreatedCallback((e, r, n) => {
            e.getProvider("auth-internal").initialize();
          })
      ),
        Co(
          new Ca(
            "auth-internal",
            (e) => {
              const r = mm(e.getProvider("auth").getImmediate());
              return ((n) => new Xre(n))(r);
            },
            "PRIVATE"
          ).setInstantiationMode("EXPLICIT")
        ),
        Os(uL, hL, jre(t)),
        Os(uL, hL, "esm2017");
    }
    const Yre = 5 * 60,
      Vre = oT("authIdTokenMaxAge") || Yre;
    let dL = null;
    const qre = (t) => async (e) => {
      const r = e && (await e.getIdTokenResult()),
        n = r && (new Date().getTime() - Date.parse(r.issuedAtTime)) / 1e3;
      if (n && n > Vre) return;
      const i = r == null ? void 0 : r.token;
      dL !== i &&
        ((dL = i),
        await fetch(t, {
          method: i ? "POST" : "DELETE",
          headers: i ? { Authorization: `Bearer ${i}` } : {},
        }));
    };
    function Kre(t = Am()) {
      const e = Ed(t, "auth");
      if (e.isInitialized()) return e.getImmediate();
      const r = Cte(t, {
          popupRedirectResolver: Wre,
          persistence: [Jte, Ute, ZO],
        }),
        n = oT("authTokenSyncURL");
      if (n) {
        const a = qre(n);
        Fte(r, a, () => a(r.currentUser)), Bte(r, (l) => a(l));
      }
      const i = sT("auth");
      return i && Ete(r, `http://${i}`), r;
    }
    Gre("Browser");
    const $re = { class: "bg-gray-900 text-gray-200 mt-4 sm:mt-0" },
      Zre = { class: "space-y-16 py-16 xl:space-y-20" },
      Qre = ve(
        "div",
        { class: "mx-8 max-w-7xl" },
        [
          ve(
            "h2",
            {
              class:
                "mx-auto max-w-2xl text-2xl font-semibold leading-6 lg:mx-0 lg:max-w-none",
            },
            "Calls History"
          ),
        ],
        -1
      ),
      Jre = { class: "pb-4 ml-7 mt-4 flex bg-gray-900" },
      ene = ve(
        "label",
        { for: "table-search", class: "sr-only" },
        "Search",
        -1
      ),
      tne = { class: "relative mt-1" },
      rne = ve(
        "div",
        {
          class:
            "absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none",
        },
        [
          ve(
            "svg",
            {
              class: "w-4 h-4 text-gray-400",
              "aria-hidden": "true",
              xmlns: "http://www.w3.org/2000/svg",
              fill: "none",
              viewBox: "0 0 20 20",
            },
            [
              ve("path", {
                stroke: "currentColor",
                "stroke-linecap": "round",
                "stroke-linejoin": "round",
                "stroke-width": "2",
                d: "m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z",
              }),
            ]
          ),
        ],
        -1
      ),
      nne = { class: "relative overflow-y-auto shadow-md sm:rounded-lg" },
      ine = dt({
        __name: "TheDashboard",
        setup(t) {
          Er.extend(GY);
          const e = bw(xO()),
            {
              walletAddress: r,
              checkBrowser: n,
              isUnsupportedBrowser: i,
              isMetaMaskInstalled: a,
            } = x0(),
            { checkWallet: l, isTierOne: u } = Pb(),
            p = We(!0),
            m = We([]);
          async function v(J) {
            const T = `https://ping-serverless-functions.netlify.app/.netlify/functions/getPair?address=${J}`;
            return await (await fetch(T)).json();
          }
          async function w(J, T, Z) {
            const Oe = `https://ping-serverless-functions.netlify.app/.netlify/functions/getPairDetails?tokenAddress=${J}&pairAddress=${T}&timestamp=${Z}`;
            return await (await fetch(Oe)).json();
          }
          async function S(J, T) {
            try {
              const Z = `https://ping-serverless-functions.netlify.app/.netlify/functions/getPairAth?pairAddress=${J}&from=${T.from}&to=${T.to}&resolution=${T.resolution}`,
                Oe = await fetch(Z);
              let Me = 0,
                X = 0;
              const Ee = (await Oe.json()).bars.filter(
                (Se) =>
                  Er(Se.timestamp).isSame(T.from) ||
                  Er(Se.timestamp).isAfter(T.from)
              );
              if (Ee.length === 0) return { max: 0, min: 0, noBarsExist: !0 };
              const me = Ee.map((Se) => parseFloat(Se.highUsd));
              Me = Math.max(...me);
              const xe = Ee.map((Se) => parseFloat(Se.lowUsd));
              return (
                (X = Math.min(...xe)), { max: Me, min: X, noBarsExist: !1 }
              );
            } catch (Z) {
              console.error("Error:", Z.message);
            }
          }
          function M(J) {
            const T = J.callTime * 1e3,
              Z = Er(T).valueOf();
            return {
              min5: {
                from: Z,
                to: Er(T).add(5, "minute").valueOf(),
                resolution: 1,
              },
              min15: {
                from: Z,
                to: Er(T).add(15, "minute").valueOf(),
                resolution: 5,
              },
              min30: {
                from: Z,
                to: Er(T).add(30, "minute").valueOf(),
                resolution: 5,
              },
              h1: {
                from: Z,
                to: Er(T).add(60, "minute").valueOf(),
                resolution: 5,
              },
              h3: {
                from: Z,
                to: Er(T).add(180, "minute").valueOf(),
                resolution: 5,
              },
              h6: {
                from: Z,
                to: Er(T).add(360, "minute").valueOf(),
                resolution: 5,
              },
              h12: {
                from: Z,
                to: Er(T).add(720, "minute").valueOf(),
                resolution: 15,
              },
              h24: {
                from: Z,
                to: Er(T).add(1440, "minute").valueOf(),
                resolution: 15,
              },
            };
          }
          const D = {};
          async function z(J) {
            var xe, Se, Ie, Ne, oe, W, Q, ge, I, R, q, ce, ne, de, Te, Re, Ve;
            let T = { ...J },
              Z = 0;
            const Oe = M(J);
            if (!J.pairAddress || !J.supply) {
              const { pairs: Pe } = await v(J.address),
                { baseToken: Be, pairAddress: Ze } = Pe.find(
                  (st) => st.dexId === "uniswap"
                ),
                Je = await w(Be.address, Ze, Er(J.calledAt).valueOf());
              (Z = Je.gp.totalSupply || Je.ts.totalSupply),
                (D[`calls/${T.address}/tokenAddress`] = Be.address),
                (D[`calls/${T.address}/pairAddress`] = Ze),
                (D[`calls/${T.address}/supply`] = Z);
            }
            const Me = {
                min5: 0,
                min15: 0,
                min30: 0,
                h1: 0,
                h3: 0,
                h6: 0,
                h12: 0,
                h24: 0,
              },
              X = T.supply || Z,
              Ee = Er().diff(Er(J.callTime * 1e3), "minute");
            if (Ee > 5 && !((xe = T.min5) != null && xe.isLoaded)) {
              const {
                max: Pe,
                min: Be,
                noBarsExist: Ze,
              } = await S(T.pairAddress, Oe.min5);
              (Me.min5 = Ze ? T.marketcap : X * Pe),
                Pe === 0 && Be === 0
                  ? (D[`calls/${T.address}/min5`] = {
                      max: T.marketcap / X,
                      maxMCap: T.marketcap,
                      minMCap: T.marketcap,
                      min: T.marketcap / X,
                      isLoaded: !0,
                    })
                  : (D[`calls/${T.address}/min5`] = {
                      max: Pe,
                      maxMCap: X * Pe,
                      minMCap: X * Be,
                      min: Be,
                      isLoaded: !0,
                    });
            }
            if (Ee > 15 && !((Se = T.min15) != null && Se.isLoaded)) {
              const {
                max: Pe,
                min: Be,
                noBarsExist: Ze,
              } = await S(T.pairAddress, Oe.min15);
              (Me.min15 = Ze ? T.marketcap : X * Pe),
                Pe === 0 && Be === 0
                  ? (D[`calls/${T.address}/min15`] = {
                      max: T.marketcap / X,
                      maxMCap: T.marketcap,
                      minMCap: T.marketcap,
                      min: T.marketcap / X,
                      isLoaded: !0,
                    })
                  : (D[`calls/${T.address}/min15`] = {
                      max: Pe,
                      maxMCap: X * Pe,
                      minMCap: X * Be,
                      min: Be,
                      isLoaded: !0,
                    });
            }
            if (Ee > 30 && !((Ie = T.min30) != null && Ie.isLoaded)) {
              const {
                max: Pe,
                min: Be,
                noBarsExist: Ze,
              } = await S(T.pairAddress, Oe.min30);
              (Me.min30 = Ze ? T.marketcap : X * Pe),
                Pe === 0 && Be === 0
                  ? (D[`calls/${T.address}/min30`] = {
                      max: T.marketcap / X,
                      maxMCap: T.marketcap,
                      minMCap: T.marketcap,
                      min: T.marketcap / X,
                      isLoaded: !0,
                    })
                  : (D[`calls/${T.address}/min30`] = {
                      max: Pe,
                      maxMCap: X * Pe,
                      minMCap: X * Be,
                      min: Be,
                      isLoaded: !0,
                    });
            }
            if (Ee > 60 && !((Ne = T.h1) != null && Ne.isLoaded)) {
              const {
                max: Pe,
                min: Be,
                noBarsExist: Ze,
              } = await S(T.pairAddress, Oe.h1);
              (Me.h1 = Ze ? T.marketcap : X * Pe),
                Pe === 0 && Be === 0
                  ? (D[`calls/${T.address}/h1`] = {
                      max: T.marketcap / X,
                      maxMCap: T.marketcap,
                      minMCap: T.marketcap,
                      min: T.marketcap / X,
                      isLoaded: !0,
                    })
                  : (D[`calls/${T.address}/h1`] = {
                      max: Pe,
                      maxMCap: X * Pe,
                      minMCap: X * Be,
                      min: Be,
                      isLoaded: !0,
                    });
            }
            if (Ee > 180 && !((oe = T.h3) != null && oe.isLoaded)) {
              const {
                max: Pe,
                min: Be,
                noBarsExist: Ze,
              } = await S(T.pairAddress, Oe.h3);
              (Me.h3 = Ze ? T.marketcap : X * Pe),
                Pe === 0 && Be === 0
                  ? (D[`calls/${T.address}/h3`] = {
                      max: T.marketcap / X,
                      maxMCap: T.marketcap,
                      minMCap: T.marketcap,
                      min: T.marketcap / X,
                      isLoaded: !0,
                    })
                  : (D[`calls/${T.address}/h3`] = {
                      max: Pe,
                      maxMCap: X * Pe,
                      minMCap: X * Be,
                      min: Be,
                      isLoaded: !0,
                    });
            }
            if (Ee > 360 && !((W = T.h6) != null && W.isLoaded)) {
              const {
                max: Pe,
                min: Be,
                noBarsExist: Ze,
              } = await S(T.pairAddress, Oe.h6);
              (Me.h6 = Ze ? T.marketcap : X * Pe),
                Pe === 0 && Be === 0
                  ? (D[`calls/${T.address}/h6`] = {
                      max: T.marketcap / X,
                      maxMCap: T.marketcap,
                      minMCap: T.marketcap,
                      min: T.marketcap / X,
                      isLoaded: !0,
                    })
                  : (D[`calls/${T.address}/h6`] = {
                      max: Pe,
                      maxMCap: X * Pe,
                      minMCap: X * Be,
                      min: Be,
                      isLoaded: !0,
                    });
            }
            if (Ee > 720 && !((Q = T.h12) != null && Q.isLoaded)) {
              const {
                max: Pe,
                min: Be,
                noBarsExist: Ze,
              } = await S(T.pairAddress, Oe.h12);
              (Me.h12 = Ze ? T.marketcap : X * Pe),
                Pe === 0 && Be === 0
                  ? (D[`calls/${T.address}/h12`] = {
                      max: T.marketcap / X,
                      maxMCap: T.marketcap,
                      minMCap: T.marketcap,
                      min: T.marketcap / X,
                      isLoaded: !0,
                    })
                  : (D[`calls/${T.address}/h12`] = {
                      max: Pe,
                      maxMCap: X * Pe,
                      minMCap: X * Be,
                      min: Be,
                      isLoaded: !0,
                    });
            }
            if (Ee > 1440 && !((ge = T.h24) != null && ge.isLoaded)) {
              const {
                max: Pe,
                min: Be,
                noBarsExist: Ze,
              } = await S(T.pairAddress, Oe.h24);
              (Me.h24 = Ze ? T.marketcap : X * Pe),
                Pe === 0 && Be === 0
                  ? (D[`calls/${T.address}/h24`] = {
                      max: T.marketcap / X,
                      maxMCap: T.marketcap,
                      minMCap: T.marketcap,
                      min: T.marketcap / X,
                      isLoaded: !0,
                    })
                  : (D[`calls/${T.address}/h24`] = {
                      max: Pe,
                      maxMCap: X * Pe,
                      minMCap: X * Be,
                      min: Be,
                      isLoaded: !0,
                    });
            }
            const me =
              ((I = T.min5) != null && I.maxMCap) || Me.min5
                ? (
                    ((Math.max(
                      ((R = T.min5) == null ? void 0 : R.maxMCap) ||
                        Me.min5 ||
                        0,
                      ((q = T.min15) == null ? void 0 : q.maxMCap) ||
                        Me.min15 ||
                        0,
                      ((ce = T.min30) == null ? void 0 : ce.maxMCap) ||
                        Me.min30 ||
                        0,
                      ((ne = T.h1) == null ? void 0 : ne.maxMCap) || Me.h1 || 0,
                      ((de = T.h3) == null ? void 0 : de.maxMCap) || Me.h3 || 0,
                      ((Te = T.h6) == null ? void 0 : Te.maxMCap) || Me.h6 || 0,
                      ((Re = T.h12) == null ? void 0 : Re.maxMCap) ||
                        Me.h12 ||
                        0,
                      ((Ve = T.h24) == null ? void 0 : Ve.maxMCap) ||
                        Me.h24 ||
                        0
                    ) -
                      T.marketcap) /
                      T.marketcap) *
                    100
                  ).toFixed(0)
                : 0;
            return (
              me !== T.maxProfit && (D[`calls/${T.address}/maxProfit`] = me),
              Object.keys(D).length > 0 && (await Tee(e, D)),
              T
            );
          }
          Or(p, async (J) => {
            if (!J) for (const T of m.value) await z({ ...T });
          });
          async function V() {
            const J = xO();
            await n();
            let T = bO(
              bw(J, "calls"),
              yO("callTime"),
              Mee(Er().subtract(3, "hour").unix())
            );
            r.value &&
              !i.value &&
              a.value &&
              (await l(), u.value && (T = bO(bw(J, "calls"), yO("callTime")))),
              Pee(
                T,
                async (Z) => {
                  const Oe = Z.val();
                  Oe && (m.value = Object.values(Oe)), (p.value = !1);
                },
                { onlyOnce: !0 }
              ),
              Oee(T, async (Z) => {
                if (!p.value) {
                  const Oe = Z.val();
                  if (Oe) {
                    const Me = m.value.findIndex(
                      (X) => X.address === Oe.address
                    );
                    m.value[Me] = Oe;
                  }
                }
              });
          }
          sr(async () => {
            const J = Kre();
            await Lte(J), await V();
          }),
            Or(r, async () => {
              await V();
            });
          const j = {
            small: { mcap: 5e4, threshold: 50 },
            medium: { mcap: 75e3, threshold: 50 },
            large: { mcap: 1e5, threshold: 50 },
          };
          function B(J) {
            return J.marketcap < j.small.mcap
              ? J.maxProfit >= j.small.threshold
              : J.marketcap < j.medium.mcap
              ? J.maxProfit >= j.medium.threshold
              : J.maxProfit >= j.large.threshold;
          }
          const ae = He(() =>
              [...m.value].map((J) => ({ ...J, isSuccessful: B(J) }))
            ),
            re = We("callTime"),
            K = We(gs.desc);
          function fe(J) {
            re.value === J
              ? (K.value = K.value === gs.desc ? gs.asc : gs.desc)
              : ((re.value = J), (K.value = gs.desc));
          }
          const ye = He(() => {
              const J = re.value;
              let T = [...ae.value],
                Z = [];
              return (
                J === "maxProfit" &&
                  ((T = [...ae.value].filter((Oe) => Oe.maxProfit < 1e6)),
                  (Z = [...ae.value].filter((Oe) => Oe.maxProfit >= 1e6))),
                [
                  ...T.sort((Oe, Me) =>
                    Oe[J] === Me[J]
                      ? 0
                      : K.value === gs.desc
                      ? Me[J] - Oe[J]
                      : Oe[J] - Me[J]
                  ),
                  ...Z,
                ]
              );
            }),
            pe = He(() => {
              const J = P.value.length,
                T = P.value.filter((Oe) => Oe.isSuccessful).length,
                Z = ((T / J) * 100).toFixed(0);
              return {
                totalCalls: J,
                successfulCalls: T,
                successfulCallsPercentage: Z,
              };
            }),
            _e = He(() => {
              const J = ye.value.reduce((T, Z) => {
                const Oe = Er(Z.callTime * 1e3).format("DD/MM/YYYY");
                return T[Oe] || (T[Oe] = []), T[Oe].push(Z), T;
              }, {});
              return Object.entries(J)
                .map(([T, Z]) => ({
                  dateUnix: Er(T, "DD/MM/YYYY").unix(),
                  date: T,
                  calls: Z,
                }))
                .sort((T, Z) => Z.dateUnix - T.dateUnix);
            }),
            be = He(() =>
              _e.value.map(({ date: J, calls: T }, Z) => {
                const Oe = T.length,
                  Me = Z === 0 ? Oe : Oe - _e.value[Z - 1].totalCalls || Oe,
                  X = T.filter((Se) => Se.isSuccessful).length,
                  Ee = Z === 0 ? X : X - _e.value[Z - 1].successfulCalls || X,
                  me = ((X / Oe) * 100).toFixed(0),
                  xe =
                    Z === 0 || !_e.value[Z - 1].successfulCallsPercentage
                      ? me
                      : me - _e.value[Z - 1].successfulCallsPercentage;
                return {
                  date: J,
                  totalCalls: Oe,
                  totalCallsChange: Me,
                  successfulCalls: X,
                  successfulCallsPercentage: me,
                  successfulCallsPercentageChange: xe,
                  successfulCallsChange: Ee,
                };
              })
            ),
            Ce = He(() => {
              const J = jee(
                  be.value.map((Z) => ({
                    totalCalls: Z.totalCalls,
                    successfulCalls: Z.successfulCalls,
                  }))
                ),
                T = [...P.value]
                  .filter((Z) => Z.maxProfit < 1e6)
                  .sort((Z, Oe) => Oe.maxProfit - Z.maxProfit)
                  .slice(0, 3)
                  .map((Z) => ({
                    name: Z.name,
                    maxProfit: Z.maxProfit,
                    callTime: Z.callTime,
                    symbol: Z.symbol,
                  }));
              return {
                period: ke.value,
                daily: be.value,
                best3Calls: T,
                totalCalls: J.totalCalls,
                successfulCalls: J.successfulCalls,
              };
            }),
            ke = We("7d");
          function E(J) {
            ke.value = J;
          }
          const P = He(() => {
              let J = Er().subtract(30, "day").valueOf();
              return (
                ke.value === "7d" && (J = Er().subtract(7, "day").valueOf()),
                ke.value === "1d" && (J = Er().subtract(24, "hour").valueOf()),
                [...ye.value].filter((T) => T.callTime * 1e3 > J)
              );
            }),
            L = He(() => !p.value),
            U = [
              { key: "name", type: vd.string, minLength: 3, exact: !1 },
              { key: "address", type: vd.string, minLength: 15, exact: !0 },
              { key: "symbol", type: vd.string, minLength: 3, exact: !0 },
              { key: "marketcap", type: vd.number, minLength: 3, exact: !1 },
            ],
            {
              foundData: Y,
              setSearch: ie,
              searchValue: le,
            } = Gee({ data: P, criteria: U });
          return (J, T) => (
            je(),
            et("main", $re, [
              (je(),
              jt(
                TV,
                {
                  "is-loading": p.value,
                  key: Ce.value.daily.length,
                  stats: Ce.value,
                  "last24-hours-stats": pe.value,
                  "is-tier-one": Xe(u),
                  "onUpdate:period": E,
                },
                null,
                8,
                ["is-loading", "stats", "last24-hours-stats", "is-tier-one"]
              )),
              ve("div", Zre, [
                ve("div", null, [
                  Qre,
                  ve("div", Jre, [
                    ene,
                    ve("div", tne, [
                      rne,
                      $e(
                        qee,
                        {
                          value: Xe(le),
                          "is-disabled": !L.value,
                          "label-translation-key": "$.filter_by",
                          onUpdate: Xe(ie),
                        },
                        null,
                        8,
                        ["value", "is-disabled", "onUpdate"]
                      ),
                    ]),
                  ]),
                  ve("div", nne, [
                    $e(
                      $K,
                      {
                        "is-loading": p.value,
                        calls: Xe(Y),
                        "sort-by": re.value,
                        "sort-direction": K.value,
                        "onUpdate:sortBy": fe,
                      },
                      null,
                      8,
                      ["is-loading", "calls", "sort-by", "sort-direction"]
                    ),
                  ]),
                ]),
              ]),
            ])
          );
        },
      }),
      sne = ve(
        "section",
        { class: "bg-gray-900" },
        [
          ve(
            "div",
            {
              class:
                "fixed md:relative py-8 md:py-12 md:pb-24 px-4 mx-auto max-w-screen-xl text-center",
            },
            [
              ve(
                "h1",
                {
                  class:
                    "mb-4 text-4xl font-semibold tracking-tight leading-none md:text-5xl lg:text-6xl text-white",
                },
                "Roadmap"
              ),
            ]
          ),
        ],
        -1
      ),
      ane = {
        class:
          "fixed md:relative bg-gray-900 h-80 md:h-fit w-full mt-30 pb-10 md:mt-0 overflow-y-auto items-center md:pl-20 md:flex md:justify-center",
      },
      one = { class: "relative ml-4 md:ml-0 mb-6 md:mb-0 w-2/5" },
      lne = { class: "flex items-center" },
      cne = {
        class:
          "z-10 flex items-center justify-center w-6 h-6 rounded-full ring-0 ring-white bg-project-primary/70 shrink-0",
      },
      une = ve(
        "div",
        { class: "hidden md:flex w-1/6 h-0.5 bg-project-primary" },
        null,
        -1
      ),
      hne = ve(
        "div",
        { class: "hidden md:flex w-5/6 h-0.5 bg-gray-700" },
        null,
        -1
      ),
      dne = pv(
        '<div class="mt-3 md:pr-8 w-64 md:w-full"><h3 class="text-lg font-semibold text-white">Step 1 - Launch</h3><time class="block mb-2 text-sm font-normal leading-none text-gray-500">Released on September 22, 2022</time><p class="text-base font-normal text-gray-400">Dashboard Release</p><p class="text-base font-normal text-gray-400">History Calls</p><p class="text-base font-normal text-gray-400">Calls Statistics</p><p class="text-base font-normal text-gray-400">Sorting History Calls</p><p class="text-base font-normal text-gray-400">Best Calls</p></div>',
        1
      ),
      fne = { class: "relative ml-4 md:ml-0 mb-6 md:mb-0 w-2/5" },
      pne = { class: "flex items-center" },
      gne = {
        class:
          "z-10 flex items-center justify-center w-5 h-5 rounded-full ring-1 ring-bg-gray-700 shrink-0",
      },
      mne = ve(
        "div",
        { class: "hidden md:flex w-full h-0.5 bg-gray-700" },
        null,
        -1
      ),
      vne = pv(
        '<div class="mt-3 md:pr-8 w-64 md:w-full"><h3 class="text-lg font-semibold text-white">Step 2 - Strategy builder</h3><time class="block mb-2 text-sm font-normal leading-none text-gray-500">In progress</time><p class="text-base font-normal text-gray-400">Call Details</p><p class="text-base font-normal text-gray-400">Calls Filtering</p><p class="text-base font-normal text-gray-400">Custom Success Ratio</p><p class="text-base font-normal text-gray-400">Showing min/max values</p><p class="text-base font-normal text-gray-400">Calls Comparison</p></div>',
        1
      ),
      yne = { class: "relative ml-4 md:ml-0 mb-6 md:mb-0 w-48" },
      bne = { class: "flex items-center" },
      xne = {
        class:
          "z-10 flex items-center justify-center w-5 h-5 rounded-full ring-1 ring-bg-gray-700 shrink-0",
      },
      wne = pv(
        '<div class="mt-3 md:pr-8 w-64 md:w-full"><h3 class="text-lg font-semibold text-white">Step 3 - Simulation</h3><time class="block mb-2 text-sm font-normal leading-none text-gray-500">Future</time><p class="text-base font-normal text-gray-400">Back Testing</p><p class="text-base font-normal text-gray-400">Best Strategy</p><p class="text-base font-normal text-gray-400">Simulate History Calls</p><p class="text-base font-normal text-gray-400">Live Updates</p><p class="text-base font-normal text-gray-400">Claiming Revenue</p></div>',
        1
      ),
      kne = dt({
        __name: "TheRoadmap",
        setup(t) {
          return (e, r) => (
            je(),
            et(
              dr,
              null,
              [
                sne,
                ve("ol", ane, [
                  ve("li", one, [
                    ve("div", lne, [
                      ve("div", cne, [$e(Xe(zF), { class: "h-4 text-white" })]),
                      une,
                      hne,
                    ]),
                    dne,
                  ]),
                  ve("li", fne, [
                    ve("div", pne, [
                      ve("div", gne, [
                        $e(Xe(DF), { class: "h-3 text-project-primary/70" }),
                      ]),
                      mne,
                    ]),
                    vne,
                  ]),
                  ve("li", yne, [
                    ve("div", bne, [
                      ve("div", xne, [
                        $e(Xe(NF), { class: "h-3 text-project-primary/70" }),
                      ]),
                    ]),
                    wne,
                  ]),
                ]),
              ],
              64
            )
          );
        },
      }),
      Cd = {
        dashboard: {
          path: "/",
          name: "Frame",
          component: WY,
          meta: { guest: !0 },
          children: [
            {
              path: "/",
              name: "Dashboard",
              component: ine,
              meta: { guest: !0 },
            },
            {
              path: "/roadmap",
              name: "Roadmap",
              component: kne,
              meta: { guest: !0 },
            },
          ],
        },
        error: { path: "/404", name: "Error", component: MF },
        catch: { path: "/:catchAll(.*)", name: "Catch", redirect: "/404" },
      };
    function _ne() {
      return EF({ history: X5(), routes: [Cd.dashboard, Cd.error, Cd.catch] });
    }
    const Ane = _ne();
    var Cne = "firebase",
      Sne = "10.3.0";
    Os(Cne, Sne, "app");
    const Ene = yT({
      apiKey: "AIzaSyBP0N3Gne4MKFXT2QXA1UWVVxMwjYchaxQ",
      authDomain: "ping-dashboard-7f0a5.firebaseapp.com",
      projectId: "ping-dashboard-7f0a5",
      storageBucket: "ping-dashboard-7f0a5.appspot.com",
      messagingSenderId: "227117919409",
      appId: "1:227117919409:web:5bbd0946fab61886ca4690",
      measurementId: "G-Y8ECBBPZDR",
      databaseURL:
        "https://ping-dashboard-7f0a5-default-rtdb.europe-west1.firebasedatabase.app/",
    });
    yL(() => import("./index.esm-48301a24.js"), [])
      .then(({ getAnalytics: t }) => {
        t(Ene);
      })
      .catch((t) => {
        console.log("Analytics not loaded", t);
      });
    const Ine = BN({
        locale: "en",
        fallbackLocale: "en",
        messages: C5,
        legacy: !1,
      }),
      Tne = d3();
    l3(_5).use(Ane).use(Tne).use(Ine).use(xL).mount("#app");
  })();
export {
  Ca as C,
  Rl as E,
  Sa as F,
  Sd as L,
  Co as _,
  Pne as __tla,
  Ed as a,
  Am as b,
  pL as c,
  hu as d,
  Fw as e,
  gL as f,
  fi as g,
  Dw as i,
  Os as r,
  zw as v,
};
